// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.Sockets.AddressFamily
#include "System/Net/Sockets/AddressFamily.hpp"
// Including type: System.Net.SocketAddress
#include "System/Net/SocketAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MinPort
int System::Net::IPEndPoint::_get_MinPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::_get_MinPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "IPEndPoint", "MinPort"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MinPort
void System::Net::IPEndPoint::_set_MinPort(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::_set_MinPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "IPEndPoint", "MinPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxPort
int System::Net::IPEndPoint::_get_MaxPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::_get_MaxPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "IPEndPoint", "MaxPort"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxPort
void System::Net::IPEndPoint::_set_MaxPort(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::_set_MaxPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "IPEndPoint", "MaxPort", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 AnyPort
int System::Net::IPEndPoint::_get_AnyPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::_get_AnyPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "IPEndPoint", "AnyPort"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 AnyPort
void System::Net::IPEndPoint::_set_AnyPort(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::_set_AnyPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "IPEndPoint", "AnyPort", value));
}
// Autogenerated static field getter
// Get static field: static System.Net.IPEndPoint Any
::System::Net::IPEndPoint* System::Net::IPEndPoint::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::IPEndPoint*>("System.Net", "IPEndPoint", "Any"));
}
// Autogenerated static field setter
// Set static field: static System.Net.IPEndPoint Any
void System::Net::IPEndPoint::_set_Any(::System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "IPEndPoint", "Any", value));
}
// Autogenerated static field getter
// Get static field: static System.Net.IPEndPoint IPv6Any
::System::Net::IPEndPoint* System::Net::IPEndPoint::_get_IPv6Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::_get_IPv6Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::IPEndPoint*>("System.Net", "IPEndPoint", "IPv6Any"));
}
// Autogenerated static field setter
// Set static field: static System.Net.IPEndPoint IPv6Any
void System::Net::IPEndPoint::_set_IPv6Any(::System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::_set_IPv6Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "IPEndPoint", "IPv6Any", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IPAddress m_Address
[[deprecated("Use field access instead!")]] ::System::Net::IPAddress*& System::Net::IPEndPoint::dyn_m_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::dyn_m_Address");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Address"))->offset;
  return *reinterpret_cast<::System::Net::IPAddress**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Port
[[deprecated("Use field access instead!")]] int& System::Net::IPEndPoint::dyn_m_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::dyn_m_Port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.IPEndPoint.get_Address
::System::Net::IPAddress* System::Net::IPEndPoint::get_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::get_Address");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Address", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPAddress*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.IPEndPoint.get_Port
int System::Net::IPEndPoint::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::get_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.IPEndPoint..cctor
void System::Net::IPEndPoint::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "IPEndPoint", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.IPEndPoint.get_AddressFamily
::System::Net::Sockets::AddressFamily System::Net::IPEndPoint::get_AddressFamily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::get_AddressFamily");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AddressFamily", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Sockets::AddressFamily, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.IPEndPoint.ToString
::StringW System::Net::IPEndPoint::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.IPEndPoint.Serialize
::System::Net::SocketAddress* System::Net::IPEndPoint::Serialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::SocketAddress*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.IPEndPoint.Create
::System::Net::EndPoint* System::Net::IPEndPoint::Create(::System::Net::SocketAddress* socketAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::Create");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socketAddress)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::EndPoint*, false>(this, ___internal__method, socketAddress);
}
// Autogenerated method: System.Net.IPEndPoint.Equals
bool System::Net::IPEndPoint::Equals(::Il2CppObject* comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparand)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, comparand);
}
// Autogenerated method: System.Net.IPEndPoint.GetHashCode
int System::Net::IPEndPoint::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPEndPoint::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.IPHostEntry
#include "System/Net/IPHostEntry.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String hostName
[[deprecated("Use field access instead!")]] ::StringW& System::Net::IPHostEntry::dyn_hostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPHostEntry::dyn_hostName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hostName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] aliases
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Net::IPHostEntry::dyn_aliases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPHostEntry::dyn_aliases");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aliases"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IPAddress[] addressList
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Net::IPAddress*>& System::Net::IPHostEntry::dyn_addressList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPHostEntry::dyn_addressList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addressList"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Net::IPAddress*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean isTrustedHost
[[deprecated("Use field access instead!")]] bool& System::Net::IPHostEntry::dyn_isTrustedHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPHostEntry::dyn_isTrustedHost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isTrustedHost"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.IPHostEntry.get_HostName
::StringW System::Net::IPHostEntry::get_HostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPHostEntry::get_HostName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HostName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.IPHostEntry.set_HostName
void System::Net::IPHostEntry::set_HostName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPHostEntry::set_HostName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HostName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.IPHostEntry.set_Aliases
void System::Net::IPHostEntry::set_Aliases(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPHostEntry::set_Aliases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Aliases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.IPHostEntry.get_AddressList
::ArrayW<::System::Net::IPAddress*> System::Net::IPHostEntry::get_AddressList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPHostEntry::get_AddressList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AddressList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::IPAddress*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.IPHostEntry.set_AddressList
void System::Net::IPHostEntry::set_AddressList(::ArrayW<::System::Net::IPAddress*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IPHostEntry::set_AddressList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AddressList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.IWebRequestCreate
#include "System/Net/IWebRequestCreate.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.IWebRequestCreate.Create
::System::Net::WebRequest* System::Net::IWebRequestCreate::Create(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IWebRequestCreate::Create");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebRequest*, false>(this, ___internal__method, uri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.InternalException
#include "System/Net/InternalException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NclUtilities
#include "System/Net/NclUtilities.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.IPHostEntry
#include "System/Net/IPHostEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Net.IPAddress[] _LocalAddresses
::ArrayW<::System::Net::IPAddress*> System::Net::NclUtilities::_get__LocalAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NclUtilities::_get__LocalAddresses");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Net::IPAddress*>>("System.Net", "NclUtilities", "_LocalAddresses"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.IPAddress[] _LocalAddresses
void System::Net::NclUtilities::_set__LocalAddresses(::ArrayW<::System::Net::IPAddress*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NclUtilities::_set__LocalAddresses");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NclUtilities", "_LocalAddresses", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object _LocalAddressesLock
::Il2CppObject* System::Net::NclUtilities::_get__LocalAddressesLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NclUtilities::_get__LocalAddressesLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Net", "NclUtilities", "_LocalAddressesLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _LocalAddressesLock
void System::Net::NclUtilities::_set__LocalAddressesLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NclUtilities::_set__LocalAddressesLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NclUtilities", "_LocalAddressesLock", value));
}
// Autogenerated static field getter
// Get static field: static System.String _LocalDomainName
::StringW System::Net::NclUtilities::_get__LocalDomainName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NclUtilities::_get__LocalDomainName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Net", "NclUtilities", "_LocalDomainName"));
}
// Autogenerated static field setter
// Set static field: static System.String _LocalDomainName
void System::Net::NclUtilities::_set__LocalDomainName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NclUtilities::_set__LocalDomainName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "NclUtilities", "_LocalDomainName", value));
}
// Autogenerated method: System.Net.NclUtilities.get_LocalAddresses
::ArrayW<::System::Net::IPAddress*> System::Net::NclUtilities::get_LocalAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NclUtilities::get_LocalAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NclUtilities", "get_LocalAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::IPAddress*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NclUtilities.get_LocalAddressesLock
::Il2CppObject* System::Net::NclUtilities::get_LocalAddressesLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NclUtilities::get_LocalAddressesLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NclUtilities", "get_LocalAddressesLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NclUtilities.IsAddressLocal
bool System::Net::NclUtilities::IsAddressLocal(::System::Net::IPAddress* ipAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NclUtilities::IsAddressLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NclUtilities", "IsAddressLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ipAddress)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ipAddress);
}
// Autogenerated method: System.Net.NclUtilities.GetLocalHost
::System::Net::IPHostEntry* System::Net::NclUtilities::GetLocalHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NclUtilities::GetLocalHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NclUtilities", "GetLocalHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.ValidationHelper
#include "System/Net/ValidationHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String[] EmptyArray
::ArrayW<::StringW> System::Net::ValidationHelper::_get_EmptyArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ValidationHelper::_get_EmptyArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Net", "ValidationHelper", "EmptyArray"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] EmptyArray
void System::Net::ValidationHelper::_set_EmptyArray(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ValidationHelper::_set_EmptyArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ValidationHelper", "EmptyArray", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] InvalidMethodChars
::ArrayW<::Il2CppChar> System::Net::ValidationHelper::_get_InvalidMethodChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ValidationHelper::_get_InvalidMethodChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net", "ValidationHelper", "InvalidMethodChars"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] InvalidMethodChars
void System::Net::ValidationHelper::_set_InvalidMethodChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ValidationHelper::_set_InvalidMethodChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ValidationHelper", "InvalidMethodChars", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] InvalidParamChars
::ArrayW<::Il2CppChar> System::Net::ValidationHelper::_get_InvalidParamChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ValidationHelper::_get_InvalidParamChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net", "ValidationHelper", "InvalidParamChars"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] InvalidParamChars
void System::Net::ValidationHelper::_set_InvalidParamChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ValidationHelper::_set_InvalidParamChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ValidationHelper", "InvalidParamChars", value));
}
// Autogenerated method: System.Net.ValidationHelper..cctor
void System::Net::ValidationHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ValidationHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ValidationHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.ValidationHelper.MakeStringNull
::StringW System::Net::ValidationHelper::MakeStringNull(::StringW stringValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ValidationHelper::MakeStringNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ValidationHelper", "MakeStringNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringValue);
}
// Autogenerated method: System.Net.ValidationHelper.IsBlankString
bool System::Net::ValidationHelper::IsBlankString(::StringW stringValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ValidationHelper::IsBlankString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ValidationHelper", "IsBlankString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringValue)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringValue);
}
// Autogenerated method: System.Net.ValidationHelper.ValidateTcpPort
bool System::Net::ValidationHelper::ValidateTcpPort(int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ValidationHelper::ValidateTcpPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ValidationHelper", "ValidateTcpPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, port);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.ExceptionHelper
#include "System/Net/ExceptionHelper.hpp"
// Including type: System.NotImplementedException
#include "System/NotImplementedException.hpp"
// Including type: System.NotSupportedException
#include "System/NotSupportedException.hpp"
// Including type: System.Net.WebException
#include "System/Net/WebException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.ExceptionHelper.get_MethodNotImplementedException
::System::NotImplementedException* System::Net::ExceptionHelper::get_MethodNotImplementedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ExceptionHelper::get_MethodNotImplementedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ExceptionHelper", "get_MethodNotImplementedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::NotImplementedException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.ExceptionHelper.get_PropertyNotImplementedException
::System::NotImplementedException* System::Net::ExceptionHelper::get_PropertyNotImplementedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ExceptionHelper::get_PropertyNotImplementedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ExceptionHelper", "get_PropertyNotImplementedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::NotImplementedException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.ExceptionHelper.get_PropertyNotSupportedException
::System::NotSupportedException* System::Net::ExceptionHelper::get_PropertyNotSupportedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ExceptionHelper::get_PropertyNotSupportedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ExceptionHelper", "get_PropertyNotSupportedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::NotSupportedException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.ExceptionHelper.get_RequestAbortedException
::System::Net::WebException* System::Net::ExceptionHelper::get_RequestAbortedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ExceptionHelper::get_RequestAbortedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "ExceptionHelper", "get_RequestAbortedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebRequestPrefixElement
#include "System/Net/WebRequestPrefixElement.hpp"
// Including type: System.Net.IWebRequestCreate
#include "System/Net/IWebRequestCreate.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Prefix
[[deprecated("Use field access instead!")]] ::StringW& System::Net::WebRequestPrefixElement::dyn_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequestPrefixElement::dyn_Prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Net.IWebRequestCreate creator
[[deprecated("Use field access instead!")]] ::System::Net::IWebRequestCreate*& System::Net::WebRequestPrefixElement::dyn_creator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequestPrefixElement::dyn_creator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "creator"))->offset;
  return *reinterpret_cast<::System::Net::IWebRequestCreate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Type creatorType
[[deprecated("Use field access instead!")]] ::System::Type*& System::Net::WebRequestPrefixElement::dyn_creatorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequestPrefixElement::dyn_creatorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "creatorType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebRequestPrefixElement.get_Creator
::System::Net::IWebRequestCreate* System::Net::WebRequestPrefixElement::get_Creator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequestPrefixElement::get_Creator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Creator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebRequestCreate*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequestPrefixElement.set_Creator
void System::Net::WebRequestPrefixElement::set_Creator(::System::Net::IWebRequestCreate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequestPrefixElement::set_Creator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Creator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HttpContinueDelegate
#include "System/Net/HttpContinueDelegate.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HttpContinueDelegate.Invoke
void System::Net::HttpContinueDelegate::Invoke(int StatusCode, ::System::Net::WebHeaderCollection* httpHeaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpContinueDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(StatusCode), ::il2cpp_utils::ExtractType(httpHeaders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, StatusCode, httpHeaders);
}
// Autogenerated method: System.Net.HttpContinueDelegate.BeginInvoke
::System::IAsyncResult* System::Net::HttpContinueDelegate::BeginInvoke(int StatusCode, ::System::Net::WebHeaderCollection* httpHeaders, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpContinueDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(StatusCode), ::il2cpp_utils::ExtractType(httpHeaders), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, StatusCode, httpHeaders, callback, object);
}
// Autogenerated method: System.Net.HttpContinueDelegate.EndInvoke
void System::Net::HttpContinueDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpContinueDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.KnownHttpVerb
#include "System/Net/KnownHttpVerb.hpp"
// Including type: System.Collections.Specialized.ListDictionary
#include "System/Collections/Specialized/ListDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Specialized.ListDictionary NamedHeaders
::System::Collections::Specialized::ListDictionary* System::Net::KnownHttpVerb::_get_NamedHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::_get_NamedHeaders");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Specialized::ListDictionary*>("System.Net", "KnownHttpVerb", "NamedHeaders"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Specialized.ListDictionary NamedHeaders
void System::Net::KnownHttpVerb::_set_NamedHeaders(::System::Collections::Specialized::ListDictionary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::_set_NamedHeaders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "KnownHttpVerb", "NamedHeaders", value));
}
// Autogenerated static field getter
// Get static field: static System.Net.KnownHttpVerb Get
::System::Net::KnownHttpVerb* System::Net::KnownHttpVerb::_get_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::_get_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::KnownHttpVerb*>("System.Net", "KnownHttpVerb", "Get"));
}
// Autogenerated static field setter
// Set static field: static System.Net.KnownHttpVerb Get
void System::Net::KnownHttpVerb::_set_Get(::System::Net::KnownHttpVerb* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::_set_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "KnownHttpVerb", "Get", value));
}
// Autogenerated static field getter
// Get static field: static System.Net.KnownHttpVerb Connect
::System::Net::KnownHttpVerb* System::Net::KnownHttpVerb::_get_Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::_get_Connect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::KnownHttpVerb*>("System.Net", "KnownHttpVerb", "Connect"));
}
// Autogenerated static field setter
// Set static field: static System.Net.KnownHttpVerb Connect
void System::Net::KnownHttpVerb::_set_Connect(::System::Net::KnownHttpVerb* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::_set_Connect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "KnownHttpVerb", "Connect", value));
}
// Autogenerated static field getter
// Get static field: static System.Net.KnownHttpVerb Head
::System::Net::KnownHttpVerb* System::Net::KnownHttpVerb::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::KnownHttpVerb*>("System.Net", "KnownHttpVerb", "Head"));
}
// Autogenerated static field setter
// Set static field: static System.Net.KnownHttpVerb Head
void System::Net::KnownHttpVerb::_set_Head(::System::Net::KnownHttpVerb* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "KnownHttpVerb", "Head", value));
}
// Autogenerated static field getter
// Get static field: static System.Net.KnownHttpVerb Put
::System::Net::KnownHttpVerb* System::Net::KnownHttpVerb::_get_Put() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::_get_Put");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::KnownHttpVerb*>("System.Net", "KnownHttpVerb", "Put"));
}
// Autogenerated static field setter
// Set static field: static System.Net.KnownHttpVerb Put
void System::Net::KnownHttpVerb::_set_Put(::System::Net::KnownHttpVerb* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::_set_Put");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "KnownHttpVerb", "Put", value));
}
// Autogenerated static field getter
// Get static field: static System.Net.KnownHttpVerb Post
::System::Net::KnownHttpVerb* System::Net::KnownHttpVerb::_get_Post() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::_get_Post");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::KnownHttpVerb*>("System.Net", "KnownHttpVerb", "Post"));
}
// Autogenerated static field setter
// Set static field: static System.Net.KnownHttpVerb Post
void System::Net::KnownHttpVerb::_set_Post(::System::Net::KnownHttpVerb* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::_set_Post");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "KnownHttpVerb", "Post", value));
}
// Autogenerated static field getter
// Get static field: static System.Net.KnownHttpVerb MkCol
::System::Net::KnownHttpVerb* System::Net::KnownHttpVerb::_get_MkCol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::_get_MkCol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::KnownHttpVerb*>("System.Net", "KnownHttpVerb", "MkCol"));
}
// Autogenerated static field setter
// Set static field: static System.Net.KnownHttpVerb MkCol
void System::Net::KnownHttpVerb::_set_MkCol(::System::Net::KnownHttpVerb* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::_set_MkCol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "KnownHttpVerb", "MkCol", value));
}
// Autogenerated instance field getter
// Get instance field: System.String Name
[[deprecated("Use field access instead!")]] ::StringW& System::Net::KnownHttpVerb::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean RequireContentBody
[[deprecated("Use field access instead!")]] bool& System::Net::KnownHttpVerb::dyn_RequireContentBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::dyn_RequireContentBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RequireContentBody"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean ContentBodyNotAllowed
[[deprecated("Use field access instead!")]] bool& System::Net::KnownHttpVerb::dyn_ContentBodyNotAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::dyn_ContentBodyNotAllowed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContentBodyNotAllowed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean ConnectRequest
[[deprecated("Use field access instead!")]] bool& System::Net::KnownHttpVerb::dyn_ConnectRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::dyn_ConnectRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectRequest"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean ExpectNoContentResponse
[[deprecated("Use field access instead!")]] bool& System::Net::KnownHttpVerb::dyn_ExpectNoContentResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::dyn_ExpectNoContentResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpectNoContentResponse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.KnownHttpVerb..cctor
void System::Net::KnownHttpVerb::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "KnownHttpVerb", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.KnownHttpVerb.Parse
::System::Net::KnownHttpVerb* System::Net::KnownHttpVerb::Parse(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::KnownHttpVerb::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "KnownHttpVerb", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::KnownHttpVerb*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkCredential
#include "System/Net/NetworkCredential.hpp"
// Including type: System.Security.SecureString
#include "System/Security/SecureString.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_domain
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkCredential::dyn_m_domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkCredential::dyn_m_domain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_domain"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_userName
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkCredential::dyn_m_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkCredential::dyn_m_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.SecureString m_password
[[deprecated("Use field access instead!")]] ::System::Security::SecureString*& System::Net::NetworkCredential::dyn_m_password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkCredential::dyn_m_password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_password"))->offset;
  return *reinterpret_cast<::System::Security::SecureString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkCredential.get_UserName
::StringW System::Net::NetworkCredential::get_UserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkCredential::get_UserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkCredential.set_UserName
void System::Net::NetworkCredential::set_UserName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkCredential::set_UserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.NetworkCredential.get_Password
::StringW System::Net::NetworkCredential::get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkCredential::get_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkCredential.set_Password
void System::Net::NetworkCredential::set_Password(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkCredential::set_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.NetworkCredential.get_Domain
::StringW System::Net::NetworkCredential::get_Domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkCredential::get_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkCredential.set_Domain
void System::Net::NetworkCredential::set_Domain(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkCredential::set_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.NetworkCredential.InternalGetUserName
::StringW System::Net::NetworkCredential::InternalGetUserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkCredential::InternalGetUserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetUserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkCredential.InternalGetPassword
::StringW System::Net::NetworkCredential::InternalGetPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkCredential::InternalGetPassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkCredential.InternalGetDomain
::StringW System::Net::NetworkCredential::InternalGetDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkCredential::InternalGetDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkCredential.GetCredential
::System::Net::NetworkCredential* System::Net::NetworkCredential::GetCredential(::System::Uri* uri, ::StringW authType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkCredential::GetCredential");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCredential", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(authType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkCredential*, false>(this, ___internal__method, uri, authType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.ProtocolViolationException
#include "System/Net/ProtocolViolationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.ProtocolViolationException.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::ProtocolViolationException::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProtocolViolationException::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.ProtocolViolationException.GetObjectData
void System::Net::ProtocolViolationException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ProtocolViolationException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.SocketAddress
#include "System/Net/SocketAddress.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 m_Size
[[deprecated("Use field access instead!")]] int& System::Net::SocketAddress::dyn_m_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SocketAddress::dyn_m_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] m_Buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::SocketAddress::dyn_m_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SocketAddress::dyn_m_Buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_changed
[[deprecated("Use field access instead!")]] bool& System::Net::SocketAddress::dyn_m_changed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SocketAddress::dyn_m_changed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_changed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_hash
[[deprecated("Use field access instead!")]] int& System::Net::SocketAddress::dyn_m_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SocketAddress::dyn_m_hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_hash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.SocketAddress.get_Family
::System::Net::Sockets::AddressFamily System::Net::SocketAddress::get_Family() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SocketAddress::get_Family");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Family", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Sockets::AddressFamily, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.SocketAddress.get_Size
int System::Net::SocketAddress::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SocketAddress::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.SocketAddress.get_Item
uint8_t System::Net::SocketAddress::get_Item(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SocketAddress::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, offset);
}
// Autogenerated method: System.Net.SocketAddress.GetIPAddress
::System::Net::IPAddress* System::Net::SocketAddress::GetIPAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SocketAddress::GetIPAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIPAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPAddress*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.SocketAddress.GetIPEndPoint
::System::Net::IPEndPoint* System::Net::SocketAddress::GetIPEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SocketAddress::GetIPEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIPEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.SocketAddress.Equals
bool System::Net::SocketAddress::Equals(::Il2CppObject* comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SocketAddress::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparand)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, comparand);
}
// Autogenerated method: System.Net.SocketAddress.GetHashCode
int System::Net::SocketAddress::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SocketAddress::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.SocketAddress.ToString
::StringW System::Net::SocketAddress::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SocketAddress::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebException
#include "System/Net/WebException.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.WebExceptionStatus m_Status
[[deprecated("Use field access instead!")]] ::System::Net::WebExceptionStatus& System::Net::WebException::dyn_m_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebException::dyn_m_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Status"))->offset;
  return *reinterpret_cast<::System::Net::WebExceptionStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebResponse m_Response
[[deprecated("Use field access instead!")]] ::System::Net::WebResponse*& System::Net::WebException::dyn_m_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebException::dyn_m_Response");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Response"))->offset;
  return *reinterpret_cast<::System::Net::WebResponse**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebExceptionInternalStatus m_InternalStatus
[[deprecated("Use field access instead!")]] ::System::Net::WebExceptionInternalStatus& System::Net::WebException::dyn_m_InternalStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebException::dyn_m_InternalStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InternalStatus"))->offset;
  return *reinterpret_cast<::System::Net::WebExceptionInternalStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebException.get_Status
::System::Net::WebExceptionStatus System::Net::WebException::get_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebException::get_Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebExceptionStatus, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebException.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::WebException::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebException::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.WebException.GetObjectData
void System::Net::WebException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebExceptionInternalStatus
#include "System/Net/WebExceptionInternalStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionInternalStatus RequestFatal
::System::Net::WebExceptionInternalStatus System::Net::WebExceptionInternalStatus::_get_RequestFatal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionInternalStatus::_get_RequestFatal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionInternalStatus>("System.Net", "WebExceptionInternalStatus", "RequestFatal"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionInternalStatus RequestFatal
void System::Net::WebExceptionInternalStatus::_set_RequestFatal(::System::Net::WebExceptionInternalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionInternalStatus::_set_RequestFatal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionInternalStatus", "RequestFatal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionInternalStatus ServicePointFatal
::System::Net::WebExceptionInternalStatus System::Net::WebExceptionInternalStatus::_get_ServicePointFatal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionInternalStatus::_get_ServicePointFatal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionInternalStatus>("System.Net", "WebExceptionInternalStatus", "ServicePointFatal"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionInternalStatus ServicePointFatal
void System::Net::WebExceptionInternalStatus::_set_ServicePointFatal(::System::Net::WebExceptionInternalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionInternalStatus::_set_ServicePointFatal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionInternalStatus", "ServicePointFatal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionInternalStatus Recoverable
::System::Net::WebExceptionInternalStatus System::Net::WebExceptionInternalStatus::_get_Recoverable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionInternalStatus::_get_Recoverable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionInternalStatus>("System.Net", "WebExceptionInternalStatus", "Recoverable"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionInternalStatus Recoverable
void System::Net::WebExceptionInternalStatus::_set_Recoverable(::System::Net::WebExceptionInternalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionInternalStatus::_set_Recoverable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionInternalStatus", "Recoverable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionInternalStatus Isolated
::System::Net::WebExceptionInternalStatus System::Net::WebExceptionInternalStatus::_get_Isolated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionInternalStatus::_get_Isolated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionInternalStatus>("System.Net", "WebExceptionInternalStatus", "Isolated"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionInternalStatus Isolated
void System::Net::WebExceptionInternalStatus::_set_Isolated(::System::Net::WebExceptionInternalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionInternalStatus::_set_Isolated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionInternalStatus", "Isolated", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::WebExceptionInternalStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionInternalStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebExceptionStatus
#include "System/Net/WebExceptionStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus Success
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "Success"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus Success
void System::Net::WebExceptionStatus::_set_Success(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus NameResolutionFailure
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_NameResolutionFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_NameResolutionFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "NameResolutionFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus NameResolutionFailure
void System::Net::WebExceptionStatus::_set_NameResolutionFailure(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_NameResolutionFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "NameResolutionFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus ConnectFailure
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_ConnectFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_ConnectFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "ConnectFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus ConnectFailure
void System::Net::WebExceptionStatus::_set_ConnectFailure(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_ConnectFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "ConnectFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus ReceiveFailure
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_ReceiveFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_ReceiveFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "ReceiveFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus ReceiveFailure
void System::Net::WebExceptionStatus::_set_ReceiveFailure(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_ReceiveFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "ReceiveFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus SendFailure
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_SendFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_SendFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "SendFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus SendFailure
void System::Net::WebExceptionStatus::_set_SendFailure(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_SendFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "SendFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus PipelineFailure
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_PipelineFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_PipelineFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "PipelineFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus PipelineFailure
void System::Net::WebExceptionStatus::_set_PipelineFailure(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_PipelineFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "PipelineFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus RequestCanceled
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_RequestCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_RequestCanceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "RequestCanceled"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus RequestCanceled
void System::Net::WebExceptionStatus::_set_RequestCanceled(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_RequestCanceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "RequestCanceled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus ProtocolError
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_ProtocolError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_ProtocolError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "ProtocolError"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus ProtocolError
void System::Net::WebExceptionStatus::_set_ProtocolError(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_ProtocolError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "ProtocolError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus ConnectionClosed
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_ConnectionClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_ConnectionClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "ConnectionClosed"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus ConnectionClosed
void System::Net::WebExceptionStatus::_set_ConnectionClosed(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_ConnectionClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "ConnectionClosed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus TrustFailure
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_TrustFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_TrustFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "TrustFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus TrustFailure
void System::Net::WebExceptionStatus::_set_TrustFailure(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_TrustFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "TrustFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus SecureChannelFailure
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_SecureChannelFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_SecureChannelFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "SecureChannelFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus SecureChannelFailure
void System::Net::WebExceptionStatus::_set_SecureChannelFailure(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_SecureChannelFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "SecureChannelFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus ServerProtocolViolation
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_ServerProtocolViolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_ServerProtocolViolation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "ServerProtocolViolation"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus ServerProtocolViolation
void System::Net::WebExceptionStatus::_set_ServerProtocolViolation(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_ServerProtocolViolation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "ServerProtocolViolation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus KeepAliveFailure
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_KeepAliveFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_KeepAliveFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "KeepAliveFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus KeepAliveFailure
void System::Net::WebExceptionStatus::_set_KeepAliveFailure(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_KeepAliveFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "KeepAliveFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus Pending
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_Pending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_Pending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "Pending"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus Pending
void System::Net::WebExceptionStatus::_set_Pending(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_Pending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "Pending", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus Timeout
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus Timeout
void System::Net::WebExceptionStatus::_set_Timeout(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "Timeout", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus ProxyNameResolutionFailure
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_ProxyNameResolutionFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_ProxyNameResolutionFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "ProxyNameResolutionFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus ProxyNameResolutionFailure
void System::Net::WebExceptionStatus::_set_ProxyNameResolutionFailure(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_ProxyNameResolutionFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "ProxyNameResolutionFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus UnknownError
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus UnknownError
void System::Net::WebExceptionStatus::_set_UnknownError(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "UnknownError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus MessageLengthLimitExceeded
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_MessageLengthLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_MessageLengthLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "MessageLengthLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus MessageLengthLimitExceeded
void System::Net::WebExceptionStatus::_set_MessageLengthLimitExceeded(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_MessageLengthLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "MessageLengthLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus CacheEntryNotFound
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_CacheEntryNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_CacheEntryNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "CacheEntryNotFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus CacheEntryNotFound
void System::Net::WebExceptionStatus::_set_CacheEntryNotFound(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_CacheEntryNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "CacheEntryNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus RequestProhibitedByCachePolicy
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_RequestProhibitedByCachePolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_RequestProhibitedByCachePolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "RequestProhibitedByCachePolicy"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus RequestProhibitedByCachePolicy
void System::Net::WebExceptionStatus::_set_RequestProhibitedByCachePolicy(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_RequestProhibitedByCachePolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "RequestProhibitedByCachePolicy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebExceptionStatus RequestProhibitedByProxy
::System::Net::WebExceptionStatus System::Net::WebExceptionStatus::_get_RequestProhibitedByProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_get_RequestProhibitedByProxy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebExceptionStatus>("System.Net", "WebExceptionStatus", "RequestProhibitedByProxy"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebExceptionStatus RequestProhibitedByProxy
void System::Net::WebExceptionStatus::_set_RequestProhibitedByProxy(::System::Net::WebExceptionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::_set_RequestProhibitedByProxy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionStatus", "RequestProhibitedByProxy", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::WebExceptionStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebExceptionMapping
#include "System/Net/WebExceptionMapping.hpp"
// Including type: System.Net.WebExceptionStatus
#include "System/Net/WebExceptionStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_Mapping
::ArrayW<::StringW> System::Net::WebExceptionMapping::_get_s_Mapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionMapping::_get_s_Mapping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Net", "WebExceptionMapping", "s_Mapping"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_Mapping
void System::Net::WebExceptionMapping::_set_s_Mapping(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionMapping::_set_s_Mapping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebExceptionMapping", "s_Mapping", value));
}
// Autogenerated method: System.Net.WebExceptionMapping..cctor
void System::Net::WebExceptionMapping::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionMapping::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebExceptionMapping", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.WebExceptionMapping.GetWebStatusString
::StringW System::Net::WebExceptionMapping::GetWebStatusString(::System::Net::WebExceptionStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebExceptionMapping::GetWebStatusString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebExceptionMapping", "GetWebStatusString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, status);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebHeaderCollectionType
#include "System/Net/WebHeaderCollectionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollectionType Unknown
::System::Net::WebHeaderCollectionType System::Net::WebHeaderCollectionType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollectionType>("System.Net", "WebHeaderCollectionType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollectionType Unknown
void System::Net::WebHeaderCollectionType::_set_Unknown(::System::Net::WebHeaderCollectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollectionType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollectionType WebRequest
::System::Net::WebHeaderCollectionType System::Net::WebHeaderCollectionType::_get_WebRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_get_WebRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollectionType>("System.Net", "WebHeaderCollectionType", "WebRequest"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollectionType WebRequest
void System::Net::WebHeaderCollectionType::_set_WebRequest(::System::Net::WebHeaderCollectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_set_WebRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollectionType", "WebRequest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollectionType WebResponse
::System::Net::WebHeaderCollectionType System::Net::WebHeaderCollectionType::_get_WebResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_get_WebResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollectionType>("System.Net", "WebHeaderCollectionType", "WebResponse"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollectionType WebResponse
void System::Net::WebHeaderCollectionType::_set_WebResponse(::System::Net::WebHeaderCollectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_set_WebResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollectionType", "WebResponse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollectionType HttpWebRequest
::System::Net::WebHeaderCollectionType System::Net::WebHeaderCollectionType::_get_HttpWebRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_get_HttpWebRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollectionType>("System.Net", "WebHeaderCollectionType", "HttpWebRequest"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollectionType HttpWebRequest
void System::Net::WebHeaderCollectionType::_set_HttpWebRequest(::System::Net::WebHeaderCollectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_set_HttpWebRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollectionType", "HttpWebRequest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollectionType HttpWebResponse
::System::Net::WebHeaderCollectionType System::Net::WebHeaderCollectionType::_get_HttpWebResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_get_HttpWebResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollectionType>("System.Net", "WebHeaderCollectionType", "HttpWebResponse"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollectionType HttpWebResponse
void System::Net::WebHeaderCollectionType::_set_HttpWebResponse(::System::Net::WebHeaderCollectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_set_HttpWebResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollectionType", "HttpWebResponse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollectionType HttpListenerRequest
::System::Net::WebHeaderCollectionType System::Net::WebHeaderCollectionType::_get_HttpListenerRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_get_HttpListenerRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollectionType>("System.Net", "WebHeaderCollectionType", "HttpListenerRequest"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollectionType HttpListenerRequest
void System::Net::WebHeaderCollectionType::_set_HttpListenerRequest(::System::Net::WebHeaderCollectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_set_HttpListenerRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollectionType", "HttpListenerRequest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollectionType HttpListenerResponse
::System::Net::WebHeaderCollectionType System::Net::WebHeaderCollectionType::_get_HttpListenerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_get_HttpListenerResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollectionType>("System.Net", "WebHeaderCollectionType", "HttpListenerResponse"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollectionType HttpListenerResponse
void System::Net::WebHeaderCollectionType::_set_HttpListenerResponse(::System::Net::WebHeaderCollectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_set_HttpListenerResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollectionType", "HttpListenerResponse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollectionType FtpWebRequest
::System::Net::WebHeaderCollectionType System::Net::WebHeaderCollectionType::_get_FtpWebRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_get_FtpWebRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollectionType>("System.Net", "WebHeaderCollectionType", "FtpWebRequest"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollectionType FtpWebRequest
void System::Net::WebHeaderCollectionType::_set_FtpWebRequest(::System::Net::WebHeaderCollectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_set_FtpWebRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollectionType", "FtpWebRequest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollectionType FtpWebResponse
::System::Net::WebHeaderCollectionType System::Net::WebHeaderCollectionType::_get_FtpWebResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_get_FtpWebResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollectionType>("System.Net", "WebHeaderCollectionType", "FtpWebResponse"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollectionType FtpWebResponse
void System::Net::WebHeaderCollectionType::_set_FtpWebResponse(::System::Net::WebHeaderCollectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_set_FtpWebResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollectionType", "FtpWebResponse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollectionType FileWebRequest
::System::Net::WebHeaderCollectionType System::Net::WebHeaderCollectionType::_get_FileWebRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_get_FileWebRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollectionType>("System.Net", "WebHeaderCollectionType", "FileWebRequest"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollectionType FileWebRequest
void System::Net::WebHeaderCollectionType::_set_FileWebRequest(::System::Net::WebHeaderCollectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_set_FileWebRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollectionType", "FileWebRequest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollectionType FileWebResponse
::System::Net::WebHeaderCollectionType System::Net::WebHeaderCollectionType::_get_FileWebResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_get_FileWebResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollectionType>("System.Net", "WebHeaderCollectionType", "FileWebResponse"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollectionType FileWebResponse
void System::Net::WebHeaderCollectionType::_set_FileWebResponse(::System::Net::WebHeaderCollectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::_set_FileWebResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollectionType", "FileWebResponse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
[[deprecated("Use field access instead!")]] uint16_t& System::Net::WebHeaderCollectionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollectionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.Net.HttpRequestHeader
#include "System/Net/HttpRequestHeader.hpp"
// Including type: System.Net.HeaderInfoTable
#include "System/Net/HeaderInfoTable.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.HeaderInfoTable HInfo
::System::Net::HeaderInfoTable* System::Net::WebHeaderCollection::_get_HInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::_get_HInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::HeaderInfoTable*>("System.Net", "WebHeaderCollection", "HInfo"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.HeaderInfoTable HInfo
void System::Net::WebHeaderCollection::_set_HInfo(::System::Net::HeaderInfoTable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::_set_HInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollection", "HInfo", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_CommonHeaderNames
::ArrayW<::StringW> System::Net::WebHeaderCollection::_get_s_CommonHeaderNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::_get_s_CommonHeaderNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Net", "WebHeaderCollection", "s_CommonHeaderNames"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_CommonHeaderNames
void System::Net::WebHeaderCollection::_set_s_CommonHeaderNames(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::_set_s_CommonHeaderNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollection", "s_CommonHeaderNames", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.SByte[] s_CommonHeaderHints
::ArrayW<int8_t> System::Net::WebHeaderCollection::_get_s_CommonHeaderHints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::_get_s_CommonHeaderHints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int8_t>>("System.Net", "WebHeaderCollection", "s_CommonHeaderHints"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.SByte[] s_CommonHeaderHints
void System::Net::WebHeaderCollection::_set_s_CommonHeaderHints(::ArrayW<int8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::_set_s_CommonHeaderHints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollection", "s_CommonHeaderHints", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] HttpTrimCharacters
::ArrayW<::Il2CppChar> System::Net::WebHeaderCollection::_get_HttpTrimCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::_get_HttpTrimCharacters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net", "WebHeaderCollection", "HttpTrimCharacters"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] HttpTrimCharacters
void System::Net::WebHeaderCollection::_set_HttpTrimCharacters(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::_set_HttpTrimCharacters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollection", "HttpTrimCharacters", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.WebHeaderCollection/System.Net.RfcChar[] RfcCharMap
::ArrayW<::System::Net::WebHeaderCollection::RfcChar> System::Net::WebHeaderCollection::_get_RfcCharMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::_get_RfcCharMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Net::WebHeaderCollection::RfcChar>>("System.Net", "WebHeaderCollection", "RfcCharMap"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.WebHeaderCollection/System.Net.RfcChar[] RfcCharMap
void System::Net::WebHeaderCollection::_set_RfcCharMap(::ArrayW<::System::Net::WebHeaderCollection::RfcChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::_set_RfcCharMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollection", "RfcCharMap", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String[] m_CommonHeaders
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Net::WebHeaderCollection::dyn_m_CommonHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::dyn_m_CommonHeaders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CommonHeaders"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NumCommonHeaders
[[deprecated("Use field access instead!")]] int& System::Net::WebHeaderCollection::dyn_m_NumCommonHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::dyn_m_NumCommonHeaders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NumCommonHeaders"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.NameValueCollection m_InnerCollection
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::NameValueCollection*& System::Net::WebHeaderCollection::dyn_m_InnerCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::dyn_m_InnerCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InnerCollection"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::NameValueCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebHeaderCollectionType m_Type
[[deprecated("Use field access instead!")]] ::System::Net::WebHeaderCollectionType& System::Net::WebHeaderCollection::dyn_m_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::dyn_m_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type"))->offset;
  return *reinterpret_cast<::System::Net::WebHeaderCollectionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebHeaderCollection.get_InnerCollection
::System::Collections::Specialized::NameValueCollection* System::Net::WebHeaderCollection::get_InnerCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::get_InnerCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Specialized::NameValueCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebHeaderCollection.get_AllowHttpRequestHeader
bool System::Net::WebHeaderCollection::get_AllowHttpRequestHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::get_AllowHttpRequestHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowHttpRequestHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebHeaderCollection.NormalizeCommonHeaders
void System::Net::WebHeaderCollection::NormalizeCommonHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::NormalizeCommonHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NormalizeCommonHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebHeaderCollection.AllowMultiValues
bool System::Net::WebHeaderCollection::AllowMultiValues(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::AllowMultiValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebHeaderCollection", "AllowMultiValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Net.WebHeaderCollection.Remove
void System::Net::WebHeaderCollection::Remove(::System::Net::HttpRequestHeader header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(header)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, header);
}
// Autogenerated method: System.Net.WebHeaderCollection.AddInternal
void System::Net::WebHeaderCollection::AddInternal(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::AddInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Net.WebHeaderCollection.ChangeInternal
void System::Net::WebHeaderCollection::ChangeInternal(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::ChangeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Net.WebHeaderCollection.RemoveInternal
void System::Net::WebHeaderCollection::RemoveInternal(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RemoveInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Net.WebHeaderCollection.CheckBadChars
::StringW System::Net::WebHeaderCollection::CheckBadChars(::StringW name, bool isHeaderValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::CheckBadChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebHeaderCollection", "CheckBadChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(isHeaderValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, isHeaderValue);
}
// Autogenerated method: System.Net.WebHeaderCollection.ContainsNonAsciiChars
bool System::Net::WebHeaderCollection::ContainsNonAsciiChars(::StringW token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::ContainsNonAsciiChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebHeaderCollection", "ContainsNonAsciiChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Net.WebHeaderCollection.ThrowOnRestrictedHeader
void System::Net::WebHeaderCollection::ThrowOnRestrictedHeader(::StringW headerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::ThrowOnRestrictedHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowOnRestrictedHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headerName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headerName);
}
// Autogenerated method: System.Net.WebHeaderCollection.Add
void System::Net::WebHeaderCollection::Add(::StringW header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(header)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, header);
}
// Autogenerated method: System.Net.WebHeaderCollection.SetInternal
void System::Net::WebHeaderCollection::SetInternal(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::SetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Net.WebHeaderCollection.GetAsString
::StringW System::Net::WebHeaderCollection::GetAsString(::System::Collections::Specialized::NameValueCollection* cc, bool winInetCompat, bool forTrace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::GetAsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebHeaderCollection", "GetAsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cc), ::il2cpp_utils::ExtractType(winInetCompat), ::il2cpp_utils::ExtractType(forTrace)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cc, winInetCompat, forTrace);
}
// Autogenerated method: System.Net.WebHeaderCollection.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::WebHeaderCollection::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.WebHeaderCollection.get_Count
int System::Net::WebHeaderCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebHeaderCollection..cctor
void System::Net::WebHeaderCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebHeaderCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.WebHeaderCollection.Add
void System::Net::WebHeaderCollection::Add(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Net.WebHeaderCollection.Set
void System::Net::WebHeaderCollection::Set(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::Set");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Net.WebHeaderCollection.Remove
void System::Net::WebHeaderCollection::Remove(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Net.WebHeaderCollection.GetValues
::ArrayW<::StringW> System::Net::WebHeaderCollection::GetValues(::StringW header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::GetValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(header)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, header);
}
// Autogenerated method: System.Net.WebHeaderCollection.ToString
::StringW System::Net::WebHeaderCollection::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebHeaderCollection.OnDeserialization
void System::Net::WebHeaderCollection::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Net.WebHeaderCollection.GetObjectData
void System::Net::WebHeaderCollection::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.WebHeaderCollection.Get
::StringW System::Net::WebHeaderCollection::Get(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::Get");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Net.WebHeaderCollection.GetEnumerator
::System::Collections::IEnumerator* System::Net::WebHeaderCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebHeaderCollection.Get
::StringW System::Net::WebHeaderCollection::Get(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::Get");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Net.WebHeaderCollection.GetValues
::ArrayW<::StringW> System::Net::WebHeaderCollection::GetValues(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::GetValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Net.WebHeaderCollection.GetKey
::StringW System::Net::WebHeaderCollection::GetKey(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::GetKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebHeaderCollection/System.Net.RfcChar
#include "System/Net/WebHeaderCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar High
::System::Net::WebHeaderCollection::RfcChar System::Net::WebHeaderCollection::RfcChar::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollection::RfcChar>("System.Net", "WebHeaderCollection/RfcChar", "High"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar High
void System::Net::WebHeaderCollection::RfcChar::_set_High(::System::Net::WebHeaderCollection::RfcChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollection/RfcChar", "High", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar Reg
::System::Net::WebHeaderCollection::RfcChar System::Net::WebHeaderCollection::RfcChar::_get_Reg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::_get_Reg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollection::RfcChar>("System.Net", "WebHeaderCollection/RfcChar", "Reg"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar Reg
void System::Net::WebHeaderCollection::RfcChar::_set_Reg(::System::Net::WebHeaderCollection::RfcChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::_set_Reg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollection/RfcChar", "Reg", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar Ctl
::System::Net::WebHeaderCollection::RfcChar System::Net::WebHeaderCollection::RfcChar::_get_Ctl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::_get_Ctl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollection::RfcChar>("System.Net", "WebHeaderCollection/RfcChar", "Ctl"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar Ctl
void System::Net::WebHeaderCollection::RfcChar::_set_Ctl(::System::Net::WebHeaderCollection::RfcChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::_set_Ctl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollection/RfcChar", "Ctl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar CR
::System::Net::WebHeaderCollection::RfcChar System::Net::WebHeaderCollection::RfcChar::_get_CR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::_get_CR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollection::RfcChar>("System.Net", "WebHeaderCollection/RfcChar", "CR"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar CR
void System::Net::WebHeaderCollection::RfcChar::_set_CR(::System::Net::WebHeaderCollection::RfcChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::_set_CR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollection/RfcChar", "CR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar LF
::System::Net::WebHeaderCollection::RfcChar System::Net::WebHeaderCollection::RfcChar::_get_LF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::_get_LF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollection::RfcChar>("System.Net", "WebHeaderCollection/RfcChar", "LF"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar LF
void System::Net::WebHeaderCollection::RfcChar::_set_LF(::System::Net::WebHeaderCollection::RfcChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::_set_LF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollection/RfcChar", "LF", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar WS
::System::Net::WebHeaderCollection::RfcChar System::Net::WebHeaderCollection::RfcChar::_get_WS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::_get_WS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollection::RfcChar>("System.Net", "WebHeaderCollection/RfcChar", "WS"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar WS
void System::Net::WebHeaderCollection::RfcChar::_set_WS(::System::Net::WebHeaderCollection::RfcChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::_set_WS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollection/RfcChar", "WS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar Colon
::System::Net::WebHeaderCollection::RfcChar System::Net::WebHeaderCollection::RfcChar::_get_Colon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::_get_Colon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollection::RfcChar>("System.Net", "WebHeaderCollection/RfcChar", "Colon"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar Colon
void System::Net::WebHeaderCollection::RfcChar::_set_Colon(::System::Net::WebHeaderCollection::RfcChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::_set_Colon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollection/RfcChar", "Colon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar Delim
::System::Net::WebHeaderCollection::RfcChar System::Net::WebHeaderCollection::RfcChar::_get_Delim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::_get_Delim");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebHeaderCollection::RfcChar>("System.Net", "WebHeaderCollection/RfcChar", "Delim"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.WebHeaderCollection/System.Net.RfcChar Delim
void System::Net::WebHeaderCollection::RfcChar::_set_Delim(::System::Net::WebHeaderCollection::RfcChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::_set_Delim");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebHeaderCollection/RfcChar", "Delim", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Net::WebHeaderCollection::RfcChar::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebHeaderCollection::RfcChar::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.CaseInsensitiveAscii
#include "System/Net/CaseInsensitiveAscii.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Net.CaseInsensitiveAscii StaticInstance
::System::Net::CaseInsensitiveAscii* System::Net::CaseInsensitiveAscii::_get_StaticInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CaseInsensitiveAscii::_get_StaticInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CaseInsensitiveAscii*>("System.Net", "CaseInsensitiveAscii", "StaticInstance"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Net.CaseInsensitiveAscii StaticInstance
void System::Net::CaseInsensitiveAscii::_set_StaticInstance(::System::Net::CaseInsensitiveAscii* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CaseInsensitiveAscii::_set_StaticInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CaseInsensitiveAscii", "StaticInstance", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Byte[] AsciiToLower
::ArrayW<uint8_t> System::Net::CaseInsensitiveAscii::_get_AsciiToLower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CaseInsensitiveAscii::_get_AsciiToLower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Net", "CaseInsensitiveAscii", "AsciiToLower"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Byte[] AsciiToLower
void System::Net::CaseInsensitiveAscii::_set_AsciiToLower(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CaseInsensitiveAscii::_set_AsciiToLower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CaseInsensitiveAscii", "AsciiToLower", value));
}
// Autogenerated method: System.Net.CaseInsensitiveAscii..cctor
void System::Net::CaseInsensitiveAscii::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CaseInsensitiveAscii::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "CaseInsensitiveAscii", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.CaseInsensitiveAscii.GetHashCode
int System::Net::CaseInsensitiveAscii::GetHashCode(::Il2CppObject* myObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CaseInsensitiveAscii::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(myObject)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, myObject);
}
// Autogenerated method: System.Net.CaseInsensitiveAscii.Compare
int System::Net::CaseInsensitiveAscii::Compare(::Il2CppObject* firstObject, ::Il2CppObject* secondObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CaseInsensitiveAscii::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstObject), ::il2cpp_utils::ExtractType(secondObject)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, firstObject, secondObject);
}
// Autogenerated method: System.Net.CaseInsensitiveAscii.FastGetHashCode
int System::Net::CaseInsensitiveAscii::FastGetHashCode(::StringW myString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CaseInsensitiveAscii::FastGetHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FastGetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(myString)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, myString);
}
// Autogenerated method: System.Net.CaseInsensitiveAscii.Equals
bool System::Net::CaseInsensitiveAscii::Equals(::Il2CppObject* firstObject, ::Il2CppObject* secondObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CaseInsensitiveAscii::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstObject), ::il2cpp_utils::ExtractType(secondObject)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, firstObject, secondObject);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.WebRequest/System.Net.DesignerWebRequestCreate
#include "System/Net/WebRequest_DesignerWebRequestCreate.hpp"
// Including type: System.Net.WebRequest/System.Net.WebProxyWrapperOpaque
#include "System/Net/WebRequest_WebProxyWrapperOpaque.hpp"
// Including type: System.Net.WebRequest/System.Net.WebProxyWrapper
#include "System/Net/WebRequest_WebProxyWrapper.hpp"
// Including type: System.Net.WebRequest/System.Net.<>c__DisplayClass78_0
#include "System/Net/WebRequest_--c__DisplayClass78_0.hpp"
// Including type: System.Net.WebRequest/System.Net.<>c__DisplayClass79_0
#include "System/Net/WebRequest_--c__DisplayClass79_0.hpp"
// Including type: System.Net.Cache.RequestCachePolicy
#include "System/Net/Cache/RequestCachePolicy.hpp"
// Including type: System.Net.Cache.RequestCacheProtocol
#include "System/Net/Cache/RequestCacheProtocol.hpp"
// Including type: System.Net.Cache.RequestCacheBinding
#include "System/Net/Cache/RequestCacheBinding.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Security.Principal.WindowsIdentity
#include "System/Security/Principal/WindowsIdentity.hpp"
// Including type: System.Net.TimerThread/System.Net.Queue
#include "System/Net/TimerThread_Queue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.ArrayList s_PrefixList
::System::Collections::ArrayList* System::Net::WebRequest::_get_s_PrefixList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::_get_s_PrefixList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::ArrayList*>("System.Net", "WebRequest", "s_PrefixList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.ArrayList s_PrefixList
void System::Net::WebRequest::_set_s_PrefixList(::System::Collections::ArrayList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::_set_s_PrefixList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebRequest", "s_PrefixList", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object s_InternalSyncObject
::Il2CppObject* System::Net::WebRequest::_get_s_InternalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::_get_s_InternalSyncObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Net", "WebRequest", "s_InternalSyncObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_InternalSyncObject
void System::Net::WebRequest::_set_s_InternalSyncObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::_set_s_InternalSyncObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebRequest", "s_InternalSyncObject", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.TimerThread/System.Net.Queue s_DefaultTimerQueue
::System::Net::TimerThread::Queue* System::Net::WebRequest::_get_s_DefaultTimerQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::_get_s_DefaultTimerQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::TimerThread::Queue*>("System.Net", "WebRequest", "s_DefaultTimerQueue"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.TimerThread/System.Net.Queue s_DefaultTimerQueue
void System::Net::WebRequest::_set_s_DefaultTimerQueue(::System::Net::TimerThread::Queue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::_set_s_DefaultTimerQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebRequest", "s_DefaultTimerQueue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.WebRequest/System.Net.DesignerWebRequestCreate webRequestCreate
::System::Net::WebRequest::DesignerWebRequestCreate* System::Net::WebRequest::_get_webRequestCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::_get_webRequestCreate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::WebRequest::DesignerWebRequestCreate*>("System.Net", "WebRequest", "webRequestCreate"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.WebRequest/System.Net.DesignerWebRequestCreate webRequestCreate
void System::Net::WebRequest::_set_webRequestCreate(::System::Net::WebRequest::DesignerWebRequestCreate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::_set_webRequestCreate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebRequest", "webRequestCreate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.IWebProxy s_DefaultWebProxy
::System::Net::IWebProxy* System::Net::WebRequest::_get_s_DefaultWebProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::_get_s_DefaultWebProxy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::IWebProxy*>("System.Net", "WebRequest", "s_DefaultWebProxy"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.IWebProxy s_DefaultWebProxy
void System::Net::WebRequest::_set_s_DefaultWebProxy(::System::Net::IWebProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::_set_s_DefaultWebProxy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebRequest", "s_DefaultWebProxy", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_DefaultWebProxyInitialized
bool System::Net::WebRequest::_get_s_DefaultWebProxyInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::_get_s_DefaultWebProxyInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net", "WebRequest", "s_DefaultWebProxyInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_DefaultWebProxyInitialized
void System::Net::WebRequest::_set_s_DefaultWebProxyInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::_set_s_DefaultWebProxyInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebRequest", "s_DefaultWebProxyInitialized", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Security.AuthenticationLevel m_AuthenticationLevel
[[deprecated("Use field access instead!")]] ::System::Net::Security::AuthenticationLevel& System::Net::WebRequest::dyn_m_AuthenticationLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::dyn_m_AuthenticationLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AuthenticationLevel"))->offset;
  return *reinterpret_cast<::System::Net::Security::AuthenticationLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Principal.TokenImpersonationLevel m_ImpersonationLevel
[[deprecated("Use field access instead!")]] ::System::Security::Principal::TokenImpersonationLevel& System::Net::WebRequest::dyn_m_ImpersonationLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::dyn_m_ImpersonationLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ImpersonationLevel"))->offset;
  return *reinterpret_cast<::System::Security::Principal::TokenImpersonationLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Cache.RequestCachePolicy m_CachePolicy
[[deprecated("Use field access instead!")]] ::System::Net::Cache::RequestCachePolicy*& System::Net::WebRequest::dyn_m_CachePolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::dyn_m_CachePolicy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachePolicy"))->offset;
  return *reinterpret_cast<::System::Net::Cache::RequestCachePolicy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Cache.RequestCacheProtocol m_CacheProtocol
[[deprecated("Use field access instead!")]] ::System::Net::Cache::RequestCacheProtocol*& System::Net::WebRequest::dyn_m_CacheProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::dyn_m_CacheProtocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CacheProtocol"))->offset;
  return *reinterpret_cast<::System::Net::Cache::RequestCacheProtocol**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Cache.RequestCacheBinding m_CacheBinding
[[deprecated("Use field access instead!")]] ::System::Net::Cache::RequestCacheBinding*& System::Net::WebRequest::dyn_m_CacheBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::dyn_m_CacheBinding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CacheBinding"))->offset;
  return *reinterpret_cast<::System::Net::Cache::RequestCacheBinding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebRequest.get_InternalSyncObject
::Il2CppObject* System::Net::WebRequest::get_InternalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::get_InternalSyncObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebRequest", "get_InternalSyncObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.get_PrefixList
::System::Collections::ArrayList* System::Net::WebRequest::get_PrefixList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::get_PrefixList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebRequest", "get_PrefixList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.set_CachePolicy
void System::Net::WebRequest::set_CachePolicy(::System::Net::Cache::RequestCachePolicy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::set_CachePolicy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CachePolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebRequest.get_Method
::StringW System::Net::WebRequest::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::get_Method");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.set_Method
void System::Net::WebRequest::set_Method(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::set_Method");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebRequest.get_RequestUri
::System::Uri* System::Net::WebRequest::get_RequestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::get_RequestUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.set_ConnectionGroupName
void System::Net::WebRequest::set_ConnectionGroupName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::set_ConnectionGroupName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConnectionGroupName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebRequest.get_Headers
::System::Net::WebHeaderCollection* System::Net::WebRequest::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::get_Headers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.get_ContentLength
int64_t System::Net::WebRequest::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::get_ContentLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.set_ContentLength
void System::Net::WebRequest::set_ContentLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::set_ContentLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebRequest.get_Credentials
::System::Net::ICredentials* System::Net::WebRequest::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::get_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.set_Credentials
void System::Net::WebRequest::set_Credentials(::System::Net::ICredentials* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::set_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebRequest.get_UseDefaultCredentials
bool System::Net::WebRequest::get_UseDefaultCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::get_UseDefaultCredentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.set_UseDefaultCredentials
void System::Net::WebRequest::set_UseDefaultCredentials(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::set_UseDefaultCredentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebRequest.get_Proxy
::System::Net::IWebProxy* System::Net::WebRequest::get_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::get_Proxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.set_Proxy
void System::Net::WebRequest::set_Proxy(::System::Net::IWebProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::set_Proxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebRequest.set_PreAuthenticate
void System::Net::WebRequest::set_PreAuthenticate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::set_PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebRequest.get_Timeout
int System::Net::WebRequest::get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::get_Timeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.get_CacheProtocol
::System::Net::Cache::RequestCacheProtocol* System::Net::WebRequest::get_CacheProtocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::get_CacheProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CacheProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Cache::RequestCacheProtocol*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.set_CacheProtocol
void System::Net::WebRequest::set_CacheProtocol(::System::Net::Cache::RequestCacheProtocol* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::set_CacheProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CacheProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebRequest.get_InternalDefaultWebProxy
::System::Net::IWebProxy* System::Net::WebRequest::get_InternalDefaultWebProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::get_InternalDefaultWebProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebRequest", "get_InternalDefaultWebProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.get_DefaultWebProxy
::System::Net::IWebProxy* System::Net::WebRequest::get_DefaultWebProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::get_DefaultWebProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebRequest", "get_DefaultWebProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.WebRequest..cctor
void System::Net::WebRequest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebRequest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.Create
::System::Net::WebRequest* System::Net::WebRequest::Create(::System::Uri* requestUri, bool useUriBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebRequest", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestUri), ::il2cpp_utils::ExtractType(useUriBase)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestUri, useUriBase);
}
// Autogenerated method: System.Net.WebRequest.Create
::System::Net::WebRequest* System::Net::WebRequest::Create(::StringW requestUriString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebRequest", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestUriString)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestUriString);
}
// Autogenerated method: System.Net.WebRequest.Create
::System::Net::WebRequest* System::Net::WebRequest::Create(::System::Uri* requestUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebRequest", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, requestUri);
}
// Autogenerated method: System.Net.WebRequest.PopulatePrefixList
::System::Collections::ArrayList* System::Net::WebRequest::PopulatePrefixList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::PopulatePrefixList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebRequest", "PopulatePrefixList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::WebRequest::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.WebRequest.GetObjectData
void System::Net::WebRequest::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.WebRequest.InternalSetCachePolicy
void System::Net::WebRequest::InternalSetCachePolicy(::System::Net::Cache::RequestCachePolicy* policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::InternalSetCachePolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetCachePolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(policy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, policy);
}
// Autogenerated method: System.Net.WebRequest.GetResponse
::System::Net::WebResponse* System::Net::WebRequest::GetResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::GetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebResponse*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.BeginGetResponse
::System::IAsyncResult* System::Net::WebRequest::BeginGetResponse(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::BeginGetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginGetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.WebRequest.EndGetResponse
::System::Net::WebResponse* System::Net::WebRequest::EndGetResponse(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::EndGetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndGetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebResponse*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.WebRequest.BeginGetRequestStream
::System::IAsyncResult* System::Net::WebRequest::BeginGetRequestStream(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::BeginGetRequestStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginGetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.WebRequest.EndGetRequestStream
::System::IO::Stream* System::Net::WebRequest::EndGetRequestStream(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::EndGetRequestStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndGetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.WebRequest.GetRequestStreamAsync
::System::Threading::Tasks::Task_1<::System::IO::Stream*>* System::Net::WebRequest::GetRequestStreamAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::GetRequestStreamAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequestStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::IO::Stream*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.GetResponseAsync
::System::Threading::Tasks::Task_1<::System::Net::WebResponse*>* System::Net::WebRequest::GetResponseAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::GetResponseAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponseAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::WebResponse*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.SafeCaptureIdenity
::System::Security::Principal::WindowsIdentity* System::Net::WebRequest::SafeCaptureIdenity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::SafeCaptureIdenity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeCaptureIdenity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Principal::WindowsIdentity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.Abort
void System::Net::WebRequest::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::Abort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Abort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.<GetRequestStreamAsync>b__78_0
::System::Threading::Tasks::Task_1<::System::IO::Stream*>* System::Net::WebRequest::$GetRequestStreamAsync$b__78_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::<GetRequestStreamAsync>b__78_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetRequestStreamAsync>b__78_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::IO::Stream*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequest.<GetResponseAsync>b__79_0
::System::Threading::Tasks::Task_1<::System::Net::WebResponse*>* System::Net::WebRequest::$GetResponseAsync$b__79_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::<GetResponseAsync>b__79_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetResponseAsync>b__79_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::WebResponse*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebRequest/System.Net.DesignerWebRequestCreate
#include "System/Net/WebRequest_DesignerWebRequestCreate.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.WebRequest/System.Net.DesignerWebRequestCreate.Create
::System::Net::WebRequest* System::Net::WebRequest::DesignerWebRequestCreate::Create(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::DesignerWebRequestCreate::Create");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebRequest*, false>(this, ___internal__method, uri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebRequest/System.Net.WebProxyWrapperOpaque
#include "System/Net/WebRequest_WebProxyWrapperOpaque.hpp"
// Including type: System.Net.WebProxy
#include "System/Net/WebProxy.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected readonly System.Net.WebProxy webProxy
[[deprecated("Use field access instead!")]] ::System::Net::WebProxy*& System::Net::WebRequest::WebProxyWrapperOpaque::dyn_webProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::WebProxyWrapperOpaque::dyn_webProxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "webProxy"))->offset;
  return *reinterpret_cast<::System::Net::WebProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebRequest/System.Net.WebProxyWrapperOpaque.get_Credentials
::System::Net::ICredentials* System::Net::WebRequest::WebProxyWrapperOpaque::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::WebProxyWrapperOpaque::get_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebRequest/System.Net.WebProxyWrapperOpaque.GetProxy
::System::Uri* System::Net::WebRequest::WebProxyWrapperOpaque::GetProxy(::System::Uri* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::WebProxyWrapperOpaque::GetProxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.Net.WebRequest/System.Net.WebProxyWrapperOpaque.IsBypassed
bool System::Net::WebRequest::WebProxyWrapperOpaque::IsBypassed(::System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::WebProxyWrapperOpaque::IsBypassed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBypassed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebRequest/System.Net.WebProxyWrapper
#include "System/Net/WebRequest_WebProxyWrapper.hpp"
// Including type: System.Net.WebProxy
#include "System/Net/WebProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.WebRequest/System.Net.WebProxyWrapper.get_WebProxy
::System::Net::WebProxy* System::Net::WebRequest::WebProxyWrapper::get_WebProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::WebProxyWrapper::get_WebProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WebProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebProxy*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebRequest/System.Net.<>c__DisplayClass78_0
#include "System/Net/WebRequest_--c__DisplayClass78_0.hpp"
// Including type: System.Security.Principal.WindowsIdentity
#include "System/Security/Principal/WindowsIdentity.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Security.Principal.WindowsIdentity currentUser
[[deprecated("Use field access instead!")]] ::System::Security::Principal::WindowsIdentity*& System::Net::WebRequest::$$c__DisplayClass78_0::dyn_currentUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::$$c__DisplayClass78_0::dyn_currentUser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentUser"))->offset;
  return *reinterpret_cast<::System::Security::Principal::WindowsIdentity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.WebRequest <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::WebRequest*& System::Net::WebRequest::$$c__DisplayClass78_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::$$c__DisplayClass78_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::WebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebRequest/System.Net.<>c__DisplayClass78_0.<GetRequestStreamAsync>b__1
::System::Threading::Tasks::Task_1<::System::IO::Stream*>* System::Net::WebRequest::$$c__DisplayClass78_0::$GetRequestStreamAsync$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::$$c__DisplayClass78_0::<GetRequestStreamAsync>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetRequestStreamAsync>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::IO::Stream*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebRequest/System.Net.<>c__DisplayClass79_0
#include "System/Net/WebRequest_--c__DisplayClass79_0.hpp"
// Including type: System.Security.Principal.WindowsIdentity
#include "System/Security/Principal/WindowsIdentity.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Security.Principal.WindowsIdentity currentUser
[[deprecated("Use field access instead!")]] ::System::Security::Principal::WindowsIdentity*& System::Net::WebRequest::$$c__DisplayClass79_0::dyn_currentUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::$$c__DisplayClass79_0::dyn_currentUser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentUser"))->offset;
  return *reinterpret_cast<::System::Security::Principal::WindowsIdentity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.WebRequest <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::WebRequest*& System::Net::WebRequest::$$c__DisplayClass79_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::$$c__DisplayClass79_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::WebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebRequest/System.Net.<>c__DisplayClass79_0.<GetResponseAsync>b__1
::System::Threading::Tasks::Task_1<::System::Net::WebResponse*>* System::Net::WebRequest::$$c__DisplayClass79_0::$GetResponseAsync$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebRequest::$$c__DisplayClass79_0::<GetResponseAsync>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetResponseAsync>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::WebResponse*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.WebResponse.get_ResponseUri
::System::Uri* System::Net::WebResponse::get_ResponseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebResponse::get_ResponseUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResponseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebResponse.get_Headers
::System::Net::WebHeaderCollection* System::Net::WebResponse::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebResponse::get_Headers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebResponse.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::WebResponse::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebResponse::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.WebResponse.GetObjectData
void System::Net::WebResponse::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebResponse::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.WebResponse.Close
void System::Net::WebResponse::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebResponse::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebResponse.Dispose
void System::Net::WebResponse::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebResponse::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebResponse.Dispose
void System::Net::WebResponse::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebResponse::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.WebResponse.GetResponseStream
::System::IO::Stream* System::Net::WebResponse::GetResponseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebResponse::GetResponseStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebUtility
#include "System/Net/WebUtility.hpp"
// Including type: System.Net.WebUtility/System.Net.UrlDecoder
#include "System/Net/WebUtility_UrlDecoder.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] _htmlEntityEndingChars
::ArrayW<::Il2CppChar> System::Net::WebUtility::_get__htmlEntityEndingChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::_get__htmlEntityEndingChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net", "WebUtility", "_htmlEntityEndingChars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] _htmlEntityEndingChars
void System::Net::WebUtility::_set__htmlEntityEndingChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::_set__htmlEntityEndingChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebUtility", "_htmlEntityEndingChars", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.Configuration.UnicodeDecodingConformance _htmlDecodeConformance
::System::Net::Configuration::UnicodeDecodingConformance System::Net::WebUtility::_get__htmlDecodeConformance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::_get__htmlDecodeConformance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Configuration::UnicodeDecodingConformance>("System.Net", "WebUtility", "_htmlDecodeConformance"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.Configuration.UnicodeDecodingConformance _htmlDecodeConformance
void System::Net::WebUtility::_set__htmlDecodeConformance(::System::Net::Configuration::UnicodeDecodingConformance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::_set__htmlDecodeConformance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebUtility", "_htmlDecodeConformance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.Configuration.UnicodeEncodingConformance _htmlEncodeConformance
::System::Net::Configuration::UnicodeEncodingConformance System::Net::WebUtility::_get__htmlEncodeConformance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::_get__htmlEncodeConformance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Configuration::UnicodeEncodingConformance>("System.Net", "WebUtility", "_htmlEncodeConformance"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.Configuration.UnicodeEncodingConformance _htmlEncodeConformance
void System::Net::WebUtility::_set__htmlEncodeConformance(::System::Net::Configuration::UnicodeEncodingConformance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::_set__htmlEncodeConformance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "WebUtility", "_htmlEncodeConformance", value));
}
// Autogenerated method: System.Net.WebUtility.get_HtmlEncodeConformance
::System::Net::Configuration::UnicodeEncodingConformance System::Net::WebUtility::get_HtmlEncodeConformance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::get_HtmlEncodeConformance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebUtility", "get_HtmlEncodeConformance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Configuration::UnicodeEncodingConformance, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.WebUtility..cctor
void System::Net::WebUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.WebUtility.HtmlEncode
::StringW System::Net::WebUtility::HtmlEncode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::HtmlEncode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebUtility", "HtmlEncode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Net.WebUtility.HtmlEncode
void System::Net::WebUtility::HtmlEncode(::StringW value, ::System::IO::TextWriter* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::HtmlEncode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebUtility", "HtmlEncode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, output);
}
// Autogenerated method: System.Net.WebUtility.IndexOfHtmlEncodingChars
int System::Net::WebUtility::IndexOfHtmlEncodingChars(::StringW s, int startPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::IndexOfHtmlEncodingChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebUtility", "IndexOfHtmlEncodingChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(startPos)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, startPos);
}
// Autogenerated method: System.Net.WebUtility.UrlDecodeInternal
::StringW System::Net::WebUtility::UrlDecodeInternal(::StringW value, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::UrlDecodeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebUtility", "UrlDecodeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, encoding);
}
// Autogenerated method: System.Net.WebUtility.UrlDecode
::StringW System::Net::WebUtility::UrlDecode(::StringW encodedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::UrlDecode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebUtility", "UrlDecode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encodedValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, encodedValue);
}
// Autogenerated method: System.Net.WebUtility.GetNextUnicodeScalarValueFromUtf16Surrogate
int System::Net::WebUtility::GetNextUnicodeScalarValueFromUtf16Surrogate(ByRef<::Il2CppChar*> pch, ByRef<int> charsRemaining) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::GetNextUnicodeScalarValueFromUtf16Surrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebUtility", "GetNextUnicodeScalarValueFromUtf16Surrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pch), ::il2cpp_utils::ExtractType(charsRemaining)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pch), byref(charsRemaining));
}
// Autogenerated method: System.Net.WebUtility.HexToInt
int System::Net::WebUtility::HexToInt(::Il2CppChar h) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::HexToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebUtility", "HexToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebUtility/System.Net.UrlDecoder
#include "System/Net/WebUtility_UrlDecoder.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bufferSize
[[deprecated("Use field access instead!")]] int& System::Net::WebUtility::UrlDecoder::dyn__bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::UrlDecoder::dyn__bufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numChars
[[deprecated("Use field access instead!")]] int& System::Net::WebUtility::UrlDecoder::dyn__numChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::UrlDecoder::dyn__numChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numChars"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] _charBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Net::WebUtility::UrlDecoder::dyn__charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::UrlDecoder::dyn__charBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numBytes
[[deprecated("Use field access instead!")]] int& System::Net::WebUtility::UrlDecoder::dyn__numBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::UrlDecoder::dyn__numBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numBytes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _byteBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::WebUtility::UrlDecoder::dyn__byteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::UrlDecoder::dyn__byteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_byteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding _encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Net::WebUtility::UrlDecoder::dyn__encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::UrlDecoder::dyn__encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebUtility/System.Net.UrlDecoder.FlushBytes
void System::Net::WebUtility::UrlDecoder::FlushBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::UrlDecoder::FlushBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebUtility/System.Net.UrlDecoder.AddChar
void System::Net::WebUtility::UrlDecoder::AddChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::UrlDecoder::AddChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Net.WebUtility/System.Net.UrlDecoder.AddByte
void System::Net::WebUtility::UrlDecoder::AddByte(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::UrlDecoder::AddByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, b);
}
// Autogenerated method: System.Net.WebUtility/System.Net.UrlDecoder.GetString
::StringW System::Net::WebUtility::UrlDecoder::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebUtility::UrlDecoder::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.HeaderParser
#include "System/Net/HeaderParser.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HeaderParser.Invoke
::ArrayW<::StringW> System::Net::HeaderParser::Invoke(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderParser::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.HeaderParser.BeginInvoke
::System::IAsyncResult* System::Net::HeaderParser::BeginInvoke(::StringW value, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderParser::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, value, callback, object);
}
// Autogenerated method: System.Net.HeaderParser.EndInvoke
::ArrayW<::StringW> System::Net::HeaderParser::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderParser::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.HeaderInfo
#include "System/Net/HeaderInfo.hpp"
// Including type: System.Net.HeaderParser
#include "System/Net/HeaderParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean IsRequestRestricted
[[deprecated("Use field access instead!")]] bool& System::Net::HeaderInfo::dyn_IsRequestRestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfo::dyn_IsRequestRestricted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsRequestRestricted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean IsResponseRestricted
[[deprecated("Use field access instead!")]] bool& System::Net::HeaderInfo::dyn_IsResponseRestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfo::dyn_IsResponseRestricted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsResponseRestricted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Net.HeaderParser Parser
[[deprecated("Use field access instead!")]] ::System::Net::HeaderParser*& System::Net::HeaderInfo::dyn_Parser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfo::dyn_Parser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Parser"))->offset;
  return *reinterpret_cast<::System::Net::HeaderParser**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.String HeaderName
[[deprecated("Use field access instead!")]] ::StringW& System::Net::HeaderInfo::dyn_HeaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfo::dyn_HeaderName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HeaderName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean AllowMultiValues
[[deprecated("Use field access instead!")]] bool& System::Net::HeaderInfo::dyn_AllowMultiValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfo::dyn_AllowMultiValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowMultiValues"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.HeaderInfoTable
#include "System/Net/HeaderInfoTable.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Net.HeaderInfo
#include "System/Net/HeaderInfo.hpp"
// Including type: System.Net.HeaderParser
#include "System/Net/HeaderParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable HeaderHashTable
::System::Collections::Hashtable* System::Net::HeaderInfoTable::_get_HeaderHashTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfoTable::_get_HeaderHashTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Net", "HeaderInfoTable", "HeaderHashTable"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable HeaderHashTable
void System::Net::HeaderInfoTable::_set_HeaderHashTable(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfoTable::_set_HeaderHashTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HeaderInfoTable", "HeaderHashTable", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.HeaderInfo UnknownHeaderInfo
::System::Net::HeaderInfo* System::Net::HeaderInfoTable::_get_UnknownHeaderInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfoTable::_get_UnknownHeaderInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::HeaderInfo*>("System.Net", "HeaderInfoTable", "UnknownHeaderInfo"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.HeaderInfo UnknownHeaderInfo
void System::Net::HeaderInfoTable::_set_UnknownHeaderInfo(::System::Net::HeaderInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfoTable::_set_UnknownHeaderInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HeaderInfoTable", "UnknownHeaderInfo", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.HeaderParser SingleParser
::System::Net::HeaderParser* System::Net::HeaderInfoTable::_get_SingleParser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfoTable::_get_SingleParser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::HeaderParser*>("System.Net", "HeaderInfoTable", "SingleParser"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.HeaderParser SingleParser
void System::Net::HeaderInfoTable::_set_SingleParser(::System::Net::HeaderParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfoTable::_set_SingleParser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HeaderInfoTable", "SingleParser", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.HeaderParser MultiParser
::System::Net::HeaderParser* System::Net::HeaderInfoTable::_get_MultiParser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfoTable::_get_MultiParser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::HeaderParser*>("System.Net", "HeaderInfoTable", "MultiParser"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.HeaderParser MultiParser
void System::Net::HeaderInfoTable::_set_MultiParser(::System::Net::HeaderParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfoTable::_set_MultiParser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "HeaderInfoTable", "MultiParser", value));
}
// Autogenerated method: System.Net.HeaderInfoTable.get_Item
::System::Net::HeaderInfo* System::Net::HeaderInfoTable::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfoTable::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HeaderInfo*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Net.HeaderInfoTable..cctor
void System::Net::HeaderInfoTable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfoTable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HeaderInfoTable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.HeaderInfoTable.ParseSingleValue
::ArrayW<::StringW> System::Net::HeaderInfoTable::ParseSingleValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfoTable::ParseSingleValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HeaderInfoTable", "ParseSingleValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Net.HeaderInfoTable.ParseMultiValue
::ArrayW<::StringW> System::Net::HeaderInfoTable::ParseMultiValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderInfoTable::ParseMultiValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HeaderInfoTable", "ParseMultiValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.CloseExState
#include "System/Net/CloseExState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.CloseExState Normal
::System::Net::CloseExState System::Net::CloseExState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CloseExState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CloseExState>("System.Net", "CloseExState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CloseExState Normal
void System::Net::CloseExState::_set_Normal(::System::Net::CloseExState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CloseExState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CloseExState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CloseExState Abort
::System::Net::CloseExState System::Net::CloseExState::_get_Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CloseExState::_get_Abort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CloseExState>("System.Net", "CloseExState", "Abort"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CloseExState Abort
void System::Net::CloseExState::_set_Abort(::System::Net::CloseExState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CloseExState::_set_Abort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CloseExState", "Abort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CloseExState Silent
::System::Net::CloseExState System::Net::CloseExState::_get_Silent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CloseExState::_get_Silent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CloseExState>("System.Net", "CloseExState", "Silent"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CloseExState Silent
void System::Net::CloseExState::_set_Silent(::System::Net::CloseExState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CloseExState::_set_Silent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CloseExState", "Silent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::CloseExState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CloseExState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.ICloseEx
#include "System/Net/ICloseEx.hpp"
// Including type: System.Net.CloseExState
#include "System/Net/CloseExState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.ICloseEx.CloseEx
void System::Net::ICloseEx::CloseEx(::System::Net::CloseExState closeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ICloseEx::CloseEx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(closeState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, closeState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.LazyAsyncResult
#include "System/Net/LazyAsyncResult.hpp"
// Including type: System.Net.LazyAsyncResult/System.Net.ThreadContext
#include "System/Net/LazyAsyncResult_ThreadContext.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Net.LazyAsyncResult/System.Net.ThreadContext t_ThreadContext
::System::Net::LazyAsyncResult::ThreadContext* System::Net::LazyAsyncResult::_get_t_ThreadContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::_get_t_ThreadContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::LazyAsyncResult::ThreadContext*>("System.Net", "LazyAsyncResult", "t_ThreadContext"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.LazyAsyncResult/System.Net.ThreadContext t_ThreadContext
void System::Net::LazyAsyncResult::_set_t_ThreadContext(::System::Net::LazyAsyncResult::ThreadContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::_set_t_ThreadContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "LazyAsyncResult", "t_ThreadContext", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_AsyncObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::LazyAsyncResult::dyn_m_AsyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::dyn_m_AsyncObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AsyncObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_AsyncState
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::LazyAsyncResult::dyn_m_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::dyn_m_AsyncState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AsyncState"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback m_AsyncCallback
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& System::Net::LazyAsyncResult::dyn_m_AsyncCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::dyn_m_AsyncCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AsyncCallback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_Result
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::LazyAsyncResult::dyn_m_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::dyn_m_Result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Result"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_IntCompleted
[[deprecated("Use field access instead!")]] int& System::Net::LazyAsyncResult::dyn_m_IntCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::dyn_m_IntCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IntCompleted"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UserEvent
[[deprecated("Use field access instead!")]] bool& System::Net::LazyAsyncResult::dyn_m_UserEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::dyn_m_UserEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UserEvent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_Event
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::LazyAsyncResult::dyn_m_Event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::dyn_m_Event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Event"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.LazyAsyncResult.get_CurrentThreadContext
::System::Net::LazyAsyncResult::ThreadContext* System::Net::LazyAsyncResult::get_CurrentThreadContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::get_CurrentThreadContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "LazyAsyncResult", "get_CurrentThreadContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::LazyAsyncResult::ThreadContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.LazyAsyncResult.get_AsyncObject
::Il2CppObject* System::Net::LazyAsyncResult::get_AsyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::get_AsyncObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.LazyAsyncResult.get_AsyncState
::Il2CppObject* System::Net::LazyAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.LazyAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* System::Net::LazyAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.LazyAsyncResult.get_CompletedSynchronously
bool System::Net::LazyAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.LazyAsyncResult.get_IsCompleted
bool System::Net::LazyAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.LazyAsyncResult.get_InternalPeekCompleted
bool System::Net::LazyAsyncResult::get_InternalPeekCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::get_InternalPeekCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalPeekCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.LazyAsyncResult.LazilyCreateEvent
bool System::Net::LazyAsyncResult::LazilyCreateEvent(ByRef<::System::Threading::ManualResetEvent*> waitHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::LazilyCreateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazilyCreateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Threading::ManualResetEvent*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(waitHandle));
}
// Autogenerated method: System.Net.LazyAsyncResult.ProtectedInvokeCallback
void System::Net::LazyAsyncResult::ProtectedInvokeCallback(::Il2CppObject* result, ::System::IntPtr userToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::ProtectedInvokeCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProtectedInvokeCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(userToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result, userToken);
}
// Autogenerated method: System.Net.LazyAsyncResult.InvokeCallback
void System::Net::LazyAsyncResult::InvokeCallback(::Il2CppObject* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::InvokeCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: System.Net.LazyAsyncResult.Complete
void System::Net::LazyAsyncResult::Complete(::System::IntPtr userToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::Complete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userToken);
}
// Autogenerated method: System.Net.LazyAsyncResult.WorkerThreadComplete
void System::Net::LazyAsyncResult::WorkerThreadComplete(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::WorkerThreadComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorkerThreadComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Net.LazyAsyncResult.Cleanup
void System::Net::LazyAsyncResult::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::Cleanup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.LazyAsyncResult.InternalWaitForCompletion
::Il2CppObject* System::Net::LazyAsyncResult::InternalWaitForCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::InternalWaitForCompletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWaitForCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.LazyAsyncResult.WaitForCompletion
::Il2CppObject* System::Net::LazyAsyncResult::WaitForCompletion(bool snap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::WaitForCompletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(snap)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, snap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.LazyAsyncResult/System.Net.ThreadContext
#include "System/Net/LazyAsyncResult_ThreadContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 m_NestedIOCount
[[deprecated("Use field access instead!")]] int& System::Net::LazyAsyncResult::ThreadContext::dyn_m_NestedIOCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::LazyAsyncResult::ThreadContext::dyn_m_NestedIOCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NestedIOCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetRes
#include "System/Net/NetRes.hpp"
// Including type: System.Net.WebExceptionStatus
#include "System/Net/WebExceptionStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetRes.GetWebStatusString
::StringW System::Net::NetRes::GetWebStatusString(::StringW Res, ::System::Net::WebExceptionStatus Status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetRes::GetWebStatusString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetRes", "GetWebStatusString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Res), ::il2cpp_utils::ExtractType(Status)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Res, Status);
}
// Autogenerated method: System.Net.NetRes.GetWebStatusString
::StringW System::Net::NetRes::GetWebStatusString(::System::Net::WebExceptionStatus Status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetRes::GetWebStatusString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "NetRes", "GetWebStatusString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Status)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Status);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.ServiceNameStore
#include "System/Net/ServiceNameStore.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Security.Authentication.ExtendedProtection.ServiceNameCollection
#include "System/Security/Authentication/ExtendedProtection/ServiceNameCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> serviceNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Net::ServiceNameStore::dyn_serviceNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServiceNameStore::dyn_serviceNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serviceNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Authentication.ExtendedProtection.ServiceNameCollection serviceNameCollection
[[deprecated("Use field access instead!")]] ::System::Security::Authentication::ExtendedProtection::ServiceNameCollection*& System::Net::ServiceNameStore::dyn_serviceNameCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServiceNameStore::dyn_serviceNameCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serviceNameCollection"))->offset;
  return *reinterpret_cast<::System::Security::Authentication::ExtendedProtection::ServiceNameCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.TimerThread
#include "System/Net/TimerThread.hpp"
// Including type: System.Net.TimerThread/System.Net.Queue
#include "System/Net/TimerThread_Queue.hpp"
// Including type: System.Net.TimerThread/System.Net.Timer
#include "System/Net/TimerThread_Timer.hpp"
// Including type: System.Net.TimerThread/System.Net.Callback
#include "System/Net/TimerThread_Callback.hpp"
// Including type: System.Net.TimerThread/System.Net.TimerQueue
#include "System/Net/TimerThread_TimerQueue.hpp"
// Including type: System.Net.TimerThread/System.Net.InfiniteTimerQueue
#include "System/Net/TimerThread_InfiniteTimerQueue.hpp"
// Including type: System.Net.TimerThread/System.Net.TimerNode
#include "System/Net/TimerThread_TimerNode.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
// Including type: System.Threading.AutoResetEvent
#include "System/Threading/AutoResetEvent.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.LinkedList`1<System.WeakReference> s_Queues
::System::Collections::Generic::LinkedList_1<::System::WeakReference*>* System::Net::TimerThread::_get_s_Queues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_s_Queues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::LinkedList_1<::System::WeakReference*>*>("System.Net", "TimerThread", "s_Queues"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.LinkedList`1<System.WeakReference> s_Queues
void System::Net::TimerThread::_set_s_Queues(::System::Collections::Generic::LinkedList_1<::System::WeakReference*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_s_Queues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "s_Queues", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.LinkedList`1<System.WeakReference> s_NewQueues
::System::Collections::Generic::LinkedList_1<::System::WeakReference*>* System::Net::TimerThread::_get_s_NewQueues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_s_NewQueues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::LinkedList_1<::System::WeakReference*>*>("System.Net", "TimerThread", "s_NewQueues"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.LinkedList`1<System.WeakReference> s_NewQueues
void System::Net::TimerThread::_set_s_NewQueues(::System::Collections::Generic::LinkedList_1<::System::WeakReference*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_s_NewQueues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "s_NewQueues", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_ThreadState
int System::Net::TimerThread::_get_s_ThreadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_s_ThreadState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net", "TimerThread", "s_ThreadState"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_ThreadState
void System::Net::TimerThread::_set_s_ThreadState(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_s_ThreadState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "s_ThreadState", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.AutoResetEvent s_ThreadReadyEvent
::System::Threading::AutoResetEvent* System::Net::TimerThread::_get_s_ThreadReadyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_s_ThreadReadyEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::AutoResetEvent*>("System.Net", "TimerThread", "s_ThreadReadyEvent"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.AutoResetEvent s_ThreadReadyEvent
void System::Net::TimerThread::_set_s_ThreadReadyEvent(::System::Threading::AutoResetEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_s_ThreadReadyEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "s_ThreadReadyEvent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.ManualResetEvent s_ThreadShutdownEvent
::System::Threading::ManualResetEvent* System::Net::TimerThread::_get_s_ThreadShutdownEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_s_ThreadShutdownEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ManualResetEvent*>("System.Net", "TimerThread", "s_ThreadShutdownEvent"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ManualResetEvent s_ThreadShutdownEvent
void System::Net::TimerThread::_set_s_ThreadShutdownEvent(::System::Threading::ManualResetEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_s_ThreadShutdownEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "s_ThreadShutdownEvent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.WaitHandle[] s_ThreadEvents
::ArrayW<::System::Threading::WaitHandle*> System::Net::TimerThread::_get_s_ThreadEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_s_ThreadEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Threading::WaitHandle*>>("System.Net", "TimerThread", "s_ThreadEvents"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.WaitHandle[] s_ThreadEvents
void System::Net::TimerThread::_set_s_ThreadEvents(::ArrayW<::System::Threading::WaitHandle*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_s_ThreadEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "s_ThreadEvents", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable s_QueuesCache
::System::Collections::Hashtable* System::Net::TimerThread::_get_s_QueuesCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_get_s_QueuesCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Net", "TimerThread", "s_QueuesCache"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable s_QueuesCache
void System::Net::TimerThread::_set_s_QueuesCache(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::_set_s_QueuesCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread", "s_QueuesCache", value));
}
// Autogenerated method: System.Net.TimerThread..cctor
void System::Net::TimerThread::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "TimerThread", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.TimerThread.CreateQueue
::System::Net::TimerThread::Queue* System::Net::TimerThread::CreateQueue(int durationMilliseconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::CreateQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "TimerThread", "CreateQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(durationMilliseconds)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::TimerThread::Queue*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, durationMilliseconds);
}
// Autogenerated method: System.Net.TimerThread.StopTimerThread
void System::Net::TimerThread::StopTimerThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::StopTimerThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "TimerThread", "StopTimerThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.TimerThread.OnDomainUnload
void System::Net::TimerThread::OnDomainUnload(::Il2CppObject* sender, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::OnDomainUnload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "TimerThread", "OnDomainUnload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sender, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.TimerThread/System.Net.Queue
#include "System/Net/TimerThread_Queue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 m_DurationMilliseconds
[[deprecated("Use field access instead!")]] int& System::Net::TimerThread::Queue::dyn_m_DurationMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Queue::dyn_m_DurationMilliseconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DurationMilliseconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.TimerThread/System.Net.Timer
#include "System/Net/TimerThread_Timer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 m_StartTimeMilliseconds
[[deprecated("Use field access instead!")]] int& System::Net::TimerThread::Timer::dyn_m_StartTimeMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Timer::dyn_m_StartTimeMilliseconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartTimeMilliseconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 m_DurationMilliseconds
[[deprecated("Use field access instead!")]] int& System::Net::TimerThread::Timer::dyn_m_DurationMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Timer::dyn_m_DurationMilliseconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DurationMilliseconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.TimerThread/System.Net.Timer.Cancel
bool System::Net::TimerThread::Timer::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Timer::Cancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/System.Net.Timer.Dispose
void System::Net::TimerThread::Timer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Timer::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.TimerThread/System.Net.Callback
#include "System/Net/TimerThread_Callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.TimerThread/System.Net.Timer
#include "System/Net/TimerThread_Timer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.TimerThread/System.Net.Callback.Invoke
void System::Net::TimerThread::Callback::Invoke(::System::Net::TimerThread::Timer* timer, int timeNoticed, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Callback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timer), ::il2cpp_utils::ExtractType(timeNoticed), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timer, timeNoticed, context);
}
// Autogenerated method: System.Net.TimerThread/System.Net.Callback.BeginInvoke
::System::IAsyncResult* System::Net::TimerThread::Callback::BeginInvoke(::System::Net::TimerThread::Timer* timer, int timeNoticed, ::Il2CppObject* context, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timer), ::il2cpp_utils::ExtractType(timeNoticed), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, timer, timeNoticed, context, callback, object);
}
// Autogenerated method: System.Net.TimerThread/System.Net.Callback.EndInvoke
void System::Net::TimerThread::Callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::Callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.TimerThread/System.Net.TimerQueue
#include "System/Net/TimerThread_TimerQueue.hpp"
// Including type: System.Net.TimerThread/System.Net.TimerNode
#include "System/Net/TimerThread_TimerNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.TimerThread/System.Net.TimerNode m_Timers
[[deprecated("Use field access instead!")]] ::System::Net::TimerThread::TimerNode*& System::Net::TimerThread::TimerQueue::dyn_m_Timers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerQueue::dyn_m_Timers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Timers"))->offset;
  return *reinterpret_cast<::System::Net::TimerThread::TimerNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.TimerThread/System.Net.InfiniteTimerQueue
#include "System/Net/TimerThread_InfiniteTimerQueue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.TimerThread/System.Net.TimerNode
#include "System/Net/TimerThread_TimerNode.hpp"
// Including type: System.Net.TimerThread/System.Net.Callback
#include "System/Net/TimerThread_Callback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.TimerThread/System.Net.TimerNode/System.Net.TimerState m_TimerState
[[deprecated("Use field access instead!")]] ::System::Net::TimerThread::TimerNode::TimerState& System::Net::TimerThread::TimerNode::dyn_m_TimerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::dyn_m_TimerState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimerState"))->offset;
  return *reinterpret_cast<::System::Net::TimerThread::TimerNode::TimerState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.TimerThread/System.Net.Callback m_Callback
[[deprecated("Use field access instead!")]] ::System::Net::TimerThread::Callback*& System::Net::TimerThread::TimerNode::dyn_m_Callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::dyn_m_Callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Callback"))->offset;
  return *reinterpret_cast<::System::Net::TimerThread::Callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_Context
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::TimerThread::TimerNode::dyn_m_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::dyn_m_Context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Context"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_QueueLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::TimerThread::TimerNode::dyn_m_QueueLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::dyn_m_QueueLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_QueueLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.TimerThread/System.Net.TimerNode next
[[deprecated("Use field access instead!")]] ::System::Net::TimerThread::TimerNode*& System::Net::TimerThread::TimerNode::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Net::TimerThread::TimerNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.TimerThread/System.Net.TimerNode prev
[[deprecated("Use field access instead!")]] ::System::Net::TimerThread::TimerNode*& System::Net::TimerThread::TimerNode::dyn_prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::dyn_prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prev"))->offset;
  return *reinterpret_cast<::System::Net::TimerThread::TimerNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.TimerThread/System.Net.TimerNode.get_Next
::System::Net::TimerThread::TimerNode* System::Net::TimerThread::TimerNode::get_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::get_Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::TimerThread::TimerNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/System.Net.TimerNode.set_Next
void System::Net::TimerThread::TimerNode::set_Next(::System::Net::TimerThread::TimerNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::set_Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.TimerThread/System.Net.TimerNode.get_Prev
::System::Net::TimerThread::TimerNode* System::Net::TimerThread::TimerNode::get_Prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::get_Prev");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prev", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::TimerThread::TimerNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.TimerThread/System.Net.TimerNode.set_Prev
void System::Net::TimerThread::TimerNode::set_Prev(::System::Net::TimerThread::TimerNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::set_Prev");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Prev", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.TimerThread/System.Net.TimerNode.Cancel
bool System::Net::TimerThread::TimerNode::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::Cancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.TimerThread/System.Net.TimerNode/System.Net.TimerState
#include "System/Net/TimerThread_TimerNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.TimerThread/System.Net.TimerNode/System.Net.TimerState Ready
::System::Net::TimerThread::TimerNode::TimerState System::Net::TimerThread::TimerNode::TimerState::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::TimerThread::TimerNode::TimerState>("System.Net", "TimerThread/TimerNode/TimerState", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.TimerThread/System.Net.TimerNode/System.Net.TimerState Ready
void System::Net::TimerThread::TimerNode::TimerState::_set_Ready(::System::Net::TimerThread::TimerNode::TimerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread/TimerNode/TimerState", "Ready", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.TimerThread/System.Net.TimerNode/System.Net.TimerState Fired
::System::Net::TimerThread::TimerNode::TimerState System::Net::TimerThread::TimerNode::TimerState::_get_Fired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::_get_Fired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::TimerThread::TimerNode::TimerState>("System.Net", "TimerThread/TimerNode/TimerState", "Fired"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.TimerThread/System.Net.TimerNode/System.Net.TimerState Fired
void System::Net::TimerThread::TimerNode::TimerState::_set_Fired(::System::Net::TimerThread::TimerNode::TimerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::_set_Fired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread/TimerNode/TimerState", "Fired", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.TimerThread/System.Net.TimerNode/System.Net.TimerState Cancelled
::System::Net::TimerThread::TimerNode::TimerState System::Net::TimerThread::TimerNode::TimerState::_get_Cancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::_get_Cancelled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::TimerThread::TimerNode::TimerState>("System.Net", "TimerThread/TimerNode/TimerState", "Cancelled"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.TimerThread/System.Net.TimerNode/System.Net.TimerState Cancelled
void System::Net::TimerThread::TimerNode::TimerState::_set_Cancelled(::System::Net::TimerThread::TimerNode::TimerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::_set_Cancelled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread/TimerNode/TimerState", "Cancelled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.TimerThread/System.Net.TimerNode/System.Net.TimerState Sentinel
::System::Net::TimerThread::TimerNode::TimerState System::Net::TimerThread::TimerNode::TimerState::_get_Sentinel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::_get_Sentinel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::TimerThread::TimerNode::TimerState>("System.Net", "TimerThread/TimerNode/TimerState", "Sentinel"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.TimerThread/System.Net.TimerNode/System.Net.TimerState Sentinel
void System::Net::TimerThread::TimerNode::TimerState::_set_Sentinel(::System::Net::TimerThread::TimerNode::TimerState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::_set_Sentinel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "TimerThread/TimerNode/TimerState", "Sentinel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::TimerThread::TimerNode::TimerState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::TimerThread::TimerNode::TimerState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.EmptyWebProxy
#include "System/Net/EmptyWebProxy.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.ICredentials m_credentials
[[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& System::Net::EmptyWebProxy::dyn_m_credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EmptyWebProxy::dyn_m_credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_credentials"))->offset;
  return *reinterpret_cast<::System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.EmptyWebProxy.get_Credentials
::System::Net::ICredentials* System::Net::EmptyWebProxy::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EmptyWebProxy::get_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EmptyWebProxy.GetProxy
::System::Uri* System::Net::EmptyWebProxy::GetProxy(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EmptyWebProxy::GetProxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.EmptyWebProxy.IsBypassed
bool System::Net::EmptyWebProxy::IsBypassed(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EmptyWebProxy::IsBypassed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBypassed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.CookieVariant
#include "System/Net/CookieVariant.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.CookieVariant Unknown
::System::Net::CookieVariant System::Net::CookieVariant::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieVariant>("System.Net", "CookieVariant", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieVariant Unknown
void System::Net::CookieVariant::_set_Unknown(::System::Net::CookieVariant value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieVariant", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieVariant Plain
::System::Net::CookieVariant System::Net::CookieVariant::_get_Plain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_get_Plain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieVariant>("System.Net", "CookieVariant", "Plain"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieVariant Plain
void System::Net::CookieVariant::_set_Plain(::System::Net::CookieVariant value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_set_Plain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieVariant", "Plain", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieVariant Rfc2109
::System::Net::CookieVariant System::Net::CookieVariant::_get_Rfc2109() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_get_Rfc2109");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieVariant>("System.Net", "CookieVariant", "Rfc2109"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieVariant Rfc2109
void System::Net::CookieVariant::_set_Rfc2109(::System::Net::CookieVariant value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_set_Rfc2109");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieVariant", "Rfc2109", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieVariant Rfc2965
::System::Net::CookieVariant System::Net::CookieVariant::_get_Rfc2965() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_get_Rfc2965");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieVariant>("System.Net", "CookieVariant", "Rfc2965"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieVariant Rfc2965
void System::Net::CookieVariant::_set_Rfc2965(::System::Net::CookieVariant value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_set_Rfc2965");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieVariant", "Rfc2965", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieVariant Default
::System::Net::CookieVariant System::Net::CookieVariant::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieVariant>("System.Net", "CookieVariant", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieVariant Default
void System::Net::CookieVariant::_set_Default(::System::Net::CookieVariant value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieVariant", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::CookieVariant::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieVariant::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Cookie
#include "System/Net/Cookie.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.Comparer
#include "System/Net/Comparer.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Char[] PortSplitDelimiters
::ArrayW<::Il2CppChar> System::Net::Cookie::_get_PortSplitDelimiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_PortSplitDelimiters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net", "Cookie", "PortSplitDelimiters"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] PortSplitDelimiters
void System::Net::Cookie::_set_PortSplitDelimiters(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_PortSplitDelimiters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "PortSplitDelimiters", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] Reserved2Name
::ArrayW<::Il2CppChar> System::Net::Cookie::_get_Reserved2Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_Reserved2Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net", "Cookie", "Reserved2Name"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] Reserved2Name
void System::Net::Cookie::_set_Reserved2Name(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_Reserved2Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "Reserved2Name", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] Reserved2Value
::ArrayW<::Il2CppChar> System::Net::Cookie::_get_Reserved2Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_Reserved2Value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net", "Cookie", "Reserved2Value"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] Reserved2Value
void System::Net::Cookie::_set_Reserved2Value(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_Reserved2Value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "Reserved2Value", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.Comparer staticComparer
::System::Net::Comparer* System::Net::Cookie::_get_staticComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_get_staticComparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Comparer*>("System.Net", "Cookie", "staticComparer"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.Comparer staticComparer
void System::Net::Cookie::_set_staticComparer(::System::Net::Comparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::_set_staticComparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Cookie", "staticComparer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_comment
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Cookie::dyn_m_comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_comment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_comment"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri m_commentUri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::Cookie::dyn_m_commentUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_commentUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_commentUri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieVariant m_cookieVariant
[[deprecated("Use field access instead!")]] ::System::Net::CookieVariant& System::Net::Cookie::dyn_m_cookieVariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_cookieVariant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cookieVariant"))->offset;
  return *reinterpret_cast<::System::Net::CookieVariant*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_discard
[[deprecated("Use field access instead!")]] bool& System::Net::Cookie::dyn_m_discard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_discard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_discard"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_domain
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Cookie::dyn_m_domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_domain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_domain"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_domain_implicit
[[deprecated("Use field access instead!")]] bool& System::Net::Cookie::dyn_m_domain_implicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_domain_implicit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_domain_implicit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime m_expires
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Net::Cookie::dyn_m_expires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_expires");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_expires"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Cookie::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_path
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Cookie::dyn_m_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_path_implicit
[[deprecated("Use field access instead!")]] bool& System::Net::Cookie::dyn_m_path_implicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_path_implicit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_path_implicit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_port
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Cookie::dyn_m_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_port"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_port_implicit
[[deprecated("Use field access instead!")]] bool& System::Net::Cookie::dyn_m_port_implicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_port_implicit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_port_implicit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_port_list
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Net::Cookie::dyn_m_port_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_port_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_port_list"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_secure
[[deprecated("Use field access instead!")]] bool& System::Net::Cookie::dyn_m_secure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_secure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_secure"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_httpOnly
[[deprecated("Use field access instead!")]] bool& System::Net::Cookie::dyn_m_httpOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_httpOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_httpOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime m_timeStamp
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Net::Cookie::dyn_m_timeStamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_timeStamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timeStamp"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_value
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Cookie::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_version
[[deprecated("Use field access instead!")]] int& System::Net::Cookie::dyn_m_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_domainKey
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Cookie::dyn_m_domainKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_m_domainKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_domainKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsQuotedVersion
[[deprecated("Use field access instead!")]] bool& System::Net::Cookie::dyn_IsQuotedVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_IsQuotedVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsQuotedVersion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsQuotedDomain
[[deprecated("Use field access instead!")]] bool& System::Net::Cookie::dyn_IsQuotedDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::dyn_IsQuotedDomain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsQuotedDomain"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Cookie.get_Comment
::StringW System::Net::Cookie::get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Comment
void System::Net::Cookie::set_Comment(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.set_CommentUri
void System::Net::Cookie::set_CommentUri(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_CommentUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CommentUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.set_HttpOnly
void System::Net::Cookie::set_HttpOnly(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_HttpOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HttpOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.set_Discard
void System::Net::Cookie::set_Discard(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Discard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Discard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Domain
::StringW System::Net::Cookie::get_Domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Domain
void System::Net::Cookie::set_Domain(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get__Domain
::StringW System::Net::Cookie::get__Domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get__Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get_Expired
bool System::Net::Cookie::get_Expired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Expired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Expires
void System::Net::Cookie::set_Expires(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Expires");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Expires", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Name
::StringW System::Net::Cookie::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Name
void System::Net::Cookie::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Path
::StringW System::Net::Cookie::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Path
void System::Net::Cookie::set_Path(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get__Path
::StringW System::Net::Cookie::get__Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get__Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get_Plain
bool System::Net::Cookie::get_Plain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Plain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Plain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get_Port
::StringW System::Net::Cookie::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Port
void System::Net::Cookie::set_Port(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_PortList
::ArrayW<int> System::Net::Cookie::get_PortList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_PortList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PortList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get__Port
::StringW System::Net::Cookie::get__Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get__Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get_Secure
bool System::Net::Cookie::get_Secure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Secure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Secure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Secure
void System::Net::Cookie::set_Secure(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Secure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Secure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Value
::StringW System::Net::Cookie::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Value
void System::Net::Cookie::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get_Variant
::System::Net::CookieVariant System::Net::Cookie::get_Variant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Variant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Variant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieVariant, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get_DomainKey
::StringW System::Net::Cookie::get_DomainKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_DomainKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DomainKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.get_Version
int System::Net::Cookie::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.set_Version
void System::Net::Cookie::set_Version(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::set_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.get__Version
::StringW System::Net::Cookie::get__Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::get__Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie..cctor
void System::Net::Cookie::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Cookie", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Cookie.InternalSetName
bool System::Net::Cookie::InternalSetName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::InternalSetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Cookie.IsDomainEqualToHost
bool System::Net::Cookie::IsDomainEqualToHost(::StringW domain, ::StringW host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::IsDomainEqualToHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Cookie", "IsDomainEqualToHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(domain), ::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, domain, host);
}
// Autogenerated method: System.Net.Cookie.VerifySetDefaults
bool System::Net::Cookie::VerifySetDefaults(::System::Net::CookieVariant variant, ::System::Uri* uri, bool isLocalDomain, ::StringW localDomain, bool set_default, bool isThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::VerifySetDefaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySetDefaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variant), ::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(isLocalDomain), ::il2cpp_utils::ExtractType(localDomain), ::il2cpp_utils::ExtractType(set_default), ::il2cpp_utils::ExtractType(isThrow)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, variant, uri, isLocalDomain, localDomain, set_default, isThrow);
}
// Autogenerated method: System.Net.Cookie.DomainCharsTest
bool System::Net::Cookie::DomainCharsTest(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::DomainCharsTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Cookie", "DomainCharsTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Net.Cookie.GetComparer
::System::Collections::IComparer* System::Net::Cookie::GetComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::GetComparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Cookie", "GetComparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IComparer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Cookie.Equals
bool System::Net::Cookie::Equals(::Il2CppObject* comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparand)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, comparand);
}
// Autogenerated method: System.Net.Cookie.GetHashCode
int System::Net::Cookie::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cookie.ToString
::StringW System::Net::Cookie::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cookie::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.CookieToken
#include "System/Net/CookieToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Nothing
::System::Net::CookieToken System::Net::CookieToken::_get_Nothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Nothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Nothing"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Nothing
void System::Net::CookieToken::_set_Nothing(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Nothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Nothing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken NameValuePair
::System::Net::CookieToken System::Net::CookieToken::_get_NameValuePair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_NameValuePair");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "NameValuePair"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken NameValuePair
void System::Net::CookieToken::_set_NameValuePair(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_NameValuePair");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "NameValuePair", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Attribute
::System::Net::CookieToken System::Net::CookieToken::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Attribute
void System::Net::CookieToken::_set_Attribute(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken EndToken
::System::Net::CookieToken System::Net::CookieToken::_get_EndToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_EndToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "EndToken"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken EndToken
void System::Net::CookieToken::_set_EndToken(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_EndToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "EndToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken EndCookie
::System::Net::CookieToken System::Net::CookieToken::_get_EndCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_EndCookie");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "EndCookie"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken EndCookie
void System::Net::CookieToken::_set_EndCookie(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_EndCookie");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "EndCookie", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken End
::System::Net::CookieToken System::Net::CookieToken::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken End
void System::Net::CookieToken::_set_End(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Equals
::System::Net::CookieToken System::Net::CookieToken::_get_Equals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Equals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Equals"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Equals
void System::Net::CookieToken::_set_Equals(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Equals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Equals", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Comment
::System::Net::CookieToken System::Net::CookieToken::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Comment
void System::Net::CookieToken::_set_Comment(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken CommentUrl
::System::Net::CookieToken System::Net::CookieToken::_get_CommentUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_CommentUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "CommentUrl"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken CommentUrl
void System::Net::CookieToken::_set_CommentUrl(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_CommentUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "CommentUrl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken CookieName
::System::Net::CookieToken System::Net::CookieToken::_get_CookieName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_CookieName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "CookieName"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken CookieName
void System::Net::CookieToken::_set_CookieName(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_CookieName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "CookieName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Discard
::System::Net::CookieToken System::Net::CookieToken::_get_Discard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Discard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Discard"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Discard
void System::Net::CookieToken::_set_Discard(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Discard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Discard", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Domain
::System::Net::CookieToken System::Net::CookieToken::_get_Domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Domain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Domain"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Domain
void System::Net::CookieToken::_set_Domain(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Domain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Domain", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Expires
::System::Net::CookieToken System::Net::CookieToken::_get_Expires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Expires");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Expires"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Expires
void System::Net::CookieToken::_set_Expires(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Expires");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Expires", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken MaxAge
::System::Net::CookieToken System::Net::CookieToken::_get_MaxAge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_MaxAge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "MaxAge"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken MaxAge
void System::Net::CookieToken::_set_MaxAge(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_MaxAge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "MaxAge", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Path
::System::Net::CookieToken System::Net::CookieToken::_get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Path");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Path"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Path
void System::Net::CookieToken::_set_Path(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Path");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Path", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Port
::System::Net::CookieToken System::Net::CookieToken::_get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Port");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Port"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Port
void System::Net::CookieToken::_set_Port(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Port");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Port", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Secure
::System::Net::CookieToken System::Net::CookieToken::_get_Secure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Secure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Secure"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Secure
void System::Net::CookieToken::_set_Secure(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Secure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Secure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken HttpOnly
::System::Net::CookieToken System::Net::CookieToken::_get_HttpOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_HttpOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "HttpOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken HttpOnly
void System::Net::CookieToken::_set_HttpOnly(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_HttpOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "HttpOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Unknown
::System::Net::CookieToken System::Net::CookieToken::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Unknown
void System::Net::CookieToken::_set_Unknown(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieToken Version
::System::Net::CookieToken System::Net::CookieToken::_get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_get_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieToken>("System.Net", "CookieToken", "Version"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieToken Version
void System::Net::CookieToken::_set_Version(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::_set_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieToken", "Version", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::CookieToken::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieToken::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.CookieTokenizer
#include "System/Net/CookieTokenizer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Net.CookieTokenizer/System.Net.RecognizedAttribute[] RecognizedAttributes
::ArrayW<::System::Net::CookieTokenizer::RecognizedAttribute> System::Net::CookieTokenizer::_get_RecognizedAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::_get_RecognizedAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Net::CookieTokenizer::RecognizedAttribute>>("System.Net", "CookieTokenizer", "RecognizedAttributes"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.CookieTokenizer/System.Net.RecognizedAttribute[] RecognizedAttributes
void System::Net::CookieTokenizer::_set_RecognizedAttributes(::ArrayW<::System::Net::CookieTokenizer::RecognizedAttribute> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::_set_RecognizedAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieTokenizer", "RecognizedAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.CookieTokenizer/System.Net.RecognizedAttribute[] RecognizedServerAttributes
::ArrayW<::System::Net::CookieTokenizer::RecognizedAttribute> System::Net::CookieTokenizer::_get_RecognizedServerAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::_get_RecognizedServerAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Net::CookieTokenizer::RecognizedAttribute>>("System.Net", "CookieTokenizer", "RecognizedServerAttributes"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.CookieTokenizer/System.Net.RecognizedAttribute[] RecognizedServerAttributes
void System::Net::CookieTokenizer::_set_RecognizedServerAttributes(::ArrayW<::System::Net::CookieTokenizer::RecognizedAttribute> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::_set_RecognizedServerAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieTokenizer", "RecognizedServerAttributes", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_eofCookie
[[deprecated("Use field access instead!")]] bool& System::Net::CookieTokenizer::dyn_m_eofCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_eofCookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eofCookie"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_index
[[deprecated("Use field access instead!")]] int& System::Net::CookieTokenizer::dyn_m_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_length
[[deprecated("Use field access instead!")]] int& System::Net::CookieTokenizer::dyn_m_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& System::Net::CookieTokenizer::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_quoted
[[deprecated("Use field access instead!")]] bool& System::Net::CookieTokenizer::dyn_m_quoted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_quoted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_quoted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_start
[[deprecated("Use field access instead!")]] int& System::Net::CookieTokenizer::dyn_m_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieToken m_token
[[deprecated("Use field access instead!")]] ::System::Net::CookieToken& System::Net::CookieTokenizer::dyn_m_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_token"))->offset;
  return *reinterpret_cast<::System::Net::CookieToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_tokenLength
[[deprecated("Use field access instead!")]] int& System::Net::CookieTokenizer::dyn_m_tokenLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_tokenLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tokenLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_tokenStream
[[deprecated("Use field access instead!")]] ::StringW& System::Net::CookieTokenizer::dyn_m_tokenStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_tokenStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tokenStream"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_value
[[deprecated("Use field access instead!")]] ::StringW& System::Net::CookieTokenizer::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::dyn_m_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.CookieTokenizer.get_EndOfCookie
bool System::Net::CookieTokenizer::get_EndOfCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::get_EndOfCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndOfCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.set_EndOfCookie
void System::Net::CookieTokenizer::set_EndOfCookie(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::set_EndOfCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EndOfCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieTokenizer.get_Eof
bool System::Net::CookieTokenizer::get_Eof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::get_Eof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Eof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.get_Name
::StringW System::Net::CookieTokenizer::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.set_Name
void System::Net::CookieTokenizer::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieTokenizer.get_Quoted
bool System::Net::CookieTokenizer::get_Quoted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::get_Quoted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Quoted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.set_Quoted
void System::Net::CookieTokenizer::set_Quoted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::set_Quoted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Quoted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieTokenizer.get_Token
::System::Net::CookieToken System::Net::CookieTokenizer::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::get_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.set_Token
void System::Net::CookieTokenizer::set_Token(::System::Net::CookieToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::set_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieTokenizer.get_Value
::StringW System::Net::CookieTokenizer::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.set_Value
void System::Net::CookieTokenizer::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.CookieTokenizer..cctor
void System::Net::CookieTokenizer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "CookieTokenizer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.Extract
::StringW System::Net::CookieTokenizer::Extract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::Extract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Extract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.FindNext
::System::Net::CookieToken System::Net::CookieTokenizer::FindNext(bool ignoreComma, bool ignoreEquals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::FindNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignoreComma), ::il2cpp_utils::ExtractType(ignoreEquals)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieToken, false>(this, ___internal__method, ignoreComma, ignoreEquals);
}
// Autogenerated method: System.Net.CookieTokenizer.Next
::System::Net::CookieToken System::Net::CookieTokenizer::Next(bool first, bool parseResponseCookies) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::Next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(parseResponseCookies)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieToken, false>(this, ___internal__method, first, parseResponseCookies);
}
// Autogenerated method: System.Net.CookieTokenizer.Reset
void System::Net::CookieTokenizer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer.TokenFromName
::System::Net::CookieToken System::Net::CookieTokenizer::TokenFromName(bool parseResponseCookies) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::TokenFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TokenFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parseResponseCookies)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieToken, false>(this, ___internal__method, parseResponseCookies);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.CookieTokenizer/System.Net.RecognizedAttribute
#include "System/Net/CookieTokenizer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& System::Net::CookieTokenizer::RecognizedAttribute::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::RecognizedAttribute::dyn_m_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieToken m_token
[[deprecated("Use field access instead!")]] ::System::Net::CookieToken& System::Net::CookieTokenizer::RecognizedAttribute::dyn_m_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::RecognizedAttribute::dyn_m_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_token"))->offset;
  return *reinterpret_cast<::System::Net::CookieToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.CookieTokenizer/System.Net.RecognizedAttribute.get_Token
::System::Net::CookieToken System::Net::CookieTokenizer::RecognizedAttribute::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::RecognizedAttribute::get_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieTokenizer/System.Net.RecognizedAttribute..ctor
// ABORTED elsewhere.  System::Net::CookieTokenizer::RecognizedAttribute::RecognizedAttribute(::StringW name, ::System::Net::CookieToken token)
// Autogenerated method: System.Net.CookieTokenizer/System.Net.RecognizedAttribute.IsEqualTo
bool System::Net::CookieTokenizer::RecognizedAttribute::IsEqualTo(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieTokenizer::RecognizedAttribute::IsEqualTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsEqualTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.CookieParser
#include "System/Net/CookieParser.hpp"
// Including type: System.Net.CookieTokenizer
#include "System/Net/CookieTokenizer.hpp"
// Including type: System.Net.Cookie
#include "System/Net/Cookie.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieTokenizer m_tokenizer
[[deprecated("Use field access instead!")]] ::System::Net::CookieTokenizer*& System::Net::CookieParser::dyn_m_tokenizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieParser::dyn_m_tokenizer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tokenizer"))->offset;
  return *reinterpret_cast<::System::Net::CookieTokenizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.CookieParser.Get
::System::Net::Cookie* System::Net::CookieParser::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieParser::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Cookie*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieParser.CheckQuoted
::StringW System::Net::CookieParser::CheckQuoted(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieParser::CheckQuoted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "CookieParser", "CheckQuoted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Comparer
#include "System/Net/Comparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Comparer.System.Collections.IComparer.Compare
int System::Net::Comparer::System_Collections_IComparer_Compare(::Il2CppObject* ol, ::Il2CppObject* _or) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Comparer::System.Collections.IComparer.Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IComparer.Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ol), ::il2cpp_utils::ExtractType(_or)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ol, _or);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.CookieCollection
#include "System/Net/CookieCollection.hpp"
// Including type: System.Net.CookieCollection/System.Net.Stamp
#include "System/Net/CookieCollection_Stamp.hpp"
// Including type: System.Net.CookieCollection/System.Net.CookieCollectionEnumerator
#include "System/Net/CookieCollection_CookieCollectionEnumerator.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Net.Cookie
#include "System/Net/Cookie.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 m_version
[[deprecated("Use field access instead!")]] int& System::Net::CookieCollection::dyn_m_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::dyn_m_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList m_list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Net::CookieCollection::dyn_m_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::dyn_m_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime m_TimeStamp
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Net::CookieCollection::dyn_m_TimeStamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::dyn_m_TimeStamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimeStamp"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_has_other_versions
[[deprecated("Use field access instead!")]] bool& System::Net::CookieCollection::dyn_m_has_other_versions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::dyn_m_has_other_versions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_has_other_versions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsReadOnly
[[deprecated("Use field access instead!")]] bool& System::Net::CookieCollection::dyn_m_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::dyn_m_IsReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.CookieCollection.get_Item
::System::Net::Cookie* System::Net::CookieCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Cookie*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Net.CookieCollection.get_Count
int System::Net::CookieCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieCollection.get_SyncRoot
::Il2CppObject* System::Net::CookieCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieCollection.get_IsOtherVersionSeen
bool System::Net::CookieCollection::get_IsOtherVersionSeen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::get_IsOtherVersionSeen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOtherVersionSeen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieCollection.Add
void System::Net::CookieCollection::Add(::System::Net::Cookie* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cookie);
}
// Autogenerated method: System.Net.CookieCollection.Add
void System::Net::CookieCollection::Add(::System::Net::CookieCollection* cookies) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookies)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cookies);
}
// Autogenerated method: System.Net.CookieCollection.CopyTo
void System::Net::CookieCollection::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Net.CookieCollection.TimeStamp
::System::DateTime System::Net::CookieCollection::TimeStamp(::System::Net::CookieCollection::Stamp how) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::TimeStamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TimeStamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(how)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, how);
}
// Autogenerated method: System.Net.CookieCollection.InternalAdd
int System::Net::CookieCollection::InternalAdd(::System::Net::Cookie* cookie, bool isStrict) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::InternalAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie), ::il2cpp_utils::ExtractType(isStrict)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cookie, isStrict);
}
// Autogenerated method: System.Net.CookieCollection.IndexOf
int System::Net::CookieCollection::IndexOf(::System::Net::Cookie* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cookie);
}
// Autogenerated method: System.Net.CookieCollection.RemoveAt
void System::Net::CookieCollection::RemoveAt(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: System.Net.CookieCollection.GetEnumerator
::System::Collections::IEnumerator* System::Net::CookieCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.CookieCollection/System.Net.Stamp
#include "System/Net/CookieCollection_Stamp.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.CookieCollection/System.Net.Stamp Check
::System::Net::CookieCollection::Stamp System::Net::CookieCollection::Stamp::_get_Check() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::_get_Check");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieCollection::Stamp>("System.Net", "CookieCollection/Stamp", "Check"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieCollection/System.Net.Stamp Check
void System::Net::CookieCollection::Stamp::_set_Check(::System::Net::CookieCollection::Stamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::_set_Check");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieCollection/Stamp", "Check", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieCollection/System.Net.Stamp Set
::System::Net::CookieCollection::Stamp System::Net::CookieCollection::Stamp::_get_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::_get_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieCollection::Stamp>("System.Net", "CookieCollection/Stamp", "Set"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieCollection/System.Net.Stamp Set
void System::Net::CookieCollection::Stamp::_set_Set(::System::Net::CookieCollection::Stamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::_set_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieCollection/Stamp", "Set", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieCollection/System.Net.Stamp SetToUnused
::System::Net::CookieCollection::Stamp System::Net::CookieCollection::Stamp::_get_SetToUnused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::_get_SetToUnused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieCollection::Stamp>("System.Net", "CookieCollection/Stamp", "SetToUnused"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieCollection/System.Net.Stamp SetToUnused
void System::Net::CookieCollection::Stamp::_set_SetToUnused(::System::Net::CookieCollection::Stamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::_set_SetToUnused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieCollection/Stamp", "SetToUnused", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.CookieCollection/System.Net.Stamp SetToMaxUsed
::System::Net::CookieCollection::Stamp System::Net::CookieCollection::Stamp::_get_SetToMaxUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::_get_SetToMaxUsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::CookieCollection::Stamp>("System.Net", "CookieCollection/Stamp", "SetToMaxUsed"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.CookieCollection/System.Net.Stamp SetToMaxUsed
void System::Net::CookieCollection::Stamp::_set_SetToMaxUsed(::System::Net::CookieCollection::Stamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::_set_SetToMaxUsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieCollection/Stamp", "SetToMaxUsed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::CookieCollection::Stamp::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::Stamp::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.CookieCollection/System.Net.CookieCollectionEnumerator
#include "System/Net/CookieCollection_CookieCollectionEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieCollection m_cookies
[[deprecated("Use field access instead!")]] ::System::Net::CookieCollection*& System::Net::CookieCollection::CookieCollectionEnumerator::dyn_m_cookies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CookieCollectionEnumerator::dyn_m_cookies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cookies"))->offset;
  return *reinterpret_cast<::System::Net::CookieCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_count
[[deprecated("Use field access instead!")]] int& System::Net::CookieCollection::CookieCollectionEnumerator::dyn_m_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CookieCollectionEnumerator::dyn_m_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_index
[[deprecated("Use field access instead!")]] int& System::Net::CookieCollection::CookieCollectionEnumerator::dyn_m_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CookieCollectionEnumerator::dyn_m_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_version
[[deprecated("Use field access instead!")]] int& System::Net::CookieCollection::CookieCollectionEnumerator::dyn_m_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CookieCollectionEnumerator::dyn_m_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.CookieCollection/System.Net.CookieCollectionEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Net::CookieCollection::CookieCollectionEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CookieCollectionEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieCollection/System.Net.CookieCollectionEnumerator.System.Collections.IEnumerator.MoveNext
bool System::Net::CookieCollection::CookieCollectionEnumerator::System_Collections_IEnumerator_MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CookieCollectionEnumerator::System.Collections.IEnumerator.MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.CookieCollection/System.Net.CookieCollectionEnumerator.System.Collections.IEnumerator.Reset
void System::Net::CookieCollection::CookieCollectionEnumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieCollection::CookieCollectionEnumerator::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.HeaderVariantInfo
#include "System/Net/HeaderVariantInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& System::Net::HeaderVariantInfo::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderVariantInfo::dyn_m_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieVariant m_variant
[[deprecated("Use field access instead!")]] ::System::Net::CookieVariant& System::Net::HeaderVariantInfo::dyn_m_variant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderVariantInfo::dyn_m_variant");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_variant"))->offset;
  return *reinterpret_cast<::System::Net::CookieVariant*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.HeaderVariantInfo.get_Name
::StringW System::Net::HeaderVariantInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderVariantInfo::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HeaderVariantInfo.get_Variant
::System::Net::CookieVariant System::Net::HeaderVariantInfo::get_Variant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HeaderVariantInfo::get_Variant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Variant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieVariant, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.HeaderVariantInfo..ctor
// ABORTED elsewhere.  System::Net::HeaderVariantInfo::HeaderVariantInfo(::StringW name, ::System::Net::CookieVariant variant)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.CookieContainer
#include "System/Net/CookieContainer.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Net.PathList
#include "System/Net/PathList.hpp"
// Including type: System.Net.Cookie
#include "System/Net/Cookie.hpp"
// Including type: System.Net.CookieCollection
#include "System/Net/CookieCollection.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.HeaderVariantInfo[] HeaderInfo
::ArrayW<::System::Net::HeaderVariantInfo> System::Net::CookieContainer::_get_HeaderInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::_get_HeaderInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Net::HeaderVariantInfo>>("System.Net", "CookieContainer", "HeaderInfo"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.HeaderVariantInfo[] HeaderInfo
void System::Net::CookieContainer::_set_HeaderInfo(::ArrayW<::System::Net::HeaderVariantInfo> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::_set_HeaderInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "CookieContainer", "HeaderInfo", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable m_domainTable
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Net::CookieContainer::dyn_m_domainTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::dyn_m_domainTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_domainTable"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_maxCookieSize
[[deprecated("Use field access instead!")]] int& System::Net::CookieContainer::dyn_m_maxCookieSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::dyn_m_maxCookieSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxCookieSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_maxCookies
[[deprecated("Use field access instead!")]] int& System::Net::CookieContainer::dyn_m_maxCookies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::dyn_m_maxCookies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxCookies"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_maxCookiesPerDomain
[[deprecated("Use field access instead!")]] int& System::Net::CookieContainer::dyn_m_maxCookiesPerDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::dyn_m_maxCookiesPerDomain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxCookiesPerDomain"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_count
[[deprecated("Use field access instead!")]] int& System::Net::CookieContainer::dyn_m_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::dyn_m_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_fqdnMyDomain
[[deprecated("Use field access instead!")]] ::StringW& System::Net::CookieContainer::dyn_m_fqdnMyDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::dyn_m_fqdnMyDomain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fqdnMyDomain"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.CookieContainer..cctor
void System::Net::CookieContainer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "CookieContainer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.CookieContainer.AddRemoveDomain
void System::Net::CookieContainer::AddRemoveDomain(::StringW key, ::System::Net::PathList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::AddRemoveDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRemoveDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Net.CookieContainer.Add
void System::Net::CookieContainer::Add(::System::Net::Cookie* cookie, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie), ::il2cpp_utils::ExtractType(throwOnError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cookie, throwOnError);
}
// Autogenerated method: System.Net.CookieContainer.AgeCookies
bool System::Net::CookieContainer::AgeCookies(::StringW domain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::AgeCookies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AgeCookies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(domain)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, domain);
}
// Autogenerated method: System.Net.CookieContainer.ExpireCollection
int System::Net::CookieContainer::ExpireCollection(::System::Net::CookieCollection* cc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::ExpireCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpireCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cc)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cc);
}
// Autogenerated method: System.Net.CookieContainer.IsLocalDomain
bool System::Net::CookieContainer::IsLocalDomain(::StringW host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::IsLocalDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocalDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.CookieContainer.CookieCutter
::System::Net::CookieCollection* System::Net::CookieContainer::CookieCutter(::System::Uri* uri, ::StringW headerName, ::StringW setCookieHeader, bool isThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::CookieCutter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CookieCutter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(headerName), ::il2cpp_utils::ExtractType(setCookieHeader), ::il2cpp_utils::ExtractType(isThrow)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieCollection*, false>(this, ___internal__method, uri, headerName, setCookieHeader, isThrow);
}
// Autogenerated method: System.Net.CookieContainer.InternalGetCookies
::System::Net::CookieCollection* System::Net::CookieContainer::InternalGetCookies(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::InternalGetCookies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetCookies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieCollection*, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.CookieContainer.BuildCookieCollectionFromDomainMatches
void System::Net::CookieContainer::BuildCookieCollectionFromDomainMatches(::System::Uri* uri, bool isSecure, int port, ::System::Net::CookieCollection* cookies, ::System::Collections::Generic::List_1<::StringW>* domainAttribute, bool matchOnlyPlainCookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::BuildCookieCollectionFromDomainMatches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildCookieCollectionFromDomainMatches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(isSecure), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(cookies), ::il2cpp_utils::ExtractType(domainAttribute), ::il2cpp_utils::ExtractType(matchOnlyPlainCookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri, isSecure, port, cookies, domainAttribute, matchOnlyPlainCookie);
}
// Autogenerated method: System.Net.CookieContainer.MergeUpdateCollections
void System::Net::CookieContainer::MergeUpdateCollections(::System::Net::CookieCollection* destination, ::System::Net::CookieCollection* source, int port, bool isSecure, bool isPlainOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::MergeUpdateCollections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MergeUpdateCollections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(isSecure), ::il2cpp_utils::ExtractType(isPlainOnly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destination, source, port, isSecure, isPlainOnly);
}
// Autogenerated method: System.Net.CookieContainer.GetCookieHeader
::StringW System::Net::CookieContainer::GetCookieHeader(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::GetCookieHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCookieHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.CookieContainer.GetCookieHeader
::StringW System::Net::CookieContainer::GetCookieHeader(::System::Uri* uri, ByRef<::StringW> optCookie2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieContainer::GetCookieHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCookieHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uri, byref(optCookie2));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.PathList
#include "System/Net/PathList.hpp"
// Including type: System.Net.PathList/System.Net.PathListComparer
#include "System/Net/PathList_PathListComparer.hpp"
// Including type: System.Collections.SortedList
#include "System/Collections/SortedList.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList m_list
[[deprecated("Use field access instead!")]] ::System::Collections::SortedList*& System::Net::PathList::dyn_m_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::dyn_m_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_list"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.PathList.get_Count
int System::Net::PathList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.PathList.get_Values
::System::Collections::ICollection* System::Net::PathList::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.PathList.get_Item
::Il2CppObject* System::Net::PathList::get_Item(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Net.PathList.set_Item
void System::Net::PathList::set_Item(::StringW s, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, value);
}
// Autogenerated method: System.Net.PathList.get_SyncRoot
::Il2CppObject* System::Net::PathList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::get_SyncRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.PathList.GetCookiesCount
int System::Net::PathList::GetCookiesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::GetCookiesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCookiesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.PathList.GetEnumerator
::System::Collections::IEnumerator* System::Net::PathList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.PathList/System.Net.PathListComparer
#include "System/Net/PathList_PathListComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Net.PathList/System.Net.PathListComparer StaticInstance
::System::Net::PathList::PathListComparer* System::Net::PathList::PathListComparer::_get_StaticInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::PathListComparer::_get_StaticInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::PathList::PathListComparer*>("System.Net", "PathList/PathListComparer", "StaticInstance"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Net.PathList/System.Net.PathListComparer StaticInstance
void System::Net::PathList::PathListComparer::_set_StaticInstance(::System::Net::PathList::PathListComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::PathListComparer::_set_StaticInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "PathList/PathListComparer", "StaticInstance", value));
}
// Autogenerated method: System.Net.PathList/System.Net.PathListComparer..cctor
void System::Net::PathList::PathListComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::PathListComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "PathList/PathListComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.PathList/System.Net.PathListComparer.System.Collections.IComparer.Compare
int System::Net::PathList::PathListComparer::System_Collections_IComparer_Compare(::Il2CppObject* ol, ::Il2CppObject* _or) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::PathList::PathListComparer::System.Collections.IComparer.Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IComparer.Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ol), ::il2cpp_utils::ExtractType(_or)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ol, _or);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.CookieException
#include "System/Net/CookieException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.CookieException.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::CookieException::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieException::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.CookieException.GetObjectData
void System::Net::CookieException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CookieException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FileWebRequest
#include "System/Net/FileWebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.LazyAsyncResult
#include "System/Net/LazyAsyncResult.hpp"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.WaitCallback s_GetRequestStreamCallback
::System::Threading::WaitCallback* System::Net::FileWebRequest::_get_s_GetRequestStreamCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::_get_s_GetRequestStreamCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::WaitCallback*>("System.Net", "FileWebRequest", "s_GetRequestStreamCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.WaitCallback s_GetRequestStreamCallback
void System::Net::FileWebRequest::_set_s_GetRequestStreamCallback(::System::Threading::WaitCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::_set_s_GetRequestStreamCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FileWebRequest", "s_GetRequestStreamCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.WaitCallback s_GetResponseCallback
::System::Threading::WaitCallback* System::Net::FileWebRequest::_get_s_GetResponseCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::_get_s_GetResponseCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::WaitCallback*>("System.Net", "FileWebRequest", "s_GetResponseCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.WaitCallback s_GetResponseCallback
void System::Net::FileWebRequest::_set_s_GetResponseCallback(::System::Threading::WaitCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::_set_s_GetResponseCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FileWebRequest", "s_GetResponseCallback", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_connectionGroupName
[[deprecated("Use field access instead!")]] ::StringW& System::Net::FileWebRequest::dyn_m_connectionGroupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_connectionGroupName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_connectionGroupName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_contentLength
[[deprecated("Use field access instead!")]] int64_t& System::Net::FileWebRequest::dyn_m_contentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_contentLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_contentLength"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ICredentials m_credentials
[[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& System::Net::FileWebRequest::dyn_m_credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_credentials"))->offset;
  return *reinterpret_cast<::System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileAccess m_fileAccess
[[deprecated("Use field access instead!")]] ::System::IO::FileAccess& System::Net::FileWebRequest::dyn_m_fileAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_fileAccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fileAccess"))->offset;
  return *reinterpret_cast<::System::IO::FileAccess*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebHeaderCollection m_headers
[[deprecated("Use field access instead!")]] ::System::Net::WebHeaderCollection*& System::Net::FileWebRequest::dyn_m_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_headers"))->offset;
  return *reinterpret_cast<::System::Net::WebHeaderCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_method
[[deprecated("Use field access instead!")]] ::StringW& System::Net::FileWebRequest::dyn_m_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_method"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_preauthenticate
[[deprecated("Use field access instead!")]] bool& System::Net::FileWebRequest::dyn_m_preauthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_preauthenticate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_preauthenticate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IWebProxy m_proxy
[[deprecated("Use field access instead!")]] ::System::Net::IWebProxy*& System::Net::FileWebRequest::dyn_m_proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_proxy"))->offset;
  return *reinterpret_cast<::System::Net::IWebProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent m_readerEvent
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& System::Net::FileWebRequest::dyn_m_readerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_readerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_readerEvent"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_readPending
[[deprecated("Use field access instead!")]] bool& System::Net::FileWebRequest::dyn_m_readPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_readPending");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_readPending"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebResponse m_response
[[deprecated("Use field access instead!")]] ::System::Net::WebResponse*& System::Net::FileWebRequest::dyn_m_response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_response");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_response"))->offset;
  return *reinterpret_cast<::System::Net::WebResponse**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream m_stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::FileWebRequest::dyn_m_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_syncHint
[[deprecated("Use field access instead!")]] bool& System::Net::FileWebRequest::dyn_m_syncHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_syncHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_syncHint"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_timeout
[[deprecated("Use field access instead!")]] int& System::Net::FileWebRequest::dyn_m_timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri m_uri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::FileWebRequest::dyn_m_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_writePending
[[deprecated("Use field access instead!")]] bool& System::Net::FileWebRequest::dyn_m_writePending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_writePending");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_writePending"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_writing
[[deprecated("Use field access instead!")]] bool& System::Net::FileWebRequest::dyn_m_writing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_writing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_writing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.LazyAsyncResult m_WriteAResult
[[deprecated("Use field access instead!")]] ::System::Net::LazyAsyncResult*& System::Net::FileWebRequest::dyn_m_WriteAResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_WriteAResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WriteAResult"))->offset;
  return *reinterpret_cast<::System::Net::LazyAsyncResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.LazyAsyncResult m_ReadAResult
[[deprecated("Use field access instead!")]] ::System::Net::LazyAsyncResult*& System::Net::FileWebRequest::dyn_m_ReadAResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_ReadAResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReadAResult"))->offset;
  return *reinterpret_cast<::System::Net::LazyAsyncResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Aborted
[[deprecated("Use field access instead!")]] int& System::Net::FileWebRequest::dyn_m_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::dyn_m_Aborted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Aborted"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.FileWebRequest.get_Aborted
bool System::Net::FileWebRequest::get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_Aborted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Aborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::FileWebRequest::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.FileWebRequest.CanGetRequestStream
bool System::Net::FileWebRequest::CanGetRequestStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::CanGetRequestStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanGetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.GetRequestStreamCallback
void System::Net::FileWebRequest::GetRequestStreamCallback(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::GetRequestStreamCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FileWebRequest", "GetRequestStreamCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Net.FileWebRequest.GetResponseCallback
void System::Net::FileWebRequest::GetResponseCallback(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::GetResponseCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FileWebRequest", "GetResponseCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Net.FileWebRequest.UnblockReader
void System::Net::FileWebRequest::UnblockReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::UnblockReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnblockReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_ConnectionGroupName
void System::Net::FileWebRequest::set_ConnectionGroupName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::set_ConnectionGroupName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConnectionGroupName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_ContentLength
int64_t System::Net::FileWebRequest::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_ContentLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_ContentLength
void System::Net::FileWebRequest::set_ContentLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::set_ContentLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_Credentials
::System::Net::ICredentials* System::Net::FileWebRequest::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_Credentials
void System::Net::FileWebRequest::set_Credentials(::System::Net::ICredentials* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::set_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_Headers
::System::Net::WebHeaderCollection* System::Net::FileWebRequest::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_Headers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.get_Method
::StringW System::Net::FileWebRequest::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_Method");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_Method
void System::Net::FileWebRequest::set_Method(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::set_Method");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.set_PreAuthenticate
void System::Net::FileWebRequest::set_PreAuthenticate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::set_PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_Proxy
::System::Net::IWebProxy* System::Net::FileWebRequest::get_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_Proxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_Proxy
void System::Net::FileWebRequest::set_Proxy(::System::Net::IWebProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::set_Proxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest.get_Timeout
int System::Net::FileWebRequest::get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_Timeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.get_RequestUri
::System::Uri* System::Net::FileWebRequest::get_RequestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_RequestUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.get_UseDefaultCredentials
bool System::Net::FileWebRequest::get_UseDefaultCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::get_UseDefaultCredentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.set_UseDefaultCredentials
void System::Net::FileWebRequest::set_UseDefaultCredentials(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::set_UseDefaultCredentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FileWebRequest..cctor
void System::Net::FileWebRequest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FileWebRequest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.GetObjectData
void System::Net::FileWebRequest::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.FileWebRequest.BeginGetRequestStream
::System::IAsyncResult* System::Net::FileWebRequest::BeginGetRequestStream(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::BeginGetRequestStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginGetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.FileWebRequest.BeginGetResponse
::System::IAsyncResult* System::Net::FileWebRequest::BeginGetResponse(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::BeginGetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginGetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.FileWebRequest.EndGetRequestStream
::System::IO::Stream* System::Net::FileWebRequest::EndGetRequestStream(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::EndGetRequestStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndGetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.FileWebRequest.EndGetResponse
::System::Net::WebResponse* System::Net::FileWebRequest::EndGetResponse(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::EndGetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndGetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebResponse*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.FileWebRequest.GetResponse
::System::Net::WebResponse* System::Net::FileWebRequest::GetResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::GetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebResponse*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebRequest.Abort
void System::Net::FileWebRequest::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequest::Abort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Abort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.FileWebRequestCreator
#include "System/Net/FileWebRequestCreator.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.FileWebRequestCreator.Create
::System::Net::WebRequest* System::Net::FileWebRequestCreator::Create(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebRequestCreator::Create");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebRequest*, false>(this, ___internal__method, uri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FileWebStream
#include "System/Net/FileWebStream.hpp"
// Including type: System.Net.FileWebRequest
#include "System/Net/FileWebRequest.hpp"
// Including type: System.Net.CloseExState
#include "System/Net/CloseExState.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.FileWebRequest m_request
[[deprecated("Use field access instead!")]] ::System::Net::FileWebRequest*& System::Net::FileWebStream::dyn_m_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::dyn_m_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_request"))->offset;
  return *reinterpret_cast<::System::Net::FileWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.FileWebStream.System.Net.ICloseEx.CloseEx
void System::Net::FileWebStream::System_Net_ICloseEx_CloseEx(::System::Net::CloseExState closeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::System.Net.ICloseEx.CloseEx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Net.ICloseEx.CloseEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(closeState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, closeState);
}
// Autogenerated method: System.Net.FileWebStream.CheckError
void System::Net::FileWebStream::CheckError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::CheckError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebStream.Dispose
void System::Net::FileWebStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.FileWebStream.Read
int System::Net::FileWebStream::Read(::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FileWebStream.Write
void System::Net::FileWebStream::Write(::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FileWebStream.BeginRead
::System::IAsyncResult* System::Net::FileWebStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int size, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, callback, state);
}
// Autogenerated method: System.Net.FileWebStream.EndRead
int System::Net::FileWebStream::EndRead(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ar);
}
// Autogenerated method: System.Net.FileWebStream.BeginWrite
::System::IAsyncResult* System::Net::FileWebStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int size, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, callback, state);
}
// Autogenerated method: System.Net.FileWebStream.EndWrite
void System::Net::FileWebStream::EndWrite(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.FileWebResponse
#include "System/Net/FileWebResponse.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.FileWebRequest
#include "System/Net/FileWebRequest.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Net.CloseExState
#include "System/Net/CloseExState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_closed
[[deprecated("Use field access instead!")]] bool& System::Net::FileWebResponse::dyn_m_closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::dyn_m_closed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_closed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_contentLength
[[deprecated("Use field access instead!")]] int64_t& System::Net::FileWebResponse::dyn_m_contentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::dyn_m_contentLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_contentLength"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileAccess m_fileAccess
[[deprecated("Use field access instead!")]] ::System::IO::FileAccess& System::Net::FileWebResponse::dyn_m_fileAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::dyn_m_fileAccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fileAccess"))->offset;
  return *reinterpret_cast<::System::IO::FileAccess*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebHeaderCollection m_headers
[[deprecated("Use field access instead!")]] ::System::Net::WebHeaderCollection*& System::Net::FileWebResponse::dyn_m_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::dyn_m_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_headers"))->offset;
  return *reinterpret_cast<::System::Net::WebHeaderCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream m_stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::FileWebResponse::dyn_m_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::dyn_m_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri m_uri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::FileWebResponse::dyn_m_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::dyn_m_uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.FileWebResponse.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::FileWebResponse::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.FileWebResponse.CheckDisposed
void System::Net::FileWebResponse::CheckDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::CheckDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebResponse.System.Net.ICloseEx.CloseEx
void System::Net::FileWebResponse::System_Net_ICloseEx_CloseEx(::System::Net::CloseExState closeState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::System.Net.ICloseEx.CloseEx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Net.ICloseEx.CloseEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(closeState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, closeState);
}
// Autogenerated method: System.Net.FileWebResponse.get_Headers
::System::Net::WebHeaderCollection* System::Net::FileWebResponse::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::get_Headers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebResponse.get_ResponseUri
::System::Uri* System::Net::FileWebResponse::get_ResponseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::get_ResponseUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResponseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebResponse.GetObjectData
void System::Net::FileWebResponse::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.FileWebResponse.Close
void System::Net::FileWebResponse::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FileWebResponse.GetResponseStream
::System::IO::Stream* System::Net::FileWebResponse::GetResponseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FileWebResponse::GetResponseStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.IWebProxy.get_Credentials
::System::Net::ICredentials* System::Net::IWebProxy::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IWebProxy::get_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.IWebProxy.GetProxy
::System::Uri* System::Net::IWebProxy::GetProxy(::System::Uri* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IWebProxy::GetProxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.Net.IWebProxy.IsBypassed
bool System::Net::IWebProxy::IsBypassed(::System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::IWebProxy::IsBypassed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBypassed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebProxy
#include "System/Net/WebProxy.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Net.AutoWebProxyScriptEngine
#include "System/Net/AutoWebProxyScriptEngine.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _UseRegistry
[[deprecated("Use field access instead!")]] bool& System::Net::WebProxy::dyn__UseRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn__UseRegistry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_UseRegistry"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _BypassOnLocal
[[deprecated("Use field access instead!")]] bool& System::Net::WebProxy::dyn__BypassOnLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn__BypassOnLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_BypassOnLocal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableAutoproxy
[[deprecated("Use field access instead!")]] bool& System::Net::WebProxy::dyn_m_EnableAutoproxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn_m_EnableAutoproxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableAutoproxy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri _ProxyAddress
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::WebProxy::dyn__ProxyAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn__ProxyAddress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ProxyAddress"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _BypassList
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Net::WebProxy::dyn__BypassList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn__BypassList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_BypassList"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ICredentials _Credentials
[[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& System::Net::WebProxy::dyn__Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn__Credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Credentials"))->offset;
  return *reinterpret_cast<::System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.Regex[] _RegExBypassList
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Text::RegularExpressions::Regex*>& System::Net::WebProxy::dyn__RegExBypassList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn__RegExBypassList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_RegExBypassList"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Text::RegularExpressions::Regex*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _ProxyHostAddresses
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Net::WebProxy::dyn__ProxyHostAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn__ProxyHostAddresses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ProxyHostAddresses"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.AutoWebProxyScriptEngine m_ScriptEngine
[[deprecated("Use field access instead!")]] ::System::Net::AutoWebProxyScriptEngine*& System::Net::WebProxy::dyn_m_ScriptEngine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::dyn_m_ScriptEngine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScriptEngine"))->offset;
  return *reinterpret_cast<::System::Net::AutoWebProxyScriptEngine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.WebProxy.get_Credentials
::System::Net::ICredentials* System::Net::WebProxy::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::get_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.get_UseDefaultCredentials
bool System::Net::WebProxy::get_UseDefaultCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::get_UseDefaultCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.set_UseDefaultCredentials
void System::Net::WebProxy::set_UseDefaultCredentials(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::set_UseDefaultCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebProxy.get_ScriptEngine
::System::Net::AutoWebProxyScriptEngine* System::Net::WebProxy::get_ScriptEngine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::get_ScriptEngine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ScriptEngine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::AutoWebProxyScriptEngine*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.GetProxy
::System::Uri* System::Net::WebProxy::GetProxy(::System::Uri* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::GetProxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.Net.WebProxy.UpdateRegExList
void System::Net::WebProxy::UpdateRegExList(bool canThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::UpdateRegExList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRegExList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canThrow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canThrow);
}
// Autogenerated method: System.Net.WebProxy.IsMatchInBypassList
bool System::Net::WebProxy::IsMatchInBypassList(::System::Uri* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::IsMatchInBypassList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatchInBypassList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Net.WebProxy.IsLocal
bool System::Net::WebProxy::IsLocal(::System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::IsLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.WebProxy.IsLocalInProxyHash
bool System::Net::WebProxy::IsLocalInProxyHash(::System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::IsLocalInProxyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLocalInProxyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.WebProxy.IsBypassed
bool System::Net::WebProxy::IsBypassed(::System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::IsBypassed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBypassed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.WebProxy.IsBypassedManual
bool System::Net::WebProxy::IsBypassedManual(::System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::IsBypassedManual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBypassedManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::WebProxy::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.WebProxy.GetObjectData
void System::Net::WebProxy::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.WebProxy.CreateDefaultProxy
::System::Net::IWebProxy* System::Net::WebProxy::CreateDefaultProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::CreateDefaultProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxy", "CreateDefaultProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.UnsafeUpdateFromRegistry
void System::Net::WebProxy::UnsafeUpdateFromRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::UnsafeUpdateFromRegistry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsafeUpdateFromRegistry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.GetProxyAuto
bool System::Net::WebProxy::GetProxyAuto(::System::Uri* destination, ByRef<::System::Uri*> proxyUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::GetProxyAuto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxyAuto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<::System::Uri*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(proxyUri));
}
// Autogenerated method: System.Net.WebProxy.IsBypassedAuto
bool System::Net::WebProxy::IsBypassedAuto(::System::Uri* destination, ByRef<bool> isBypassed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::IsBypassedAuto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBypassedAuto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(isBypassed));
}
// Autogenerated method: System.Net.WebProxy.AreAllBypassed
bool System::Net::WebProxy::AreAllBypassed(::System::Collections::Generic::IEnumerable_1<::StringW>* proxies, bool checkFirstOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::AreAllBypassed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxy", "AreAllBypassed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxies), ::il2cpp_utils::ExtractType(checkFirstOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxies, checkFirstOnly);
}
// Autogenerated method: System.Net.WebProxy.ProxyUri
::System::Uri* System::Net::WebProxy::ProxyUri(::StringW proxyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::WebProxy::ProxyUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "WebProxy", "ProxyUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.AutoWebProxyScriptEngine
#include "System/Net/AutoWebProxyScriptEngine.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.AutoWebProxyScriptEngine.GetProxies
bool System::Net::AutoWebProxyScriptEngine::GetProxies(::System::Uri* destination, ByRef<::System::Collections::Generic::IList_1<::StringW>*> proxyList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AutoWebProxyScriptEngine::GetProxies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::IList_1<::StringW>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(proxyList));
}
// Autogenerated method: System.Net.AutoWebProxyScriptEngine.GetProxies
bool System::Net::AutoWebProxyScriptEngine::GetProxies(::System::Uri* destination, ByRef<::System::Collections::Generic::IList_1<::StringW>*> proxyList, ByRef<int> syncStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AutoWebProxyScriptEngine::GetProxies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::IList_1<::StringW>*&>(), ::il2cpp_utils::ExtractType(syncStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destination, byref(proxyList), byref(syncStatus));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.UnsafeNclNativeMethods/System.Net.HttpApi
#include "System/Net/UnsafeNclNativeMethods_HttpApi.hpp"
// Including type: System.Net.UnsafeNclNativeMethods/System.Net.HttpApi/System.Net.HTTP_REQUEST_HEADER_ID
#include "System/Net/UnsafeNclNativeMethods_HttpApi_HTTP_REQUEST_HEADER_ID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] m_Strings
::ArrayW<::StringW> System::Net::UnsafeNclNativeMethods::HttpApi::_get_m_Strings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::_get_m_Strings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Net", "UnsafeNclNativeMethods/HttpApi", "m_Strings"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] m_Strings
void System::Net::UnsafeNclNativeMethods::HttpApi::_set_m_Strings(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::_set_m_Strings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi", "m_Strings", value));
}
// Autogenerated method: System.Net.UnsafeNclNativeMethods/System.Net.HttpApi..cctor
void System::Net::UnsafeNclNativeMethods::HttpApi::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/HttpApi", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.UnsafeNclNativeMethods/System.Net.HttpApi/System.Net.HTTP_REQUEST_HEADER_ID
#include "System/Net/UnsafeNclNativeMethods_HttpApi_HTTP_REQUEST_HEADER_ID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] m_Strings
::ArrayW<::StringW> System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::_get_m_Strings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::_get_m_Strings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID", "m_Strings"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] m_Strings
void System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::_set_m_Strings(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::_set_m_Strings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID", "m_Strings", value));
}
// Autogenerated method: System.Net.UnsafeNclNativeMethods/System.Net.HttpApi/System.Net.HTTP_REQUEST_HEADER_ID..cctor
void System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.UnsafeNclNativeMethods/System.Net.HttpApi/System.Net.HTTP_REQUEST_HEADER_ID.ToString
::StringW System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::ToString(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::HttpApi::HTTP_REQUEST_HEADER_ID::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/HttpApi/HTTP_REQUEST_HEADER_ID", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.UnsafeNclNativeMethods/System.Net.SecureStringHelper
#include "System/Net/UnsafeNclNativeMethods_SecureStringHelper.hpp"
// Including type: System.Security.SecureString
#include "System/Security/SecureString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.UnsafeNclNativeMethods/System.Net.SecureStringHelper.CreateString
::StringW System::Net::UnsafeNclNativeMethods::SecureStringHelper::CreateString(::System::Security::SecureString* secureString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::SecureStringHelper::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/SecureStringHelper", "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secureString)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, secureString);
}
// Autogenerated method: System.Net.UnsafeNclNativeMethods/System.Net.SecureStringHelper.CreateSecureString
::System::Security::SecureString* System::Net::UnsafeNclNativeMethods::SecureStringHelper::CreateSecureString(::StringW plainString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::UnsafeNclNativeMethods::SecureStringHelper::CreateSecureString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "UnsafeNclNativeMethods/SecureStringHelper", "CreateSecureString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plainString)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecureString*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, plainString);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Logging
#include "System/Net/Logging.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Boolean On
bool System::Net::Logging::_get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::_get_On");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net", "Logging", "On"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean On
void System::Net::Logging::_set_On(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Logging::_set_On");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "Logging", "On", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ServerCertValidationCallback
#include "System/Net/ServerCertValidationCallback.hpp"
// Including type: System.Net.ServerCertValidationCallback/System.Net.CallbackContext
#include "System/Net/ServerCertValidationCallback_CallbackContext.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Security.RemoteCertificateValidationCallback m_ValidationCallback
[[deprecated("Use field access instead!")]] ::System::Net::Security::RemoteCertificateValidationCallback*& System::Net::ServerCertValidationCallback::dyn_m_ValidationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::dyn_m_ValidationCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ValidationCallback"))->offset;
  return *reinterpret_cast<::System::Net::Security::RemoteCertificateValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.ExecutionContext m_Context
[[deprecated("Use field access instead!")]] ::System::Threading::ExecutionContext*& System::Net::ServerCertValidationCallback::dyn_m_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::dyn_m_Context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Context"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.ServerCertValidationCallback.Callback
void System::Net::ServerCertValidationCallback::Callback(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::Callback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Callback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Net.ServerCertValidationCallback.Invoke
bool System::Net::ServerCertValidationCallback::Invoke(::Il2CppObject* request, ::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::System::Security::Cryptography::X509Certificates::X509Chain* chain, ::System::Net::Security::SslPolicyErrors sslPolicyErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(sslPolicyErrors)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, request, certificate, chain, sslPolicyErrors);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ServerCertValidationCallback/System.Net.CallbackContext
#include "System/Net/ServerCertValidationCallback_CallbackContext.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Object request
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::ServerCertValidationCallback::CallbackContext::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::CallbackContext::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Security.Cryptography.X509Certificates.X509Certificate certificate
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& System::Net::ServerCertValidationCallback::CallbackContext::dyn_certificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::CallbackContext::dyn_certificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificate"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Security.Cryptography.X509Certificates.X509Chain chain
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Chain*& System::Net::ServerCertValidationCallback::CallbackContext::dyn_chain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::CallbackContext::dyn_chain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chain"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Chain**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Net.Security.SslPolicyErrors sslPolicyErrors
[[deprecated("Use field access instead!")]] ::System::Net::Security::SslPolicyErrors& System::Net::ServerCertValidationCallback::CallbackContext::dyn_sslPolicyErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::CallbackContext::dyn_sslPolicyErrors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sslPolicyErrors"))->offset;
  return *reinterpret_cast<::System::Net::Security::SslPolicyErrors*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean result
[[deprecated("Use field access instead!")]] bool& System::Net::ServerCertValidationCallback::CallbackContext::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ServerCertValidationCallback::CallbackContext::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.AuthenticationManager
#include "System/Net/AuthenticationManager.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Net.ICredentialPolicy
#include "System/Net/ICredentialPolicy.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.ArrayList modules
::System::Collections::ArrayList* System::Net::AuthenticationManager::_get_modules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::_get_modules");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::ArrayList*>("System.Net", "AuthenticationManager", "modules"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.ArrayList modules
void System::Net::AuthenticationManager::_set_modules(::System::Collections::ArrayList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::_set_modules");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "AuthenticationManager", "modules", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object locker
::Il2CppObject* System::Net::AuthenticationManager::_get_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::_get_locker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Net", "AuthenticationManager", "locker"));
}
// Autogenerated static field setter
// Set static field: static private System.Object locker
void System::Net::AuthenticationManager::_set_locker(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::_set_locker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "AuthenticationManager", "locker", value));
}
// Autogenerated static field getter
// Get static field: static private System.Net.ICredentialPolicy credential_policy
::System::Net::ICredentialPolicy* System::Net::AuthenticationManager::_get_credential_policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::_get_credential_policy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::ICredentialPolicy*>("System.Net", "AuthenticationManager", "credential_policy"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.ICredentialPolicy credential_policy
void System::Net::AuthenticationManager::_set_credential_policy(::System::Net::ICredentialPolicy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::_set_credential_policy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "AuthenticationManager", "credential_policy", value));
}
// Autogenerated method: System.Net.AuthenticationManager..cctor
void System::Net::AuthenticationManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.AuthenticationManager.EnsureModules
void System::Net::AuthenticationManager::EnsureModules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::EnsureModules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "EnsureModules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.AuthenticationManager.Authenticate
::System::Net::Authorization* System::Net::AuthenticationManager::Authenticate(::StringW challenge, ::System::Net::WebRequest* request, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::Authenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challenge, request, credentials);
}
// Autogenerated method: System.Net.AuthenticationManager.DoAuthenticate
::System::Net::Authorization* System::Net::AuthenticationManager::DoAuthenticate(::StringW challenge, ::System::Net::WebRequest* request, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::DoAuthenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "DoAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challenge, request, credentials);
}
// Autogenerated method: System.Net.AuthenticationManager.PreAuthenticate
::System::Net::Authorization* System::Net::AuthenticationManager::PreAuthenticate(::System::Net::WebRequest* request, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationManager::PreAuthenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "AuthenticationManager", "PreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, request, credentials);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.BasicClient
#include "System/Net/BasicClient.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.BasicClient.get_AuthenticationType
::StringW System::Net::BasicClient::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BasicClient::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.BasicClient.Authenticate
::System::Net::Authorization* System::Net::BasicClient::Authenticate(::StringW challenge, ::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BasicClient::Authenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, challenge, webRequest, credentials);
}
// Autogenerated method: System.Net.BasicClient.GetBytes
::ArrayW<uint8_t> System::Net::BasicClient::GetBytes(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BasicClient::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "BasicClient", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Net.BasicClient.InternalAuthenticate
::System::Net::Authorization* System::Net::BasicClient::InternalAuthenticate(::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BasicClient::InternalAuthenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "BasicClient", "InternalAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, webRequest, credentials);
}
// Autogenerated method: System.Net.BasicClient.PreAuthenticate
::System::Net::Authorization* System::Net::BasicClient::PreAuthenticate(::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BasicClient::PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, webRequest, credentials);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.BindIPEndPoint
#include "System/Net/BindIPEndPoint.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.ServicePoint
#include "System/Net/ServicePoint.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.BindIPEndPoint.Invoke
::System::Net::IPEndPoint* System::Net::BindIPEndPoint::Invoke(::System::Net::ServicePoint* servicePoint, ::System::Net::IPEndPoint* remoteEndPoint, int retryCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BindIPEndPoint::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(servicePoint), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(retryCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPEndPoint*, false>(this, ___internal__method, servicePoint, remoteEndPoint, retryCount);
}
// Autogenerated method: System.Net.BindIPEndPoint.BeginInvoke
::System::IAsyncResult* System::Net::BindIPEndPoint::BeginInvoke(::System::Net::ServicePoint* servicePoint, ::System::Net::IPEndPoint* remoteEndPoint, int retryCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BindIPEndPoint::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(servicePoint), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(retryCount), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, servicePoint, remoteEndPoint, retryCount, callback, object);
}
// Autogenerated method: System.Net.BindIPEndPoint.EndInvoke
::System::Net::IPEndPoint* System::Net::BindIPEndPoint::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::BindIPEndPoint::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPEndPoint*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ChunkedInputStream
#include "System/Net/ChunkedInputStream.hpp"
// Including type: System.Net.ChunkedInputStream/System.Net.ReadBufferState
#include "System/Net/ChunkedInputStream_ReadBufferState.hpp"
// Including type: System.Net.MonoChunkStream
#include "System/Net/MonoChunkStream.hpp"
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::ChunkedInputStream::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.MonoChunkStream decoder
[[deprecated("Use field access instead!")]] ::System::Net::MonoChunkStream*& System::Net::ChunkedInputStream::dyn_decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::dyn_decoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decoder"))->offset;
  return *reinterpret_cast<::System::Net::MonoChunkStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpListenerContext context
[[deprecated("Use field access instead!")]] ::System::Net::HttpListenerContext*& System::Net::ChunkedInputStream::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::System::Net::HttpListenerContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean no_more_data
[[deprecated("Use field access instead!")]] bool& System::Net::ChunkedInputStream::dyn_no_more_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::dyn_no_more_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "no_more_data"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.ChunkedInputStream.OnRead
void System::Net::ChunkedInputStream::OnRead(::System::IAsyncResult* base_ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::OnRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(base_ares)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, base_ares);
}
// Autogenerated method: System.Net.ChunkedInputStream.Read
int System::Net::ChunkedInputStream::Read(ByRef<::ArrayW<uint8_t>> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(buffer), offset, count);
}
// Autogenerated method: System.Net.ChunkedInputStream.BeginRead
::System::IAsyncResult* System::Net::ChunkedInputStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* cback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, cback, state);
}
// Autogenerated method: System.Net.ChunkedInputStream.EndRead
int System::Net::ChunkedInputStream::EndRead(::System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.ChunkedInputStream.Close
void System::Net::ChunkedInputStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.ChunkedInputStream/System.Net.ReadBufferState
#include "System/Net/ChunkedInputStream_ReadBufferState.hpp"
// Including type: System.Net.HttpStreamAsyncResult
#include "System/Net/HttpStreamAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte[] Buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::ChunkedInputStream::ReadBufferState::dyn_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::ReadBufferState::dyn_Buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Offset
[[deprecated("Use field access instead!")]] int& System::Net::ChunkedInputStream::ReadBufferState::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::ReadBufferState::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Count
[[deprecated("Use field access instead!")]] int& System::Net::ChunkedInputStream::ReadBufferState::dyn_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::ReadBufferState::dyn_Count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 InitialCount
[[deprecated("Use field access instead!")]] int& System::Net::ChunkedInputStream::ReadBufferState::dyn_InitialCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::ReadBufferState::dyn_InitialCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitialCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.HttpStreamAsyncResult Ares
[[deprecated("Use field access instead!")]] ::System::Net::HttpStreamAsyncResult*& System::Net::ChunkedInputStream::ReadBufferState::dyn_Ares() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::ChunkedInputStream::ReadBufferState::dyn_Ares");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ares"))->offset;
  return *reinterpret_cast<::System::Net::HttpStreamAsyncResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.DecompressionMethods
#include "System/Net/DecompressionMethods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.DecompressionMethods None
::System::Net::DecompressionMethods System::Net::DecompressionMethods::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DecompressionMethods::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::DecompressionMethods>("System.Net", "DecompressionMethods", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.DecompressionMethods None
void System::Net::DecompressionMethods::_set_None(::System::Net::DecompressionMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DecompressionMethods::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DecompressionMethods", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.DecompressionMethods GZip
::System::Net::DecompressionMethods System::Net::DecompressionMethods::_get_GZip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DecompressionMethods::_get_GZip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::DecompressionMethods>("System.Net", "DecompressionMethods", "GZip"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.DecompressionMethods GZip
void System::Net::DecompressionMethods::_set_GZip(::System::Net::DecompressionMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DecompressionMethods::_set_GZip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DecompressionMethods", "GZip", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.DecompressionMethods Deflate
::System::Net::DecompressionMethods System::Net::DecompressionMethods::_get_Deflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DecompressionMethods::_get_Deflate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::DecompressionMethods>("System.Net", "DecompressionMethods", "Deflate"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.DecompressionMethods Deflate
void System::Net::DecompressionMethods::_set_Deflate(::System::Net::DecompressionMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DecompressionMethods::_set_Deflate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DecompressionMethods", "Deflate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::DecompressionMethods::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DecompressionMethods::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.DigestHeaderParser
#include "System/Net/DigestHeaderParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] keywords
::ArrayW<::StringW> System::Net::DigestHeaderParser::_get_keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::_get_keywords");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Net", "DigestHeaderParser", "keywords"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] keywords
void System::Net::DigestHeaderParser::_set_keywords(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::_set_keywords");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DigestHeaderParser", "keywords", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String header
[[deprecated("Use field access instead!")]] ::StringW& System::Net::DigestHeaderParser::dyn_header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::dyn_header");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "header"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 length
[[deprecated("Use field access instead!")]] int& System::Net::DigestHeaderParser::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pos
[[deprecated("Use field access instead!")]] int& System::Net::DigestHeaderParser::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] values
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Net::DigestHeaderParser::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.DigestHeaderParser.get_Realm
::StringW System::Net::DigestHeaderParser::get_Realm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::get_Realm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Realm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.get_Opaque
::StringW System::Net::DigestHeaderParser::get_Opaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::get_Opaque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Opaque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.get_Nonce
::StringW System::Net::DigestHeaderParser::get_Nonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::get_Nonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Nonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.get_Algorithm
::StringW System::Net::DigestHeaderParser::get_Algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::get_Algorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Algorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.get_QOP
::StringW System::Net::DigestHeaderParser::get_QOP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::get_QOP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QOP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser..cctor
void System::Net::DigestHeaderParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "DigestHeaderParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.Parse
bool System::Net::DigestHeaderParser::Parse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.SkipWhitespace
void System::Net::DigestHeaderParser::SkipWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::SkipWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.GetKey
::StringW System::Net::DigestHeaderParser::GetKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestHeaderParser.GetKeywordAndValue
bool System::Net::DigestHeaderParser::GetKeywordAndValue(ByRef<::StringW> key, ByRef<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestHeaderParser::GetKeywordAndValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeywordAndValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(key), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.DigestSession
#include "System/Net/DigestSession.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
// Including type: System.Net.DigestHeaderParser
#include "System/Net/DigestHeaderParser.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator rng
::System::Security::Cryptography::RandomNumberGenerator* System::Net::DigestSession::_get_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::_get_rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RandomNumberGenerator*>("System.Net", "DigestSession", "rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator rng
void System::Net::DigestSession::_set_rng(::System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::_set_rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DigestSession", "rng", value));
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime lastUse
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Net::DigestSession::dyn_lastUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::dyn_lastUse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastUse"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _nc
[[deprecated("Use field access instead!")]] int& System::Net::DigestSession::dyn__nc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::dyn__nc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nc"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.HashAlgorithm hash
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::HashAlgorithm*& System::Net::DigestSession::dyn_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::dyn_hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::HashAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.DigestHeaderParser parser
[[deprecated("Use field access instead!")]] ::System::Net::DigestHeaderParser*& System::Net::DigestSession::dyn_parser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::dyn_parser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parser"))->offset;
  return *reinterpret_cast<::System::Net::DigestHeaderParser**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _cnonce
[[deprecated("Use field access instead!")]] ::StringW& System::Net::DigestSession::dyn__cnonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::dyn__cnonce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cnonce"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.DigestSession.get_Algorithm
::StringW System::Net::DigestSession::get_Algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::get_Algorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Algorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_Realm
::StringW System::Net::DigestSession::get_Realm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::get_Realm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Realm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_Nonce
::StringW System::Net::DigestSession::get_Nonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::get_Nonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Nonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_Opaque
::StringW System::Net::DigestSession::get_Opaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::get_Opaque");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Opaque", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_QOP
::StringW System::Net::DigestSession::get_QOP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::get_QOP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QOP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_CNonce
::StringW System::Net::DigestSession::get_CNonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::get_CNonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CNonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.get_LastUse
::System::DateTime System::Net::DigestSession::get_LastUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::get_LastUse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastUse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestSession..cctor
void System::Net::DigestSession::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "DigestSession", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.DigestSession.Parse
bool System::Net::DigestSession::Parse(::StringW challenge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, challenge);
}
// Autogenerated method: System.Net.DigestSession.HashToHexString
::StringW System::Net::DigestSession::HashToHexString(::StringW toBeHashed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::HashToHexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashToHexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toBeHashed)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, toBeHashed);
}
// Autogenerated method: System.Net.DigestSession.HA1
::StringW System::Net::DigestSession::HA1(::StringW username, ::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::HA1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HA1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(username), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, username, password);
}
// Autogenerated method: System.Net.DigestSession.HA2
::StringW System::Net::DigestSession::HA2(::System::Net::HttpWebRequest* webRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::HA2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HA2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, webRequest);
}
// Autogenerated method: System.Net.DigestSession.Response
::StringW System::Net::DigestSession::Response(::StringW username, ::StringW password, ::System::Net::HttpWebRequest* webRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::Response");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Response", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(username), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(webRequest)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, username, password, webRequest);
}
// Autogenerated method: System.Net.DigestSession.Authenticate
::System::Net::Authorization* System::Net::DigestSession::Authenticate(::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestSession::Authenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, webRequest, credentials);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.DigestClient
#include "System/Net/DigestClient.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Hashtable cache
::System::Collections::Hashtable* System::Net::DigestClient::_get_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::_get_cache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Net", "DigestClient", "cache"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Hashtable cache
void System::Net::DigestClient::_set_cache(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::_set_cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "DigestClient", "cache", value));
}
// Autogenerated method: System.Net.DigestClient.get_Cache
::System::Collections::Hashtable* System::Net::DigestClient::get_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::get_Cache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "DigestClient", "get_Cache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.DigestClient.get_AuthenticationType
::StringW System::Net::DigestClient::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.DigestClient..cctor
void System::Net::DigestClient::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "DigestClient", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.DigestClient.CheckExpired
void System::Net::DigestClient::CheckExpired(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::CheckExpired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "DigestClient", "CheckExpired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, count);
}
// Autogenerated method: System.Net.DigestClient.Authenticate
::System::Net::Authorization* System::Net::DigestClient::Authenticate(::StringW challenge, ::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::Authenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, challenge, webRequest, credentials);
}
// Autogenerated method: System.Net.DigestClient.PreAuthenticate
::System::Net::Authorization* System::Net::DigestClient::PreAuthenticate(::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::DigestClient::PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, webRequest, credentials);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Dns
#include "System/Net/Dns.hpp"
// Including type: System.Net.Dns/System.Net.GetHostAddressesCallback
#include "System/Net/Dns_GetHostAddressesCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.IPHostEntry
#include "System/Net/IPHostEntry.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Dns.BeginGetHostAddresses
::System::IAsyncResult* System::Net::Dns::BeginGetHostAddresses(::StringW hostNameOrAddress, ::System::AsyncCallback* requestCallback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::BeginGetHostAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "BeginGetHostAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostNameOrAddress), ::il2cpp_utils::ExtractType(requestCallback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostNameOrAddress, requestCallback, state);
}
// Autogenerated method: System.Net.Dns.EndGetHostAddresses
::ArrayW<::System::Net::IPAddress*> System::Net::Dns::EndGetHostAddresses(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::EndGetHostAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "EndGetHostAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::IPAddress*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Dns.GetHostByName_internal
bool System::Net::Dns::GetHostByName_internal(::StringW host, ByRef<::StringW> h_name, ByRef<::ArrayW<::StringW>> h_aliases, ByRef<::ArrayW<::StringW>> h_addr_list, int hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostByName_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostByName_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::StringW>&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::StringW>&>(), ::il2cpp_utils::ExtractType(hint)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, byref(h_name), byref(h_aliases), byref(h_addr_list), hint);
}
// Autogenerated method: System.Net.Dns.GetHostByAddr_internal
bool System::Net::Dns::GetHostByAddr_internal(::StringW addr, ByRef<::StringW> h_name, ByRef<::ArrayW<::StringW>> h_aliases, ByRef<::ArrayW<::StringW>> h_addr_list, int hint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostByAddr_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostByAddr_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(addr), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::StringW>&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::StringW>&>(), ::il2cpp_utils::ExtractType(hint)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, addr, byref(h_name), byref(h_aliases), byref(h_addr_list), hint);
}
// Autogenerated method: System.Net.Dns.GetHostName_internal
bool System::Net::Dns::GetHostName_internal(ByRef<::StringW> h_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostName_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostName_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(h_name));
}
// Autogenerated method: System.Net.Dns.Error_11001
void System::Net::Dns::Error_11001(::StringW hostName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::Error_11001");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "Error_11001", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostName);
}
// Autogenerated method: System.Net.Dns.hostent_to_IPHostEntry
::System::Net::IPHostEntry* System::Net::Dns::hostent_to_IPHostEntry(::StringW originalHostName, ::StringW h_name, ::ArrayW<::StringW> h_aliases, ::ArrayW<::StringW> h_addrlist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::hostent_to_IPHostEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "hostent_to_IPHostEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalHostName), ::il2cpp_utils::ExtractType(h_name), ::il2cpp_utils::ExtractType(h_aliases), ::il2cpp_utils::ExtractType(h_addrlist)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, originalHostName, h_name, h_aliases, h_addrlist);
}
// Autogenerated method: System.Net.Dns.GetHostByAddressFromString
::System::Net::IPHostEntry* System::Net::Dns::GetHostByAddressFromString(::StringW address, bool parse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostByAddressFromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostByAddressFromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(parse)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address, parse);
}
// Autogenerated method: System.Net.Dns.GetHostEntry
::System::Net::IPHostEntry* System::Net::Dns::GetHostEntry(::StringW hostNameOrAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostNameOrAddress)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostNameOrAddress);
}
// Autogenerated method: System.Net.Dns.GetHostEntry
::System::Net::IPHostEntry* System::Net::Dns::GetHostEntry(::System::Net::IPAddress* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address);
}
// Autogenerated method: System.Net.Dns.GetHostAddresses
::ArrayW<::System::Net::IPAddress*> System::Net::Dns::GetHostAddresses(::StringW hostNameOrAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostNameOrAddress)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::IPAddress*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostNameOrAddress);
}
// Autogenerated method: System.Net.Dns.GetHostByName
::System::Net::IPHostEntry* System::Net::Dns::GetHostByName(::StringW hostName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPHostEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostName);
}
// Autogenerated method: System.Net.Dns.GetHostName
::StringW System::Net::Dns::GetHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Dns.GetHostAddressesAsync
::System::Threading::Tasks::Task_1<::ArrayW<::System::Net::IPAddress*>>* System::Net::Dns::GetHostAddressesAsync(::StringW hostNameOrAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostAddressesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "Dns", "GetHostAddressesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostNameOrAddress)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::ArrayW<::System::Net::IPAddress*>>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostNameOrAddress);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Dns/System.Net.GetHostAddressesCallback
#include "System/Net/Dns_GetHostAddressesCallback.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Dns/System.Net.GetHostAddressesCallback.Invoke
::ArrayW<::System::Net::IPAddress*> System::Net::Dns::GetHostAddressesCallback::Invoke(::StringW hostName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostAddressesCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostName)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::IPAddress*>, false>(this, ___internal__method, hostName);
}
// Autogenerated method: System.Net.Dns/System.Net.GetHostAddressesCallback.BeginInvoke
::System::IAsyncResult* System::Net::Dns::GetHostAddressesCallback::BeginInvoke(::StringW hostName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostAddressesCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostName), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, hostName, callback, object);
}
// Autogenerated method: System.Net.Dns/System.Net.GetHostAddressesCallback.EndInvoke
::ArrayW<::System::Net::IPAddress*> System::Net::Dns::GetHostAddressesCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Dns::GetHostAddressesCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::IPAddress*>, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.EndPointListener
#include "System/Net/EndPointListener.hpp"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Net.HttpConnection
#include "System/Net/HttpConnection.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.Sockets.SocketAsyncEventArgs
#include "System/Net/Sockets/SocketAsyncEventArgs.hpp"
// Including type: System.Net.HttpListenerContext
#include "System/Net/HttpListenerContext.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.ListenerPrefix
#include "System/Net/ListenerPrefix.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpListener listener
[[deprecated("Use field access instead!")]] ::System::Net::HttpListener*& System::Net::EndPointListener::dyn_listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_listener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listener"))->offset;
  return *reinterpret_cast<::System::Net::HttpListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IPEndPoint endpoint
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& System::Net::EndPointListener::dyn_endpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_endpoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endpoint"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.Socket sock
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& System::Net::EndPointListener::dyn_sock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_sock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sock"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::Socket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable prefixes
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Net::EndPointListener::dyn_prefixes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_prefixes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefixes"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList unhandled
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Net::EndPointListener::dyn_unhandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_unhandled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unhandled"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList all
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Net::EndPointListener::dyn_all() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_all");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "all"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate cert
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& System::Net::EndPointListener::dyn_cert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_cert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cert"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean secure
[[deprecated("Use field access instead!")]] bool& System::Net::EndPointListener::dyn_secure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_secure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secure"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Net.HttpConnection,System.Net.HttpConnection> unregistered
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Net::HttpConnection*, ::System::Net::HttpConnection*>*& System::Net::EndPointListener::dyn_unregistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::dyn_unregistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unregistered"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Net::HttpConnection*, ::System::Net::HttpConnection*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.EndPointListener.get_Listener
::System::Net::HttpListener* System::Net::EndPointListener::get_Listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::get_Listener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Listener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpListener*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndPointListener.Accept
void System::Net::EndPointListener::Accept(::System::Net::Sockets::Socket* socket, ::System::Net::Sockets::SocketAsyncEventArgs* e, ByRef<::System::Net::Sockets::Socket*> accepted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointListener", "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(accepted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, socket, e, byref(accepted));
}
// Autogenerated method: System.Net.EndPointListener.ProcessAccept
void System::Net::EndPointListener::ProcessAccept(::System::Net::Sockets::SocketAsyncEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::ProcessAccept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointListener", "ProcessAccept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, args);
}
// Autogenerated method: System.Net.EndPointListener.OnAccept
void System::Net::EndPointListener::OnAccept(::Il2CppObject* sender, ::System::Net::Sockets::SocketAsyncEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::OnAccept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointListener", "OnAccept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sender, e);
}
// Autogenerated method: System.Net.EndPointListener.RemoveConnection
void System::Net::EndPointListener::RemoveConnection(::System::Net::HttpConnection* conn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::RemoveConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(conn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, conn);
}
// Autogenerated method: System.Net.EndPointListener.BindContext
bool System::Net::EndPointListener::BindContext(::System::Net::HttpListenerContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::BindContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Net.EndPointListener.UnbindContext
void System::Net::EndPointListener::UnbindContext(::System::Net::HttpListenerContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::UnbindContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnbindContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Net.EndPointListener.SearchListener
::System::Net::HttpListener* System::Net::EndPointListener::SearchListener(::System::Uri* uri, ByRef<::System::Net::ListenerPrefix*> prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::SearchListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractIndependentType<::System::Net::ListenerPrefix*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpListener*, false>(this, ___internal__method, uri, byref(prefix));
}
// Autogenerated method: System.Net.EndPointListener.MatchFromList
::System::Net::HttpListener* System::Net::EndPointListener::MatchFromList(::StringW host, ::StringW path, ::System::Collections::ArrayList* list, ByRef<::System::Net::ListenerPrefix*> prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::MatchFromList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchFromList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractIndependentType<::System::Net::ListenerPrefix*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpListener*, false>(this, ___internal__method, host, path, list, byref(prefix));
}
// Autogenerated method: System.Net.EndPointListener.AddSpecial
void System::Net::EndPointListener::AddSpecial(::System::Collections::ArrayList* coll, ::System::Net::ListenerPrefix* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::AddSpecial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSpecial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coll), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, coll, prefix);
}
// Autogenerated method: System.Net.EndPointListener.RemoveSpecial
bool System::Net::EndPointListener::RemoveSpecial(::System::Collections::ArrayList* coll, ::System::Net::ListenerPrefix* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::RemoveSpecial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSpecial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coll), ::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, coll, prefix);
}
// Autogenerated method: System.Net.EndPointListener.CheckIfRemove
void System::Net::EndPointListener::CheckIfRemove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::CheckIfRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndPointListener.Close
void System::Net::EndPointListener::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndPointListener.AddPrefix
void System::Net::EndPointListener::AddPrefix(::System::Net::ListenerPrefix* prefix, ::System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::AddPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, listener);
}
// Autogenerated method: System.Net.EndPointListener.RemovePrefix
void System::Net::EndPointListener::RemovePrefix(::System::Net::ListenerPrefix* prefix, ::System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointListener::RemovePrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovePrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, listener);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.EndPointManager
#include "System/Net/EndPointManager.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
// Including type: System.Net.EndPointListener
#include "System/Net/EndPointListener.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable ip_to_endpoints
::System::Collections::Hashtable* System::Net::EndPointManager::_get_ip_to_endpoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::_get_ip_to_endpoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Net", "EndPointManager", "ip_to_endpoints"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable ip_to_endpoints
void System::Net::EndPointManager::_set_ip_to_endpoints(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::_set_ip_to_endpoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "EndPointManager", "ip_to_endpoints", value));
}
// Autogenerated method: System.Net.EndPointManager..cctor
void System::Net::EndPointManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.EndPointManager.AddListener
void System::Net::EndPointManager::AddListener(::System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::AddListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "AddListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener);
}
// Autogenerated method: System.Net.EndPointManager.AddPrefix
void System::Net::EndPointManager::AddPrefix(::StringW prefix, ::System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::AddPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "AddPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefix, listener);
}
// Autogenerated method: System.Net.EndPointManager.AddPrefixInternal
void System::Net::EndPointManager::AddPrefixInternal(::StringW p, ::System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::AddPrefixInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "AddPrefixInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, listener);
}
// Autogenerated method: System.Net.EndPointManager.GetEPListener
::System::Net::EndPointListener* System::Net::EndPointManager::GetEPListener(::StringW host, int port, ::System::Net::HttpListener* listener, bool secure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::GetEPListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "GetEPListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(secure)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::EndPointListener*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, host, port, listener, secure);
}
// Autogenerated method: System.Net.EndPointManager.RemoveEndPoint
void System::Net::EndPointManager::RemoveEndPoint(::System::Net::EndPointListener* epl, ::System::Net::IPEndPoint* ep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::RemoveEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "RemoveEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(epl), ::il2cpp_utils::ExtractType(ep)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, epl, ep);
}
// Autogenerated method: System.Net.EndPointManager.RemoveListener
void System::Net::EndPointManager::RemoveListener(::System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::RemoveListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "RemoveListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener);
}
// Autogenerated method: System.Net.EndPointManager.RemovePrefix
void System::Net::EndPointManager::RemovePrefix(::StringW prefix, ::System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::RemovePrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "RemovePrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefix, listener);
}
// Autogenerated method: System.Net.EndPointManager.RemovePrefixInternal
void System::Net::EndPointManager::RemovePrefixInternal(::StringW prefix, ::System::Net::HttpListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPointManager::RemovePrefixInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "EndPointManager", "RemovePrefixInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefix, listener);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FtpAsyncResult
#include "System/Net/FtpAsyncResult.hpp"
// Including type: System.Net.FtpWebResponse
#include "System/Net/FtpWebResponse.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.FtpWebResponse response
[[deprecated("Use field access instead!")]] ::System::Net::FtpWebResponse*& System::Net::FtpAsyncResult::dyn_response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::dyn_response");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "response"))->offset;
  return *reinterpret_cast<::System::Net::FtpWebResponse**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent waitHandle
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& System::Net::FtpAsyncResult::dyn_waitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::dyn_waitHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitHandle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception exception
[[deprecated("Use field access instead!")]] ::System::Exception*& System::Net::FtpAsyncResult::dyn_exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::dyn_exception");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exception"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback callback
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& System::Net::FtpAsyncResult::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::FtpAsyncResult::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::dyn_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object state
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::FtpAsyncResult::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completed
[[deprecated("Use field access instead!")]] bool& System::Net::FtpAsyncResult::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean synch
[[deprecated("Use field access instead!")]] bool& System::Net::FtpAsyncResult::dyn_synch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::dyn_synch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object locker
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::FtpAsyncResult::dyn_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::dyn_locker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locker"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.FtpAsyncResult.get_AsyncState
::Il2CppObject* System::Net::FtpAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* System::Net::FtpAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpAsyncResult.get_CompletedSynchronously
bool System::Net::FtpAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpAsyncResult.get_IsCompleted
bool System::Net::FtpAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpAsyncResult.get_GotException
bool System::Net::FtpAsyncResult::get_GotException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::get_GotException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GotException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpAsyncResult.get_Exception
::System::Exception* System::Net::FtpAsyncResult::get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::get_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpAsyncResult.get_Response
::System::Net::FtpWebResponse* System::Net::FtpAsyncResult::get_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::get_Response");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Response", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::FtpWebResponse*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpAsyncResult.get_Stream
::System::IO::Stream* System::Net::FtpAsyncResult::get_Stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::get_Stream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Stream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpAsyncResult.set_Stream
void System::Net::FtpAsyncResult::set_Stream(::System::IO::Stream* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::set_Stream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Stream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpAsyncResult.WaitUntilComplete
bool System::Net::FtpAsyncResult::WaitUntilComplete(int timeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::WaitUntilComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitUntilComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractType(exitContext)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout, exitContext);
}
// Autogenerated method: System.Net.FtpAsyncResult.SetCompleted
void System::Net::FtpAsyncResult::SetCompleted(bool synch, ::System::Exception* exc, ::System::Net::FtpWebResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::SetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(synch), ::il2cpp_utils::ExtractType(exc), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, synch, exc, response);
}
// Autogenerated method: System.Net.FtpAsyncResult.SetCompleted
void System::Net::FtpAsyncResult::SetCompleted(bool synch, ::System::Net::FtpWebResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::SetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(synch), ::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, synch, response);
}
// Autogenerated method: System.Net.FtpAsyncResult.SetCompleted
void System::Net::FtpAsyncResult::SetCompleted(bool synch, ::System::Exception* exc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::SetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(synch), ::il2cpp_utils::ExtractType(exc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, synch, exc);
}
// Autogenerated method: System.Net.FtpAsyncResult.DoCallback
void System::Net::FtpAsyncResult::DoCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpAsyncResult::DoCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FtpDataStream
#include "System/Net/FtpDataStream.hpp"
// Including type: System.Net.FtpDataStream/System.Net.WriteDelegate
#include "System/Net/FtpDataStream_WriteDelegate.hpp"
// Including type: System.Net.FtpDataStream/System.Net.ReadDelegate
#include "System/Net/FtpDataStream_ReadDelegate.hpp"
// Including type: System.Net.FtpWebRequest
#include "System/Net/FtpWebRequest.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.FtpWebRequest request
[[deprecated("Use field access instead!")]] ::System::Net::FtpWebRequest*& System::Net::FtpDataStream::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::System::Net::FtpWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream networkStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::FtpDataStream::dyn_networkStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::dyn_networkStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "networkStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::FtpDataStream::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRead
[[deprecated("Use field access instead!")]] bool& System::Net::FtpDataStream::dyn_isRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::dyn_isRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 totalRead
[[deprecated("Use field access instead!")]] int& System::Net::FtpDataStream::dyn_totalRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::dyn_totalRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalRead"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.FtpDataStream.ReadInternal
int System::Net::FtpDataStream::ReadInternal(::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::ReadInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FtpDataStream.WriteInternal
void System::Net::FtpDataStream::WriteInternal(::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::WriteInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FtpDataStream.System.IDisposable.Dispose
void System::Net::FtpDataStream::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.CheckDisposed
void System::Net::FtpDataStream::CheckDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::CheckDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.get_CanRead
bool System::Net::FtpDataStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.get_CanWrite
bool System::Net::FtpDataStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.get_CanSeek
bool System::Net::FtpDataStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.get_Length
int64_t System::Net::FtpDataStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.get_Position
int64_t System::Net::FtpDataStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.set_Position
void System::Net::FtpDataStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpDataStream.Close
void System::Net::FtpDataStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.Flush
void System::Net::FtpDataStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.Seek
int64_t System::Net::FtpDataStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.Net.FtpDataStream.SetLength
void System::Net::FtpDataStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpDataStream.BeginRead
::System::IAsyncResult* System::Net::FtpDataStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int size, ::System::AsyncCallback* cb, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, cb, state);
}
// Autogenerated method: System.Net.FtpDataStream.EndRead
int System::Net::FtpDataStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.FtpDataStream.Read
int System::Net::FtpDataStream::Read(::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FtpDataStream.BeginWrite
::System::IAsyncResult* System::Net::FtpDataStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int size, ::System::AsyncCallback* cb, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, cb, state);
}
// Autogenerated method: System.Net.FtpDataStream.EndWrite
void System::Net::FtpDataStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.FtpDataStream.Write
void System::Net::FtpDataStream::Write(::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FtpDataStream.Finalize
void System::Net::FtpDataStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpDataStream.Dispose
void System::Net::FtpDataStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FtpDataStream/System.Net.WriteDelegate
#include "System/Net/FtpDataStream_WriteDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.FtpDataStream/System.Net.WriteDelegate.Invoke
void System::Net::FtpDataStream::WriteDelegate::Invoke(::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::WriteDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FtpDataStream/System.Net.WriteDelegate.BeginInvoke
::System::IAsyncResult* System::Net::FtpDataStream::WriteDelegate::BeginInvoke(::ArrayW<uint8_t> buffer, int offset, int size, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::WriteDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, callback, object);
}
// Autogenerated method: System.Net.FtpDataStream/System.Net.WriteDelegate.EndInvoke
void System::Net::FtpDataStream::WriteDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::WriteDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FtpDataStream/System.Net.ReadDelegate
#include "System/Net/FtpDataStream_ReadDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.FtpDataStream/System.Net.ReadDelegate.Invoke
int System::Net::FtpDataStream::ReadDelegate::Invoke(::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::ReadDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.FtpDataStream/System.Net.ReadDelegate.BeginInvoke
::System::IAsyncResult* System::Net::FtpDataStream::ReadDelegate::BeginInvoke(::ArrayW<uint8_t> buffer, int offset, int size, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::ReadDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, callback, object);
}
// Autogenerated method: System.Net.FtpDataStream/System.Net.ReadDelegate.EndInvoke
int System::Net::FtpDataStream::ReadDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpDataStream::ReadDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.FtpRequestCreator
#include "System/Net/FtpRequestCreator.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.FtpRequestCreator.Create
::System::Net::WebRequest* System::Net::FtpRequestCreator::Create(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpRequestCreator::Create");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebRequest*, false>(this, ___internal__method, uri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.FtpStatus
#include "System/Net/FtpStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.FtpStatusCode statusCode
[[deprecated("Use field access instead!")]] ::System::Net::FtpStatusCode& System::Net::FtpStatus::dyn_statusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatus::dyn_statusCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statusCode"))->offset;
  return *reinterpret_cast<::System::Net::FtpStatusCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String statusDescription
[[deprecated("Use field access instead!")]] ::StringW& System::Net::FtpStatus::dyn_statusDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatus::dyn_statusDescription");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statusDescription"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.FtpStatus.get_StatusCode
::System::Net::FtpStatusCode System::Net::FtpStatus::get_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatus::get_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::FtpStatusCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpStatus.get_StatusDescription
::StringW System::Net::FtpStatus::get_StatusDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatus::get_StatusDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.FtpWebRequest
#include "System/Net/FtpWebRequest.hpp"
// Including type: System.Net.FtpAsyncResult
#include "System/Net/FtpAsyncResult.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.ServicePoint
#include "System/Net/ServicePoint.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
// Including type: System.Net.NetworkCredential
#include "System/Net/NetworkCredential.hpp"
// Including type: System.Net.IPHostEntry
#include "System/Net/IPHostEntry.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Net.FtpWebResponse
#include "System/Net/FtpWebResponse.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Net.FtpStatus
#include "System/Net/FtpStatus.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String[] supportedCommands
::ArrayW<::StringW> System::Net::FtpWebRequest::_get_supportedCommands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::_get_supportedCommands");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Net", "FtpWebRequest", "supportedCommands"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] supportedCommands
void System::Net::FtpWebRequest::_set_supportedCommands(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::_set_supportedCommands");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest", "supportedCommands", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Uri requestUri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::FtpWebRequest::dyn_requestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_requestUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestUri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String file_name
[[deprecated("Use field access instead!")]] ::StringW& System::Net::FtpWebRequest::dyn_file_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_file_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "file_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ServicePoint servicePoint
[[deprecated("Use field access instead!")]] ::System::Net::ServicePoint*& System::Net::FtpWebRequest::dyn_servicePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_servicePoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "servicePoint"))->offset;
  return *reinterpret_cast<::System::Net::ServicePoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream origDataStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::FtpWebRequest::dyn_origDataStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_origDataStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "origDataStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream dataStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::FtpWebRequest::dyn_dataStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_dataStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream controlStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::FtpWebRequest::dyn_controlStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_controlStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controlStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.StreamReader controlReader
[[deprecated("Use field access instead!")]] ::System::IO::StreamReader*& System::Net::FtpWebRequest::dyn_controlReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_controlReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controlReader"))->offset;
  return *reinterpret_cast<::System::IO::StreamReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.NetworkCredential credentials
[[deprecated("Use field access instead!")]] ::System::Net::NetworkCredential*& System::Net::FtpWebRequest::dyn_credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "credentials"))->offset;
  return *reinterpret_cast<::System::Net::NetworkCredential**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IPHostEntry hostEntry
[[deprecated("Use field access instead!")]] ::System::Net::IPHostEntry*& System::Net::FtpWebRequest::dyn_hostEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_hostEntry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hostEntry"))->offset;
  return *reinterpret_cast<::System::Net::IPHostEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IPEndPoint localEndPoint
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& System::Net::FtpWebRequest::dyn_localEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_localEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localEndPoint"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IPEndPoint remoteEndPoint
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& System::Net::FtpWebRequest::dyn_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_remoteEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IWebProxy proxy
[[deprecated("Use field access instead!")]] ::System::Net::IWebProxy*& System::Net::FtpWebRequest::dyn_proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "proxy"))->offset;
  return *reinterpret_cast<::System::Net::IWebProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 timeout
[[deprecated("Use field access instead!")]] int& System::Net::FtpWebRequest::dyn_timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 rwTimeout
[[deprecated("Use field access instead!")]] int& System::Net::FtpWebRequest::dyn_rwTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_rwTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rwTimeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 offset
[[deprecated("Use field access instead!")]] int64_t& System::Net::FtpWebRequest::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean binary
[[deprecated("Use field access instead!")]] bool& System::Net::FtpWebRequest::dyn_binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_binary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "binary"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableSsl
[[deprecated("Use field access instead!")]] bool& System::Net::FtpWebRequest::dyn_enableSsl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_enableSsl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSsl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean usePassive
[[deprecated("Use field access instead!")]] bool& System::Net::FtpWebRequest::dyn_usePassive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_usePassive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usePassive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean keepAlive
[[deprecated("Use field access instead!")]] bool& System::Net::FtpWebRequest::dyn_keepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_keepAlive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keepAlive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String method
[[deprecated("Use field access instead!")]] ::StringW& System::Net::FtpWebRequest::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String renameTo
[[deprecated("Use field access instead!")]] ::StringW& System::Net::FtpWebRequest::dyn_renameTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_renameTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renameTo"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object locker
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::FtpWebRequest::dyn_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_locker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locker"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.FtpWebRequest/System.Net.RequestState requestState
[[deprecated("Use field access instead!")]] ::System::Net::FtpWebRequest::RequestState& System::Net::FtpWebRequest::dyn_requestState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_requestState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestState"))->offset;
  return *reinterpret_cast<::System::Net::FtpWebRequest::RequestState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.FtpAsyncResult asyncResult
[[deprecated("Use field access instead!")]] ::System::Net::FtpAsyncResult*& System::Net::FtpWebRequest::dyn_asyncResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_asyncResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncResult"))->offset;
  return *reinterpret_cast<::System::Net::FtpAsyncResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.FtpWebResponse ftpResponse
[[deprecated("Use field access instead!")]] ::System::Net::FtpWebResponse*& System::Net::FtpWebRequest::dyn_ftpResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_ftpResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ftpResponse"))->offset;
  return *reinterpret_cast<::System::Net::FtpWebResponse**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream requestStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::FtpWebRequest::dyn_requestStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_requestStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String initial_path
[[deprecated("Use field access instead!")]] ::StringW& System::Net::FtpWebRequest::dyn_initial_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_initial_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initial_path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding dataEncoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Net::FtpWebRequest::dyn_dataEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::dyn_dataEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dataEncoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.FtpWebRequest.get_EnableSsl
bool System::Net::FtpWebRequest::get_EnableSsl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::get_EnableSsl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableSsl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.get_ReadWriteTimeout
int System::Net::FtpWebRequest::get_ReadWriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::get_ReadWriteTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadWriteTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.get_ServicePoint
::System::Net::ServicePoint* System::Net::FtpWebRequest::get_ServicePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::get_ServicePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServicePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ServicePoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.get_DataType
::StringW System::Net::FtpWebRequest::get_DataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::get_DataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.get_State
::System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::FtpWebRequest::RequestState, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.set_State
void System::Net::FtpWebRequest::set_State(::System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebRequest.GetMustImplement
::System::Exception* System::Net::FtpWebRequest::GetMustImplement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::GetMustImplement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FtpWebRequest", "GetMustImplement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.GetServicePoint
::System::Net::ServicePoint* System::Net::FtpWebRequest::GetServicePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::GetServicePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServicePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ServicePoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.ResolveHost
void System::Net::FtpWebRequest::ResolveHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::ResolveHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.ProcessRequest
void System::Net::FtpWebRequest::ProcessRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::ProcessRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.SetType
void System::Net::FtpWebRequest::SetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::SetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.GetRemoteFolderPath
::StringW System::Net::FtpWebRequest::GetRemoteFolderPath(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::GetRemoteFolderPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemoteFolderPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.FtpWebRequest.CWDAndSetFileName
void System::Net::FtpWebRequest::CWDAndSetFileName(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::CWDAndSetFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CWDAndSetFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Net.FtpWebRequest.ProcessMethod
void System::Net::FtpWebRequest::ProcessMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::ProcessMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.CloseControlConnection
void System::Net::FtpWebRequest::CloseControlConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::CloseControlConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseControlConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.CloseDataConnection
void System::Net::FtpWebRequest::CloseDataConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::CloseDataConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseDataConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.CloseConnection
void System::Net::FtpWebRequest::CloseConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::CloseConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.ProcessSimpleMethod
void System::Net::FtpWebRequest::ProcessSimpleMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::ProcessSimpleMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSimpleMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.UploadData
void System::Net::FtpWebRequest::UploadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::UploadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.DownloadData
void System::Net::FtpWebRequest::DownloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::DownloadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DownloadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.CheckRequestStarted
void System::Net::FtpWebRequest::CheckRequestStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::CheckRequestStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRequestStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.OpenControlConnection
void System::Net::FtpWebRequest::OpenControlConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::OpenControlConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenControlConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.GetInitialPath
::StringW System::Net::FtpWebRequest::GetInitialPath(::System::Net::FtpStatus* status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::GetInitialPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FtpWebRequest", "GetInitialPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, status);
}
// Autogenerated method: System.Net.FtpWebRequest.SetupPassiveConnection
::System::Net::Sockets::Socket* System::Net::FtpWebRequest::SetupPassiveConnection(::StringW statusDescription, bool ipv6) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::SetupPassiveConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupPassiveConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statusDescription), ::il2cpp_utils::ExtractType(ipv6)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Sockets::Socket*, false>(this, ___internal__method, statusDescription, ipv6);
}
// Autogenerated method: System.Net.FtpWebRequest.GetPortV4
int System::Net::FtpWebRequest::GetPortV4(::StringW responseString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::GetPortV4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPortV4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseString)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, responseString);
}
// Autogenerated method: System.Net.FtpWebRequest.GetPortV6
int System::Net::FtpWebRequest::GetPortV6(::StringW responseString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::GetPortV6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPortV6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseString)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, responseString);
}
// Autogenerated method: System.Net.FtpWebRequest.FormatAddress
::StringW System::Net::FtpWebRequest::FormatAddress(::System::Net::IPAddress* address, int Port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::FormatAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(Port)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, address, Port);
}
// Autogenerated method: System.Net.FtpWebRequest.FormatAddressV6
::StringW System::Net::FtpWebRequest::FormatAddressV6(::System::Net::IPAddress* address, int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::FormatAddressV6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatAddressV6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(port)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, address, port);
}
// Autogenerated method: System.Net.FtpWebRequest.CreateExceptionFromResponse
::System::Exception* System::Net::FtpWebRequest::CreateExceptionFromResponse(::System::Net::FtpStatus* status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::CreateExceptionFromResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateExceptionFromResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, status);
}
// Autogenerated method: System.Net.FtpWebRequest.SetTransferCompleted
void System::Net::FtpWebRequest::SetTransferCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::SetTransferCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTransferCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.OperationCompleted
void System::Net::FtpWebRequest::OperationCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::OperationCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OperationCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.SetCompleteWithError
void System::Net::FtpWebRequest::SetCompleteWithError(::System::Exception* exc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::SetCompleteWithError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompleteWithError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exc);
}
// Autogenerated method: System.Net.FtpWebRequest.InitDataConnection
::System::Net::Sockets::Socket* System::Net::FtpWebRequest::InitDataConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::InitDataConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitDataConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Sockets::Socket*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.OpenDataConnection
void System::Net::FtpWebRequest::OpenDataConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::OpenDataConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenDataConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.Authenticate
void System::Net::FtpWebRequest::Authenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::Authenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.SendCommand
::System::Net::FtpStatus* System::Net::FtpWebRequest::SendCommand(::StringW command, ::ArrayW<::StringW> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::SendCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(command), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::FtpStatus*, false>(this, ___internal__method, command, parameters);
}
// Autogenerated method: System.Net.FtpWebRequest.SendCommand
::System::Net::FtpStatus* System::Net::FtpWebRequest::SendCommand(bool waitResponse, ::StringW command, ::ArrayW<::StringW> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::SendCommand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendCommand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waitResponse), ::il2cpp_utils::ExtractType(command), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::FtpStatus*, false>(this, ___internal__method, waitResponse, command, parameters);
}
// Autogenerated method: System.Net.FtpWebRequest.ServiceNotAvailable
::System::Net::FtpStatus* System::Net::FtpWebRequest::ServiceNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::ServiceNotAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FtpWebRequest", "ServiceNotAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::FtpStatus*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.GetResponseStatus
::System::Net::FtpStatus* System::Net::FtpWebRequest::GetResponseStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::GetResponseStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponseStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::FtpStatus*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.InitiateSecureConnection
void System::Net::FtpWebRequest::InitiateSecureConnection(ByRef<::System::IO::Stream*> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::InitiateSecureConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateSecureConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: System.Net.FtpWebRequest.ChangeToSSLSocket
bool System::Net::FtpWebRequest::ChangeToSSLSocket(ByRef<::System::IO::Stream*> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::ChangeToSSLSocket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeToSSLSocket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: System.Net.FtpWebRequest.InFinalState
bool System::Net::FtpWebRequest::InFinalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::InFinalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InFinalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.InProgress
bool System::Net::FtpWebRequest::InProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::InProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.CheckIfAborted
void System::Net::FtpWebRequest::CheckIfAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::CheckIfAborted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfAborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.CheckFinalState
void System::Net::FtpWebRequest::CheckFinalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::CheckFinalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckFinalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.set_ConnectionGroupName
void System::Net::FtpWebRequest::set_ConnectionGroupName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::set_ConnectionGroupName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConnectionGroupName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebRequest.get_ContentLength
int64_t System::Net::FtpWebRequest::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::get_ContentLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.set_ContentLength
void System::Net::FtpWebRequest::set_ContentLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::set_ContentLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebRequest.get_Credentials
::System::Net::ICredentials* System::Net::FtpWebRequest::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::get_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.set_Credentials
void System::Net::FtpWebRequest::set_Credentials(::System::Net::ICredentials* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::set_Credentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Credentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebRequest.get_Headers
::System::Net::WebHeaderCollection* System::Net::FtpWebRequest::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::get_Headers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebHeaderCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.get_Method
::StringW System::Net::FtpWebRequest::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::get_Method");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.set_Method
void System::Net::FtpWebRequest::set_Method(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::set_Method");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebRequest.set_PreAuthenticate
void System::Net::FtpWebRequest::set_PreAuthenticate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::set_PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebRequest.get_Proxy
::System::Net::IWebProxy* System::Net::FtpWebRequest::get_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::get_Proxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.set_Proxy
void System::Net::FtpWebRequest::set_Proxy(::System::Net::IWebProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::set_Proxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebRequest.get_RequestUri
::System::Uri* System::Net::FtpWebRequest::get_RequestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::get_RequestUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.get_UseDefaultCredentials
bool System::Net::FtpWebRequest::get_UseDefaultCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::get_UseDefaultCredentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.set_UseDefaultCredentials
void System::Net::FtpWebRequest::set_UseDefaultCredentials(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::set_UseDefaultCredentials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.FtpWebRequest.get_Timeout
int System::Net::FtpWebRequest::get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::get_Timeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest..cctor
void System::Net::FtpWebRequest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "FtpWebRequest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.Abort
void System::Net::FtpWebRequest::Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::Abort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Abort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.BeginGetResponse
::System::IAsyncResult* System::Net::FtpWebRequest::BeginGetResponse(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::BeginGetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginGetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.FtpWebRequest.EndGetResponse
::System::Net::WebResponse* System::Net::FtpWebRequest::EndGetResponse(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::EndGetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndGetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebResponse*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.FtpWebRequest.GetResponse
::System::Net::WebResponse* System::Net::FtpWebRequest::GetResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::GetResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebResponse*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.FtpWebRequest.BeginGetRequestStream
::System::IAsyncResult* System::Net::FtpWebRequest::BeginGetRequestStream(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::BeginGetRequestStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginGetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.FtpWebRequest.EndGetRequestStream
::System::IO::Stream* System::Net::FtpWebRequest::EndGetRequestStream(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::EndGetRequestStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndGetRequestStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.FtpWebRequest/System.Net.RequestState
#include "System/Net/FtpWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/System.Net.RequestState Before
::System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_Before() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_get_Before");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "Before"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/System.Net.RequestState Before
void System::Net::FtpWebRequest::RequestState::_set_Before(::System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_set_Before");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "Before", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/System.Net.RequestState Scheduled
::System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_Scheduled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_get_Scheduled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "Scheduled"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/System.Net.RequestState Scheduled
void System::Net::FtpWebRequest::RequestState::_set_Scheduled(::System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_set_Scheduled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "Scheduled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/System.Net.RequestState Connecting
::System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/System.Net.RequestState Connecting
void System::Net::FtpWebRequest::RequestState::_set_Connecting(::System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/System.Net.RequestState Authenticating
::System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_Authenticating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_get_Authenticating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "Authenticating"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/System.Net.RequestState Authenticating
void System::Net::FtpWebRequest::RequestState::_set_Authenticating(::System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_set_Authenticating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "Authenticating", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/System.Net.RequestState OpeningData
::System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_OpeningData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_get_OpeningData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "OpeningData"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/System.Net.RequestState OpeningData
void System::Net::FtpWebRequest::RequestState::_set_OpeningData(::System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_set_OpeningData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "OpeningData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/System.Net.RequestState TransferInProgress
::System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_TransferInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_get_TransferInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "TransferInProgress"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/System.Net.RequestState TransferInProgress
void System::Net::FtpWebRequest::RequestState::_set_TransferInProgress(::System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_set_TransferInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "TransferInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/System.Net.RequestState Finished
::System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_Finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_get_Finished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "Finished"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/System.Net.RequestState Finished
void System::Net::FtpWebRequest::RequestState::_set_Finished(::System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_set_Finished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "Finished", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/System.Net.RequestState Aborted
::System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_get_Aborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "Aborted"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/System.Net.RequestState Aborted
void System::Net::FtpWebRequest::RequestState::_set_Aborted(::System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_set_Aborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "Aborted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpWebRequest/System.Net.RequestState Error
::System::Net::FtpWebRequest::RequestState System::Net::FtpWebRequest::RequestState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpWebRequest::RequestState>("System.Net", "FtpWebRequest/RequestState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpWebRequest/System.Net.RequestState Error
void System::Net::FtpWebRequest::RequestState::_set_Error(::System::Net::FtpWebRequest::RequestState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpWebRequest/RequestState", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::FtpWebRequest::RequestState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpWebRequest::RequestState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
