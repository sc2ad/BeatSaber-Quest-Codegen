// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.LayerMaskExtensions
#include "RootMotion/LayerMaskExtensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.LayerMaskExtensions.Contains
bool RootMotion::LayerMaskExtensions::Contains(::UnityEngine::LayerMask mask, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::LayerMaskExtensions::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(layer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mask, layer);
}
// Autogenerated method: RootMotion.LayerMaskExtensions.Create
::UnityEngine::LayerMask RootMotion::LayerMaskExtensions::Create(::ArrayW<::StringW> layerNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::LayerMaskExtensions::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerNames)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerNames);
}
// Autogenerated method: RootMotion.LayerMaskExtensions.Create
::UnityEngine::LayerMask RootMotion::LayerMaskExtensions::Create(::ArrayW<int> layerNumbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::LayerMaskExtensions::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerNumbers)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerNumbers);
}
// Autogenerated method: RootMotion.LayerMaskExtensions.NamesToMask
::UnityEngine::LayerMask RootMotion::LayerMaskExtensions::NamesToMask(::ArrayW<::StringW> layerNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::LayerMaskExtensions::NamesToMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "NamesToMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerNames)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerNames);
}
// Autogenerated method: RootMotion.LayerMaskExtensions.LayerNumbersToMask
::UnityEngine::LayerMask RootMotion::LayerMaskExtensions::LayerNumbersToMask(::ArrayW<int> layerNumbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::LayerMaskExtensions::LayerNumbersToMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "LayerNumbersToMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerNumbers)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerNumbers);
}
// Autogenerated method: RootMotion.LayerMaskExtensions.Inverse
::UnityEngine::LayerMask RootMotion::LayerMaskExtensions::Inverse(::UnityEngine::LayerMask original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::LayerMaskExtensions::Inverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "Inverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original);
}
// Autogenerated method: RootMotion.LayerMaskExtensions.AddToMask
::UnityEngine::LayerMask RootMotion::LayerMaskExtensions::AddToMask(::UnityEngine::LayerMask original, ::ArrayW<::StringW> layerNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::LayerMaskExtensions::AddToMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "AddToMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(layerNames)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, layerNames);
}
// Autogenerated method: RootMotion.LayerMaskExtensions.RemoveFromMask
::UnityEngine::LayerMask RootMotion::LayerMaskExtensions::RemoveFromMask(::UnityEngine::LayerMask original, ::ArrayW<::StringW> layerNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::LayerMaskExtensions::RemoveFromMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "RemoveFromMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(layerNames)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, layerNames);
}
// Autogenerated method: RootMotion.LayerMaskExtensions.MaskToNames
::ArrayW<::StringW> RootMotion::LayerMaskExtensions::MaskToNames(::UnityEngine::LayerMask original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::LayerMaskExtensions::MaskToNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "MaskToNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original);
}
// Autogenerated method: RootMotion.LayerMaskExtensions.MaskToNumbers
::ArrayW<int> RootMotion::LayerMaskExtensions::MaskToNumbers(::UnityEngine::LayerMask original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::LayerMaskExtensions::MaskToNumbers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "MaskToNumbers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original);
}
// Autogenerated method: RootMotion.LayerMaskExtensions.MaskToString
::StringW RootMotion::LayerMaskExtensions::MaskToString(::UnityEngine::LayerMask original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::LayerMaskExtensions::MaskToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "MaskToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original);
}
// Autogenerated method: RootMotion.LayerMaskExtensions.MaskToString
::StringW RootMotion::LayerMaskExtensions::MaskToString(::UnityEngine::LayerMask original, ::StringW delimiter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::LayerMaskExtensions::MaskToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "LayerMaskExtensions", "MaskToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(delimiter)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, delimiter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.QuaTools
#include "RootMotion/QuaTools.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.QuaTools.Lerp
::UnityEngine::Quaternion RootMotion::QuaTools::Lerp(::UnityEngine::Quaternion fromRotation, ::UnityEngine::Quaternion toRotation, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::QuaTools::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromRotation), ::il2cpp_utils::ExtractType(toRotation), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fromRotation, toRotation, weight);
}
// Autogenerated method: RootMotion.QuaTools.Slerp
::UnityEngine::Quaternion RootMotion::QuaTools::Slerp(::UnityEngine::Quaternion fromRotation, ::UnityEngine::Quaternion toRotation, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::QuaTools::Slerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "Slerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromRotation), ::il2cpp_utils::ExtractType(toRotation), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fromRotation, toRotation, weight);
}
// Autogenerated method: RootMotion.QuaTools.LinearBlend
::UnityEngine::Quaternion RootMotion::QuaTools::LinearBlend(::UnityEngine::Quaternion q, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::QuaTools::LinearBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "LinearBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q, weight);
}
// Autogenerated method: RootMotion.QuaTools.SphericalBlend
::UnityEngine::Quaternion RootMotion::QuaTools::SphericalBlend(::UnityEngine::Quaternion q, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::QuaTools::SphericalBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "SphericalBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q, weight);
}
// Autogenerated method: RootMotion.QuaTools.FromToAroundAxis
::UnityEngine::Quaternion RootMotion::QuaTools::FromToAroundAxis(::UnityEngine::Vector3 fromDirection, ::UnityEngine::Vector3 toDirection, ::UnityEngine::Vector3 axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::QuaTools::FromToAroundAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "FromToAroundAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromDirection), ::il2cpp_utils::ExtractType(toDirection), ::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fromDirection, toDirection, axis);
}
// Autogenerated method: RootMotion.QuaTools.RotationToLocalSpace
::UnityEngine::Quaternion RootMotion::QuaTools::RotationToLocalSpace(::UnityEngine::Quaternion space, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::QuaTools::RotationToLocalSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "RotationToLocalSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(space), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, space, rotation);
}
// Autogenerated method: RootMotion.QuaTools.FromToRotation
::UnityEngine::Quaternion RootMotion::QuaTools::FromToRotation(::UnityEngine::Quaternion from, ::UnityEngine::Quaternion to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::QuaTools::FromToRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "FromToRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, to);
}
// Autogenerated method: RootMotion.QuaTools.GetAxis
::UnityEngine::Vector3 RootMotion::QuaTools::GetAxis(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::QuaTools::GetAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "GetAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated method: RootMotion.QuaTools.ClampRotation
::UnityEngine::Quaternion RootMotion::QuaTools::ClampRotation(::UnityEngine::Quaternion rotation, float clampWeight, int clampSmoothing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::QuaTools::ClampRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "ClampRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(clampWeight), ::il2cpp_utils::ExtractType(clampSmoothing)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rotation, clampWeight, clampSmoothing);
}
// Autogenerated method: RootMotion.QuaTools.ClampAngle
float RootMotion::QuaTools::ClampAngle(float angle, float clampWeight, int clampSmoothing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::QuaTools::ClampAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "ClampAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(clampWeight), ::il2cpp_utils::ExtractType(clampSmoothing)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, angle, clampWeight, clampSmoothing);
}
// Autogenerated method: RootMotion.QuaTools.MatchRotation
::UnityEngine::Quaternion RootMotion::QuaTools::MatchRotation(::UnityEngine::Quaternion targetRotation, ::UnityEngine::Vector3 targetforwardAxis, ::UnityEngine::Vector3 targetUpAxis, ::UnityEngine::Vector3 forwardAxis, ::UnityEngine::Vector3 upAxis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::QuaTools::MatchRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "MatchRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetRotation), ::il2cpp_utils::ExtractType(targetforwardAxis), ::il2cpp_utils::ExtractType(targetUpAxis), ::il2cpp_utils::ExtractType(forwardAxis), ::il2cpp_utils::ExtractType(upAxis)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetRotation, targetforwardAxis, targetUpAxis, forwardAxis, upAxis);
}
// Autogenerated method: RootMotion.QuaTools.ToBiPolar
::UnityEngine::Vector3 RootMotion::QuaTools::ToBiPolar(::UnityEngine::Vector3 euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::QuaTools::ToBiPolar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "ToBiPolar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, euler);
}
// Autogenerated method: RootMotion.QuaTools.ToBiPolar
float RootMotion::QuaTools::ToBiPolar(float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::QuaTools::ToBiPolar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "ToBiPolar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, angle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.SolverManager
#include "RootMotion/SolverManager.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean fixTransforms
[[deprecated("Use field access instead!")]] bool& RootMotion::SolverManager::dyn_fixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::dyn_fixTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixTransforms"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& RootMotion::SolverManager::dyn_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::dyn_animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animation legacy
[[deprecated("Use field access instead!")]] ::UnityEngine::Animation*& RootMotion::SolverManager::dyn_legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::dyn_legacy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "legacy"))->offset;
  return *reinterpret_cast<::UnityEngine::Animation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean updateFrame
[[deprecated("Use field access instead!")]] bool& RootMotion::SolverManager::dyn_updateFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::dyn_updateFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean componentInitiated
[[deprecated("Use field access instead!")]] bool& RootMotion::SolverManager::dyn_componentInitiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::dyn_componentInitiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentInitiated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean skipSolverUpdate
[[deprecated("Use field access instead!")]] bool& RootMotion::SolverManager::dyn_skipSolverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::dyn_skipSolverUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skipSolverUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.SolverManager.get_animatePhysics
bool RootMotion::SolverManager::get_animatePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::get_animatePhysics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animatePhysics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.get_isAnimated
bool RootMotion::SolverManager::get_isAnimated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::get_isAnimated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAnimated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.Disable
void RootMotion::SolverManager::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::Disable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.InitiateSolver
void RootMotion::SolverManager::InitiateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::InitiateSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.UpdateSolver
void RootMotion::SolverManager::UpdateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::UpdateSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.FixTransforms
void RootMotion::SolverManager::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::FixTransforms");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.OnDisable
void RootMotion::SolverManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.Start
void RootMotion::SolverManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.Initiate
void RootMotion::SolverManager::Initiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.Update
void RootMotion::SolverManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.FindAnimatorRecursive
void RootMotion::SolverManager::FindAnimatorRecursive(::UnityEngine::Transform* t, bool findInChildren) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::FindAnimatorRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindAnimatorRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(findInChildren)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, findInChildren);
}
// Autogenerated method: RootMotion.SolverManager.FixedUpdate
void RootMotion::SolverManager::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.LateUpdate
void RootMotion::SolverManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.UpdateSolverExternal
void RootMotion::SolverManager::UpdateSolverExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::SolverManager::UpdateSolverExternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSolverExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.TriggerEventBroadcaster
#include "RootMotion/TriggerEventBroadcaster.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject target
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& RootMotion::TriggerEventBroadcaster::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::TriggerEventBroadcaster::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.TriggerEventBroadcaster.OnTriggerEnter
void RootMotion::TriggerEventBroadcaster::OnTriggerEnter(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::TriggerEventBroadcaster::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated method: RootMotion.TriggerEventBroadcaster.OnTriggerStay
void RootMotion::TriggerEventBroadcaster::OnTriggerStay(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::TriggerEventBroadcaster::OnTriggerStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated method: RootMotion.TriggerEventBroadcaster.OnTriggerExit
void RootMotion::TriggerEventBroadcaster::OnTriggerExit(::UnityEngine::Collider* collider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::TriggerEventBroadcaster::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.V3Tools
#include "RootMotion/V3Tools.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.V3Tools.Lerp
::UnityEngine::Vector3 RootMotion::V3Tools::Lerp(::UnityEngine::Vector3 fromVector, ::UnityEngine::Vector3 toVector, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::V3Tools::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromVector), ::il2cpp_utils::ExtractType(toVector), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fromVector, toVector, weight);
}
// Autogenerated method: RootMotion.V3Tools.Slerp
::UnityEngine::Vector3 RootMotion::V3Tools::Slerp(::UnityEngine::Vector3 fromVector, ::UnityEngine::Vector3 toVector, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::V3Tools::Slerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "Slerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromVector), ::il2cpp_utils::ExtractType(toVector), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fromVector, toVector, weight);
}
// Autogenerated method: RootMotion.V3Tools.ExtractVertical
::UnityEngine::Vector3 RootMotion::V3Tools::ExtractVertical(::UnityEngine::Vector3 v, ::UnityEngine::Vector3 verticalAxis, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::V3Tools::ExtractVertical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "ExtractVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(verticalAxis), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v, verticalAxis, weight);
}
// Autogenerated method: RootMotion.V3Tools.ExtractHorizontal
::UnityEngine::Vector3 RootMotion::V3Tools::ExtractHorizontal(::UnityEngine::Vector3 v, ::UnityEngine::Vector3 normal, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::V3Tools::ExtractHorizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "ExtractHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v, normal, weight);
}
// Autogenerated method: RootMotion.V3Tools.ClampDirection
::UnityEngine::Vector3 RootMotion::V3Tools::ClampDirection(::UnityEngine::Vector3 direction, ::UnityEngine::Vector3 normalDirection, float clampWeight, int clampSmoothing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::V3Tools::ClampDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "ClampDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(normalDirection), ::il2cpp_utils::ExtractType(clampWeight), ::il2cpp_utils::ExtractType(clampSmoothing)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, direction, normalDirection, clampWeight, clampSmoothing);
}
// Autogenerated method: RootMotion.V3Tools.ClampDirection
::UnityEngine::Vector3 RootMotion::V3Tools::ClampDirection(::UnityEngine::Vector3 direction, ::UnityEngine::Vector3 normalDirection, float clampWeight, int clampSmoothing, ByRef<bool> changed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::V3Tools::ClampDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "ClampDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(normalDirection), ::il2cpp_utils::ExtractType(clampWeight), ::il2cpp_utils::ExtractType(clampSmoothing), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, direction, normalDirection, clampWeight, clampSmoothing, byref(changed));
}
// Autogenerated method: RootMotion.V3Tools.ClampDirection
::UnityEngine::Vector3 RootMotion::V3Tools::ClampDirection(::UnityEngine::Vector3 direction, ::UnityEngine::Vector3 normalDirection, float clampWeight, int clampSmoothing, ByRef<float> clampValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::V3Tools::ClampDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "ClampDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(normalDirection), ::il2cpp_utils::ExtractType(clampWeight), ::il2cpp_utils::ExtractType(clampSmoothing), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, direction, normalDirection, clampWeight, clampSmoothing, byref(clampValue));
}
// Autogenerated method: RootMotion.V3Tools.LineToPlane
::UnityEngine::Vector3 RootMotion::V3Tools::LineToPlane(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::UnityEngine::Vector3 planeNormal, ::UnityEngine::Vector3 planePoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::V3Tools::LineToPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "LineToPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(planeNormal), ::il2cpp_utils::ExtractType(planePoint)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, planeNormal, planePoint);
}
// Autogenerated method: RootMotion.V3Tools.PointToPlane
::UnityEngine::Vector3 RootMotion::V3Tools::PointToPlane(::UnityEngine::Vector3 point, ::UnityEngine::Vector3 planePosition, ::UnityEngine::Vector3 planeNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::V3Tools::PointToPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "PointToPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(planePosition), ::il2cpp_utils::ExtractType(planeNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point, planePosition, planeNormal);
}
// Autogenerated method: RootMotion.V3Tools.TransformPointUnscaled
::UnityEngine::Vector3 RootMotion::V3Tools::TransformPointUnscaled(::UnityEngine::Transform* t, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::V3Tools::TransformPointUnscaled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "TransformPointUnscaled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, point);
}
// Autogenerated method: RootMotion.V3Tools.InverseTransformPointUnscaled
::UnityEngine::Vector3 RootMotion::V3Tools::InverseTransformPointUnscaled(::UnityEngine::Transform* t, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::V3Tools::InverseTransformPointUnscaled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "V3Tools", "InverseTransformPointUnscaled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, point);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.Warning
#include "RootMotion/Warning.hpp"
// Including type: RootMotion.Warning/RootMotion.Logger
#include "RootMotion/Warning_Logger.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean logged
bool RootMotion::Warning::_get_logged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Warning::_get_logged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("RootMotion", "Warning", "logged"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean logged
void RootMotion::Warning::_set_logged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Warning::_set_logged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "Warning", "logged", value));
}
// Autogenerated method: RootMotion.Warning.Log
void RootMotion::Warning::Log(::StringW message, ::RootMotion::Warning::Logger* logger, bool logInEditMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Warning::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Warning", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(logger), ::il2cpp_utils::ExtractType(logInEditMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, logger, logInEditMode);
}
// Autogenerated method: RootMotion.Warning.Log
void RootMotion::Warning::Log(::StringW message, ::UnityEngine::Transform* context, bool logInEditMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Warning::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion", "Warning", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(logInEditMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, context, logInEditMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.Warning/RootMotion.Logger
#include "RootMotion/Warning_Logger.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.Warning/RootMotion.Logger.Invoke
void RootMotion::Warning::Logger::Invoke(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Warning::Logger::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.Warning/RootMotion.Logger.BeginInvoke
::System::IAsyncResult* RootMotion::Warning::Logger::BeginInvoke(::StringW message, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Warning::Logger::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, message, callback, object);
}
// Autogenerated method: RootMotion.Warning/RootMotion.Logger.EndInvoke
void RootMotion::Warning::Logger::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Warning::Logger::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.Demos.Navigator
#include "RootMotion/Demos/Navigator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean activeTargetSeeking
[[deprecated("Use field access instead!")]] bool& RootMotion::Demos::Navigator::dyn_activeTargetSeeking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::dyn_activeTargetSeeking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeTargetSeeking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cornerRadius
[[deprecated("Use field access instead!")]] float& RootMotion::Demos::Navigator::dyn_cornerRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::dyn_cornerRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cornerRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single recalculateOnPathDistance
[[deprecated("Use field access instead!")]] float& RootMotion::Demos::Navigator::dyn_recalculateOnPathDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::dyn_recalculateOnPathDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recalculateOnPathDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxSampleDistance
[[deprecated("Use field access instead!")]] float& RootMotion::Demos::Navigator::dyn_maxSampleDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::dyn_maxSampleDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSampleDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single nextPathInterval
[[deprecated("Use field access instead!")]] float& RootMotion::Demos::Navigator::dyn_nextPathInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::dyn_nextPathInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextPathInterval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <normalizedDeltaPosition>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::Demos::Navigator::dyn_$normalizedDeltaPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::dyn_$normalizedDeltaPosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<normalizedDeltaPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.Demos.Navigator/RootMotion.Demos.State <state>k__BackingField
[[deprecated("Use field access instead!")]] ::RootMotion::Demos::Navigator::State& RootMotion::Demos::Navigator::dyn_$state$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::dyn_$state$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<state>k__BackingField"))->offset;
  return *reinterpret_cast<::RootMotion::Demos::Navigator::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::Demos::Navigator::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 cornerIndex
[[deprecated("Use field access instead!")]] int& RootMotion::Demos::Navigator::dyn_cornerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::dyn_cornerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cornerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] corners
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& RootMotion::Demos::Navigator::dyn_corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::dyn_corners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "corners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AI.NavMeshPath path
[[deprecated("Use field access instead!")]] ::UnityEngine::AI::NavMeshPath*& RootMotion::Demos::Navigator::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::UnityEngine::AI::NavMeshPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastTargetPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::Demos::Navigator::dyn_lastTargetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::dyn_lastTargetPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTargetPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initiated
[[deprecated("Use field access instead!")]] bool& RootMotion::Demos::Navigator::dyn_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::dyn_initiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initiated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextPathTime
[[deprecated("Use field access instead!")]] float& RootMotion::Demos::Navigator::dyn_nextPathTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::dyn_nextPathTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextPathTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.Demos.Navigator.get_normalizedDeltaPosition
::UnityEngine::Vector3 RootMotion::Demos::Navigator::get_normalizedDeltaPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::get_normalizedDeltaPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalizedDeltaPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.Demos.Navigator.set_normalizedDeltaPosition
void RootMotion::Demos::Navigator::set_normalizedDeltaPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::set_normalizedDeltaPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normalizedDeltaPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.Demos.Navigator.get_state
::RootMotion::Demos::Navigator::State RootMotion::Demos::Navigator::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::get_state");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::Demos::Navigator::State, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.Demos.Navigator.set_state
void RootMotion::Demos::Navigator::set_state(::RootMotion::Demos::Navigator::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::set_state");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.Demos.Navigator.Initiate
void RootMotion::Demos::Navigator::Initiate(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.Demos.Navigator.Update
void RootMotion::Demos::Navigator::Update(::UnityEngine::Vector3 targetPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPosition);
}
// Autogenerated method: RootMotion.Demos.Navigator.CalculatePath
void RootMotion::Demos::Navigator::CalculatePath(::UnityEngine::Vector3 targetPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::CalculatePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculatePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPosition);
}
// Autogenerated method: RootMotion.Demos.Navigator.Find
bool RootMotion::Demos::Navigator::Find(::UnityEngine::Vector3 targetPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetPosition);
}
// Autogenerated method: RootMotion.Demos.Navigator.Stop
void RootMotion::Demos::Navigator::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.Demos.Navigator.HorDistance
float RootMotion::Demos::Navigator::HorDistance(::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::HorDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HorDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, p1, p2);
}
// Autogenerated method: RootMotion.Demos.Navigator.Visualize
void RootMotion::Demos::Navigator::Visualize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::Visualize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Visualize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.Demos.Navigator/RootMotion.Demos.State
#include "RootMotion/Demos/Navigator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.Demos.Navigator/RootMotion.Demos.State Idle
::RootMotion::Demos::Navigator::State RootMotion::Demos::Navigator::State::_get_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::State::_get_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::Demos::Navigator::State>("RootMotion.Demos", "Navigator/State", "Idle"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.Demos.Navigator/RootMotion.Demos.State Idle
void RootMotion::Demos::Navigator::State::_set_Idle(::RootMotion::Demos::Navigator::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::State::_set_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.Demos", "Navigator/State", "Idle", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.Demos.Navigator/RootMotion.Demos.State Seeking
::RootMotion::Demos::Navigator::State RootMotion::Demos::Navigator::State::_get_Seeking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::State::_get_Seeking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::Demos::Navigator::State>("RootMotion.Demos", "Navigator/State", "Seeking"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.Demos.Navigator/RootMotion.Demos.State Seeking
void RootMotion::Demos::Navigator::State::_set_Seeking(::RootMotion::Demos::Navigator::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::State::_set_Seeking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.Demos", "Navigator/State", "Seeking", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.Demos.Navigator/RootMotion.Demos.State OnPath
::RootMotion::Demos::Navigator::State RootMotion::Demos::Navigator::State::_get_OnPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::State::_get_OnPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::Demos::Navigator::State>("RootMotion.Demos", "Navigator/State", "OnPath"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.Demos.Navigator/RootMotion.Demos.State OnPath
void RootMotion::Demos::Navigator::State::_set_OnPath(::RootMotion::Demos::Navigator::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::State::_set_OnPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.Demos", "Navigator/State", "OnPath", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& RootMotion::Demos::Navigator::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::Demos::Navigator::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.BipedIK
#include "RootMotion/FinalIK/BipedIK.hpp"
// Including type: RootMotion.BipedReferences
#include "RootMotion/BipedReferences.hpp"
// Including type: RootMotion.FinalIK.BipedIKSolvers
#include "RootMotion/FinalIK/BipedIKSolvers.hpp"
// Including type: UnityEngine.AvatarIKGoal
#include "UnityEngine/AvatarIKGoal.hpp"
// Including type: RootMotion.FinalIK.IKSolverLimb
#include "RootMotion/FinalIK/IKSolverLimb.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.BipedReferences references
[[deprecated("Use field access instead!")]] ::RootMotion::BipedReferences*& RootMotion::FinalIK::BipedIK::dyn_references() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::dyn_references");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "references"))->offset;
  return *reinterpret_cast<::RootMotion::BipedReferences**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.BipedIKSolvers solvers
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::BipedIKSolvers*& RootMotion::FinalIK::BipedIK::dyn_solvers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::dyn_solvers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solvers"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::BipedIKSolvers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.OpenUserManual
void RootMotion::FinalIK::BipedIK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::OpenUserManual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.OpenScriptReference
void RootMotion::FinalIK::BipedIK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::OpenScriptReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SupportGroup
void RootMotion::FinalIK::BipedIK::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.ASThread
void RootMotion::FinalIK::BipedIK::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::ASThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.GetIKPositionWeight
float RootMotion::FinalIK::BipedIK::GetIKPositionWeight(::UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::GetIKPositionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKPositionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, goal);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.GetIKRotationWeight
float RootMotion::FinalIK::BipedIK::GetIKRotationWeight(::UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::GetIKRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, goal);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetIKPositionWeight
void RootMotion::FinalIK::BipedIK::SetIKPositionWeight(::UnityEngine::AvatarIKGoal goal, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::SetIKPositionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKPositionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goal, weight);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetIKRotationWeight
void RootMotion::FinalIK::BipedIK::SetIKRotationWeight(::UnityEngine::AvatarIKGoal goal, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::SetIKRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goal, weight);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetIKPosition
void RootMotion::FinalIK::BipedIK::SetIKPosition(::UnityEngine::AvatarIKGoal goal, ::UnityEngine::Vector3 IKPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::SetIKPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(IKPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goal, IKPosition);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetIKRotation
void RootMotion::FinalIK::BipedIK::SetIKRotation(::UnityEngine::AvatarIKGoal goal, ::UnityEngine::Quaternion IKRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::SetIKRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal), ::il2cpp_utils::ExtractType(IKRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goal, IKRotation);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.GetIKPosition
::UnityEngine::Vector3 RootMotion::FinalIK::BipedIK::GetIKPosition(::UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::GetIKPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, goal);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.GetIKRotation
::UnityEngine::Quaternion RootMotion::FinalIK::BipedIK::GetIKRotation(::UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::GetIKRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, goal);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetLookAtWeight
void RootMotion::FinalIK::BipedIK::SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight, float clampWeightHead, float clampWeightEyes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(bodyWeight), ::il2cpp_utils::ExtractType(headWeight), ::il2cpp_utils::ExtractType(eyesWeight), ::il2cpp_utils::ExtractType(clampWeight), ::il2cpp_utils::ExtractType(clampWeightHead), ::il2cpp_utils::ExtractType(clampWeightEyes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight, bodyWeight, headWeight, eyesWeight, clampWeight, clampWeightHead, clampWeightEyes);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetLookAtPosition
void RootMotion::FinalIK::BipedIK::SetLookAtPosition(::UnityEngine::Vector3 lookAtPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::SetLookAtPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lookAtPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lookAtPosition);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetSpinePosition
void RootMotion::FinalIK::BipedIK::SetSpinePosition(::UnityEngine::Vector3 spinePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::SetSpinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSpinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spinePosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, spinePosition);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetSpineWeight
void RootMotion::FinalIK::BipedIK::SetSpineWeight(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::SetSpineWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSpineWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.GetGoalIK
::RootMotion::FinalIK::IKSolverLimb* RootMotion::FinalIK::BipedIK::GetGoalIK(::UnityEngine::AvatarIKGoal goal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::GetGoalIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGoalIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goal)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolverLimb*, false>(this, ___internal__method, goal);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.InitiateBipedIK
void RootMotion::FinalIK::BipedIK::InitiateBipedIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::InitiateBipedIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateBipedIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.UpdateBipedIK
void RootMotion::FinalIK::BipedIK::UpdateBipedIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::UpdateBipedIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBipedIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.SetToDefaults
void RootMotion::FinalIK::BipedIK::SetToDefaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::SetToDefaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToDefaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.LogWarning
void RootMotion::FinalIK::BipedIK::LogWarning(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.FixTransforms
void RootMotion::FinalIK::BipedIK::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::FixTransforms");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.InitiateSolver
void RootMotion::FinalIK::BipedIK::InitiateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::InitiateSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIK.UpdateSolver
void RootMotion::FinalIK::BipedIK::UpdateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIK::UpdateSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.BipedIKSolvers
#include "RootMotion/FinalIK/BipedIKSolvers.hpp"
// Including type: RootMotion.FinalIK.IKSolverLimb
#include "RootMotion/FinalIK/IKSolverLimb.hpp"
// Including type: RootMotion.FinalIK.IKSolverFABRIK
#include "RootMotion/FinalIK/IKSolverFABRIK.hpp"
// Including type: RootMotion.FinalIK.IKSolverLookAt
#include "RootMotion/FinalIK/IKSolverLookAt.hpp"
// Including type: RootMotion.FinalIK.IKSolverAim
#include "RootMotion/FinalIK/IKSolverAim.hpp"
// Including type: RootMotion.FinalIK.Constraints
#include "RootMotion/FinalIK/Constraints.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
// Including type: RootMotion.BipedReferences
#include "RootMotion/BipedReferences.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLimb leftFoot
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverLimb*& RootMotion::FinalIK::BipedIKSolvers::dyn_leftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIKSolvers::dyn_leftFoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftFoot"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverLimb**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLimb rightFoot
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverLimb*& RootMotion::FinalIK::BipedIKSolvers::dyn_rightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIKSolvers::dyn_rightFoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightFoot"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverLimb**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLimb leftHand
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverLimb*& RootMotion::FinalIK::BipedIKSolvers::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIKSolvers::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverLimb**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLimb rightHand
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverLimb*& RootMotion::FinalIK::BipedIKSolvers::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIKSolvers::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverLimb**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverFABRIK spine
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverFABRIK*& RootMotion::FinalIK::BipedIKSolvers::dyn_spine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIKSolvers::dyn_spine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spine"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverFABRIK**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLookAt lookAt
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverLookAt*& RootMotion::FinalIK::BipedIKSolvers::dyn_lookAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIKSolvers::dyn_lookAt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookAt"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverLookAt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverAim aim
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverAim*& RootMotion::FinalIK::BipedIKSolvers::dyn_aim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIKSolvers::dyn_aim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aim"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverAim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.Constraints pelvis
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::Constraints*& RootMotion::FinalIK::BipedIKSolvers::dyn_pelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIKSolvers::dyn_pelvis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvis"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::Constraints**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKSolverLimb[] _limbs
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IKSolverLimb*>& RootMotion::FinalIK::BipedIKSolvers::dyn__limbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIKSolvers::dyn__limbs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_limbs"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IKSolverLimb*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKSolver[] _ikSolvers
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IKSolver*>& RootMotion::FinalIK::BipedIKSolvers::dyn__ikSolvers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIKSolvers::dyn__ikSolvers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ikSolvers"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IKSolver*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.BipedIKSolvers.get_limbs
::ArrayW<::RootMotion::FinalIK::IKSolverLimb*> RootMotion::FinalIK::BipedIKSolvers::get_limbs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIKSolvers::get_limbs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_limbs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::RootMotion::FinalIK::IKSolverLimb*>, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIKSolvers.get_ikSolvers
::ArrayW<::RootMotion::FinalIK::IKSolver*> RootMotion::FinalIK::BipedIKSolvers::get_ikSolvers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIKSolvers::get_ikSolvers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ikSolvers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::RootMotion::FinalIK::IKSolver*>, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.BipedIKSolvers.AssignReferences
void RootMotion::FinalIK::BipedIKSolvers::AssignReferences(::RootMotion::BipedReferences* references) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::BipedIKSolvers::AssignReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, references);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.Constraint
#include "RootMotion/FinalIK/Constraint.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::Constraint::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Constraint::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single weight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Constraint::dyn_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Constraint::dyn_weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.Constraint.get_isValid
bool RootMotion::FinalIK::Constraint::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Constraint::get_isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Constraint.UpdateConstraint
void RootMotion::FinalIK::Constraint::UpdateConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Constraint::UpdateConstraint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.ConstraintPosition
#include "RootMotion/FinalIK/ConstraintPosition.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::ConstraintPosition::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintPosition::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.ConstraintPosition.UpdateConstraint
void RootMotion::FinalIK::ConstraintPosition::UpdateConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintPosition::UpdateConstraint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.ConstraintPositionOffset
#include "RootMotion/FinalIK/ConstraintPositionOffset.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::ConstraintPositionOffset::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintPositionOffset::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 defaultLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::ConstraintPositionOffset::dyn_defaultLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintPositionOffset::dyn_defaultLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::ConstraintPositionOffset::dyn_lastLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintPositionOffset::dyn_lastLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initiated
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::ConstraintPositionOffset::dyn_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintPositionOffset::dyn_initiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initiated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.ConstraintPositionOffset.get_positionChanged
bool RootMotion::FinalIK::ConstraintPositionOffset::get_positionChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintPositionOffset::get_positionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_positionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.ConstraintPositionOffset.UpdateConstraint
void RootMotion::FinalIK::ConstraintPositionOffset::UpdateConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintPositionOffset::UpdateConstraint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.ConstraintRotation
#include "RootMotion/FinalIK/ConstraintRotation.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::ConstraintRotation::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintRotation::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.ConstraintRotation.UpdateConstraint
void RootMotion::FinalIK::ConstraintRotation::UpdateConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintRotation::UpdateConstraint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.ConstraintRotationOffset
#include "RootMotion/FinalIK/ConstraintRotationOffset.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::ConstraintRotationOffset::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintRotationOffset::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion defaultRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::ConstraintRotationOffset::dyn_defaultRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintRotationOffset::dyn_defaultRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion defaultLocalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::ConstraintRotationOffset::dyn_defaultLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintRotationOffset::dyn_defaultLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultLocalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion lastLocalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::ConstraintRotationOffset::dyn_lastLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintRotationOffset::dyn_lastLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLocalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion defaultTargetLocalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::ConstraintRotationOffset::dyn_defaultTargetLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintRotationOffset::dyn_defaultTargetLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultTargetLocalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initiated
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::ConstraintRotationOffset::dyn_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintRotationOffset::dyn_initiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initiated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.ConstraintRotationOffset.get_rotationChanged
bool RootMotion::FinalIK::ConstraintRotationOffset::get_rotationChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintRotationOffset::get_rotationChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.ConstraintRotationOffset.UpdateConstraint
void RootMotion::FinalIK::ConstraintRotationOffset::UpdateConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ConstraintRotationOffset::UpdateConstraint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.Constraints
#include "RootMotion/FinalIK/Constraints.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::Constraints::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Constraints::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::Constraints::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Constraints::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 positionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::Constraints::dyn_positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Constraints::dyn_positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::Constraints::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Constraints::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single positionWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Constraints::dyn_positionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Constraints::dyn_positionWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::Constraints::dyn_rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Constraints::dyn_rotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::Constraints::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Constraints::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Constraints::dyn_rotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Constraints::dyn_rotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.Constraints.IsValid
bool RootMotion::FinalIK::Constraints::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Constraints::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Constraints.Initiate
void RootMotion::FinalIK::Constraints::Initiate(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Constraints::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.Constraints.Update
void RootMotion::FinalIK::Constraints::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Constraints::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.Finger
#include "RootMotion/FinalIK/Finger.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverLimb
#include "RootMotion/FinalIK/IKSolverLimb.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single weight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Finger::dyn_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Finger::dyn_rotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_rotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.Finger/RootMotion.FinalIK.DOF rotationDOF
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::Finger::DOF& RootMotion::FinalIK::Finger::dyn_rotationDOF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_rotationDOF");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationDOF"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::Finger::DOF*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fixBone1Twist
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::Finger::dyn_fixBone1Twist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_fixBone1Twist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixBone1Twist"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform bone1
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::Finger::dyn_bone1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_bone1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone1"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform bone2
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::Finger::dyn_bone2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_bone2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone2"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform bone3
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::Finger::dyn_bone3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_bone3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone3"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform tip
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::Finger::dyn_tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_tip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tip"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::Finger::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <initiated>k__BackingField
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::Finger::dyn_$initiated$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_$initiated$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<initiated>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKSolverLimb solver
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverLimb*& RootMotion::FinalIK::Finger::dyn_solver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_solver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solver"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverLimb**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion bone3RelativeToTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::Finger::dyn_bone3RelativeToTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_bone3RelativeToTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone3RelativeToTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 bone3DefaultLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::Finger::dyn_bone3DefaultLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_bone3DefaultLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone3DefaultLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion bone3DefaultLocalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::Finger::dyn_bone3DefaultLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_bone3DefaultLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone3DefaultLocalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 bone1Axis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::Finger::dyn_bone1Axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_bone1Axis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone1Axis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 tipAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::Finger::dyn_tipAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_tipAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tipAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 bone1TwistAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::Finger::dyn_bone1TwistAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::dyn_bone1TwistAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone1TwistAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.Finger.get_initiated
bool RootMotion::FinalIK::Finger::get_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::get_initiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Finger.set_initiated
void RootMotion::FinalIK::Finger::set_initiated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::set_initiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_initiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Finger.get_IKPosition
::UnityEngine::Vector3 RootMotion::FinalIK::Finger::get_IKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::get_IKPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IKPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Finger.set_IKPosition
void RootMotion::FinalIK::Finger::set_IKPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::set_IKPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IKPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Finger.get_IKRotation
::UnityEngine::Quaternion RootMotion::FinalIK::Finger::get_IKRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::get_IKRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IKRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Finger.set_IKRotation
void RootMotion::FinalIK::Finger::set_IKRotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::set_IKRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IKRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Finger.IsValid
bool RootMotion::FinalIK::Finger::IsValid(ByRef<::StringW> errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorMessage)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(errorMessage));
}
// Autogenerated method: RootMotion.FinalIK.Finger.Initiate
void RootMotion::FinalIK::Finger::Initiate(::UnityEngine::Transform* hand, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hand, index);
}
// Autogenerated method: RootMotion.FinalIK.Finger.FixTransforms
void RootMotion::FinalIK::Finger::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Finger.StoreDefaultLocalState
void RootMotion::FinalIK::Finger::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Finger.Update
void RootMotion::FinalIK::Finger::Update(float masterWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(masterWeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, masterWeight);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.Finger/RootMotion.FinalIK.DOF
#include "RootMotion/FinalIK/Finger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.Finger/RootMotion.FinalIK.DOF One
::RootMotion::FinalIK::Finger::DOF RootMotion::FinalIK::Finger::DOF::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::DOF::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::Finger::DOF>("RootMotion.FinalIK", "Finger/DOF", "One"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.Finger/RootMotion.FinalIK.DOF One
void RootMotion::FinalIK::Finger::DOF::_set_One(::RootMotion::FinalIK::Finger::DOF value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::DOF::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "Finger/DOF", "One", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.Finger/RootMotion.FinalIK.DOF Three
::RootMotion::FinalIK::Finger::DOF RootMotion::FinalIK::Finger::DOF::_get_Three() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::DOF::_get_Three");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::Finger::DOF>("RootMotion.FinalIK", "Finger/DOF", "Three"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.Finger/RootMotion.FinalIK.DOF Three
void RootMotion::FinalIK::Finger::DOF::_set_Three(::RootMotion::FinalIK::Finger::DOF value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::DOF::_set_Three");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "Finger/DOF", "Three", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::Finger::DOF::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Finger::DOF::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FingerRig
#include "RootMotion/FinalIK/FingerRig.hpp"
// Including type: RootMotion.FinalIK.Finger
#include "RootMotion/FinalIK/Finger.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single weight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FingerRig::dyn_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FingerRig::dyn_weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.Finger[] fingers
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::Finger*>& RootMotion::FinalIK::FingerRig::dyn_fingers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FingerRig::dyn_fingers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fingers"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::Finger*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <initiated>k__BackingField
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::FingerRig::dyn_$initiated$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FingerRig::dyn_$initiated$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<initiated>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.FingerRig.get_initiated
bool RootMotion::FinalIK::FingerRig::get_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FingerRig::get_initiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FingerRig.set_initiated
void RootMotion::FinalIK::FingerRig::set_initiated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FingerRig::set_initiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_initiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.FingerRig.IsValid
bool RootMotion::FinalIK::FingerRig::IsValid(ByRef<::StringW> errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FingerRig::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorMessage)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(errorMessage));
}
// Autogenerated method: RootMotion.FinalIK.FingerRig.AutoDetect
void RootMotion::FinalIK::FingerRig::AutoDetect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FingerRig::AutoDetect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoDetect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FingerRig.AddFinger
void RootMotion::FinalIK::FingerRig::AddFinger(::UnityEngine::Transform* bone1, ::UnityEngine::Transform* bone2, ::UnityEngine::Transform* bone3, ::UnityEngine::Transform* tip, ::UnityEngine::Transform* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FingerRig::AddFinger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFinger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bone1), ::il2cpp_utils::ExtractType(bone2), ::il2cpp_utils::ExtractType(bone3), ::il2cpp_utils::ExtractType(tip), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bone1, bone2, bone3, tip, target);
}
// Autogenerated method: RootMotion.FinalIK.FingerRig.RemoveFinger
void RootMotion::FinalIK::FingerRig::RemoveFinger(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FingerRig::RemoveFinger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveFinger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.FingerRig.AddChildrenRecursive
void RootMotion::FinalIK::FingerRig::AddChildrenRecursive(::UnityEngine::Transform* parent, ByRef<::ArrayW<::UnityEngine::Transform*>> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FingerRig::AddChildrenRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChildrenRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(array)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, byref(array));
}
// Autogenerated method: RootMotion.FinalIK.FingerRig.UpdateFingerSolvers
void RootMotion::FinalIK::FingerRig::UpdateFingerSolvers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FingerRig::UpdateFingerSolvers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFingerSolvers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FingerRig.FixFingerTransforms
void RootMotion::FinalIK::FingerRig::FixFingerTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FingerRig::FixFingerTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixFingerTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FingerRig.StoreDefaultLocalState
void RootMotion::FinalIK::FingerRig::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FingerRig::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FingerRig.InitiateSolver
void RootMotion::FinalIK::FingerRig::InitiateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FingerRig::InitiateSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FingerRig.UpdateSolver
void RootMotion::FinalIK::FingerRig::UpdateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FingerRig::UpdateSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FingerRig.FixTransforms
void RootMotion::FinalIK::FingerRig::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FingerRig::FixTransforms");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.Grounder
#include "RootMotion/FinalIK/Grounder.hpp"
// Including type: RootMotion.FinalIK.Grounder/RootMotion.FinalIK.GrounderDelegate
#include "RootMotion/FinalIK/Grounder_GrounderDelegate.hpp"
// Including type: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg
#include "RootMotion/FinalIK/Grounding_Leg.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single weight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounder::dyn_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::dyn_weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.Grounding solver
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::Grounding*& RootMotion::FinalIK::Grounder::dyn_solver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::dyn_solver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solver"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::Grounding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.Grounder/RootMotion.FinalIK.GrounderDelegate OnPreGrounder
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::Grounder::GrounderDelegate*& RootMotion::FinalIK::Grounder::dyn_OnPreGrounder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::dyn_OnPreGrounder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreGrounder"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::Grounder::GrounderDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.Grounder/RootMotion.FinalIK.GrounderDelegate OnPostGrounder
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::Grounder::GrounderDelegate*& RootMotion::FinalIK::Grounder::dyn_OnPostGrounder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::dyn_OnPostGrounder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPostGrounder"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::Grounder::GrounderDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <initiated>k__BackingField
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::Grounder::dyn_$initiated$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::dyn_$initiated$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<initiated>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.Grounder.get_initiated
bool RootMotion::FinalIK::Grounder::get_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::get_initiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounder.set_initiated
void RootMotion::FinalIK::Grounder::set_initiated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::set_initiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_initiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounder.ResetPosition
void RootMotion::FinalIK::Grounder::ResetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::ResetPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounder.GetSpineOffsetTarget
::UnityEngine::Vector3 RootMotion::FinalIK::Grounder::GetSpineOffsetTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::GetSpineOffsetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpineOffsetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounder.LogWarning
void RootMotion::FinalIK::Grounder::LogWarning(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.Grounder.GetLegSpineBendVector
::UnityEngine::Vector3 RootMotion::FinalIK::Grounder::GetLegSpineBendVector(::RootMotion::FinalIK::Grounding::Leg* leg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::GetLegSpineBendVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLegSpineBendVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leg)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, leg);
}
// Autogenerated method: RootMotion.FinalIK.Grounder.GetLegSpineTangent
::UnityEngine::Vector3 RootMotion::FinalIK::Grounder::GetLegSpineTangent(::RootMotion::FinalIK::Grounding::Leg* leg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::GetLegSpineTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLegSpineTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leg)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, leg);
}
// Autogenerated method: RootMotion.FinalIK.Grounder.OpenUserManual
void RootMotion::FinalIK::Grounder::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounder.OpenScriptReference
void RootMotion::FinalIK::Grounder::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.Grounder/RootMotion.FinalIK.GrounderDelegate
#include "RootMotion/FinalIK/Grounder_GrounderDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.Grounder/RootMotion.FinalIK.GrounderDelegate.Invoke
void RootMotion::FinalIK::Grounder::GrounderDelegate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::GrounderDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounder/RootMotion.FinalIK.GrounderDelegate.BeginInvoke
::System::IAsyncResult* RootMotion::FinalIK::Grounder::GrounderDelegate::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::GrounderDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: RootMotion.FinalIK.Grounder/RootMotion.FinalIK.GrounderDelegate.EndInvoke
void RootMotion::FinalIK::Grounder::GrounderDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounder::GrounderDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.GrounderBipedIK
#include "RootMotion/FinalIK/GrounderBipedIK.hpp"
// Including type: RootMotion.FinalIK.BipedIK
#include "RootMotion/FinalIK/BipedIK.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverLimb
#include "RootMotion/FinalIK/IKSolverLimb.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.BipedIK ik
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::BipedIK*& RootMotion::FinalIK::GrounderBipedIK::dyn_ik() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::dyn_ik");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ik"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::BipedIK**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spineBend
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderBipedIK::dyn_spineBend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::dyn_spineBend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spineBend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spineSpeed
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderBipedIK::dyn_spineSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::dyn_spineSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spineSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] feet
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& RootMotion::FinalIK::GrounderBipedIK::dyn_feet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::dyn_feet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "feet"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion[] footRotations
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& RootMotion::FinalIK::GrounderBipedIK::dyn_footRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::dyn_footRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "footRotations"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 animatedPelvisLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::GrounderBipedIK::dyn_animatedPelvisLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::dyn_animatedPelvisLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animatedPelvisLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 solvedPelvisLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::GrounderBipedIK::dyn_solvedPelvisLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::dyn_solvedPelvisLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solvedPelvisLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 spineOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::GrounderBipedIK::dyn_spineOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::dyn_spineOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spineOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderBipedIK::dyn_lastWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::dyn_lastWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.GrounderBipedIK.IsReadyToInitiate
bool RootMotion::FinalIK::GrounderBipedIK::IsReadyToInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::IsReadyToInitiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsReadyToInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderBipedIK.Update
void RootMotion::FinalIK::GrounderBipedIK::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderBipedIK.Initiate
void RootMotion::FinalIK::GrounderBipedIK::Initiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderBipedIK.OnDisable
void RootMotion::FinalIK::GrounderBipedIK::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderBipedIK.OnSolverUpdate
void RootMotion::FinalIK::GrounderBipedIK::OnSolverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::OnSolverUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSolverUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderBipedIK.SetLegIK
void RootMotion::FinalIK::GrounderBipedIK::SetLegIK(::RootMotion::FinalIK::IKSolverLimb* limb, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::SetLegIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLegIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(limb), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, limb, index);
}
// Autogenerated method: RootMotion.FinalIK.GrounderBipedIK.OnPostSolverUpdate
void RootMotion::FinalIK::GrounderBipedIK::OnPostSolverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::OnPostSolverUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostSolverUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderBipedIK.OnDestroy
void RootMotion::FinalIK::GrounderBipedIK::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderBipedIK.OpenUserManual
void RootMotion::FinalIK::GrounderBipedIK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderBipedIK.OpenScriptReference
void RootMotion::FinalIK::GrounderBipedIK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderBipedIK.ResetPosition
void RootMotion::FinalIK::GrounderBipedIK::ResetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderBipedIK::ResetPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.GrounderFBBIK
#include "RootMotion/FinalIK/GrounderFBBIK.hpp"
// Including type: RootMotion.FinalIK.GrounderFBBIK/RootMotion.FinalIK.SpineEffector
#include "RootMotion/FinalIK/GrounderFBBIK_SpineEffector.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedIK
#include "RootMotion/FinalIK/FullBodyBipedIK.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKEffector
#include "RootMotion/FinalIK/IKEffector.hpp"
// Including type: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg
#include "RootMotion/FinalIK/Grounding_Leg.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.FullBodyBipedIK ik
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::FullBodyBipedIK*& RootMotion::FinalIK::GrounderFBBIK::dyn_ik() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::dyn_ik");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ik"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::FullBodyBipedIK**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spineBend
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderFBBIK::dyn_spineBend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::dyn_spineBend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spineBend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spineSpeed
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderFBBIK::dyn_spineSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::dyn_spineSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spineSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.GrounderFBBIK/RootMotion.FinalIK.SpineEffector[] spine
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::GrounderFBBIK::SpineEffector*>& RootMotion::FinalIK::GrounderFBBIK::dyn_spine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::dyn_spine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spine"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::GrounderFBBIK::SpineEffector*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] feet
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& RootMotion::FinalIK::GrounderFBBIK::dyn_feet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::dyn_feet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "feet"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 spineOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::GrounderFBBIK::dyn_spineOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::dyn_spineOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spineOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean firstSolve
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::GrounderFBBIK::dyn_firstSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::dyn_firstSolve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstSolve"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.GrounderFBBIK.OpenTutorial
void RootMotion::FinalIK::GrounderFBBIK::OpenTutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::OpenTutorial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenTutorial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderFBBIK.IsReadyToInitiate
bool RootMotion::FinalIK::GrounderFBBIK::IsReadyToInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::IsReadyToInitiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsReadyToInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderFBBIK.Update
void RootMotion::FinalIK::GrounderFBBIK::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderFBBIK.FixedUpdate
void RootMotion::FinalIK::GrounderFBBIK::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderFBBIK.LateUpdate
void RootMotion::FinalIK::GrounderFBBIK::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderFBBIK.Initiate
void RootMotion::FinalIK::GrounderFBBIK::Initiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderFBBIK.OnSolverUpdate
void RootMotion::FinalIK::GrounderFBBIK::OnSolverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::OnSolverUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSolverUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderFBBIK.SetLegIK
void RootMotion::FinalIK::GrounderFBBIK::SetLegIK(::RootMotion::FinalIK::IKEffector* effector, ::RootMotion::FinalIK::Grounding::Leg* leg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::SetLegIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLegIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effector), ::il2cpp_utils::ExtractType(leg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, effector, leg);
}
// Autogenerated method: RootMotion.FinalIK.GrounderFBBIK.OnDrawGizmosSelected
void RootMotion::FinalIK::GrounderFBBIK::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderFBBIK.OnDestroy
void RootMotion::FinalIK::GrounderFBBIK::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderFBBIK.OpenUserManual
void RootMotion::FinalIK::GrounderFBBIK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderFBBIK.OpenScriptReference
void RootMotion::FinalIK::GrounderFBBIK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderFBBIK.ResetPosition
void RootMotion::FinalIK::GrounderFBBIK::ResetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::ResetPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.GrounderFBBIK/RootMotion.FinalIK.SpineEffector
#include "RootMotion/FinalIK/GrounderFBBIK_SpineEffector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.FullBodyBipedEffector effectorType
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::FullBodyBipedEffector& RootMotion::FinalIK::GrounderFBBIK::SpineEffector::dyn_effectorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::SpineEffector::dyn_effectorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "effectorType"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::FullBodyBipedEffector*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single horizontalWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderFBBIK::SpineEffector::dyn_horizontalWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::SpineEffector::dyn_horizontalWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "horizontalWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single verticalWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderFBBIK::SpineEffector::dyn_verticalWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderFBBIK::SpineEffector::dyn_verticalWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verticalWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.GrounderIK
#include "RootMotion/FinalIK/GrounderIK.hpp"
// Including type: RootMotion.FinalIK.IK
#include "RootMotion/FinalIK/IK.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IK[] legs
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IK*>& RootMotion::FinalIK::GrounderIK::dyn_legs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::dyn_legs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "legs"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IK*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform pelvis
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::GrounderIK::dyn_pelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::dyn_pelvis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvis"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform characterRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::GrounderIK::dyn_characterRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::dyn_characterRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rootRotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderIK::dyn_rootRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::dyn_rootRotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rootRotationSpeed
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderIK::dyn_rootRotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::dyn_rootRotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootRotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxRootRotationAngle
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderIK::dyn_maxRootRotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::dyn_maxRootRotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRootRotationAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] feet
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& RootMotion::FinalIK::GrounderIK::dyn_feet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::dyn_feet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "feet"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion[] footRotations
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& RootMotion::FinalIK::GrounderIK::dyn_footRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::dyn_footRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "footRotations"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 animatedPelvisLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::GrounderIK::dyn_animatedPelvisLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::dyn_animatedPelvisLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animatedPelvisLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 solvedPelvisLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::GrounderIK::dyn_solvedPelvisLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::dyn_solvedPelvisLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solvedPelvisLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 solvedFeet
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::GrounderIK::dyn_solvedFeet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::dyn_solvedFeet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solvedFeet"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean solved
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::GrounderIK::dyn_solved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::dyn_solved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solved"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderIK::dyn_lastWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::dyn_lastWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody characterRootRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& RootMotion::FinalIK::GrounderIK::dyn_characterRootRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::dyn_characterRootRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterRootRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.GrounderIK.IsReadyToInitiate
bool RootMotion::FinalIK::GrounderIK::IsReadyToInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::IsReadyToInitiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsReadyToInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderIK.OnDisable
void RootMotion::FinalIK::GrounderIK::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderIK.Update
void RootMotion::FinalIK::GrounderIK::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderIK.Initiate
void RootMotion::FinalIK::GrounderIK::Initiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderIK.OnSolverUpdate
void RootMotion::FinalIK::GrounderIK::OnSolverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::OnSolverUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSolverUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderIK.SetLegIK
void RootMotion::FinalIK::GrounderIK::SetLegIK(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::SetLegIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLegIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.GrounderIK.OnPostSolverUpdate
void RootMotion::FinalIK::GrounderIK::OnPostSolverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::OnPostSolverUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostSolverUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderIK.OnDestroy
void RootMotion::FinalIK::GrounderIK::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderIK.OpenUserManual
void RootMotion::FinalIK::GrounderIK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderIK.OpenScriptReference
void RootMotion::FinalIK::GrounderIK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderIK.ResetPosition
void RootMotion::FinalIK::GrounderIK::ResetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderIK::ResetPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.GrounderQuadruped
#include "RootMotion/FinalIK/GrounderQuadruped.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IK
#include "RootMotion/FinalIK/IK.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.Grounding forelegSolver
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::Grounding*& RootMotion::FinalIK::GrounderQuadruped::dyn_forelegSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_forelegSolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forelegSolver"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::Grounding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rootRotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderQuadruped::dyn_rootRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_rootRotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minRootRotation
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderQuadruped::dyn_minRootRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_minRootRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minRootRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxRootRotation
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderQuadruped::dyn_maxRootRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_maxRootRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRootRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rootRotationSpeed
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderQuadruped::dyn_rootRotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_rootRotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootRotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxLegOffset
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderQuadruped::dyn_maxLegOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_maxLegOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLegOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxForeLegOffset
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderQuadruped::dyn_maxForeLegOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_maxForeLegOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxForeLegOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maintainHeadRotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderQuadruped::dyn_maintainHeadRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_maintainHeadRotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maintainHeadRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform characterRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::GrounderQuadruped::dyn_characterRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_characterRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform pelvis
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::GrounderQuadruped::dyn_pelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_pelvis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvis"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform lastSpineBone
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::GrounderQuadruped::dyn_lastSpineBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_lastSpineBone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastSpineBone"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform head
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::GrounderQuadruped::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IK[] legs
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IK*>& RootMotion::FinalIK::GrounderQuadruped::dyn_legs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_legs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "legs"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IK*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IK[] forelegs
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IK*>& RootMotion::FinalIK::GrounderQuadruped::dyn_forelegs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_forelegs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forelegs"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IK*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 gravity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::GrounderQuadruped::dyn_gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_gravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gravity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.GrounderQuadruped/RootMotion.FinalIK.Foot[] feet
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::GrounderQuadruped::Foot>& RootMotion::FinalIK::GrounderQuadruped::dyn_feet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_feet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "feet"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::GrounderQuadruped::Foot>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 animatedPelvisLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::GrounderQuadruped::dyn_animatedPelvisLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_animatedPelvisLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animatedPelvisLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion animatedPelvisLocalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::GrounderQuadruped::dyn_animatedPelvisLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_animatedPelvisLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animatedPelvisLocalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion animatedHeadLocalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::GrounderQuadruped::dyn_animatedHeadLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_animatedHeadLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animatedHeadLocalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 solvedPelvisLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::GrounderQuadruped::dyn_solvedPelvisLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_solvedPelvisLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solvedPelvisLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion solvedPelvisLocalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::GrounderQuadruped::dyn_solvedPelvisLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_solvedPelvisLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solvedPelvisLocalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion solvedHeadLocalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::GrounderQuadruped::dyn_solvedHeadLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_solvedHeadLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solvedHeadLocalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 solvedFeet
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::GrounderQuadruped::dyn_solvedFeet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_solvedFeet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solvedFeet"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean solved
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::GrounderQuadruped::dyn_solved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_solved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solved"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single angle
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderQuadruped::dyn_angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_angle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform forefeetRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::GrounderQuadruped::dyn_forefeetRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_forefeetRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forefeetRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion headRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::GrounderQuadruped::dyn_headRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_headRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::GrounderQuadruped::dyn_lastWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_lastWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody characterRootRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& RootMotion::FinalIK::GrounderQuadruped::dyn_characterRootRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::dyn_characterRootRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterRootRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.IsReadyToInitiate
bool RootMotion::FinalIK::GrounderQuadruped::IsReadyToInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::IsReadyToInitiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsReadyToInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.IsReadyToInitiateLegs
bool RootMotion::FinalIK::GrounderQuadruped::IsReadyToInitiateLegs(::ArrayW<::RootMotion::FinalIK::IK*> ikComponents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::IsReadyToInitiateLegs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsReadyToInitiateLegs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ikComponents)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ikComponents);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.OnDisable
void RootMotion::FinalIK::GrounderQuadruped::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.Update
void RootMotion::FinalIK::GrounderQuadruped::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.Initiate
void RootMotion::FinalIK::GrounderQuadruped::Initiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.InitiateFeet
::ArrayW<::UnityEngine::Transform*> RootMotion::FinalIK::GrounderQuadruped::InitiateFeet(::ArrayW<::RootMotion::FinalIK::IK*> ikComponents, ByRef<::ArrayW<::RootMotion::FinalIK::GrounderQuadruped::Foot>> f, int indexOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::InitiateFeet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateFeet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ikComponents), ::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(indexOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Transform*>, false>(this, ___internal__method, ikComponents, byref(f), indexOffset);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.LateUpdate
void RootMotion::FinalIK::GrounderQuadruped::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.RootRotation
void RootMotion::FinalIK::GrounderQuadruped::RootRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::RootRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RootRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.OnSolverUpdate
void RootMotion::FinalIK::GrounderQuadruped::OnSolverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::OnSolverUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSolverUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.UpdateForefeetRoot
void RootMotion::FinalIK::GrounderQuadruped::UpdateForefeetRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::UpdateForefeetRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateForefeetRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.SetFootIK
void RootMotion::FinalIK::GrounderQuadruped::SetFootIK(::RootMotion::FinalIK::GrounderQuadruped::Foot foot, float maxOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::SetFootIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFootIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(foot), ::il2cpp_utils::ExtractType(maxOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, foot, maxOffset);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.OnPostSolverUpdate
void RootMotion::FinalIK::GrounderQuadruped::OnPostSolverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::OnPostSolverUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostSolverUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.OnDestroy
void RootMotion::FinalIK::GrounderQuadruped::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.DestroyLegs
void RootMotion::FinalIK::GrounderQuadruped::DestroyLegs(::ArrayW<::RootMotion::FinalIK::IK*> ikComponents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::DestroyLegs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyLegs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ikComponents)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ikComponents);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.OpenUserManual
void RootMotion::FinalIK::GrounderQuadruped::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.OpenScriptReference
void RootMotion::FinalIK::GrounderQuadruped::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped.ResetPosition
void RootMotion::FinalIK::GrounderQuadruped::ResetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::ResetPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.GrounderQuadruped/RootMotion.FinalIK.Foot
#include "RootMotion/FinalIK/GrounderQuadruped.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg
#include "RootMotion/FinalIK/Grounding_Leg.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver solver
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver*& RootMotion::FinalIK::GrounderQuadruped::Foot::dyn_solver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::Foot::dyn_solver");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solver"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::GrounderQuadruped::Foot::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::Foot::dyn_transform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::GrounderQuadruped::Foot::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::Foot::dyn_rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg leg
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::Grounding::Leg*& RootMotion::FinalIK::GrounderQuadruped::Foot::dyn_leg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::Foot::dyn_leg");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leg"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::Grounding::Leg**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.GrounderQuadruped/RootMotion.FinalIK.Foot..ctor
RootMotion::FinalIK::GrounderQuadruped::Foot::Foot(::RootMotion::FinalIK::IKSolver* solver, ::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderQuadruped::Foot::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver, transform);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.GrounderVRIK
#include "RootMotion/FinalIK/GrounderVRIK.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset
#include "RootMotion/FinalIK/IKSolverVR_PositionOffset.hpp"
// Including type: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg
#include "RootMotion/FinalIK/Grounding_Leg.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.VRIK ik
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::VRIK*& RootMotion::FinalIK::GrounderVRIK::dyn_ik() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderVRIK::dyn_ik");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ik"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::VRIK**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] feet
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& RootMotion::FinalIK::GrounderVRIK::dyn_feet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderVRIK::dyn_feet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "feet"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.GrounderVRIK.OpenTutorial
void RootMotion::FinalIK::GrounderVRIK::OpenTutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderVRIK::OpenTutorial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenTutorial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderVRIK.IsReadyToInitiate
bool RootMotion::FinalIK::GrounderVRIK::IsReadyToInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderVRIK::IsReadyToInitiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsReadyToInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderVRIK.Update
void RootMotion::FinalIK::GrounderVRIK::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderVRIK::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderVRIK.Initiate
void RootMotion::FinalIK::GrounderVRIK::Initiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderVRIK::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderVRIK.OnSolverUpdate
void RootMotion::FinalIK::GrounderVRIK::OnSolverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderVRIK::OnSolverUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSolverUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderVRIK.SetLegIK
void RootMotion::FinalIK::GrounderVRIK::SetLegIK(::RootMotion::FinalIK::IKSolverVR::PositionOffset positionOffset, ::UnityEngine::Transform* bone, ::RootMotion::FinalIK::Grounding::Leg* leg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderVRIK::SetLegIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLegIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positionOffset), ::il2cpp_utils::ExtractType(bone), ::il2cpp_utils::ExtractType(leg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positionOffset, bone, leg);
}
// Autogenerated method: RootMotion.FinalIK.GrounderVRIK.OnPostSolverUpdate
void RootMotion::FinalIK::GrounderVRIK::OnPostSolverUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderVRIK::OnPostSolverUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostSolverUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderVRIK.OnDrawGizmosSelected
void RootMotion::FinalIK::GrounderVRIK::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderVRIK::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderVRIK.OnDestroy
void RootMotion::FinalIK::GrounderVRIK::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderVRIK::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderVRIK.OpenUserManual
void RootMotion::FinalIK::GrounderVRIK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderVRIK::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderVRIK.OpenScriptReference
void RootMotion::FinalIK::GrounderVRIK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderVRIK::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.GrounderVRIK.ResetPosition
void RootMotion::FinalIK::GrounderVRIK::ResetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::GrounderVRIK::ResetPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.Grounding
#include "RootMotion/FinalIK/Grounding.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg
#include "RootMotion/FinalIK/Grounding_Leg.hpp"
// Including type: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Pelvis
#include "RootMotion/FinalIK/Grounding_Pelvis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask layers
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& RootMotion::FinalIK::Grounding::dyn_layers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_layers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layers"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxStep
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::dyn_maxStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_maxStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single heightOffset
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::dyn_heightOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_heightOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heightOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single footSpeed
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::dyn_footSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_footSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "footSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single footRadius
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::dyn_footRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_footRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "footRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single footCenterOffset
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::dyn_footCenterOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_footCenterOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "footCenterOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single prediction
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::dyn_prediction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_prediction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prediction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single footRotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::dyn_footRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_footRotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "footRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single footRotationSpeed
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::dyn_footRotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_footRotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "footRotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxFootRotationAngle
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::dyn_maxFootRotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_maxFootRotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxFootRotationAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rotateSolver
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::Grounding::dyn_rotateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_rotateSolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotateSolver"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pelvisSpeed
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::dyn_pelvisSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_pelvisSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvisSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pelvisDamper
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::dyn_pelvisDamper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_pelvisDamper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvisDamper"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lowerPelvisWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::dyn_lowerPelvisWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_lowerPelvisWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lowerPelvisWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single liftPelvisWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::dyn_liftPelvisWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_liftPelvisWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "liftPelvisWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rootSphereCastRadius
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::dyn_rootSphereCastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_rootSphereCastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootSphereCastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean overstepFallsDown
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::Grounding::dyn_overstepFallsDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_overstepFallsDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overstepFallsDown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Quality quality
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::Grounding::Quality& RootMotion::FinalIK::Grounding::dyn_quality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_quality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quality"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::Grounding::Quality*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg[] <legs>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::Grounding::Leg*>& RootMotion::FinalIK::Grounding::dyn_$legs$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_$legs$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<legs>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::Grounding::Leg*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Pelvis <pelvis>k__BackingField
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::Grounding::Pelvis*& RootMotion::FinalIK::Grounding::dyn_$pelvis$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_$pelvis$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pelvis>k__BackingField"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::Grounding::Pelvis**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isGrounded>k__BackingField
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::Grounding::dyn_$isGrounded$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_$isGrounded$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isGrounded>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <root>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::Grounding::dyn_$root$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_$root$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<root>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit <rootHit>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& RootMotion::FinalIK::Grounding::dyn_$rootHit$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_$rootHit$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rootHit>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initiated
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::Grounding::dyn_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::dyn_initiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initiated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.get_legs
::ArrayW<::RootMotion::FinalIK::Grounding::Leg*> RootMotion::FinalIK::Grounding::get_legs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::get_legs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_legs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::RootMotion::FinalIK::Grounding::Leg*>, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.set_legs
void RootMotion::FinalIK::Grounding::set_legs(::ArrayW<::RootMotion::FinalIK::Grounding::Leg*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::set_legs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_legs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.get_pelvis
::RootMotion::FinalIK::Grounding::Pelvis* RootMotion::FinalIK::Grounding::get_pelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::get_pelvis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pelvis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::Grounding::Pelvis*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.set_pelvis
void RootMotion::FinalIK::Grounding::set_pelvis(::RootMotion::FinalIK::Grounding::Pelvis* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::set_pelvis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pelvis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.get_isGrounded
bool RootMotion::FinalIK::Grounding::get_isGrounded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::get_isGrounded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isGrounded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.set_isGrounded
void RootMotion::FinalIK::Grounding::set_isGrounded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::set_isGrounded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isGrounded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.get_root
::UnityEngine::Transform* RootMotion::FinalIK::Grounding::get_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::get_root");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_root", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.set_root
void RootMotion::FinalIK::Grounding::set_root(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::set_root");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_root", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.get_rootHit
::UnityEngine::RaycastHit RootMotion::FinalIK::Grounding::get_rootHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::get_rootHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.set_rootHit
void RootMotion::FinalIK::Grounding::set_rootHit(::UnityEngine::RaycastHit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::set_rootHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rootHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.get_rootGrounded
bool RootMotion::FinalIK::Grounding::get_rootGrounded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::get_rootGrounded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootGrounded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.get_up
::UnityEngine::Vector3 RootMotion::FinalIK::Grounding::get_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::get_up");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_up", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.get_useRootRotation
bool RootMotion::FinalIK::Grounding::get_useRootRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::get_useRootRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useRootRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.GetRootHit
::UnityEngine::RaycastHit RootMotion::FinalIK::Grounding::GetRootHit(float maxDistanceMlp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::GetRootHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxDistanceMlp)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit, false>(this, ___internal__method, maxDistanceMlp);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.IsValid
bool RootMotion::FinalIK::Grounding::IsValid(ByRef<::StringW> errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorMessage)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(errorMessage));
}
// Autogenerated method: RootMotion.FinalIK.Grounding.Initiate
void RootMotion::FinalIK::Grounding::Initiate(::UnityEngine::Transform* root, ::ArrayW<::UnityEngine::Transform*> feet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(feet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, root, feet);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.Update
void RootMotion::FinalIK::Grounding::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.GetLegsPlaneNormal
::UnityEngine::Vector3 RootMotion::FinalIK::Grounding::GetLegsPlaneNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::GetLegsPlaneNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLegsPlaneNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.Reset
void RootMotion::FinalIK::Grounding::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.LogWarning
void RootMotion::FinalIK::Grounding::LogWarning(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.GetVerticalOffset
float RootMotion::FinalIK::Grounding::GetVerticalOffset(::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::GetVerticalOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVerticalOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, p1, p2);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.Flatten
::UnityEngine::Vector3 RootMotion::FinalIK::Grounding::Flatten(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Flatten");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flatten", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, v);
}
// Autogenerated method: RootMotion.FinalIK.Grounding.GetFootCenterOffset
::UnityEngine::Vector3 RootMotion::FinalIK::Grounding::GetFootCenterOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::GetFootCenterOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFootCenterOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Quality
#include "RootMotion/FinalIK/Grounding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Quality Fastest
::RootMotion::FinalIK::Grounding::Quality RootMotion::FinalIK::Grounding::Quality::_get_Fastest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Quality::_get_Fastest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::Grounding::Quality>("RootMotion.FinalIK", "Grounding/Quality", "Fastest"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Quality Fastest
void RootMotion::FinalIK::Grounding::Quality::_set_Fastest(::RootMotion::FinalIK::Grounding::Quality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Quality::_set_Fastest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "Grounding/Quality", "Fastest", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Quality Simple
::RootMotion::FinalIK::Grounding::Quality RootMotion::FinalIK::Grounding::Quality::_get_Simple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Quality::_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::Grounding::Quality>("RootMotion.FinalIK", "Grounding/Quality", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Quality Simple
void RootMotion::FinalIK::Grounding::Quality::_set_Simple(::RootMotion::FinalIK::Grounding::Quality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Quality::_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "Grounding/Quality", "Simple", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Quality Best
::RootMotion::FinalIK::Grounding::Quality RootMotion::FinalIK::Grounding::Quality::_get_Best() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Quality::_get_Best");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::Grounding::Quality>("RootMotion.FinalIK", "Grounding/Quality", "Best"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Quality Best
void RootMotion::FinalIK::Grounding::Quality::_set_Best(::RootMotion::FinalIK::Grounding::Quality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Quality::_set_Best");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "Grounding/Quality", "Best", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::Grounding::Quality::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Quality::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg
#include "RootMotion/FinalIK/Grounding_Leg.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isGrounded>k__BackingField
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::Grounding::Leg::dyn_$isGrounded$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_$isGrounded$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isGrounded>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <IKPosition>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::Grounding::Leg::dyn_$IKPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_$IKPosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IKPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::Grounding::Leg::dyn_rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_rotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <initiated>k__BackingField
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::Grounding::Leg::dyn_$initiated$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_$initiated$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<initiated>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <heightFromGround>k__BackingField
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::Leg::dyn_$heightFromGround$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_$heightFromGround$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<heightFromGround>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <velocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::Grounding::Leg::dyn_$velocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_$velocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<velocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <transform>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::Grounding::Leg::dyn_$transform$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_$transform$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<transform>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <IKOffset>k__BackingField
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::Leg::dyn_$IKOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_$IKOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IKOffset>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean invertFootCenter
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::Grounding::Leg::dyn_invertFootCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_invertFootCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invertFootCenter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit <heelHit>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& RootMotion::FinalIK::Grounding::Leg::dyn_$heelHit$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_$heelHit$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<heelHit>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit <capsuleHit>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& RootMotion::FinalIK::Grounding::Leg::dyn_$capsuleHit$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_$capsuleHit$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<capsuleHit>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.Grounding grounding
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::Grounding*& RootMotion::FinalIK::Grounding::Leg::dyn_grounding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_grounding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grounding"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::Grounding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastTime
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::Leg::dyn_lastTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_lastTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single deltaTime
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::Leg::dyn_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_deltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::Grounding::Leg::dyn_lastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_lastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion toHitNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::Grounding::Leg::dyn_toHitNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_toHitNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toHitNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion r
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::Grounding::Leg::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_r");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 up
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::Grounding::Leg::dyn_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_up");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "up"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean doOverrideFootPosition
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::Grounding::Leg::dyn_doOverrideFootPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_doOverrideFootPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doOverrideFootPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 overrideFootPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::Grounding::Leg::dyn_overrideFootPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_overrideFootPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideFootPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 transformPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::Grounding::Leg::dyn_transformPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::dyn_transformPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.get_isGrounded
bool RootMotion::FinalIK::Grounding::Leg::get_isGrounded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::get_isGrounded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isGrounded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.set_isGrounded
void RootMotion::FinalIK::Grounding::Leg::set_isGrounded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::set_isGrounded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isGrounded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.get_IKPosition
::UnityEngine::Vector3 RootMotion::FinalIK::Grounding::Leg::get_IKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::get_IKPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IKPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.set_IKPosition
void RootMotion::FinalIK::Grounding::Leg::set_IKPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::set_IKPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IKPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.get_initiated
bool RootMotion::FinalIK::Grounding::Leg::get_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::get_initiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.set_initiated
void RootMotion::FinalIK::Grounding::Leg::set_initiated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::set_initiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_initiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.get_heightFromGround
float RootMotion::FinalIK::Grounding::Leg::get_heightFromGround() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::get_heightFromGround");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_heightFromGround", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.set_heightFromGround
void RootMotion::FinalIK::Grounding::Leg::set_heightFromGround(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::set_heightFromGround");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_heightFromGround", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.get_velocity
::UnityEngine::Vector3 RootMotion::FinalIK::Grounding::Leg::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.set_velocity
void RootMotion::FinalIK::Grounding::Leg::set_velocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::set_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.get_transform
::UnityEngine::Transform* RootMotion::FinalIK::Grounding::Leg::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.set_transform
void RootMotion::FinalIK::Grounding::Leg::set_transform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::set_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.get_IKOffset
float RootMotion::FinalIK::Grounding::Leg::get_IKOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::get_IKOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IKOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.set_IKOffset
void RootMotion::FinalIK::Grounding::Leg::set_IKOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::set_IKOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IKOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.get_heelHit
::UnityEngine::RaycastHit RootMotion::FinalIK::Grounding::Leg::get_heelHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::get_heelHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_heelHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.set_heelHit
void RootMotion::FinalIK::Grounding::Leg::set_heelHit(::UnityEngine::RaycastHit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::set_heelHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_heelHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.get_capsuleHit
::UnityEngine::RaycastHit RootMotion::FinalIK::Grounding::Leg::get_capsuleHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::get_capsuleHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_capsuleHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.set_capsuleHit
void RootMotion::FinalIK::Grounding::Leg::set_capsuleHit(::UnityEngine::RaycastHit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::set_capsuleHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_capsuleHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.get_GetHitPoint
::UnityEngine::RaycastHit RootMotion::FinalIK::Grounding::Leg::get_GetHitPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::get_GetHitPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GetHitPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.get_stepHeightFromGround
float RootMotion::FinalIK::Grounding::Leg::get_stepHeightFromGround() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::get_stepHeightFromGround");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stepHeightFromGround", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.get_rootYOffset
float RootMotion::FinalIK::Grounding::Leg::get_rootYOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::get_rootYOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootYOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.SetFootPosition
void RootMotion::FinalIK::Grounding::Leg::SetFootPosition(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::SetFootPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFootPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.Initiate
void RootMotion::FinalIK::Grounding::Leg::Initiate(::RootMotion::FinalIK::Grounding* grounding, ::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grounding), ::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grounding, transform);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.OnEnable
void RootMotion::FinalIK::Grounding::Leg::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.Reset
void RootMotion::FinalIK::Grounding::Leg::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.Process
void RootMotion::FinalIK::Grounding::Leg::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.GetCapsuleHit
::UnityEngine::RaycastHit RootMotion::FinalIK::Grounding::Leg::GetCapsuleHit(::UnityEngine::Vector3 offsetFromHeel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::GetCapsuleHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCapsuleHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offsetFromHeel)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit, false>(this, ___internal__method, offsetFromHeel);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.GetRaycastHit
::UnityEngine::RaycastHit RootMotion::FinalIK::Grounding::Leg::GetRaycastHit(::UnityEngine::Vector3 offsetFromHeel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::GetRaycastHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRaycastHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offsetFromHeel)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit, false>(this, ___internal__method, offsetFromHeel);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.RotateNormal
::UnityEngine::Vector3 RootMotion::FinalIK::Grounding::Leg::RotateNormal(::UnityEngine::Vector3 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::RotateNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, normal);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.SetFootToPoint
void RootMotion::FinalIK::Grounding::Leg::SetFootToPoint(::UnityEngine::Vector3 normal, ::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::SetFootToPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFootToPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(point)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, normal, point);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.SetFootToPlane
void RootMotion::FinalIK::Grounding::Leg::SetFootToPlane(::UnityEngine::Vector3 planeNormal, ::UnityEngine::Vector3 planePoint, ::UnityEngine::Vector3 heelHitPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::SetFootToPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFootToPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(planeNormal), ::il2cpp_utils::ExtractType(planePoint), ::il2cpp_utils::ExtractType(heelHitPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, planeNormal, planePoint, heelHitPoint);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.GetHeightFromGround
float RootMotion::FinalIK::Grounding::Leg::GetHeightFromGround(::UnityEngine::Vector3 hitPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::GetHeightFromGround");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHeightFromGround", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hitPoint)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, hitPoint);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.RotateFoot
void RootMotion::FinalIK::Grounding::Leg::RotateFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::RotateFoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateFoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Leg.GetRotationOffsetTarget
::UnityEngine::Quaternion RootMotion::FinalIK::Grounding::Leg::GetRotationOffsetTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Leg::GetRotationOffsetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRotationOffsetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Pelvis
#include "RootMotion/FinalIK/Grounding_Pelvis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <IKOffset>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::Grounding::Pelvis::dyn_$IKOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Pelvis::dyn_$IKOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IKOffset>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <heightOffset>k__BackingField
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::Pelvis::dyn_$heightOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Pelvis::dyn_$heightOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<heightOffset>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.Grounding grounding
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::Grounding*& RootMotion::FinalIK::Grounding::Pelvis::dyn_grounding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Pelvis::dyn_grounding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "grounding"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::Grounding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastRootPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::Grounding::Pelvis::dyn_lastRootPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Pelvis::dyn_lastRootPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRootPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single damperF
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::Pelvis::dyn_damperF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Pelvis::dyn_damperF");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "damperF"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initiated
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::Grounding::Pelvis::dyn_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Pelvis::dyn_initiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initiated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastTime
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::Grounding::Pelvis::dyn_lastTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Pelvis::dyn_lastTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Pelvis.get_IKOffset
::UnityEngine::Vector3 RootMotion::FinalIK::Grounding::Pelvis::get_IKOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Pelvis::get_IKOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IKOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Pelvis.set_IKOffset
void RootMotion::FinalIK::Grounding::Pelvis::set_IKOffset(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Pelvis::set_IKOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IKOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Pelvis.get_heightOffset
float RootMotion::FinalIK::Grounding::Pelvis::get_heightOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Pelvis::get_heightOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_heightOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Pelvis.set_heightOffset
void RootMotion::FinalIK::Grounding::Pelvis::set_heightOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Pelvis::set_heightOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_heightOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Pelvis.Initiate
void RootMotion::FinalIK::Grounding::Pelvis::Initiate(::RootMotion::FinalIK::Grounding* grounding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Pelvis::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(grounding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, grounding);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Pelvis.Reset
void RootMotion::FinalIK::Grounding::Pelvis::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Pelvis::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Pelvis.OnEnable
void RootMotion::FinalIK::Grounding::Pelvis::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Pelvis::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.Grounding/RootMotion.FinalIK.Pelvis.Process
void RootMotion::FinalIK::Grounding::Pelvis::Process(float lowestOffset, float highestOffset, bool isGrounded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::Grounding::Pelvis::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowestOffset), ::il2cpp_utils::ExtractType(highestOffset), ::il2cpp_utils::ExtractType(isGrounded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowestOffset, highestOffset, isGrounded);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.AimIK
#include "RootMotion/FinalIK/AimIK.hpp"
// Including type: RootMotion.FinalIK.IKSolverAim
#include "RootMotion/FinalIK/IKSolverAim.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverAim solver
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverAim*& RootMotion::FinalIK::AimIK::dyn_solver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::AimIK::dyn_solver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solver"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverAim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.AimIK.OpenSetupTutorial
void RootMotion::FinalIK::AimIK::OpenSetupTutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::AimIK::OpenSetupTutorial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenSetupTutorial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.AimIK.SupportGroup
void RootMotion::FinalIK::AimIK::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::AimIK::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.AimIK.ASThread
void RootMotion::FinalIK::AimIK::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::AimIK::ASThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.AimIK.OpenUserManual
void RootMotion::FinalIK::AimIK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::AimIK::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.AimIK.OpenScriptReference
void RootMotion::FinalIK::AimIK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::AimIK::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.AimIK.GetIKSolver
::RootMotion::FinalIK::IKSolver* RootMotion::FinalIK::AimIK::GetIKSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::AimIK::GetIKSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.ArmIK
#include "RootMotion/FinalIK/ArmIK.hpp"
// Including type: RootMotion.FinalIK.IKSolverArm
#include "RootMotion/FinalIK/IKSolverArm.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverArm solver
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverArm*& RootMotion::FinalIK::ArmIK::dyn_solver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ArmIK::dyn_solver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solver"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverArm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.ArmIK.SupportGroup
void RootMotion::FinalIK::ArmIK::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ArmIK::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.ArmIK.ASThread
void RootMotion::FinalIK::ArmIK::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ArmIK::ASThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.ArmIK.OpenUserManual
void RootMotion::FinalIK::ArmIK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ArmIK::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.ArmIK.OpenScriptReference
void RootMotion::FinalIK::ArmIK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ArmIK::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.ArmIK.GetIKSolver
::RootMotion::FinalIK::IKSolver* RootMotion::FinalIK::ArmIK::GetIKSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::ArmIK::GetIKSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.CCDIK
#include "RootMotion/FinalIK/CCDIK.hpp"
// Including type: RootMotion.FinalIK.IKSolverCCD
#include "RootMotion/FinalIK/IKSolverCCD.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverCCD solver
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverCCD*& RootMotion::FinalIK::CCDIK::dyn_solver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::CCDIK::dyn_solver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solver"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverCCD**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.CCDIK.SupportGroup
void RootMotion::FinalIK::CCDIK::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::CCDIK::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.CCDIK.ASThread
void RootMotion::FinalIK::CCDIK::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::CCDIK::ASThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.CCDIK.OpenUserManual
void RootMotion::FinalIK::CCDIK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::CCDIK::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.CCDIK.OpenScriptReference
void RootMotion::FinalIK::CCDIK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::CCDIK::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.CCDIK.GetIKSolver
::RootMotion::FinalIK::IKSolver* RootMotion::FinalIK::CCDIK::GetIKSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::CCDIK::GetIKSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FABRIK
#include "RootMotion/FinalIK/FABRIK.hpp"
// Including type: RootMotion.FinalIK.IKSolverFABRIK
#include "RootMotion/FinalIK/IKSolverFABRIK.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverFABRIK solver
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverFABRIK*& RootMotion::FinalIK::FABRIK::dyn_solver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIK::dyn_solver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solver"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverFABRIK**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.FABRIK.SupportGroup
void RootMotion::FinalIK::FABRIK::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIK::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FABRIK.ASThread
void RootMotion::FinalIK::FABRIK::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIK::ASThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FABRIK.OpenUserManual
void RootMotion::FinalIK::FABRIK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIK::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FABRIK.OpenScriptReference
void RootMotion::FinalIK::FABRIK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIK::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FABRIK.GetIKSolver
::RootMotion::FinalIK::IKSolver* RootMotion::FinalIK::FABRIK::GetIKSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIK::GetIKSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FABRIKRoot
#include "RootMotion/FinalIK/FABRIKRoot.hpp"
// Including type: RootMotion.FinalIK.IKSolverFABRIKRoot
#include "RootMotion/FinalIK/IKSolverFABRIKRoot.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverFABRIKRoot solver
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverFABRIKRoot*& RootMotion::FinalIK::FABRIKRoot::dyn_solver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIKRoot::dyn_solver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solver"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverFABRIKRoot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.FABRIKRoot.SupportGroup
void RootMotion::FinalIK::FABRIKRoot::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIKRoot::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FABRIKRoot.ASThread
void RootMotion::FinalIK::FABRIKRoot::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIKRoot::ASThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FABRIKRoot.OpenUserManual
void RootMotion::FinalIK::FABRIKRoot::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIKRoot::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FABRIKRoot.OpenScriptReference
void RootMotion::FinalIK::FABRIKRoot::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIKRoot::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FABRIKRoot.GetIKSolver
::RootMotion::FinalIK::IKSolver* RootMotion::FinalIK::FABRIKRoot::GetIKSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIKRoot::GetIKSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FullBodyBipedIK
#include "RootMotion/FinalIK/FullBodyBipedIK.hpp"
// Including type: RootMotion.BipedReferences
#include "RootMotion/BipedReferences.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBodyBiped
#include "RootMotion/FinalIK/IKSolverFullBodyBiped.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.BipedReferences references
[[deprecated("Use field access instead!")]] ::RootMotion::BipedReferences*& RootMotion::FinalIK::FullBodyBipedIK::dyn_references() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedIK::dyn_references");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "references"))->offset;
  return *reinterpret_cast<::RootMotion::BipedReferences**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverFullBodyBiped solver
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverFullBodyBiped*& RootMotion::FinalIK::FullBodyBipedIK::dyn_solver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedIK::dyn_solver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solver"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverFullBodyBiped**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.FullBodyBipedIK.OpenSetupTutorial
void RootMotion::FinalIK::FullBodyBipedIK::OpenSetupTutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedIK::OpenSetupTutorial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenSetupTutorial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FullBodyBipedIK.OpenInspectorTutorial
void RootMotion::FinalIK::FullBodyBipedIK::OpenInspectorTutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedIK::OpenInspectorTutorial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInspectorTutorial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FullBodyBipedIK.SupportGroup
void RootMotion::FinalIK::FullBodyBipedIK::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedIK::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FullBodyBipedIK.ASThread
void RootMotion::FinalIK::FullBodyBipedIK::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedIK::ASThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FullBodyBipedIK.SetReferences
void RootMotion::FinalIK::FullBodyBipedIK::SetReferences(::RootMotion::BipedReferences* references, ::UnityEngine::Transform* rootNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedIK::SetReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(rootNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, references, rootNode);
}
// Autogenerated method: RootMotion.FinalIK.FullBodyBipedIK.ReferencesError
bool RootMotion::FinalIK::FullBodyBipedIK::ReferencesError(ByRef<::StringW> errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedIK::ReferencesError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReferencesError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorMessage)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(errorMessage));
}
// Autogenerated method: RootMotion.FinalIK.FullBodyBipedIK.ReferencesWarning
bool RootMotion::FinalIK::FullBodyBipedIK::ReferencesWarning(ByRef<::StringW> warningMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedIK::ReferencesWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReferencesWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(warningMessage)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(warningMessage));
}
// Autogenerated method: RootMotion.FinalIK.FullBodyBipedIK.Reinitiate
void RootMotion::FinalIK::FullBodyBipedIK::Reinitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedIK::Reinitiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reinitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FullBodyBipedIK.AutoDetectReferences
void RootMotion::FinalIK::FullBodyBipedIK::AutoDetectReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedIK::AutoDetectReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoDetectReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FullBodyBipedIK.OpenUserManual
void RootMotion::FinalIK::FullBodyBipedIK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedIK::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FullBodyBipedIK.OpenScriptReference
void RootMotion::FinalIK::FullBodyBipedIK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedIK::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FullBodyBipedIK.GetIKSolver
::RootMotion::FinalIK::IKSolver* RootMotion::FinalIK::FullBodyBipedIK::GetIKSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedIK::GetIKSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IK
#include "RootMotion/FinalIK/IK.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IK.GetIKSolver
::RootMotion::FinalIK::IKSolver* RootMotion::FinalIK::IK::GetIKSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IK::GetIKSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IK.OpenUserManual
void RootMotion::FinalIK::IK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IK::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IK.OpenScriptReference
void RootMotion::FinalIK::IK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IK::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IK.UpdateSolver
void RootMotion::FinalIK::IK::UpdateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IK::UpdateSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IK.InitiateSolver
void RootMotion::FinalIK::IK::InitiateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IK::InitiateSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IK.FixTransforms
void RootMotion::FinalIK::IK::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IK::FixTransforms");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKExecutionOrder
#include "RootMotion/FinalIK/IKExecutionOrder.hpp"
// Including type: RootMotion.FinalIK.IK
#include "RootMotion/FinalIK/IK.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IK[] IKComponents
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IK*>& RootMotion::FinalIK::IKExecutionOrder::dyn_IKComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKExecutionOrder::dyn_IKComponents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKComponents"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IK*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animator animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& RootMotion::FinalIK::IKExecutionOrder::dyn_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKExecutionOrder::dyn_animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fixedFrame
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKExecutionOrder::dyn_fixedFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKExecutionOrder::dyn_fixedFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixedFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKExecutionOrder.get_animatePhysics
bool RootMotion::FinalIK::IKExecutionOrder::get_animatePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKExecutionOrder::get_animatePhysics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animatePhysics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKExecutionOrder.Start
void RootMotion::FinalIK::IKExecutionOrder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKExecutionOrder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKExecutionOrder.Update
void RootMotion::FinalIK::IKExecutionOrder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKExecutionOrder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKExecutionOrder.FixedUpdate
void RootMotion::FinalIK::IKExecutionOrder::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKExecutionOrder::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKExecutionOrder.LateUpdate
void RootMotion::FinalIK::IKExecutionOrder::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKExecutionOrder::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKExecutionOrder.FixTransforms
void RootMotion::FinalIK::IKExecutionOrder::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKExecutionOrder::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.LegIK
#include "RootMotion/FinalIK/LegIK.hpp"
// Including type: RootMotion.FinalIK.IKSolverLeg
#include "RootMotion/FinalIK/IKSolverLeg.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLeg solver
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverLeg*& RootMotion::FinalIK::LegIK::dyn_solver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LegIK::dyn_solver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solver"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverLeg**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.LegIK.SupportGroup
void RootMotion::FinalIK::LegIK::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LegIK::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.LegIK.ASThread
void RootMotion::FinalIK::LegIK::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LegIK::ASThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.LegIK.OpenUserManual
void RootMotion::FinalIK::LegIK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LegIK::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.LegIK.OpenScriptReference
void RootMotion::FinalIK::LegIK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LegIK::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.LegIK.GetIKSolver
::RootMotion::FinalIK::IKSolver* RootMotion::FinalIK::LegIK::GetIKSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LegIK::GetIKSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.LimbIK
#include "RootMotion/FinalIK/LimbIK.hpp"
// Including type: RootMotion.FinalIK.IKSolverLimb
#include "RootMotion/FinalIK/IKSolverLimb.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLimb solver
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverLimb*& RootMotion::FinalIK::LimbIK::dyn_solver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LimbIK::dyn_solver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solver"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverLimb**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.LimbIK.SupportGroup
void RootMotion::FinalIK::LimbIK::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LimbIK::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.LimbIK.ASThread
void RootMotion::FinalIK::LimbIK::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LimbIK::ASThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.LimbIK.OpenUserManual
void RootMotion::FinalIK::LimbIK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LimbIK::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.LimbIK.OpenScriptReference
void RootMotion::FinalIK::LimbIK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LimbIK::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.LimbIK.GetIKSolver
::RootMotion::FinalIK::IKSolver* RootMotion::FinalIK::LimbIK::GetIKSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LimbIK::GetIKSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.LookAtIK
#include "RootMotion/FinalIK/LookAtIK.hpp"
// Including type: RootMotion.FinalIK.IKSolverLookAt
#include "RootMotion/FinalIK/IKSolverLookAt.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLookAt solver
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverLookAt*& RootMotion::FinalIK::LookAtIK::dyn_solver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LookAtIK::dyn_solver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solver"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverLookAt**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.LookAtIK.SupportGroup
void RootMotion::FinalIK::LookAtIK::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LookAtIK::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.LookAtIK.ASThread
void RootMotion::FinalIK::LookAtIK::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LookAtIK::ASThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.LookAtIK.OpenUserManual
void RootMotion::FinalIK::LookAtIK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LookAtIK::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.LookAtIK.OpenScriptReference
void RootMotion::FinalIK::LookAtIK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LookAtIK::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.LookAtIK.GetIKSolver
::RootMotion::FinalIK::IKSolver* RootMotion::FinalIK::LookAtIK::GetIKSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::LookAtIK::GetIKSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.TrigonometricIK
#include "RootMotion/FinalIK/TrigonometricIK.hpp"
// Including type: RootMotion.FinalIK.IKSolverTrigonometric
#include "RootMotion/FinalIK/IKSolverTrigonometric.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverTrigonometric solver
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverTrigonometric*& RootMotion::FinalIK::TrigonometricIK::dyn_solver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TrigonometricIK::dyn_solver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solver"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverTrigonometric**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.TrigonometricIK.SupportGroup
void RootMotion::FinalIK::TrigonometricIK::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TrigonometricIK::SupportGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.TrigonometricIK.ASThread
void RootMotion::FinalIK::TrigonometricIK::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TrigonometricIK::ASThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.TrigonometricIK.OpenUserManual
void RootMotion::FinalIK::TrigonometricIK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TrigonometricIK::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.TrigonometricIK.OpenScriptReference
void RootMotion::FinalIK::TrigonometricIK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TrigonometricIK::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.TrigonometricIK.GetIKSolver
::RootMotion::FinalIK::IKSolver* RootMotion::FinalIK::TrigonometricIK::GetIKSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TrigonometricIK::GetIKSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.VRIK
#include "RootMotion/FinalIK/VRIK.hpp"
// Including type: RootMotion.FinalIK.VRIK/RootMotion.FinalIK.References
#include "RootMotion/FinalIK/VRIK_References.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR
#include "RootMotion/FinalIK/IKSolverVR.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.VRIK/RootMotion.FinalIK.References references
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::VRIK::References*& RootMotion::FinalIK::VRIK::dyn_references() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::dyn_references");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "references"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::VRIK::References**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverVR solver
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverVR*& RootMotion::FinalIK::VRIK::dyn_solver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::dyn_solver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solver"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverVR**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.VRIK.OpenSetupTutorial
void RootMotion::FinalIK::VRIK::OpenSetupTutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::OpenSetupTutorial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenSetupTutorial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIK.AutoDetectReferences
void RootMotion::FinalIK::VRIK::AutoDetectReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::AutoDetectReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoDetectReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIK.GuessHandOrientations
void RootMotion::FinalIK::VRIK::GuessHandOrientations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::GuessHandOrientations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GuessHandOrientations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIK.OpenUserManual
void RootMotion::FinalIK::VRIK::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::OpenUserManual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIK.OpenScriptReference
void RootMotion::FinalIK::VRIK::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::OpenScriptReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIK.GetIKSolver
::RootMotion::FinalIK::IKSolver* RootMotion::FinalIK::VRIK::GetIKSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::GetIKSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIK.InitiateSolver
void RootMotion::FinalIK::VRIK::InitiateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::InitiateSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIK.UpdateSolver
void RootMotion::FinalIK::VRIK::UpdateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::UpdateSolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.VRIK/RootMotion.FinalIK.References
#include "RootMotion/FinalIK/VRIK_References.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform root
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform pelvis
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_pelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_pelvis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvis"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform spine
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_spine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_spine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spine"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform chest
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_chest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_chest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chest"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform neck
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_neck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_neck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "neck"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform head
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftShoulder
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_leftShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_leftShoulder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftShoulder"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftUpperArm
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_leftUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_leftUpperArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftUpperArm"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftForearm
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_leftForearm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_leftForearm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftForearm"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightShoulder
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_rightShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_rightShoulder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightShoulder"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightUpperArm
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_rightUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_rightUpperArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightUpperArm"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightForearm
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_rightForearm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_rightForearm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightForearm"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftThigh
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_leftThigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_leftThigh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftThigh"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftCalf
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_leftCalf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_leftCalf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftCalf"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftFoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_leftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_leftFoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftFoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftToes
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_leftToes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_leftToes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftToes"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightThigh
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_rightThigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_rightThigh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightThigh"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightCalf
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_rightCalf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_rightCalf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightCalf"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightFoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_rightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_rightFoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightFoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightToes
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::VRIK::References::dyn_rightToes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::dyn_rightToes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightToes"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.VRIK/RootMotion.FinalIK.References.get_isFilled
bool RootMotion::FinalIK::VRIK::References::get_isFilled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::get_isFilled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isFilled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIK/RootMotion.FinalIK.References.get_isEmpty
bool RootMotion::FinalIK::VRIK::References::get_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::get_isEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIK/RootMotion.FinalIK.References.GetTransforms
::ArrayW<::UnityEngine::Transform*> RootMotion::FinalIK::VRIK::References::GetTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::GetTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Transform*>, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIK/RootMotion.FinalIK.References.AutoDetectReferences
bool RootMotion::FinalIK::VRIK::References::AutoDetectReferences(::UnityEngine::Transform* root, ByRef<::RootMotion::FinalIK::VRIK::References*> references) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::VRIK::References::AutoDetectReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "VRIK/References", "AutoDetectReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractIndependentType<::RootMotion::FinalIK::VRIK::References*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, root, byref(references));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FABRIKChain
#include "RootMotion/FinalIK/FABRIKChain.hpp"
// Including type: RootMotion.FinalIK.FABRIK
#include "RootMotion/FinalIK/FABRIK.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.FABRIK ik
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::FABRIK*& RootMotion::FinalIK::FABRIKChain::dyn_ik() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIKChain::dyn_ik");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ik"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::FABRIK**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pull
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FABRIKChain::dyn_pull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIKChain::dyn_pull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pull"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pin
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FABRIKChain::dyn_pin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIKChain::dyn_pin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] children
[[deprecated("Use field access instead!")]] ::ArrayW<int>& RootMotion::FinalIK::FABRIKChain::dyn_children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIKChain::dyn_children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "children"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.FABRIKChain.IsValid
bool RootMotion::FinalIK::FABRIKChain::IsValid(ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIKChain::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.FABRIKChain.Initiate
void RootMotion::FinalIK::FABRIKChain::Initiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIKChain::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FABRIKChain.Stage1
void RootMotion::FinalIK::FABRIKChain::Stage1(::ArrayW<::RootMotion::FinalIK::FABRIKChain*> chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIKChain::Stage1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stage1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chain)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chain);
}
// Autogenerated method: RootMotion.FinalIK.FABRIKChain.Stage2
void RootMotion::FinalIK::FABRIKChain::Stage2(::UnityEngine::Vector3 rootPosition, ::ArrayW<::RootMotion::FinalIK::FABRIKChain*> chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIKChain::Stage2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stage2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootPosition), ::il2cpp_utils::ExtractType(chain)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootPosition, chain);
}
// Autogenerated method: RootMotion.FinalIK.FABRIKChain.GetCentroid
::UnityEngine::Vector3 RootMotion::FinalIK::FABRIKChain::GetCentroid(::ArrayW<::RootMotion::FinalIK::FABRIKChain*> chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FABRIKChain::GetCentroid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCentroid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chain)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, chain);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FBBIKArmBending
#include "RootMotion/FinalIK/FBBIKArmBending.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedIK
#include "RootMotion/FinalIK/FullBodyBipedIK.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.FullBodyBipedIK ik
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::FullBodyBipedIK*& RootMotion::FinalIK::FBBIKArmBending::dyn_ik() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKArmBending::dyn_ik");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ik"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::FullBodyBipedIK**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 bendDirectionOffsetLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::FBBIKArmBending::dyn_bendDirectionOffsetLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKArmBending::dyn_bendDirectionOffsetLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendDirectionOffsetLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 bendDirectionOffsetRight
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::FBBIKArmBending::dyn_bendDirectionOffsetRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKArmBending::dyn_bendDirectionOffsetRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendDirectionOffsetRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 characterSpaceBendOffsetLeft
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::FBBIKArmBending::dyn_characterSpaceBendOffsetLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKArmBending::dyn_characterSpaceBendOffsetLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterSpaceBendOffsetLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 characterSpaceBendOffsetRight
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::FBBIKArmBending::dyn_characterSpaceBendOffsetRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKArmBending::dyn_characterSpaceBendOffsetRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterSpaceBendOffsetRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion leftHandTargetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::FBBIKArmBending::dyn_leftHandTargetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKArmBending::dyn_leftHandTargetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandTargetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion rightHandTargetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::FBBIKArmBending::dyn_rightHandTargetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKArmBending::dyn_rightHandTargetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandTargetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initiated
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::FBBIKArmBending::dyn_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKArmBending::dyn_initiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initiated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKArmBending.LateUpdate
void RootMotion::FinalIK::FBBIKArmBending::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKArmBending::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKArmBending.OnPostFBBIK
void RootMotion::FinalIK::FBBIKArmBending::OnPostFBBIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKArmBending::OnPostFBBIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostFBBIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKArmBending.OnDestroy
void RootMotion::FinalIK::FBBIKArmBending::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKArmBending::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FBBIKHeadEffector
#include "RootMotion/FinalIK/FBBIKHeadEffector.hpp"
// Including type: RootMotion.FinalIK.FBBIKHeadEffector/RootMotion.FinalIK.BendBone
#include "RootMotion/FinalIK/FBBIKHeadEffector_BendBone.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedIK
#include "RootMotion/FinalIK/FullBodyBipedIK.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKEffector
#include "RootMotion/FinalIK/IKEffector.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate
#include "RootMotion/FinalIK/IKSolver_UpdateDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.FullBodyBipedIK ik
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::FullBodyBipedIK*& RootMotion::FinalIK::FBBIKHeadEffector::dyn_ik() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_ik");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ik"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::FullBodyBipedIK**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single positionWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_positionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_positionWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bodyWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_bodyWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_bodyWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single thighWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_thighWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_thighWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thighWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean handsPullBody
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::FBBIKHeadEffector::dyn_handsPullBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_handsPullBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handsPullBody"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_rotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_rotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bodyClampWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_bodyClampWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_bodyClampWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyClampWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single headClampWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_headClampWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_headClampWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headClampWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bendWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_bendWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_bendWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.FBBIKHeadEffector/RootMotion.FinalIK.BendBone[] bendBones
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::FBBIKHeadEffector::BendBone*>& RootMotion::FinalIK::FBBIKHeadEffector::dyn_bendBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_bendBones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendBones"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::FBBIKHeadEffector::BendBone*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CCDWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_CCDWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_CCDWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CCDWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single roll
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_roll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_roll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roll"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single damper
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_damper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_damper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "damper"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] CCDBones
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& RootMotion::FinalIK::FBBIKHeadEffector::dyn_CCDBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_CCDBones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CCDBones"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single postStretchWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_postStretchWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_postStretchWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "postStretchWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxStretch
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_maxStretch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_maxStretch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxStretch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stretchDamper
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_stretchDamper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_stretchDamper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stretchDamper"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fixHead
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::FBBIKHeadEffector::dyn_fixHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_fixHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixHead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] stretchBones
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& RootMotion::FinalIK::FBBIKHeadEffector::dyn_stretchBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_stretchBones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stretchBones"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 chestDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::FBBIKHeadEffector::dyn_chestDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_chestDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single chestDirectionWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_chestDirectionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_chestDirectionWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestDirectionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] chestBones
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& RootMotion::FinalIK::FBBIKHeadEffector::dyn_chestBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_chestBones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestBones"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate OnPostHeadEffectorFK
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::UpdateDelegate*& RootMotion::FinalIK::FBBIKHeadEffector::dyn_OnPostHeadEffectorFK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_OnPostHeadEffectorFK");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPostHeadEffectorFK"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::UpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::FBBIKHeadEffector::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 headToBody
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::FBBIKHeadEffector::dyn_headToBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_headToBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headToBody"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 shoulderCenterToHead
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::FBBIKHeadEffector::dyn_shoulderCenterToHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_shoulderCenterToHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shoulderCenterToHead"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 headToLeftThigh
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::FBBIKHeadEffector::dyn_headToLeftThigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_headToLeftThigh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headToLeftThigh"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 headToRightThigh
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::FBBIKHeadEffector::dyn_headToRightThigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_headToRightThigh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headToRightThigh"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 leftShoulderPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::FBBIKHeadEffector::dyn_leftShoulderPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_leftShoulderPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftShoulderPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 rightShoulderPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::FBBIKHeadEffector::dyn_rightShoulderPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_rightShoulderPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightShoulderPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single shoulderDist
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_shoulderDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_shoulderDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shoulderDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single leftShoulderDist
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_leftShoulderDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_leftShoulderDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftShoulderDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rightShoulderDist
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::dyn_rightShoulderDist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_rightShoulderDist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightShoulderDist"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion chestRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::FBBIKHeadEffector::dyn_chestRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_chestRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion headRotationRelativeToRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::FBBIKHeadEffector::dyn_headRotationRelativeToRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_headRotationRelativeToRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headRotationRelativeToRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion[] ccdDefaultLocalRotations
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& RootMotion::FinalIK::FBBIKHeadEffector::dyn_ccdDefaultLocalRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_ccdDefaultLocalRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ccdDefaultLocalRotations"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 headLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::FBBIKHeadEffector::dyn_headLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_headLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion headLocalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::FBBIKHeadEffector::dyn_headLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_headLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headLocalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] stretchLocalPositions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& RootMotion::FinalIK::FBBIKHeadEffector::dyn_stretchLocalPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_stretchLocalPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stretchLocalPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion[] stretchLocalRotations
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& RootMotion::FinalIK::FBBIKHeadEffector::dyn_stretchLocalRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_stretchLocalRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stretchLocalRotations"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] chestLocalPositions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& RootMotion::FinalIK::FBBIKHeadEffector::dyn_chestLocalPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_chestLocalPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestLocalPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion[] chestLocalRotations
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& RootMotion::FinalIK::FBBIKHeadEffector::dyn_chestLocalRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_chestLocalRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestLocalRotations"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 bendBonesCount
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::FBBIKHeadEffector::dyn_bendBonesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_bendBonesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendBonesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 ccdBonesCount
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::FBBIKHeadEffector::dyn_ccdBonesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_ccdBonesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ccdBonesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 stretchBonesCount
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::FBBIKHeadEffector::dyn_stretchBonesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_stretchBonesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stretchBonesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 chestBonesCount
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::FBBIKHeadEffector::dyn_chestBonesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::dyn_chestBonesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestBonesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.Start
void RootMotion::FinalIK::FBBIKHeadEffector::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.OnStoreDefaultLocalState
void RootMotion::FinalIK::FBBIKHeadEffector::OnStoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::OnStoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.OnFixTransforms
void RootMotion::FinalIK::FBBIKHeadEffector::OnFixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::OnFixTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.OnPreRead
void RootMotion::FinalIK::FBBIKHeadEffector::OnPreRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::OnPreRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.SpineBend
void RootMotion::FinalIK::FBBIKHeadEffector::SpineBend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::SpineBend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpineBend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.CCDPass
void RootMotion::FinalIK::FBBIKHeadEffector::CCDPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::CCDPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CCDPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.Iterate
void RootMotion::FinalIK::FBBIKHeadEffector::Iterate(int iteration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::Iterate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Iterate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iteration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, iteration);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.OnPostUpdate
void RootMotion::FinalIK::FBBIKHeadEffector::OnPostUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::OnPostUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.ChestDirection
void RootMotion::FinalIK::FBBIKHeadEffector::ChestDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::ChestDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChestDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.PostStretching
void RootMotion::FinalIK::FBBIKHeadEffector::PostStretching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::PostStretching");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostStretching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.LerpSolverPosition
void RootMotion::FinalIK::FBBIKHeadEffector::LerpSolverPosition(::RootMotion::FinalIK::IKEffector* effector, ::UnityEngine::Vector3 position, float weight, ::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::LerpSolverPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LerpSolverPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effector), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, effector, position, weight, offset);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.Solve
void RootMotion::FinalIK::FBBIKHeadEffector::Solve(ByRef<::UnityEngine::Vector3> pos1, ByRef<::UnityEngine::Vector3> pos2, float nominalDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::Solve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos1), ::il2cpp_utils::ExtractType(pos2), ::il2cpp_utils::ExtractType(nominalDistance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pos1), byref(pos2), nominalDistance);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector.OnDestroy
void RootMotion::FinalIK::FBBIKHeadEffector::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FBBIKHeadEffector/RootMotion.FinalIK.BendBone
#include "RootMotion/FinalIK/FBBIKHeadEffector_BendBone.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::FBBIKHeadEffector::BendBone::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::BendBone::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single weight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBBIKHeadEffector::BendBone::dyn_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::BendBone::dyn_weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion defaultLocalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::FBBIKHeadEffector::BendBone::dyn_defaultLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::BendBone::dyn_defaultLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultLocalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector/RootMotion.FinalIK.BendBone.StoreDefaultLocalState
void RootMotion::FinalIK::FBBIKHeadEffector::BendBone::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::BendBone::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBBIKHeadEffector/RootMotion.FinalIK.BendBone.FixTransforms
void RootMotion::FinalIK::FBBIKHeadEffector::BendBone::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBBIKHeadEffector::BendBone::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FBIKChain
#include "RootMotion/FinalIK/FBIKChain.hpp"
// Including type: RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.ChildConstraint
#include "RootMotion/FinalIK/FBIKChain_ChildConstraint.hpp"
// Including type: RootMotion.FinalIK.IKConstraintBend
#include "RootMotion/FinalIK/IKConstraintBend.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Node
#include "RootMotion/FinalIK/IKSolver_Node.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single maxLimbLength
float RootMotion::FinalIK::FBIKChain::_get_maxLimbLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::_get_maxLimbLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("RootMotion.FinalIK", "FBIKChain", "maxLimbLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Single maxLimbLength
void RootMotion::FinalIK::FBIKChain::_set_maxLimbLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::_set_maxLimbLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FBIKChain", "maxLimbLength", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single pin
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::dyn_pin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_pin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pull
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::dyn_pull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_pull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pull"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single push
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::dyn_push() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_push");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "push"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pushParent
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::dyn_pushParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_pushParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pushParent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single reach
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::dyn_reach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_reach");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reach"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.Smoothing reachSmoothing
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::FBIKChain::Smoothing& RootMotion::FinalIK::FBIKChain::dyn_reachSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_reachSmoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reachSmoothing"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::FBIKChain::Smoothing*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.Smoothing pushSmoothing
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::FBIKChain::Smoothing& RootMotion::FinalIK::FBIKChain::dyn_pushSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_pushSmoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pushSmoothing"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::FBIKChain::Smoothing*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Node[] nodes
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IKSolver::Node*>& RootMotion::FinalIK::FBIKChain::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IKSolver::Node*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] children
[[deprecated("Use field access instead!")]] ::ArrayW<int>& RootMotion::FinalIK::FBIKChain::dyn_children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "children"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.ChildConstraint[] childConstraints
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::FBIKChain::ChildConstraint*>& RootMotion::FinalIK::FBIKChain::dyn_childConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_childConstraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "childConstraints"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::FBIKChain::ChildConstraint*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKConstraintBend bendConstraint
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKConstraintBend*& RootMotion::FinalIK::FBIKChain::dyn_bendConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_bendConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendConstraint"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKConstraintBend**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rootLength
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::dyn_rootLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_rootLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initiated
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::FBIKChain::dyn_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_initiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initiated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single length
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single distance
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::dyn_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point p
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::Point*& RootMotion::FinalIK::FBIKChain::dyn_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_p");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::Point**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single reachForce
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::dyn_reachForce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_reachForce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reachForce"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single pullParentSum
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::dyn_pullParentSum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_pullParentSum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pullParentSum"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] crossFades
[[deprecated("Use field access instead!")]] ::ArrayW<float>& RootMotion::FinalIK::FBIKChain::dyn_crossFades() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_crossFades");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crossFades"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single sqrMag1
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::dyn_sqrMag1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_sqrMag1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sqrMag1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single sqrMag2
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::dyn_sqrMag2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_sqrMag2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sqrMag2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single sqrMagDif
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::dyn_sqrMagDif() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::dyn_sqrMagDif");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sqrMagDif"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SetNodes
void RootMotion::FinalIK::FBIKChain::SetNodes(::ArrayW<::UnityEngine::Transform*> boneTransforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::SetNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneTransforms)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, boneTransforms);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.GetNodeIndex
int RootMotion::FinalIK::FBIKChain::GetNodeIndex(::UnityEngine::Transform* boneTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::GetNodeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, boneTransform);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.IsValid
bool RootMotion::FinalIK::FBIKChain::IsValid(ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.Initiate
void RootMotion::FinalIK::FBIKChain::Initiate(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.ReadPose
void RootMotion::FinalIK::FBIKChain::ReadPose(::RootMotion::FinalIK::IKSolverFullBody* solver, bool fullBody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ReadPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(fullBody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver, fullBody);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.CalculateBoneLengths
void RootMotion::FinalIK::FBIKChain::CalculateBoneLengths(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::CalculateBoneLengths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateBoneLengths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.Reach
void RootMotion::FinalIK::FBIKChain::Reach(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::Reach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.Push
::UnityEngine::Vector3 RootMotion::FinalIK::FBIKChain::Push(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SolveTrigonometric
void RootMotion::FinalIK::FBIKChain::SolveTrigonometric(::RootMotion::FinalIK::IKSolverFullBody* solver, bool calculateBendDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::SolveTrigonometric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolveTrigonometric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(calculateBendDirection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver, calculateBendDirection);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.Stage1
void RootMotion::FinalIK::FBIKChain::Stage1(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::Stage1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stage1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.Stage2
void RootMotion::FinalIK::FBIKChain::Stage2(::RootMotion::FinalIK::IKSolverFullBody* solver, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::Stage2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stage2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver, position);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SolveConstraintSystems
void RootMotion::FinalIK::FBIKChain::SolveConstraintSystems(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::SolveConstraintSystems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolveConstraintSystems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SolveFABRIKJoint
::UnityEngine::Vector3 RootMotion::FinalIK::FBIKChain::SolveFABRIKJoint(::UnityEngine::Vector3 pos1, ::UnityEngine::Vector3 pos2, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::SolveFABRIKJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolveFABRIKJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos1), ::il2cpp_utils::ExtractType(pos2), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, pos1, pos2, length);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.GetDirToBendPoint
::UnityEngine::Vector3 RootMotion::FinalIK::FBIKChain::GetDirToBendPoint(::UnityEngine::Vector3 direction, ::UnityEngine::Vector3 bendDirection, float directionMagnitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::GetDirToBendPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDirToBendPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(bendDirection), ::il2cpp_utils::ExtractType(directionMagnitude)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, direction, bendDirection, directionMagnitude);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SolveChildConstraints
void RootMotion::FinalIK::FBIKChain::SolveChildConstraints(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::SolveChildConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolveChildConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SolveLinearConstraint
void RootMotion::FinalIK::FBIKChain::SolveLinearConstraint(::RootMotion::FinalIK::IKSolver::Node* node1, ::RootMotion::FinalIK::IKSolver::Node* node2, float crossFade, float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::SolveLinearConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolveLinearConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node1), ::il2cpp_utils::ExtractType(node2), ::il2cpp_utils::ExtractType(crossFade), ::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node1, node2, crossFade, distance);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.ForwardReach
void RootMotion::FinalIK::FBIKChain::ForwardReach(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ForwardReach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForwardReach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.BackwardReach
void RootMotion::FinalIK::FBIKChain::BackwardReach(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::BackwardReach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackwardReach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.ChildConstraint
#include "RootMotion/FinalIK/FBIKChain_ChildConstraint.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single pushElasticity
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_pushElasticity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_pushElasticity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pushElasticity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pullElasticity
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_pullElasticity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_pullElasticity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pullElasticity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform bone1
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_bone1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_bone1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone1"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform bone2
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_bone2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_bone2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone2"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <nominalDistance>k__BackingField
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_$nominalDistance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_$nominalDistance$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<nominalDistance>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isRigid>k__BackingField
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_$isRigid$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_$isRigid$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isRigid>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single crossFade
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_crossFade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_crossFade");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crossFade"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single inverseCrossFade
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_inverseCrossFade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_inverseCrossFade");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inverseCrossFade"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 chain1Index
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_chain1Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_chain1Index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chain1Index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 chain2Index
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_chain2Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::dyn_chain2Index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chain2Index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.ChildConstraint.get_nominalDistance
float RootMotion::FinalIK::FBIKChain::ChildConstraint::get_nominalDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::get_nominalDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nominalDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.ChildConstraint.set_nominalDistance
void RootMotion::FinalIK::FBIKChain::ChildConstraint::set_nominalDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::set_nominalDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_nominalDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.ChildConstraint.get_isRigid
bool RootMotion::FinalIK::FBIKChain::ChildConstraint::get_isRigid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::get_isRigid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRigid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.ChildConstraint.set_isRigid
void RootMotion::FinalIK::FBIKChain::ChildConstraint::set_isRigid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::set_isRigid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isRigid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.ChildConstraint.Initiate
void RootMotion::FinalIK::FBIKChain::ChildConstraint::Initiate(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.ChildConstraint.OnPreSolve
void RootMotion::FinalIK::FBIKChain::ChildConstraint::OnPreSolve(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::OnPreSolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreSolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.ChildConstraint.Solve
void RootMotion::FinalIK::FBIKChain::ChildConstraint::Solve(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::ChildConstraint::Solve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.Smoothing
#include "RootMotion/FinalIK/FBIKChain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.Smoothing None
::RootMotion::FinalIK::FBIKChain::Smoothing RootMotion::FinalIK::FBIKChain::Smoothing::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::Smoothing::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::FBIKChain::Smoothing>("RootMotion.FinalIK", "FBIKChain/Smoothing", "None"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.Smoothing None
void RootMotion::FinalIK::FBIKChain::Smoothing::_set_None(::RootMotion::FinalIK::FBIKChain::Smoothing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::Smoothing::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FBIKChain/Smoothing", "None", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.Smoothing Exponential
::RootMotion::FinalIK::FBIKChain::Smoothing RootMotion::FinalIK::FBIKChain::Smoothing::_get_Exponential() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::Smoothing::_get_Exponential");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::FBIKChain::Smoothing>("RootMotion.FinalIK", "FBIKChain/Smoothing", "Exponential"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.Smoothing Exponential
void RootMotion::FinalIK::FBIKChain::Smoothing::_set_Exponential(::RootMotion::FinalIK::FBIKChain::Smoothing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::Smoothing::_set_Exponential");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FBIKChain/Smoothing", "Exponential", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.Smoothing Cubic
::RootMotion::FinalIK::FBIKChain::Smoothing RootMotion::FinalIK::FBIKChain::Smoothing::_get_Cubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::Smoothing::_get_Cubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::FBIKChain::Smoothing>("RootMotion.FinalIK", "FBIKChain/Smoothing", "Cubic"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FBIKChain/RootMotion.FinalIK.Smoothing Cubic
void RootMotion::FinalIK::FBIKChain::Smoothing::_set_Cubic(::RootMotion::FinalIK::FBIKChain::Smoothing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::Smoothing::_set_Cubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FBIKChain/Smoothing", "Cubic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::FBIKChain::Smoothing::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FBIKChain::Smoothing::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKConstraintBend
#include "RootMotion/FinalIK/IKConstraintBend.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: RootMotion.Warning/RootMotion.Logger
#include "RootMotion/Warning_Logger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform bone1
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKConstraintBend::dyn_bone1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_bone1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone1"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform bone2
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKConstraintBend::dyn_bone2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_bone2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone2"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform bone3
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKConstraintBend::dyn_bone3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_bone3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone3"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform bendGoal
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKConstraintBend::dyn_bendGoal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_bendGoal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendGoal"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 direction
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKConstraintBend::dyn_direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "direction"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKConstraintBend::dyn_rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_rotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single weight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKConstraintBend::dyn_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 defaultLocalDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKConstraintBend::dyn_defaultLocalDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_defaultLocalDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultLocalDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 defaultChildDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKConstraintBend::dyn_defaultChildDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_defaultChildDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultChildDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single clampF
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKConstraintBend::dyn_clampF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_clampF");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clampF"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 chainIndex1
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKConstraintBend::dyn_chainIndex1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_chainIndex1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chainIndex1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nodeIndex1
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKConstraintBend::dyn_nodeIndex1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_nodeIndex1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIndex1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 chainIndex2
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKConstraintBend::dyn_chainIndex2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_chainIndex2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chainIndex2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nodeIndex2
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKConstraintBend::dyn_nodeIndex2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_nodeIndex2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIndex2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 chainIndex3
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKConstraintBend::dyn_chainIndex3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_chainIndex3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chainIndex3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nodeIndex3
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKConstraintBend::dyn_nodeIndex3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_nodeIndex3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIndex3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <initiated>k__BackingField
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKConstraintBend::dyn_$initiated$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_$initiated$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<initiated>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean limbOrientationsSet
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKConstraintBend::dyn_limbOrientationsSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::dyn_limbOrientationsSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "limbOrientationsSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.get_initiated
bool RootMotion::FinalIK::IKConstraintBend::get_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::get_initiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.set_initiated
void RootMotion::FinalIK::IKConstraintBend::set_initiated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::set_initiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_initiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.IsValid
bool RootMotion::FinalIK::IKConstraintBend::IsValid(::RootMotion::FinalIK::IKSolverFullBody* solver, ::RootMotion::Warning::Logger* logger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(logger)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, solver, logger);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.SetBones
void RootMotion::FinalIK::IKConstraintBend::SetBones(::UnityEngine::Transform* bone1, ::UnityEngine::Transform* bone2, ::UnityEngine::Transform* bone3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::SetBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bone1), ::il2cpp_utils::ExtractType(bone2), ::il2cpp_utils::ExtractType(bone3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bone1, bone2, bone3);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.Initiate
void RootMotion::FinalIK::IKConstraintBend::Initiate(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.SetLimbOrientation
void RootMotion::FinalIK::IKConstraintBend::SetLimbOrientation(::UnityEngine::Vector3 upper, ::UnityEngine::Vector3 lower, ::UnityEngine::Vector3 last) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::SetLimbOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLimbOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(upper), ::il2cpp_utils::ExtractType(lower), ::il2cpp_utils::ExtractType(last)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, upper, lower, last);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.LimitBend
void RootMotion::FinalIK::IKConstraintBend::LimitBend(float solverWeight, float positionWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::LimitBend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LimitBend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solverWeight), ::il2cpp_utils::ExtractType(positionWeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solverWeight, positionWeight);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.GetDir
::UnityEngine::Vector3 RootMotion::FinalIK::IKConstraintBend::GetDir(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::GetDir");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDir", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.OrthoToLimb
::UnityEngine::Vector3 RootMotion::FinalIK::IKConstraintBend::OrthoToLimb(::RootMotion::FinalIK::IKSolverFullBody* solver, ::UnityEngine::Vector3 tangent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::OrthoToLimb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OrthoToLimb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(tangent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, solver, tangent);
}
// Autogenerated method: RootMotion.FinalIK.IKConstraintBend.OrthoToBone1
::UnityEngine::Vector3 RootMotion::FinalIK::IKConstraintBend::OrthoToBone1(::RootMotion::FinalIK::IKSolverFullBody* solver, ::UnityEngine::Vector3 tangent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKConstraintBend::OrthoToBone1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OrthoToBone1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(tangent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, solver, tangent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKEffector
#include "RootMotion/FinalIK/IKEffector.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Node
#include "RootMotion/FinalIK/IKSolver_Node.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform bone
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKEffector::dyn_bone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_bone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKEffector::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single positionWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKEffector::dyn_positionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_positionWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKEffector::dyn_rotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_rotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKEffector::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKEffector::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 positionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKEffector::dyn_positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isEndEffector>k__BackingField
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKEffector::dyn_$isEndEffector$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_$isEndEffector$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isEndEffector>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean effectChildNodes
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKEffector::dyn_effectChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_effectChildNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "effectChildNodes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maintainRelativePositionWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKEffector::dyn_maintainRelativePositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_maintainRelativePositionWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maintainRelativePositionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] childBones
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& RootMotion::FinalIK::IKEffector::dyn_childBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_childBones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "childBones"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform planeBone1
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKEffector::dyn_planeBone1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_planeBone1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "planeBone1"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform planeBone2
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKEffector::dyn_planeBone2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_planeBone2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "planeBone2"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform planeBone3
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKEffector::dyn_planeBone3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_planeBone3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "planeBone3"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion planeRotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKEffector::dyn_planeRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_planeRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "planeRotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single posW
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKEffector::dyn_posW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_posW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posW"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotW
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKEffector::dyn_rotW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_rotW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotW"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] localPositions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& RootMotion::FinalIK::IKEffector::dyn_localPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_localPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean usePlaneNodes
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKEffector::dyn_usePlaneNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_usePlaneNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usePlaneNodes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion animatedPlaneRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKEffector::dyn_animatedPlaneRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_animatedPlaneRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animatedPlaneRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 animatedPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKEffector::dyn_animatedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_animatedPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animatedPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean firstUpdate
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKEffector::dyn_firstUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_firstUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 chainIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKEffector::dyn_chainIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_chainIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chainIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nodeIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKEffector::dyn_nodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_nodeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 plane1ChainIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKEffector::dyn_plane1ChainIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_plane1ChainIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "plane1ChainIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 plane1NodeIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKEffector::dyn_plane1NodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_plane1NodeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "plane1NodeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 plane2ChainIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKEffector::dyn_plane2ChainIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_plane2ChainIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "plane2ChainIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 plane2NodeIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKEffector::dyn_plane2NodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_plane2NodeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "plane2NodeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 plane3ChainIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKEffector::dyn_plane3ChainIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_plane3ChainIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "plane3ChainIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 plane3NodeIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKEffector::dyn_plane3NodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_plane3NodeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "plane3NodeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] childChainIndexes
[[deprecated("Use field access instead!")]] ::ArrayW<int>& RootMotion::FinalIK::IKEffector::dyn_childChainIndexes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_childChainIndexes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "childChainIndexes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] childNodeIndexes
[[deprecated("Use field access instead!")]] ::ArrayW<int>& RootMotion::FinalIK::IKEffector::dyn_childNodeIndexes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::dyn_childNodeIndexes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "childNodeIndexes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.get_isEndEffector
bool RootMotion::FinalIK::IKEffector::get_isEndEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::get_isEndEffector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEndEffector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.set_isEndEffector
void RootMotion::FinalIK::IKEffector::set_isEndEffector(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::set_isEndEffector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isEndEffector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.GetNode
::RootMotion::FinalIK::IKSolver::Node* RootMotion::FinalIK::IKEffector::GetNode(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::GetNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver::Node*, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.PinToBone
void RootMotion::FinalIK::IKEffector::PinToBone(float positionWeight, float rotationWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::PinToBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PinToBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positionWeight), ::il2cpp_utils::ExtractType(rotationWeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positionWeight, rotationWeight);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.IsValid
bool RootMotion::FinalIK::IKEffector::IsValid(::RootMotion::FinalIK::IKSolver* solver, ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, solver, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.Initiate
void RootMotion::FinalIK::IKEffector::Initiate(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.ResetOffset
void RootMotion::FinalIK::IKEffector::ResetOffset(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::ResetOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.SetToTarget
void RootMotion::FinalIK::IKEffector::SetToTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::SetToTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.OnPreSolve
void RootMotion::FinalIK::IKEffector::OnPreSolve(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::OnPreSolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreSolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.OnPostWrite
void RootMotion::FinalIK::IKEffector::OnPostWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::OnPostWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.GetPlaneRotation
::UnityEngine::Quaternion RootMotion::FinalIK::IKEffector::GetPlaneRotation(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::GetPlaneRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlaneRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.Update
void RootMotion::FinalIK::IKEffector::Update(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKEffector.GetPosition
::UnityEngine::Vector3 RootMotion::FinalIK::IKEffector::GetPosition(::RootMotion::FinalIK::IKSolverFullBody* solver, ByRef<::UnityEngine::Quaternion> planeRotationOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKEffector::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, solver, byref(planeRotationOffset));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKMapping
#include "RootMotion/FinalIK/IKMapping.hpp"
// Including type: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap
#include "RootMotion/FinalIK/IKMapping_BoneMap.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: RootMotion.Warning/RootMotion.Logger
#include "RootMotion/Warning_Logger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKMapping.IsValid
bool RootMotion::FinalIK::IKMapping::IsValid(::RootMotion::FinalIK::IKSolver* solver, ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, solver, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.IKMapping.Initiate
void RootMotion::FinalIK::IKMapping::Initiate(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::Initiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping.BoneIsValid
bool RootMotion::FinalIK::IKMapping::BoneIsValid(::UnityEngine::Transform* bone, ::RootMotion::FinalIK::IKSolver* solver, ByRef<::StringW> message, ::RootMotion::Warning::Logger* logger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneIsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BoneIsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bone), ::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(logger)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bone, solver, byref(message), logger);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping.SolveFABRIKJoint
::UnityEngine::Vector3 RootMotion::FinalIK::IKMapping::SolveFABRIKJoint(::UnityEngine::Vector3 pos1, ::UnityEngine::Vector3 pos2, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::SolveFABRIKJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolveFABRIKJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos1), ::il2cpp_utils::ExtractType(pos2), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, pos1, pos2, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap
#include "RootMotion/FinalIK/IKMapping_BoneMap.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Node
#include "RootMotion/FinalIK/IKSolver_Node.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKMapping::BoneMap::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 chainIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKMapping::BoneMap::dyn_chainIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_chainIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chainIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 nodeIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKMapping::BoneMap::dyn_nodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_nodeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 defaultLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKMapping::BoneMap::dyn_defaultLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_defaultLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion defaultLocalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKMapping::BoneMap::dyn_defaultLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_defaultLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultLocalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 localSwingAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKMapping::BoneMap::dyn_localSwingAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_localSwingAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localSwingAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 localTwistAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKMapping::BoneMap::dyn_localTwistAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_localTwistAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localTwistAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 planePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKMapping::BoneMap::dyn_planePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_planePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "planePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 ikPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKMapping::BoneMap::dyn_ikPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_ikPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ikPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion defaultLocalTargetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKMapping::BoneMap::dyn_defaultLocalTargetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_defaultLocalTargetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultLocalTargetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion maintainRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKMapping::BoneMap::dyn_maintainRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_maintainRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maintainRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single length
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKMapping::BoneMap::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion animatedRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKMapping::BoneMap::dyn_animatedRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_animatedRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animatedRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform planeBone1
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKMapping::BoneMap::dyn_planeBone1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_planeBone1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "planeBone1"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform planeBone2
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKMapping::BoneMap::dyn_planeBone2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_planeBone2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "planeBone2"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform planeBone3
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKMapping::BoneMap::dyn_planeBone3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_planeBone3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "planeBone3"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 plane1ChainIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKMapping::BoneMap::dyn_plane1ChainIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_plane1ChainIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "plane1ChainIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 plane1NodeIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKMapping::BoneMap::dyn_plane1NodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_plane1NodeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "plane1NodeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 plane2ChainIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKMapping::BoneMap::dyn_plane2ChainIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_plane2ChainIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "plane2ChainIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 plane2NodeIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKMapping::BoneMap::dyn_plane2NodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_plane2NodeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "plane2NodeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 plane3ChainIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKMapping::BoneMap::dyn_plane3ChainIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_plane3ChainIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "plane3ChainIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 plane3NodeIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKMapping::BoneMap::dyn_plane3NodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::dyn_plane3NodeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "plane3NodeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.get_swingDirection
::UnityEngine::Vector3 RootMotion::FinalIK::IKMapping::BoneMap::get_swingDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::get_swingDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_swingDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.get_isNodeBone
bool RootMotion::FinalIK::IKMapping::BoneMap::get_isNodeBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::get_isNodeBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isNodeBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.get_lastAnimatedTargetRotation
::UnityEngine::Quaternion RootMotion::FinalIK::IKMapping::BoneMap::get_lastAnimatedTargetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::get_lastAnimatedTargetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastAnimatedTargetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.Initiate
void RootMotion::FinalIK::IKMapping::BoneMap::Initiate(::UnityEngine::Transform* transform, ::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.StoreDefaultLocalState
void RootMotion::FinalIK::IKMapping::BoneMap::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.FixTransform
void RootMotion::FinalIK::IKMapping::BoneMap::FixTransform(bool position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::FixTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.SetLength
void RootMotion::FinalIK::IKMapping::BoneMap::SetLength(::RootMotion::FinalIK::IKMapping::BoneMap* nextBone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::SetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nextBone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nextBone);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.SetLocalSwingAxis
void RootMotion::FinalIK::IKMapping::BoneMap::SetLocalSwingAxis(::RootMotion::FinalIK::IKMapping::BoneMap* swingTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::SetLocalSwingAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalSwingAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(swingTarget)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, swingTarget);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.SetLocalSwingAxis
void RootMotion::FinalIK::IKMapping::BoneMap::SetLocalSwingAxis(::RootMotion::FinalIK::IKMapping::BoneMap* bone1, ::RootMotion::FinalIK::IKMapping::BoneMap* bone2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::SetLocalSwingAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalSwingAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bone1), ::il2cpp_utils::ExtractType(bone2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bone1, bone2);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.SetLocalTwistAxis
void RootMotion::FinalIK::IKMapping::BoneMap::SetLocalTwistAxis(::UnityEngine::Vector3 twistDirection, ::UnityEngine::Vector3 normalDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::SetLocalTwistAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalTwistAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(twistDirection), ::il2cpp_utils::ExtractType(normalDirection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, twistDirection, normalDirection);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.SetPlane
void RootMotion::FinalIK::IKMapping::BoneMap::SetPlane(::RootMotion::FinalIK::IKSolverFullBody* solver, ::UnityEngine::Transform* planeBone1, ::UnityEngine::Transform* planeBone2, ::UnityEngine::Transform* planeBone3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::SetPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(planeBone1), ::il2cpp_utils::ExtractType(planeBone2), ::il2cpp_utils::ExtractType(planeBone3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver, planeBone1, planeBone2, planeBone3);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.UpdatePlane
void RootMotion::FinalIK::IKMapping::BoneMap::UpdatePlane(bool rotation, bool position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::UpdatePlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotation, position);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.SetIKPosition
void RootMotion::FinalIK::IKMapping::BoneMap::SetIKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::SetIKPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.MaintainRotation
void RootMotion::FinalIK::IKMapping::BoneMap::MaintainRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::MaintainRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaintainRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.SetToIKPosition
void RootMotion::FinalIK::IKMapping::BoneMap::SetToIKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::SetToIKPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToIKPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.FixToNode
void RootMotion::FinalIK::IKMapping::BoneMap::FixToNode(::RootMotion::FinalIK::IKSolverFullBody* solver, float weight, ::RootMotion::FinalIK::IKSolver::Node* fixNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::FixToNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixToNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(fixNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver, weight, fixNode);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.GetPlanePosition
::UnityEngine::Vector3 RootMotion::FinalIK::IKMapping::BoneMap::GetPlanePosition(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::GetPlanePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlanePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.PositionToPlane
void RootMotion::FinalIK::IKMapping::BoneMap::PositionToPlane(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::PositionToPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PositionToPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.RotateToPlane
void RootMotion::FinalIK::IKMapping::BoneMap::RotateToPlane(::RootMotion::FinalIK::IKSolverFullBody* solver, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::RotateToPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateToPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.Swing
void RootMotion::FinalIK::IKMapping::BoneMap::Swing(::UnityEngine::Vector3 swingTarget, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::Swing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Swing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(swingTarget), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, swingTarget, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.Swing
void RootMotion::FinalIK::IKMapping::BoneMap::Swing(::UnityEngine::Vector3 pos1, ::UnityEngine::Vector3 pos2, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::Swing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Swing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos1), ::il2cpp_utils::ExtractType(pos2), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos1, pos2, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.Twist
void RootMotion::FinalIK::IKMapping::BoneMap::Twist(::UnityEngine::Vector3 twistDirection, ::UnityEngine::Vector3 normalDirection, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::Twist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Twist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(twistDirection), ::il2cpp_utils::ExtractType(normalDirection), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, twistDirection, normalDirection, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.RotateToMaintain
void RootMotion::FinalIK::IKMapping::BoneMap::RotateToMaintain(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::RotateToMaintain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateToMaintain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.RotateToEffector
void RootMotion::FinalIK::IKMapping::BoneMap::RotateToEffector(::RootMotion::FinalIK::IKSolverFullBody* solver, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::RotateToEffector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateToEffector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap.GetTargetRotation
::UnityEngine::Quaternion RootMotion::FinalIK::IKMapping::BoneMap::GetTargetRotation(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMapping::BoneMap::GetTargetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTargetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, solver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKMappingBone
#include "RootMotion/FinalIK/IKMappingBone.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap
#include "RootMotion/FinalIK/IKMapping_BoneMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform bone
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKMappingBone::dyn_bone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingBone::dyn_bone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maintainRotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKMappingBone::dyn_maintainRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingBone::dyn_maintainRotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maintainRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap boneMap
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKMapping::BoneMap*& RootMotion::FinalIK::IKMappingBone::dyn_boneMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingBone::dyn_boneMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boneMap"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKMapping::BoneMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingBone.StoreDefaultLocalState
void RootMotion::FinalIK::IKMappingBone::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingBone::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingBone.FixTransforms
void RootMotion::FinalIK::IKMappingBone::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingBone::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingBone.ReadPose
void RootMotion::FinalIK::IKMappingBone::ReadPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingBone::ReadPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingBone.WritePose
void RootMotion::FinalIK::IKMappingBone::WritePose(float solverWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingBone::WritePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solverWeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solverWeight);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingBone.IsValid
bool RootMotion::FinalIK::IKMappingBone::IsValid(::RootMotion::FinalIK::IKSolver* solver, ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingBone::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, solver, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.IKMappingBone.Initiate
void RootMotion::FinalIK::IKMappingBone::Initiate(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingBone::Initiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKMappingLimb
#include "RootMotion/FinalIK/IKMappingLimb.hpp"
// Including type: RootMotion.FinalIK.IKMappingLimb/RootMotion.FinalIK.BoneMapType
#include "RootMotion/FinalIK/IKMappingLimb_BoneMapType.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
// Including type: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap
#include "RootMotion/FinalIK/IKMapping_BoneMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform parentBone
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKMappingLimb::dyn_parentBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::dyn_parentBone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentBone"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform bone1
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKMappingLimb::dyn_bone1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::dyn_bone1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone1"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform bone2
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKMappingLimb::dyn_bone2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::dyn_bone2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone2"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform bone3
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKMappingLimb::dyn_bone3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::dyn_bone3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone3"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maintainRotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKMappingLimb::dyn_maintainRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::dyn_maintainRotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maintainRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single weight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKMappingLimb::dyn_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::dyn_weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updatePlaneRotations
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKMappingLimb::dyn_updatePlaneRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::dyn_updatePlaneRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updatePlaneRotations"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap boneMapParent
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKMapping::BoneMap*& RootMotion::FinalIK::IKMappingLimb::dyn_boneMapParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::dyn_boneMapParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boneMapParent"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKMapping::BoneMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap boneMap1
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKMapping::BoneMap*& RootMotion::FinalIK::IKMappingLimb::dyn_boneMap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::dyn_boneMap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boneMap1"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKMapping::BoneMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap boneMap2
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKMapping::BoneMap*& RootMotion::FinalIK::IKMappingLimb::dyn_boneMap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::dyn_boneMap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boneMap2"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKMapping::BoneMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap boneMap3
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKMapping::BoneMap*& RootMotion::FinalIK::IKMappingLimb::dyn_boneMap3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::dyn_boneMap3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boneMap3"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKMapping::BoneMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.GetBoneMap
::RootMotion::FinalIK::IKMapping::BoneMap* RootMotion::FinalIK::IKMappingLimb::GetBoneMap(::RootMotion::FinalIK::IKMappingLimb::BoneMapType boneMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::GetBoneMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoneMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boneMap)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKMapping::BoneMap*, false>(this, ___internal__method, boneMap);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.SetLimbOrientation
void RootMotion::FinalIK::IKMappingLimb::SetLimbOrientation(::UnityEngine::Vector3 upper, ::UnityEngine::Vector3 lower) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::SetLimbOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLimbOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(upper), ::il2cpp_utils::ExtractType(lower)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, upper, lower);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.SetBones
void RootMotion::FinalIK::IKMappingLimb::SetBones(::UnityEngine::Transform* bone1, ::UnityEngine::Transform* bone2, ::UnityEngine::Transform* bone3, ::UnityEngine::Transform* parentBone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::SetBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bone1), ::il2cpp_utils::ExtractType(bone2), ::il2cpp_utils::ExtractType(bone3), ::il2cpp_utils::ExtractType(parentBone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bone1, bone2, bone3, parentBone);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.StoreDefaultLocalState
void RootMotion::FinalIK::IKMappingLimb::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.FixTransforms
void RootMotion::FinalIK::IKMappingLimb::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.ReadPose
void RootMotion::FinalIK::IKMappingLimb::ReadPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::ReadPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.WritePose
void RootMotion::FinalIK::IKMappingLimb::WritePose(::RootMotion::FinalIK::IKSolverFullBody* solver, bool fullBody) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::WritePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(fullBody)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver, fullBody);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.IsValid
bool RootMotion::FinalIK::IKMappingLimb::IsValid(::RootMotion::FinalIK::IKSolver* solver, ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, solver, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.Initiate
void RootMotion::FinalIK::IKMappingLimb::Initiate(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::Initiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKMappingLimb/RootMotion.FinalIK.BoneMapType
#include "RootMotion/FinalIK/IKMappingLimb_BoneMapType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKMappingLimb/RootMotion.FinalIK.BoneMapType Parent
::RootMotion::FinalIK::IKMappingLimb::BoneMapType RootMotion::FinalIK::IKMappingLimb::BoneMapType::_get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::BoneMapType::_get_Parent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKMappingLimb::BoneMapType>("RootMotion.FinalIK", "IKMappingLimb/BoneMapType", "Parent"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKMappingLimb/RootMotion.FinalIK.BoneMapType Parent
void RootMotion::FinalIK::IKMappingLimb::BoneMapType::_set_Parent(::RootMotion::FinalIK::IKMappingLimb::BoneMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::BoneMapType::_set_Parent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKMappingLimb/BoneMapType", "Parent", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKMappingLimb/RootMotion.FinalIK.BoneMapType Bone1
::RootMotion::FinalIK::IKMappingLimb::BoneMapType RootMotion::FinalIK::IKMappingLimb::BoneMapType::_get_Bone1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::BoneMapType::_get_Bone1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKMappingLimb::BoneMapType>("RootMotion.FinalIK", "IKMappingLimb/BoneMapType", "Bone1"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKMappingLimb/RootMotion.FinalIK.BoneMapType Bone1
void RootMotion::FinalIK::IKMappingLimb::BoneMapType::_set_Bone1(::RootMotion::FinalIK::IKMappingLimb::BoneMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::BoneMapType::_set_Bone1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKMappingLimb/BoneMapType", "Bone1", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKMappingLimb/RootMotion.FinalIK.BoneMapType Bone2
::RootMotion::FinalIK::IKMappingLimb::BoneMapType RootMotion::FinalIK::IKMappingLimb::BoneMapType::_get_Bone2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::BoneMapType::_get_Bone2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKMappingLimb::BoneMapType>("RootMotion.FinalIK", "IKMappingLimb/BoneMapType", "Bone2"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKMappingLimb/RootMotion.FinalIK.BoneMapType Bone2
void RootMotion::FinalIK::IKMappingLimb::BoneMapType::_set_Bone2(::RootMotion::FinalIK::IKMappingLimb::BoneMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::BoneMapType::_set_Bone2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKMappingLimb/BoneMapType", "Bone2", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKMappingLimb/RootMotion.FinalIK.BoneMapType Bone3
::RootMotion::FinalIK::IKMappingLimb::BoneMapType RootMotion::FinalIK::IKMappingLimb::BoneMapType::_get_Bone3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::BoneMapType::_get_Bone3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKMappingLimb::BoneMapType>("RootMotion.FinalIK", "IKMappingLimb/BoneMapType", "Bone3"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKMappingLimb/RootMotion.FinalIK.BoneMapType Bone3
void RootMotion::FinalIK::IKMappingLimb::BoneMapType::_set_Bone3(::RootMotion::FinalIK::IKMappingLimb::BoneMapType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::BoneMapType::_set_Bone3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKMappingLimb/BoneMapType", "Bone3", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKMappingLimb::BoneMapType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingLimb::BoneMapType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKMappingSpine
#include "RootMotion/FinalIK/IKMappingSpine.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
// Including type: RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap
#include "RootMotion/FinalIK/IKMapping_BoneMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] spineBones
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& RootMotion::FinalIK::IKMappingSpine::dyn_spineBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::dyn_spineBones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spineBones"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftUpperArmBone
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKMappingSpine::dyn_leftUpperArmBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::dyn_leftUpperArmBone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftUpperArmBone"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightUpperArmBone
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKMappingSpine::dyn_rightUpperArmBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::dyn_rightUpperArmBone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightUpperArmBone"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftThighBone
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKMappingSpine::dyn_leftThighBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::dyn_leftThighBone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftThighBone"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightThighBone
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKMappingSpine::dyn_rightThighBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::dyn_rightThighBone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightThighBone"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 iterations
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKMappingSpine::dyn_iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::dyn_iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single twistWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKMappingSpine::dyn_twistWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::dyn_twistWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "twistWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 rootNodeIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKMappingSpine::dyn_rootNodeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::dyn_rootNodeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootNodeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap[] spine
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IKMapping::BoneMap*>& RootMotion::FinalIK::IKMappingSpine::dyn_spine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::dyn_spine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spine"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IKMapping::BoneMap*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap leftUpperArm
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKMapping::BoneMap*& RootMotion::FinalIK::IKMappingSpine::dyn_leftUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::dyn_leftUpperArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftUpperArm"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKMapping::BoneMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap rightUpperArm
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKMapping::BoneMap*& RootMotion::FinalIK::IKMappingSpine::dyn_rightUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::dyn_rightUpperArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightUpperArm"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKMapping::BoneMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap leftThigh
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKMapping::BoneMap*& RootMotion::FinalIK::IKMappingSpine::dyn_leftThigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::dyn_leftThigh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftThigh"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKMapping::BoneMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKMapping/RootMotion.FinalIK.BoneMap rightThigh
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKMapping::BoneMap*& RootMotion::FinalIK::IKMappingSpine::dyn_rightThigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::dyn_rightThigh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightThigh"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKMapping::BoneMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useFABRIK
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKMappingSpine::dyn_useFABRIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::dyn_useFABRIK");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFABRIK"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.SetBones
void RootMotion::FinalIK::IKMappingSpine::SetBones(::ArrayW<::UnityEngine::Transform*> spineBones, ::UnityEngine::Transform* leftUpperArmBone, ::UnityEngine::Transform* rightUpperArmBone, ::UnityEngine::Transform* leftThighBone, ::UnityEngine::Transform* rightThighBone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::SetBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spineBones), ::il2cpp_utils::ExtractType(leftUpperArmBone), ::il2cpp_utils::ExtractType(rightUpperArmBone), ::il2cpp_utils::ExtractType(leftThighBone), ::il2cpp_utils::ExtractType(rightThighBone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, spineBones, leftUpperArmBone, rightUpperArmBone, leftThighBone, rightThighBone);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.StoreDefaultLocalState
void RootMotion::FinalIK::IKMappingSpine::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.FixTransforms
void RootMotion::FinalIK::IKMappingSpine::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::FixTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.UseFABRIK
bool RootMotion::FinalIK::IKMappingSpine::UseFABRIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::UseFABRIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseFABRIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.ReadPose
void RootMotion::FinalIK::IKMappingSpine::ReadPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::ReadPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.WritePose
void RootMotion::FinalIK::IKMappingSpine::WritePose(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::WritePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.ForwardReach
void RootMotion::FinalIK::IKMappingSpine::ForwardReach(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::ForwardReach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForwardReach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.BackwardReach
void RootMotion::FinalIK::IKMappingSpine::BackwardReach(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::BackwardReach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackwardReach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.MapToSolverPositions
void RootMotion::FinalIK::IKMappingSpine::MapToSolverPositions(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::MapToSolverPositions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MapToSolverPositions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.IsValid
bool RootMotion::FinalIK::IKMappingSpine::IsValid(::RootMotion::FinalIK::IKSolver* solver, ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, solver, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.IKMappingSpine.Initiate
void RootMotion::FinalIK::IKMappingSpine::Initiate(::RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKMappingSpine::Initiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Bone
#include "RootMotion/FinalIK/IKSolver_Bone.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Node
#include "RootMotion/FinalIK/IKSolver_Node.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate
#include "RootMotion/FinalIK/IKSolver_UpdateDelegate.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.IterationDelegate
#include "RootMotion/FinalIK/IKSolver_IterationDelegate.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 IKPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolver::dyn_IKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::dyn_IKPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single IKPositionWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolver::dyn_IKPositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::dyn_IKPositionWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKPositionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <initiated>k__BackingField
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolver::dyn_$initiated$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::dyn_$initiated$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<initiated>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate OnPreInitiate
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::UpdateDelegate*& RootMotion::FinalIK::IKSolver::dyn_OnPreInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::dyn_OnPreInitiate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreInitiate"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::UpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate OnPostInitiate
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::UpdateDelegate*& RootMotion::FinalIK::IKSolver::dyn_OnPostInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::dyn_OnPostInitiate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPostInitiate"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::UpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate OnPreUpdate
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::UpdateDelegate*& RootMotion::FinalIK::IKSolver::dyn_OnPreUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::dyn_OnPreUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreUpdate"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::UpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate OnPostUpdate
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::UpdateDelegate*& RootMotion::FinalIK::IKSolver::dyn_OnPostUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::dyn_OnPostUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPostUpdate"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::UpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean firstInitiation
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolver::dyn_firstInitiation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::dyn_firstInitiation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstInitiation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform root
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolver::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.get_initiated
bool RootMotion::FinalIK::IKSolver::get_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::get_initiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.set_initiated
void RootMotion::FinalIK::IKSolver::set_initiated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::set_initiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_initiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.IsValid
bool RootMotion::FinalIK::IKSolver::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.IsValid
bool RootMotion::FinalIK::IKSolver::IsValid(ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.Initiate
void RootMotion::FinalIK::IKSolver::Initiate(::UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, root);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.Update
void RootMotion::FinalIK::IKSolver::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.GetIKPosition
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolver::GetIKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::GetIKPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.SetIKPosition
void RootMotion::FinalIK::IKSolver::SetIKPosition(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::SetIKPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.GetIKPositionWeight
float RootMotion::FinalIK::IKSolver::GetIKPositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::GetIKPositionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKPositionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.SetIKPositionWeight
void RootMotion::FinalIK::IKSolver::SetIKPositionWeight(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::SetIKPositionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKPositionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.GetRoot
::UnityEngine::Transform* RootMotion::FinalIK::IKSolver::GetRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::GetRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.GetPoints
::ArrayW<::RootMotion::FinalIK::IKSolver::Point*> RootMotion::FinalIK::IKSolver::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::GetPoints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::RootMotion::FinalIK::IKSolver::Point*>, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.GetPoint
::RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolver::GetPoint(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::GetPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.FixTransforms
void RootMotion::FinalIK::IKSolver::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::FixTransforms");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolver::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::StoreDefaultLocalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.OnInitiate
void RootMotion::FinalIK::IKSolver::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::OnInitiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.OnUpdate
void RootMotion::FinalIK::IKSolver::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::OnUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.LogWarning
void RootMotion::FinalIK::IKSolver::LogWarning(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.ContainsDuplicateBone
::UnityEngine::Transform* RootMotion::FinalIK::IKSolver::ContainsDuplicateBone(::ArrayW<::RootMotion::FinalIK::IKSolver::Bone*> bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::ContainsDuplicateBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolver", "ContainsDuplicateBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bones);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.HierarchyIsValid
bool RootMotion::FinalIK::IKSolver::HierarchyIsValid(::ArrayW<::RootMotion::FinalIK::IKSolver::Bone*> bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::HierarchyIsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolver", "HierarchyIsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bones);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver.PreSolveBones
float RootMotion::FinalIK::IKSolver::PreSolveBones(ByRef<::ArrayW<::RootMotion::FinalIK::IKSolver::Bone*>> bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::PreSolveBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolver", "PreSolveBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(bones));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolver::Point::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Point::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single weight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolver::Point::dyn_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Point::dyn_weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 solverPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolver::Point::dyn_solverPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Point::dyn_solverPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solverPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion solverRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolver::Point::dyn_solverRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Point::dyn_solverRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solverRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 defaultLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolver::Point::dyn_defaultLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Point::dyn_defaultLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion defaultLocalRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolver::Point::dyn_defaultLocalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Point::dyn_defaultLocalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultLocalRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolver::Point::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Point::StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point.FixTransform
void RootMotion::FinalIK::IKSolver::Point::FixTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Point::FixTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point.UpdateSolverPosition
void RootMotion::FinalIK::IKSolver::Point::UpdateSolverPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Point::UpdateSolverPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSolverPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point.UpdateSolverLocalPosition
void RootMotion::FinalIK::IKSolver::Point::UpdateSolverLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Point::UpdateSolverLocalPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSolverLocalPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point.UpdateSolverState
void RootMotion::FinalIK::IKSolver::Point::UpdateSolverState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Point::UpdateSolverState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSolverState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point.UpdateSolverLocalState
void RootMotion::FinalIK::IKSolver::Point::UpdateSolverLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Point::UpdateSolverLocalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSolverLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Bone
#include "RootMotion/FinalIK/IKSolver_Bone.hpp"
// Including type: RootMotion.FinalIK.RotationLimit
#include "RootMotion/FinalIK/RotationLimit.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single length
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolver::Bone::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Bone::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sqrMag
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolver::Bone::dyn_sqrMag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Bone::dyn_sqrMag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sqrMag"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 axis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolver::Bone::dyn_axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Bone::dyn_axis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.RotationLimit _rotationLimit
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::RotationLimit*& RootMotion::FinalIK::IKSolver::Bone::dyn__rotationLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Bone::dyn__rotationLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationLimit"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::RotationLimit**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isLimited
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolver::Bone::dyn_isLimited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Bone::dyn_isLimited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isLimited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Bone.get_rotationLimit
::RootMotion::FinalIK::RotationLimit* RootMotion::FinalIK::IKSolver::Bone::get_rotationLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Bone::get_rotationLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::RotationLimit*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Bone.set_rotationLimit
void RootMotion::FinalIK::IKSolver::Bone::set_rotationLimit(::RootMotion::FinalIK::RotationLimit* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Bone::set_rotationLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Bone.Swing
void RootMotion::FinalIK::IKSolver::Bone::Swing(::UnityEngine::Vector3 swingTarget, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Bone::Swing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Swing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(swingTarget), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, swingTarget, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Bone.SolverSwing
void RootMotion::FinalIK::IKSolver::Bone::SolverSwing(::ArrayW<::RootMotion::FinalIK::IKSolver::Bone*> bones, int index, ::UnityEngine::Vector3 swingTarget, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Bone::SolverSwing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolver/Bone", "SolverSwing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(swingTarget), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bones, index, swingTarget, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Bone.Swing2D
void RootMotion::FinalIK::IKSolver::Bone::Swing2D(::UnityEngine::Vector3 swingTarget, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Bone::Swing2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Swing2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(swingTarget), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, swingTarget, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Bone.SetToSolverPosition
void RootMotion::FinalIK::IKSolver::Bone::SetToSolverPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Bone::SetToSolverPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToSolverPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Node
#include "RootMotion/FinalIK/IKSolver_Node.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single length
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolver::Node::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Node::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single effectorPositionWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolver::Node::dyn_effectorPositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Node::dyn_effectorPositionWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "effectorPositionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single effectorRotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolver::Node::dyn_effectorRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Node::dyn_effectorRotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "effectorRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolver::Node::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::Node::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate
#include "RootMotion/FinalIK/IKSolver_UpdateDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate.Invoke
void RootMotion::FinalIK::IKSolver::UpdateDelegate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::UpdateDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate.BeginInvoke
::System::IAsyncResult* RootMotion::FinalIK::IKSolver::UpdateDelegate::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::UpdateDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate.EndInvoke
void RootMotion::FinalIK::IKSolver::UpdateDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::UpdateDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.IterationDelegate
#include "RootMotion/FinalIK/IKSolver_IterationDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.IterationDelegate.Invoke
void RootMotion::FinalIK::IKSolver::IterationDelegate::Invoke(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::IterationDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.IterationDelegate.BeginInvoke
::System::IAsyncResult* RootMotion::FinalIK::IKSolver::IterationDelegate::BeginInvoke(int i, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::IterationDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, i, callback, object);
}
// Autogenerated method: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.IterationDelegate.EndInvoke
void RootMotion::FinalIK::IKSolver::IterationDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolver::IterationDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverAim
#include "RootMotion/FinalIK/IKSolverAim.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.RotationLimit
#include "RootMotion/FinalIK/RotationLimit.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.IterationDelegate
#include "RootMotion/FinalIK/IKSolver_IterationDelegate.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Bone
#include "RootMotion/FinalIK/IKSolver_Bone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolverAim::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 axis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverAim::dyn_axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::dyn_axis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 poleAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverAim::dyn_poleAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::dyn_poleAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poleAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 polePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverAim::dyn_polePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::dyn_polePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "polePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single poleWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverAim::dyn_poleWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::dyn_poleWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poleWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform poleTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolverAim::dyn_poleTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::dyn_poleTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poleTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single clampWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverAim::dyn_clampWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::dyn_clampWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clampWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 clampSmoothing
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverAim::dyn_clampSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::dyn_clampSmoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clampSmoothing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.IterationDelegate OnPreIteration
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::IterationDelegate*& RootMotion::FinalIK::IKSolverAim::dyn_OnPreIteration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::dyn_OnPreIteration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreIteration"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::IterationDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single step
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverAim::dyn_step() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::dyn_step");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "step"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 clampedIKPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverAim::dyn_clampedIKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::dyn_clampedIKPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clampedIKPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.RotationLimit transformLimit
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::RotationLimit*& RootMotion::FinalIK::IKSolverAim::dyn_transformLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::dyn_transformLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformLimit"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::RotationLimit**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform lastTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolverAim::dyn_lastTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::dyn_lastTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.get_transformAxis
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverAim::get_transformAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::get_transformAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transformAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.get_transformPoleAxis
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverAim::get_transformPoleAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::get_transformPoleAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transformPoleAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.GetAngle
float RootMotion::FinalIK::IKSolverAim::GetAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::GetAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.Solve
void RootMotion::FinalIK::IKSolverAim::Solve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::Solve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.GetClampedIKPosition
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverAim::GetClampedIKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::GetClampedIKPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClampedIKPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.RotateToTarget
void RootMotion::FinalIK::IKSolverAim::RotateToTarget(::UnityEngine::Vector3 targetPosition, ::RootMotion::FinalIK::IKSolver::Bone* bone, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::RotateToTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateToTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(bone), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPosition, bone, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.get_minBones
int RootMotion::FinalIK::IKSolverAim::get_minBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::get_minBones");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.get_localDirection
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverAim::get_localDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::get_localDirection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.OnInitiate
void RootMotion::FinalIK::IKSolverAim::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::OnInitiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverAim.OnUpdate
void RootMotion::FinalIK::IKSolverAim::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverAim::OnUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverArm
#include "RootMotion/FinalIK/IKSolverArm.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm
#include "RootMotion/FinalIK/IKSolverVR_Arm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single IKRotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverArm::dyn_IKRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::dyn_IKRotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion IKRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverArm::dyn_IKRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::dyn_IKRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point chest
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::Point*& RootMotion::FinalIK::IKSolverArm::dyn_chest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::dyn_chest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chest"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::Point**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point shoulder
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::Point*& RootMotion::FinalIK::IKSolverArm::dyn_shoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::dyn_shoulder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shoulder"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::Point**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point upperArm
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::Point*& RootMotion::FinalIK::IKSolverArm::dyn_upperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::dyn_upperArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upperArm"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::Point**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point forearm
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::Point*& RootMotion::FinalIK::IKSolverArm::dyn_forearm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::dyn_forearm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forearm"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::Point**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point hand
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::Point*& RootMotion::FinalIK::IKSolverArm::dyn_hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::dyn_hand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hand"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::Point**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isLeft
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverArm::dyn_isLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::dyn_isLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm arm
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverVR::Arm*& RootMotion::FinalIK::IKSolverArm::dyn_arm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::dyn_arm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arm"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverVR::Arm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] positions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& RootMotion::FinalIK::IKSolverArm::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion[] rotations
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& RootMotion::FinalIK::IKSolverArm::dyn_rotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::dyn_rotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotations"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.SetChain
bool RootMotion::FinalIK::IKSolverArm::SetChain(::UnityEngine::Transform* chest, ::UnityEngine::Transform* shoulder, ::UnityEngine::Transform* upperArm, ::UnityEngine::Transform* forearm, ::UnityEngine::Transform* hand, ::UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::SetChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chest), ::il2cpp_utils::ExtractType(shoulder), ::il2cpp_utils::ExtractType(upperArm), ::il2cpp_utils::ExtractType(forearm), ::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, chest, shoulder, upperArm, forearm, hand, root);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.Solve
void RootMotion::FinalIK::IKSolverArm::Solve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::Solve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.Read
void RootMotion::FinalIK::IKSolverArm::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.Write
void RootMotion::FinalIK::IKSolverArm::Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.IsValid
bool RootMotion::FinalIK::IKSolverArm::IsValid(ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.GetPoints
::ArrayW<::RootMotion::FinalIK::IKSolver::Point*> RootMotion::FinalIK::IKSolverArm::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::GetPoints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::RootMotion::FinalIK::IKSolver::Point*>, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.GetPoint
::RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverArm::GetPoint(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::GetPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverArm::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::StoreDefaultLocalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.FixTransforms
void RootMotion::FinalIK::IKSolverArm::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::FixTransforms");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.OnInitiate
void RootMotion::FinalIK::IKSolverArm::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::OnInitiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverArm.OnUpdate
void RootMotion::FinalIK::IKSolverArm::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverArm::OnUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverCCD
#include "RootMotion/FinalIK/IKSolverCCD.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.IterationDelegate
#include "RootMotion/FinalIK/IKSolver_IterationDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.IterationDelegate OnPreIteration
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::IterationDelegate*& RootMotion::FinalIK::IKSolverCCD::dyn_OnPreIteration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverCCD::dyn_OnPreIteration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreIteration"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::IterationDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverCCD.FadeOutBoneWeights
void RootMotion::FinalIK::IKSolverCCD::FadeOutBoneWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverCCD::FadeOutBoneWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOutBoneWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverCCD.Solve
void RootMotion::FinalIK::IKSolverCCD::Solve(::UnityEngine::Vector3 targetPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverCCD::Solve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPosition);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverCCD.OnInitiate
void RootMotion::FinalIK::IKSolverCCD::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverCCD::OnInitiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverCCD.OnUpdate
void RootMotion::FinalIK::IKSolverCCD::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverCCD::OnUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverFABRIK
#include "RootMotion/FinalIK/IKSolverFABRIK.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.IterationDelegate
#include "RootMotion/FinalIK/IKSolver_IterationDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.IterationDelegate OnPreIteration
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::IterationDelegate*& RootMotion::FinalIK::IKSolverFABRIK::dyn_OnPreIteration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::dyn_OnPreIteration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreIteration"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::IterationDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] limitedBones
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& RootMotion::FinalIK::IKSolverFABRIK::dyn_limitedBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::dyn_limitedBones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "limitedBones"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] solverLocalPositions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& RootMotion::FinalIK::IKSolverFABRIK::dyn_solverLocalPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::dyn_solverLocalPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solverLocalPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolveForward
void RootMotion::FinalIK::IKSolverFABRIK::SolveForward(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::SolveForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolveForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolveBackward
void RootMotion::FinalIK::IKSolverFABRIK::SolveBackward(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::SolveBackward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolveBackward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolveJoint
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFABRIK::SolveJoint(::UnityEngine::Vector3 pos1, ::UnityEngine::Vector3 pos2, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::SolveJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolveJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos1), ::il2cpp_utils::ExtractType(pos2), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, pos1, pos2, length);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.OnPreSolve
void RootMotion::FinalIK::IKSolverFABRIK::OnPreSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::OnPreSolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreSolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.OnPostSolve
void RootMotion::FinalIK::IKSolverFABRIK::OnPostSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::OnPostSolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostSolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.Solve
void RootMotion::FinalIK::IKSolverFABRIK::Solve(::UnityEngine::Vector3 targetPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::Solve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetPosition);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.ForwardReach
void RootMotion::FinalIK::IKSolverFABRIK::ForwardReach(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::ForwardReach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForwardReach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolverMove
void RootMotion::FinalIK::IKSolverFABRIK::SolverMove(int index, ::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::SolverMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolverMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolverRotate
void RootMotion::FinalIK::IKSolverFABRIK::SolverRotate(int index, ::UnityEngine::Quaternion rotation, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::SolverRotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolverRotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(recursive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, rotation, recursive);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolverRotateChildren
void RootMotion::FinalIK::IKSolverFABRIK::SolverRotateChildren(int index, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::SolverRotateChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolverRotateChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolverMoveChildrenAroundPoint
void RootMotion::FinalIK::IKSolverFABRIK::SolverMoveChildrenAroundPoint(int index, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::SolverMoveChildrenAroundPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolverMoveChildrenAroundPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.GetParentSolverRotation
::UnityEngine::Quaternion RootMotion::FinalIK::IKSolverFABRIK::GetParentSolverRotation(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::GetParentSolverRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentSolverRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.GetParentSolverPosition
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFABRIK::GetParentSolverPosition(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::GetParentSolverPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentSolverPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.GetLimitedRotation
::UnityEngine::Quaternion RootMotion::FinalIK::IKSolverFABRIK::GetLimitedRotation(int index, ::UnityEngine::Quaternion q, ByRef<bool> changed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::GetLimitedRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLimitedRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, index, q, byref(changed));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.LimitForward
void RootMotion::FinalIK::IKSolverFABRIK::LimitForward(int rotateBone, int limitBone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::LimitForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LimitForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotateBone), ::il2cpp_utils::ExtractType(limitBone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotateBone, limitBone);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.BackwardReach
void RootMotion::FinalIK::IKSolverFABRIK::BackwardReach(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::BackwardReach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackwardReach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.BackwardReachUnlimited
void RootMotion::FinalIK::IKSolverFABRIK::BackwardReachUnlimited(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::BackwardReachUnlimited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackwardReachUnlimited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.BackwardReachLimited
void RootMotion::FinalIK::IKSolverFABRIK::BackwardReachLimited(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::BackwardReachLimited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackwardReachLimited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.MapToSolverPositions
void RootMotion::FinalIK::IKSolverFABRIK::MapToSolverPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::MapToSolverPositions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MapToSolverPositions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.MapToSolverPositionsLimited
void RootMotion::FinalIK::IKSolverFABRIK::MapToSolverPositionsLimited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::MapToSolverPositionsLimited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MapToSolverPositionsLimited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.get_boneLengthCanBeZero
bool RootMotion::FinalIK::IKSolverFABRIK::get_boneLengthCanBeZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::get_boneLengthCanBeZero");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_boneLengthCanBeZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.GetIKPosition
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFABRIK::GetIKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::GetIKPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.OnInitiate
void RootMotion::FinalIK::IKSolverFABRIK::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::OnInitiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.OnUpdate
void RootMotion::FinalIK::IKSolverFABRIK::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIK::OnUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverFABRIKRoot
#include "RootMotion/FinalIK/IKSolverFABRIKRoot.hpp"
// Including type: RootMotion.FinalIK.FABRIKChain
#include "RootMotion/FinalIK/FABRIKChain.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 iterations
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverFABRIKRoot::dyn_iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIKRoot::dyn_iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rootPin
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverFABRIKRoot::dyn_rootPin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIKRoot::dyn_rootPin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootPin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.FABRIKChain[] chains
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::FABRIKChain*>& RootMotion::FinalIK::IKSolverFABRIKRoot::dyn_chains() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIKRoot::dyn_chains");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chains"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::FABRIKChain*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean zeroWeightApplied
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverFABRIKRoot::dyn_zeroWeightApplied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIKRoot::dyn_zeroWeightApplied");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zeroWeightApplied"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] isRoot
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& RootMotion::FinalIK::IKSolverFABRIKRoot::dyn_isRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIKRoot::dyn_isRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRoot"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 rootDefaultPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverFABRIKRoot::dyn_rootDefaultPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIKRoot::dyn_rootDefaultPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootDefaultPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.IsRoot
bool RootMotion::FinalIK::IKSolverFABRIKRoot::IsRoot(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIKRoot::IsRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.AddPointsToArray
void RootMotion::FinalIK::IKSolverFABRIKRoot::AddPointsToArray(ByRef<::ArrayW<::RootMotion::FinalIK::IKSolver::Point*>> array, ::RootMotion::FinalIK::FABRIKChain* chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIKRoot::AddPointsToArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPointsToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(chain)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(array), chain);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.GetCentroid
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFABRIKRoot::GetCentroid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIKRoot::GetCentroid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCentroid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.IsValid
bool RootMotion::FinalIK::IKSolverFABRIKRoot::IsValid(ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIKRoot::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverFABRIKRoot::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIKRoot::StoreDefaultLocalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.FixTransforms
void RootMotion::FinalIK::IKSolverFABRIKRoot::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIKRoot::FixTransforms");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.OnInitiate
void RootMotion::FinalIK::IKSolverFABRIKRoot::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIKRoot::OnInitiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.OnUpdate
void RootMotion::FinalIK::IKSolverFABRIKRoot::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIKRoot::OnUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.GetPoints
::ArrayW<::RootMotion::FinalIK::IKSolver::Point*> RootMotion::FinalIK::IKSolverFABRIKRoot::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIKRoot::GetPoints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::RootMotion::FinalIK::IKSolver::Point*>, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.GetPoint
::RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverFABRIKRoot::GetPoint(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFABRIKRoot::GetPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: RootMotion.FinalIK.FBIKChain
#include "RootMotion/FinalIK/FBIKChain.hpp"
// Including type: RootMotion.FinalIK.IKEffector
#include "RootMotion/FinalIK/IKEffector.hpp"
// Including type: RootMotion.FinalIK.IKMappingSpine
#include "RootMotion/FinalIK/IKMappingSpine.hpp"
// Including type: RootMotion.FinalIK.IKMappingBone
#include "RootMotion/FinalIK/IKMappingBone.hpp"
// Including type: RootMotion.FinalIK.IKMappingLimb
#include "RootMotion/FinalIK/IKMappingLimb.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate
#include "RootMotion/FinalIK/IKSolver_UpdateDelegate.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.IterationDelegate
#include "RootMotion/FinalIK/IKSolver_IterationDelegate.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Node
#include "RootMotion/FinalIK/IKSolver_Node.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 iterations
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverFullBody::dyn_iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::dyn_iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.FBIKChain[] chain
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::FBIKChain*>& RootMotion::FinalIK::IKSolverFullBody::dyn_chain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::dyn_chain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chain"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::FBIKChain*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKEffector[] effectors
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IKEffector*>& RootMotion::FinalIK::IKSolverFullBody::dyn_effectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::dyn_effectors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "effectors"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IKEffector*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKMappingSpine spineMapping
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKMappingSpine*& RootMotion::FinalIK::IKSolverFullBody::dyn_spineMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::dyn_spineMapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spineMapping"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKMappingSpine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKMappingBone[] boneMappings
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IKMappingBone*>& RootMotion::FinalIK::IKSolverFullBody::dyn_boneMappings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::dyn_boneMappings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boneMappings"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IKMappingBone*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKMappingLimb[] limbMappings
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IKMappingLimb*>& RootMotion::FinalIK::IKSolverFullBody::dyn_limbMappings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::dyn_limbMappings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "limbMappings"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IKMappingLimb*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean FABRIKPass
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverFullBody::dyn_FABRIKPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::dyn_FABRIKPass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FABRIKPass"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate OnPreRead
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::UpdateDelegate*& RootMotion::FinalIK::IKSolverFullBody::dyn_OnPreRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::dyn_OnPreRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreRead"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::UpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate OnPreSolve
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::UpdateDelegate*& RootMotion::FinalIK::IKSolverFullBody::dyn_OnPreSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::dyn_OnPreSolve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreSolve"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::UpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.IterationDelegate OnPreIteration
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::IterationDelegate*& RootMotion::FinalIK::IKSolverFullBody::dyn_OnPreIteration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::dyn_OnPreIteration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreIteration"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::IterationDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.IterationDelegate OnPostIteration
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::IterationDelegate*& RootMotion::FinalIK::IKSolverFullBody::dyn_OnPostIteration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::dyn_OnPostIteration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPostIteration"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::IterationDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate OnPreBend
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::UpdateDelegate*& RootMotion::FinalIK::IKSolverFullBody::dyn_OnPreBend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::dyn_OnPreBend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreBend"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::UpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate OnPostSolve
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::UpdateDelegate*& RootMotion::FinalIK::IKSolverFullBody::dyn_OnPostSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::dyn_OnPostSolve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPostSolve"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::UpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate OnStoreDefaultLocalState
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::UpdateDelegate*& RootMotion::FinalIK::IKSolverFullBody::dyn_OnStoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::dyn_OnStoreDefaultLocalState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnStoreDefaultLocalState"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::UpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.UpdateDelegate OnFixTransforms
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::UpdateDelegate*& RootMotion::FinalIK::IKSolverFullBody::dyn_OnFixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::dyn_OnFixTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnFixTransforms"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::UpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.GetEffector
::RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBody::GetEffector(::UnityEngine::Transform* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::GetEffector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEffector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method, t);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.GetChain
::RootMotion::FinalIK::FBIKChain* RootMotion::FinalIK::IKSolverFullBody::GetChain(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::GetChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::FBIKChain*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.GetChainIndex
int RootMotion::FinalIK::IKSolverFullBody::GetChainIndex(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::GetChainIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChainIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.GetNode
::RootMotion::FinalIK::IKSolver::Node* RootMotion::FinalIK::IKSolverFullBody::GetNode(int chainIndex, int nodeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::GetNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chainIndex), ::il2cpp_utils::ExtractType(nodeIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver::Node*, false>(this, ___internal__method, chainIndex, nodeIndex);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.GetChainAndNodeIndexes
void RootMotion::FinalIK::IKSolverFullBody::GetChainAndNodeIndexes(::UnityEngine::Transform* transform, ByRef<int> chainIndex, ByRef<int> nodeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::GetChainAndNodeIndexes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChainAndNodeIndexes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform, byref(chainIndex), byref(nodeIndex));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.ReadPose
void RootMotion::FinalIK::IKSolverFullBody::ReadPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::ReadPose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.Solve
void RootMotion::FinalIK::IKSolverFullBody::Solve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::Solve");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.ApplyBendConstraints
void RootMotion::FinalIK::IKSolverFullBody::ApplyBendConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::ApplyBendConstraints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyBendConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.WritePose
void RootMotion::FinalIK::IKSolverFullBody::WritePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::WritePose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.GetPoints
::ArrayW<::RootMotion::FinalIK::IKSolver::Point*> RootMotion::FinalIK::IKSolverFullBody::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::GetPoints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::RootMotion::FinalIK::IKSolver::Point*>, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.GetPoint
::RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverFullBody::GetPoint(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::GetPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.IsValid
bool RootMotion::FinalIK::IKSolverFullBody::IsValid(ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverFullBody::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::StoreDefaultLocalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.FixTransforms
void RootMotion::FinalIK::IKSolverFullBody::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::FixTransforms");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.OnInitiate
void RootMotion::FinalIK::IKSolverFullBody::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::OnInitiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBody.OnUpdate
void RootMotion::FinalIK::IKSolverFullBody::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBody::OnUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FullBodyBipedEffector
#include "RootMotion/FinalIK/FullBodyBipedEffector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector Body
::RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_get_Body");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "Body"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector Body
void RootMotion::FinalIK::FullBodyBipedEffector::_set_Body(::RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_set_Body");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "Body", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector LeftShoulder
::RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_LeftShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_get_LeftShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "LeftShoulder"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector LeftShoulder
void RootMotion::FinalIK::FullBodyBipedEffector::_set_LeftShoulder(::RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_set_LeftShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "LeftShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector RightShoulder
::RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_RightShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_get_RightShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "RightShoulder"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector RightShoulder
void RootMotion::FinalIK::FullBodyBipedEffector::_set_RightShoulder(::RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_set_RightShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "RightShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector LeftThigh
::RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_LeftThigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_get_LeftThigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "LeftThigh"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector LeftThigh
void RootMotion::FinalIK::FullBodyBipedEffector::_set_LeftThigh(::RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_set_LeftThigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "LeftThigh", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector RightThigh
::RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_RightThigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_get_RightThigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "RightThigh"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector RightThigh
void RootMotion::FinalIK::FullBodyBipedEffector::_set_RightThigh(::RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_set_RightThigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "RightThigh", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector LeftHand
::RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector LeftHand
void RootMotion::FinalIK::FullBodyBipedEffector::_set_LeftHand(::RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector RightHand
::RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector RightHand
void RootMotion::FinalIK::FullBodyBipedEffector::_set_RightHand(::RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "RightHand", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector LeftFoot
::RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_LeftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_get_LeftFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "LeftFoot"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector LeftFoot
void RootMotion::FinalIK::FullBodyBipedEffector::_set_LeftFoot(::RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_set_LeftFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "LeftFoot", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedEffector RightFoot
::RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::FullBodyBipedEffector::_get_RightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_get_RightFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::FullBodyBipedEffector>("RootMotion.FinalIK", "FullBodyBipedEffector", "RightFoot"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedEffector RightFoot
void RootMotion::FinalIK::FullBodyBipedEffector::_set_RightFoot(::RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::_set_RightFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedEffector", "RightFoot", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::FullBodyBipedEffector::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedEffector::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FullBodyBipedChain
#include "RootMotion/FinalIK/FullBodyBipedChain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedChain LeftArm
::RootMotion::FinalIK::FullBodyBipedChain RootMotion::FinalIK::FullBodyBipedChain::_get_LeftArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedChain::_get_LeftArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::FullBodyBipedChain>("RootMotion.FinalIK", "FullBodyBipedChain", "LeftArm"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedChain LeftArm
void RootMotion::FinalIK::FullBodyBipedChain::_set_LeftArm(::RootMotion::FinalIK::FullBodyBipedChain value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedChain::_set_LeftArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedChain", "LeftArm", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedChain RightArm
::RootMotion::FinalIK::FullBodyBipedChain RootMotion::FinalIK::FullBodyBipedChain::_get_RightArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedChain::_get_RightArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::FullBodyBipedChain>("RootMotion.FinalIK", "FullBodyBipedChain", "RightArm"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedChain RightArm
void RootMotion::FinalIK::FullBodyBipedChain::_set_RightArm(::RootMotion::FinalIK::FullBodyBipedChain value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedChain::_set_RightArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedChain", "RightArm", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedChain LeftLeg
::RootMotion::FinalIK::FullBodyBipedChain RootMotion::FinalIK::FullBodyBipedChain::_get_LeftLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedChain::_get_LeftLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::FullBodyBipedChain>("RootMotion.FinalIK", "FullBodyBipedChain", "LeftLeg"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedChain LeftLeg
void RootMotion::FinalIK::FullBodyBipedChain::_set_LeftLeg(::RootMotion::FinalIK::FullBodyBipedChain value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedChain::_set_LeftLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedChain", "LeftLeg", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.FullBodyBipedChain RightLeg
::RootMotion::FinalIK::FullBodyBipedChain RootMotion::FinalIK::FullBodyBipedChain::_get_RightLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedChain::_get_RightLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::FullBodyBipedChain>("RootMotion.FinalIK", "FullBodyBipedChain", "RightLeg"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.FullBodyBipedChain RightLeg
void RootMotion::FinalIK::FullBodyBipedChain::_set_RightLeg(::RootMotion::FinalIK::FullBodyBipedChain value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedChain::_set_RightLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FullBodyBipedChain", "RightLeg", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::FullBodyBipedChain::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::FullBodyBipedChain::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverFullBodyBiped
#include "RootMotion/FinalIK/IKSolverFullBodyBiped.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKEffector
#include "RootMotion/FinalIK/IKEffector.hpp"
// Including type: RootMotion.FinalIK.FBIKChain
#include "RootMotion/FinalIK/FBIKChain.hpp"
// Including type: RootMotion.FinalIK.IKMappingLimb
#include "RootMotion/FinalIK/IKMappingLimb.hpp"
// Including type: RootMotion.FinalIK.IKMappingBone
#include "RootMotion/FinalIK/IKMappingBone.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedChain
#include "RootMotion/FinalIK/FullBodyBipedChain.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedEffector
#include "RootMotion/FinalIK/FullBodyBipedEffector.hpp"
// Including type: RootMotion.FinalIK.IKMappingSpine
#include "RootMotion/FinalIK/IKMappingSpine.hpp"
// Including type: RootMotion.FinalIK.IKConstraintBend
#include "RootMotion/FinalIK/IKConstraintBend.hpp"
// Including type: RootMotion.BipedReferences
#include "RootMotion/BipedReferences.hpp"
// Including type: RootMotion.BipedLimbOrientations/RootMotion.LimbOrientation
#include "RootMotion/BipedLimbOrientations_LimbOrientation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rootNode
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolverFullBodyBiped::dyn_rootNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::dyn_rootNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootNode"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spineStiffness
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverFullBodyBiped::dyn_spineStiffness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::dyn_spineStiffness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spineStiffness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pullBodyVertical
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverFullBodyBiped::dyn_pullBodyVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::dyn_pullBodyVertical");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pullBodyVertical"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pullBodyHorizontal
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverFullBodyBiped::dyn_pullBodyHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::dyn_pullBodyHorizontal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pullBodyHorizontal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <pullBodyOffset>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverFullBodyBiped::dyn_$pullBodyOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::dyn_$pullBodyOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pullBodyOffset>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverFullBodyBiped::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_bodyEffector
::RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_bodyEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_bodyEffector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bodyEffector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_leftShoulderEffector
::RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftShoulderEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftShoulderEffector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftShoulderEffector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_rightShoulderEffector
::RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightShoulderEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightShoulderEffector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightShoulderEffector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_leftThighEffector
::RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftThighEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftThighEffector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftThighEffector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_rightThighEffector
::RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightThighEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightThighEffector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightThighEffector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_leftHandEffector
::RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftHandEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftHandEffector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHandEffector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_rightHandEffector
::RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightHandEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightHandEffector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightHandEffector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_leftFootEffector
::RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftFootEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftFootEffector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftFootEffector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_rightFootEffector
::RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightFootEffector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightFootEffector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightFootEffector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_leftArmChain
::RootMotion::FinalIK::FBIKChain* RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftArmChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftArmChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftArmChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::FBIKChain*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_rightArmChain
::RootMotion::FinalIK::FBIKChain* RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightArmChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightArmChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightArmChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::FBIKChain*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_leftLegChain
::RootMotion::FinalIK::FBIKChain* RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftLegChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftLegChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftLegChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::FBIKChain*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_rightLegChain
::RootMotion::FinalIK::FBIKChain* RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightLegChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightLegChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightLegChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::FBIKChain*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_leftArmMapping
::RootMotion::FinalIK::IKMappingLimb* RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftArmMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftArmMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftArmMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKMappingLimb*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_rightArmMapping
::RootMotion::FinalIK::IKMappingLimb* RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightArmMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightArmMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightArmMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKMappingLimb*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_leftLegMapping
::RootMotion::FinalIK::IKMappingLimb* RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftLegMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_leftLegMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftLegMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKMappingLimb*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_rightLegMapping
::RootMotion::FinalIK::IKMappingLimb* RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightLegMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_rightLegMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightLegMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKMappingLimb*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_headMapping
::RootMotion::FinalIK::IKMappingBone* RootMotion::FinalIK::IKSolverFullBodyBiped::get_headMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_headMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKMappingBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.get_pullBodyOffset
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFullBodyBiped::get_pullBodyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::get_pullBodyOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pullBodyOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.set_pullBodyOffset
void RootMotion::FinalIK::IKSolverFullBodyBiped::set_pullBodyOffset(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::set_pullBodyOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pullBodyOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.SetChainWeights
void RootMotion::FinalIK::IKSolverFullBodyBiped::SetChainWeights(::RootMotion::FinalIK::FullBodyBipedChain c, float pull, float reach) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::SetChainWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChainWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(pull), ::il2cpp_utils::ExtractType(reach)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c, pull, reach);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.SetEffectorWeights
void RootMotion::FinalIK::IKSolverFullBodyBiped::SetEffectorWeights(::RootMotion::FinalIK::FullBodyBipedEffector effector, float positionWeight, float rotationWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::SetEffectorWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEffectorWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effector), ::il2cpp_utils::ExtractType(positionWeight), ::il2cpp_utils::ExtractType(rotationWeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, effector, positionWeight, rotationWeight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetChain
::RootMotion::FinalIK::FBIKChain* RootMotion::FinalIK::IKSolverFullBodyBiped::GetChain(::RootMotion::FinalIK::FullBodyBipedChain c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::GetChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::FBIKChain*, false>(this, ___internal__method, c);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetChain
::RootMotion::FinalIK::FBIKChain* RootMotion::FinalIK::IKSolverFullBodyBiped::GetChain(::RootMotion::FinalIK::FullBodyBipedEffector effector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::GetChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effector)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::FBIKChain*, false>(this, ___internal__method, effector);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetEffector
::RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::GetEffector(::RootMotion::FinalIK::FullBodyBipedEffector effector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::GetEffector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEffector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effector)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method, effector);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetEndEffector
::RootMotion::FinalIK::IKEffector* RootMotion::FinalIK::IKSolverFullBodyBiped::GetEndEffector(::RootMotion::FinalIK::FullBodyBipedChain c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::GetEndEffector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEndEffector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKEffector*, false>(this, ___internal__method, c);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetLimbMapping
::RootMotion::FinalIK::IKMappingLimb* RootMotion::FinalIK::IKSolverFullBodyBiped::GetLimbMapping(::RootMotion::FinalIK::FullBodyBipedChain chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::GetLimbMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLimbMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chain)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKMappingLimb*, false>(this, ___internal__method, chain);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetLimbMapping
::RootMotion::FinalIK::IKMappingLimb* RootMotion::FinalIK::IKSolverFullBodyBiped::GetLimbMapping(::RootMotion::FinalIK::FullBodyBipedEffector effector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::GetLimbMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLimbMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effector)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKMappingLimb*, false>(this, ___internal__method, effector);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetSpineMapping
::RootMotion::FinalIK::IKMappingSpine* RootMotion::FinalIK::IKSolverFullBodyBiped::GetSpineMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::GetSpineMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpineMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKMappingSpine*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetHeadMapping
::RootMotion::FinalIK::IKMappingBone* RootMotion::FinalIK::IKSolverFullBodyBiped::GetHeadMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::GetHeadMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHeadMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKMappingBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetBendConstraint
::RootMotion::FinalIK::IKConstraintBend* RootMotion::FinalIK::IKSolverFullBodyBiped::GetBendConstraint(::RootMotion::FinalIK::FullBodyBipedChain limb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::GetBendConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBendConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(limb)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKConstraintBend*, false>(this, ___internal__method, limb);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.SetToReferences
void RootMotion::FinalIK::IKSolverFullBodyBiped::SetToReferences(::RootMotion::BipedReferences* references, ::UnityEngine::Transform* rootNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::SetToReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(rootNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, references, rootNode);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.DetectRootNodeBone
::UnityEngine::Transform* RootMotion::FinalIK::IKSolverFullBodyBiped::DetectRootNodeBone(::RootMotion::BipedReferences* references) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::DetectRootNodeBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverFullBodyBiped", "DetectRootNodeBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, references);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.SetLimbOrientations
void RootMotion::FinalIK::IKSolverFullBodyBiped::SetLimbOrientations(::RootMotion::BipedLimbOrientations* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::SetLimbOrientations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLimbOrientations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.SetLimbOrientation
void RootMotion::FinalIK::IKSolverFullBodyBiped::SetLimbOrientation(::RootMotion::FinalIK::FullBodyBipedChain chain, ::RootMotion::BipedLimbOrientations::LimbOrientation* limbOrientation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::SetLimbOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLimbOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(limbOrientation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chain, limbOrientation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetLeftClavicle
::UnityEngine::Transform* RootMotion::FinalIK::IKSolverFullBodyBiped::GetLeftClavicle(::RootMotion::BipedReferences* references) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::GetLeftClavicle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverFullBodyBiped", "GetLeftClavicle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, references);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetRightClavicle
::UnityEngine::Transform* RootMotion::FinalIK::IKSolverFullBodyBiped::GetRightClavicle(::RootMotion::BipedReferences* references) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::GetRightClavicle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverFullBodyBiped", "GetRightClavicle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, references);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.Contains
bool RootMotion::FinalIK::IKSolverFullBodyBiped::Contains(::ArrayW<::UnityEngine::Transform*> array, ::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverFullBodyBiped", "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.PullBody
void RootMotion::FinalIK::IKSolverFullBodyBiped::PullBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::PullBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PullBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetBodyOffset
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFullBodyBiped::GetBodyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::GetBodyOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBodyOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.GetHandBodyPull
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFullBodyBiped::GetHandBodyPull(::RootMotion::FinalIK::IKEffector* effector, ::RootMotion::FinalIK::FBIKChain* arm, ::UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::GetHandBodyPull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHandBodyPull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effector), ::il2cpp_utils::ExtractType(arm), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, effector, arm, offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.IsValid
bool RootMotion::FinalIK::IKSolverFullBodyBiped::IsValid(ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.ReadPose
void RootMotion::FinalIK::IKSolverFullBodyBiped::ReadPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::ReadPose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.ApplyBendConstraints
void RootMotion::FinalIK::IKSolverFullBodyBiped::ApplyBendConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::ApplyBendConstraints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyBendConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFullBodyBiped.WritePose
void RootMotion::FinalIK::IKSolverFullBodyBiped::WritePose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverFullBodyBiped::WritePose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverHeuristic
#include "RootMotion/FinalIK/IKSolverHeuristic.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Bone
#include "RootMotion/FinalIK/IKSolver_Bone.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolverHeuristic::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tolerance
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverHeuristic::dyn_tolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::dyn_tolerance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tolerance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxIterations
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverHeuristic::dyn_maxIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::dyn_maxIterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxIterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useRotationLimits
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverHeuristic::dyn_useRotationLimits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::dyn_useRotationLimits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useRotationLimits"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean XY
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverHeuristic::dyn_XY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::dyn_XY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Bone[] bones
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IKSolver::Bone*>& RootMotion::FinalIK::IKSolverHeuristic::dyn_bones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::dyn_bones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bones"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IKSolver::Bone*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 lastLocalDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverHeuristic::dyn_lastLocalDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::dyn_lastLocalDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLocalDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single chainLength
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverHeuristic::dyn_chainLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::dyn_chainLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chainLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.get_minBones
int RootMotion::FinalIK::IKSolverHeuristic::get_minBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::get_minBones");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.get_boneLengthCanBeZero
bool RootMotion::FinalIK::IKSolverHeuristic::get_boneLengthCanBeZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::get_boneLengthCanBeZero");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_boneLengthCanBeZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.get_allowCommonParent
bool RootMotion::FinalIK::IKSolverHeuristic::get_allowCommonParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::get_allowCommonParent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowCommonParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.get_localDirection
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverHeuristic::get_localDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::get_localDirection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.get_positionOffset
float RootMotion::FinalIK::IKSolverHeuristic::get_positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::get_positionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_positionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.SetChain
bool RootMotion::FinalIK::IKSolverHeuristic::SetChain(::ArrayW<::UnityEngine::Transform*> hierarchy, ::UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::SetChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hierarchy), ::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hierarchy, root);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.AddBone
void RootMotion::FinalIK::IKSolverHeuristic::AddBone(::UnityEngine::Transform* bone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::AddBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bone);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.InitiateBones
void RootMotion::FinalIK::IKSolverHeuristic::InitiateBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::InitiateBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.GetSingularityOffset
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverHeuristic::GetSingularityOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::GetSingularityOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSingularityOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.SingularityDetected
bool RootMotion::FinalIK::IKSolverHeuristic::SingularityDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::SingularityDetected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SingularityDetected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverHeuristic::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::StoreDefaultLocalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.FixTransforms
void RootMotion::FinalIK::IKSolverHeuristic::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::FixTransforms");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.IsValid
bool RootMotion::FinalIK::IKSolverHeuristic::IsValid(ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.GetPoints
::ArrayW<::RootMotion::FinalIK::IKSolver::Point*> RootMotion::FinalIK::IKSolverHeuristic::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::GetPoints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::RootMotion::FinalIK::IKSolver::Point*>, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.GetPoint
::RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverHeuristic::GetPoint(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::GetPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.OnInitiate
void RootMotion::FinalIK::IKSolverHeuristic::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::OnInitiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverHeuristic.OnUpdate
void RootMotion::FinalIK::IKSolverHeuristic::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverHeuristic::OnUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverLeg
#include "RootMotion/FinalIK/IKSolverLeg.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg
#include "RootMotion/FinalIK/IKSolverVR_Leg.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single IKRotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverLeg::dyn_IKRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::dyn_IKRotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion IKRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverLeg::dyn_IKRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::dyn_IKRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point pelvis
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::Point*& RootMotion::FinalIK::IKSolverLeg::dyn_pelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::dyn_pelvis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvis"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::Point**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point thigh
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::Point*& RootMotion::FinalIK::IKSolverLeg::dyn_thigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::dyn_thigh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thigh"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::Point**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point calf
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::Point*& RootMotion::FinalIK::IKSolverLeg::dyn_calf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::dyn_calf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calf"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::Point**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point foot
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::Point*& RootMotion::FinalIK::IKSolverLeg::dyn_foot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::dyn_foot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foot"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::Point**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point toe
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolver::Point*& RootMotion::FinalIK::IKSolverLeg::dyn_toe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::dyn_toe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toe"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolver::Point**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg leg
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverVR::Leg*& RootMotion::FinalIK::IKSolverLeg::dyn_leg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::dyn_leg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leg"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverVR::Leg**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 heelOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverLeg::dyn_heelOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::dyn_heelOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heelOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] positions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& RootMotion::FinalIK::IKSolverLeg::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion[] rotations
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& RootMotion::FinalIK::IKSolverLeg::dyn_rotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::dyn_rotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotations"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.SetChain
bool RootMotion::FinalIK::IKSolverLeg::SetChain(::UnityEngine::Transform* pelvis, ::UnityEngine::Transform* thigh, ::UnityEngine::Transform* calf, ::UnityEngine::Transform* foot, ::UnityEngine::Transform* toe, ::UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::SetChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pelvis), ::il2cpp_utils::ExtractType(thigh), ::il2cpp_utils::ExtractType(calf), ::il2cpp_utils::ExtractType(foot), ::il2cpp_utils::ExtractType(toe), ::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pelvis, thigh, calf, foot, toe, root);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.Solve
void RootMotion::FinalIK::IKSolverLeg::Solve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::Solve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.Read
void RootMotion::FinalIK::IKSolverLeg::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.Write
void RootMotion::FinalIK::IKSolverLeg::Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.IsValid
bool RootMotion::FinalIK::IKSolverLeg::IsValid(ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.GetPoints
::ArrayW<::RootMotion::FinalIK::IKSolver::Point*> RootMotion::FinalIK::IKSolverLeg::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::GetPoints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::RootMotion::FinalIK::IKSolver::Point*>, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.GetPoint
::RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverLeg::GetPoint(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::GetPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverLeg::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::StoreDefaultLocalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.FixTransforms
void RootMotion::FinalIK::IKSolverLeg::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::FixTransforms");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.OnInitiate
void RootMotion::FinalIK::IKSolverLeg::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::OnInitiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLeg.OnUpdate
void RootMotion::FinalIK::IKSolverLeg::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLeg::OnUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverLimb
#include "RootMotion/FinalIK/IKSolverLimb.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AvatarIKGoal goal
[[deprecated("Use field access instead!")]] ::UnityEngine::AvatarIKGoal& RootMotion::FinalIK::IKSolverLimb::dyn_goal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::dyn_goal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goal"))->offset;
  return *reinterpret_cast<::UnityEngine::AvatarIKGoal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLimb/RootMotion.FinalIK.BendModifier bendModifier
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverLimb::BendModifier& RootMotion::FinalIK::IKSolverLimb::dyn_bendModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::dyn_bendModifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendModifier"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverLimb::BendModifier*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maintainRotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverLimb::dyn_maintainRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::dyn_maintainRotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maintainRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bendModifierWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverLimb::dyn_bendModifierWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::dyn_bendModifierWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendModifierWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform bendGoal
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolverLimb::dyn_bendGoal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::dyn_bendGoal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendGoal"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean maintainBendFor1Frame
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverLimb::dyn_maintainBendFor1Frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::dyn_maintainBendFor1Frame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maintainBendFor1Frame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean maintainRotationFor1Frame
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverLimb::dyn_maintainRotationFor1Frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::dyn_maintainRotationFor1Frame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maintainRotationFor1Frame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion defaultRootRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverLimb::dyn_defaultRootRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::dyn_defaultRootRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultRootRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion parentDefaultRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverLimb::dyn_parentDefaultRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::dyn_parentDefaultRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentDefaultRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion bone3RotationBeforeSolve
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverLimb::dyn_bone3RotationBeforeSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::dyn_bone3RotationBeforeSolve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone3RotationBeforeSolve"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion maintainRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverLimb::dyn_maintainRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::dyn_maintainRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maintainRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion bone3DefaultRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverLimb::dyn_bone3DefaultRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::dyn_bone3DefaultRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone3DefaultRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _bendNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverLimb::dyn__bendNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::dyn__bendNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bendNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 animationNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverLimb::dyn_animationNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::dyn_animationNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKSolverLimb/RootMotion.FinalIK.AxisDirection[] axisDirectionsLeft
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IKSolverLimb::AxisDirection>& RootMotion::FinalIK::IKSolverLimb::dyn_axisDirectionsLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::dyn_axisDirectionsLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisDirectionsLeft"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IKSolverLimb::AxisDirection>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKSolverLimb/RootMotion.FinalIK.AxisDirection[] axisDirectionsRight
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IKSolverLimb::AxisDirection>& RootMotion::FinalIK::IKSolverLimb::dyn_axisDirectionsRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::dyn_axisDirectionsRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisDirectionsRight"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IKSolverLimb::AxisDirection>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb.get_axisDirections
::ArrayW<::RootMotion::FinalIK::IKSolverLimb::AxisDirection> RootMotion::FinalIK::IKSolverLimb::get_axisDirections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::get_axisDirections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_axisDirections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::RootMotion::FinalIK::IKSolverLimb::AxisDirection>, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb.MaintainRotation
void RootMotion::FinalIK::IKSolverLimb::MaintainRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::MaintainRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaintainRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb.MaintainBend
void RootMotion::FinalIK::IKSolverLimb::MaintainBend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::MaintainBend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaintainBend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb.StoreAxisDirections
void RootMotion::FinalIK::IKSolverLimb::StoreAxisDirections(ByRef<::ArrayW<::RootMotion::FinalIK::IKSolverLimb::AxisDirection>> axisDirections) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::StoreAxisDirections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreAxisDirections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axisDirections)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(axisDirections));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb.GetModifiedBendNormal
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverLimb::GetModifiedBendNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::GetModifiedBendNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModifiedBendNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb.OnInitiateVirtual
void RootMotion::FinalIK::IKSolverLimb::OnInitiateVirtual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::OnInitiateVirtual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitiateVirtual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb.OnUpdateVirtual
void RootMotion::FinalIK::IKSolverLimb::OnUpdateVirtual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::OnUpdateVirtual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdateVirtual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb.OnPostSolveVirtual
void RootMotion::FinalIK::IKSolverLimb::OnPostSolveVirtual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::OnPostSolveVirtual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostSolveVirtual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverLimb/RootMotion.FinalIK.BendModifier
#include "RootMotion/FinalIK/IKSolverLimb.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverLimb/RootMotion.FinalIK.BendModifier Animation
::RootMotion::FinalIK::IKSolverLimb::BendModifier RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Animation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Animation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverLimb::BendModifier>("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Animation"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverLimb/RootMotion.FinalIK.BendModifier Animation
void RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Animation(::RootMotion::FinalIK::IKSolverLimb::BendModifier value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Animation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Animation", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverLimb/RootMotion.FinalIK.BendModifier Target
::RootMotion::FinalIK::IKSolverLimb::BendModifier RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Target");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverLimb::BendModifier>("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Target"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverLimb/RootMotion.FinalIK.BendModifier Target
void RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Target(::RootMotion::FinalIK::IKSolverLimb::BendModifier value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Target");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Target", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverLimb/RootMotion.FinalIK.BendModifier Parent
::RootMotion::FinalIK::IKSolverLimb::BendModifier RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Parent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverLimb::BendModifier>("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Parent"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverLimb/RootMotion.FinalIK.BendModifier Parent
void RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Parent(::RootMotion::FinalIK::IKSolverLimb::BendModifier value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Parent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Parent", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverLimb/RootMotion.FinalIK.BendModifier Arm
::RootMotion::FinalIK::IKSolverLimb::BendModifier RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Arm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Arm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverLimb::BendModifier>("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Arm"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverLimb/RootMotion.FinalIK.BendModifier Arm
void RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Arm(::RootMotion::FinalIK::IKSolverLimb::BendModifier value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Arm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Arm", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverLimb/RootMotion.FinalIK.BendModifier Goal
::RootMotion::FinalIK::IKSolverLimb::BendModifier RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Goal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::BendModifier::_get_Goal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverLimb::BendModifier>("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Goal"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverLimb/RootMotion.FinalIK.BendModifier Goal
void RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Goal(::RootMotion::FinalIK::IKSolverLimb::BendModifier value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::BendModifier::_set_Goal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverLimb/BendModifier", "Goal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverLimb::BendModifier::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::BendModifier::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverLimb/RootMotion.FinalIK.AxisDirection
#include "RootMotion/FinalIK/IKSolverLimb.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 direction
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverLimb::AxisDirection::dyn_direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::AxisDirection::dyn_direction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "direction"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 axis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverLimb::AxisDirection::dyn_axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::AxisDirection::dyn_axis");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single dot
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverLimb::AxisDirection::dyn_dot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::AxisDirection::dyn_dot");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLimb/RootMotion.FinalIK.AxisDirection..ctor
RootMotion::FinalIK::IKSolverLimb::AxisDirection::AxisDirection(::UnityEngine::Vector3 direction, ::UnityEngine::Vector3 axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLimb::AxisDirection::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(axis)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, direction, axis);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverLookAt
#include "RootMotion/FinalIK/IKSolverLookAt.hpp"
// Including type: RootMotion.FinalIK.IKSolverLookAt/RootMotion.FinalIK.LookAtBone
#include "RootMotion/FinalIK/IKSolverLookAt_LookAtBone.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolverLookAt::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLookAt/RootMotion.FinalIK.LookAtBone[] spine
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IKSolverLookAt::LookAtBone*>& RootMotion::FinalIK::IKSolverLookAt::dyn_spine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::dyn_spine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spine"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IKSolverLookAt::LookAtBone*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLookAt/RootMotion.FinalIK.LookAtBone head
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverLookAt::LookAtBone*& RootMotion::FinalIK::IKSolverLookAt::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverLookAt::LookAtBone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverLookAt/RootMotion.FinalIK.LookAtBone[] eyes
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IKSolverLookAt::LookAtBone*>& RootMotion::FinalIK::IKSolverLookAt::dyn_eyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::dyn_eyes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyes"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IKSolverLookAt::LookAtBone*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bodyWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverLookAt::dyn_bodyWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::dyn_bodyWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single headWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverLookAt::dyn_headWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::dyn_headWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single eyesWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverLookAt::dyn_eyesWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::dyn_eyesWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyesWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single clampWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverLookAt::dyn_clampWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::dyn_clampWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clampWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single clampWeightHead
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverLookAt::dyn_clampWeightHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::dyn_clampWeightHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clampWeightHead"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single clampWeightEyes
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverLookAt::dyn_clampWeightEyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::dyn_clampWeightEyes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clampWeightEyes"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 clampSmoothing
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverLookAt::dyn_clampSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::dyn_clampSmoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clampSmoothing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve spineWeightCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& RootMotion::FinalIK::IKSolverLookAt::dyn_spineWeightCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::dyn_spineWeightCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spineWeightCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 spineTargetOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverLookAt::dyn_spineTargetOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::dyn_spineTargetOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spineTargetOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3[] spineForwards
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& RootMotion::FinalIK::IKSolverLookAt::dyn_spineForwards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::dyn_spineForwards");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spineForwards"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3[] headForwards
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& RootMotion::FinalIK::IKSolverLookAt::dyn_headForwards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::dyn_headForwards");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headForwards"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3[] eyeForward
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& RootMotion::FinalIK::IKSolverLookAt::dyn_eyeForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::dyn_eyeForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyeForward"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.get_spineIsValid
bool RootMotion::FinalIK::IKSolverLookAt::get_spineIsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::get_spineIsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spineIsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.get_spineIsEmpty
bool RootMotion::FinalIK::IKSolverLookAt::get_spineIsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::get_spineIsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spineIsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.get_headIsValid
bool RootMotion::FinalIK::IKSolverLookAt::get_headIsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::get_headIsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headIsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.get_headIsEmpty
bool RootMotion::FinalIK::IKSolverLookAt::get_headIsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::get_headIsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headIsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.get_eyesIsValid
bool RootMotion::FinalIK::IKSolverLookAt::get_eyesIsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::get_eyesIsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eyesIsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.get_eyesIsEmpty
bool RootMotion::FinalIK::IKSolverLookAt::get_eyesIsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::get_eyesIsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eyesIsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SetLookAtWeight
void RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SetLookAtWeight
void RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight(float weight, float bodyWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(bodyWeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight, bodyWeight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SetLookAtWeight
void RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight(float weight, float bodyWeight, float headWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(bodyWeight), ::il2cpp_utils::ExtractType(headWeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight, bodyWeight, headWeight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SetLookAtWeight
void RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(bodyWeight), ::il2cpp_utils::ExtractType(headWeight), ::il2cpp_utils::ExtractType(eyesWeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight, bodyWeight, headWeight, eyesWeight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SetLookAtWeight
void RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(bodyWeight), ::il2cpp_utils::ExtractType(headWeight), ::il2cpp_utils::ExtractType(eyesWeight), ::il2cpp_utils::ExtractType(clampWeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight, bodyWeight, headWeight, eyesWeight, clampWeight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SetLookAtWeight
void RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight, float clampWeightHead, float clampWeightEyes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::SetLookAtWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLookAtWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(bodyWeight), ::il2cpp_utils::ExtractType(headWeight), ::il2cpp_utils::ExtractType(eyesWeight), ::il2cpp_utils::ExtractType(clampWeight), ::il2cpp_utils::ExtractType(clampWeightHead), ::il2cpp_utils::ExtractType(clampWeightEyes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight, bodyWeight, headWeight, eyesWeight, clampWeight, clampWeightHead, clampWeightEyes);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SetChain
bool RootMotion::FinalIK::IKSolverLookAt::SetChain(::ArrayW<::UnityEngine::Transform*> spine, ::UnityEngine::Transform* head, ::ArrayW<::UnityEngine::Transform*> eyes, ::UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::SetChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spine), ::il2cpp_utils::ExtractType(head), ::il2cpp_utils::ExtractType(eyes), ::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, spine, head, eyes, root);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SolveSpine
void RootMotion::FinalIK::IKSolverLookAt::SolveSpine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::SolveSpine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolveSpine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SolveHead
void RootMotion::FinalIK::IKSolverLookAt::SolveHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::SolveHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolveHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SolveEyes
void RootMotion::FinalIK::IKSolverLookAt::SolveEyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::SolveEyes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolveEyes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.GetForwards
::ArrayW<::UnityEngine::Vector3> RootMotion::FinalIK::IKSolverLookAt::GetForwards(ByRef<::ArrayW<::UnityEngine::Vector3>> forwards, ::UnityEngine::Vector3 baseForward, ::UnityEngine::Vector3 targetForward, int bones, float clamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::GetForwards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetForwards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forwards), ::il2cpp_utils::ExtractType(baseForward), ::il2cpp_utils::ExtractType(targetForward), ::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(clamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method, byref(forwards), baseForward, targetForward, bones, clamp);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.SetBones
void RootMotion::FinalIK::IKSolverLookAt::SetBones(::ArrayW<::UnityEngine::Transform*> array, ByRef<::ArrayW<::RootMotion::FinalIK::IKSolverLookAt::LookAtBone*>> bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::SetBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(bones)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, byref(bones));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverLookAt::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::StoreDefaultLocalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.FixTransforms
void RootMotion::FinalIK::IKSolverLookAt::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::FixTransforms");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.IsValid
bool RootMotion::FinalIK::IKSolverLookAt::IsValid(ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.GetPoints
::ArrayW<::RootMotion::FinalIK::IKSolver::Point*> RootMotion::FinalIK::IKSolverLookAt::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::GetPoints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::RootMotion::FinalIK::IKSolver::Point*>, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.GetPoint
::RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverLookAt::GetPoint(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::GetPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.OnInitiate
void RootMotion::FinalIK::IKSolverLookAt::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::OnInitiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt.OnUpdate
void RootMotion::FinalIK::IKSolverLookAt::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::OnUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverLookAt/RootMotion.FinalIK.LookAtBone
#include "RootMotion/FinalIK/IKSolverLookAt_LookAtBone.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 baseForwardOffsetEuler
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverLookAt::LookAtBone::dyn_baseForwardOffsetEuler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::LookAtBone::dyn_baseForwardOffsetEuler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseForwardOffsetEuler"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt/RootMotion.FinalIK.LookAtBone.get_forward
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverLookAt::LookAtBone::get_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::LookAtBone::get_forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt/RootMotion.FinalIK.LookAtBone.Initiate
void RootMotion::FinalIK::IKSolverLookAt::LookAtBone::Initiate(::UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::LookAtBone::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, root);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverLookAt/RootMotion.FinalIK.LookAtBone.LookAt
void RootMotion::FinalIK::IKSolverLookAt::LookAtBone::LookAt(::UnityEngine::Vector3 direction, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverLookAt::LookAtBone::LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, direction, weight);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverTrigonometric
#include "RootMotion/FinalIK/IKSolverTrigonometric.hpp"
// Including type: RootMotion.FinalIK.IKSolverTrigonometric/RootMotion.FinalIK.TrigonometricBone
#include "RootMotion/FinalIK/IKSolverTrigonometric_TrigonometricBone.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolverTrigonometric::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single IKRotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverTrigonometric::dyn_IKRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::dyn_IKRotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion IKRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverTrigonometric::dyn_IKRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::dyn_IKRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 bendNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverTrigonometric::dyn_bendNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::dyn_bendNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverTrigonometric/RootMotion.FinalIK.TrigonometricBone bone1
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone*& RootMotion::FinalIK::IKSolverTrigonometric::dyn_bone1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::dyn_bone1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone1"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverTrigonometric/RootMotion.FinalIK.TrigonometricBone bone2
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone*& RootMotion::FinalIK::IKSolverTrigonometric::dyn_bone2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::dyn_bone2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone2"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverTrigonometric/RootMotion.FinalIK.TrigonometricBone bone3
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone*& RootMotion::FinalIK::IKSolverTrigonometric::dyn_bone3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::dyn_bone3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bone3"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 weightIKPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverTrigonometric::dyn_weightIKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::dyn_weightIKPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weightIKPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean directHierarchy
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverTrigonometric::dyn_directHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::dyn_directHierarchy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "directHierarchy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.SetBendGoalPosition
void RootMotion::FinalIK::IKSolverTrigonometric::SetBendGoalPosition(::UnityEngine::Vector3 goalPosition, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::SetBendGoalPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBendGoalPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goalPosition), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goalPosition, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.SetBendPlaneToCurrent
void RootMotion::FinalIK::IKSolverTrigonometric::SetBendPlaneToCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::SetBendPlaneToCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBendPlaneToCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.SetIKRotation
void RootMotion::FinalIK::IKSolverTrigonometric::SetIKRotation(::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::SetIKRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.SetIKRotationWeight
void RootMotion::FinalIK::IKSolverTrigonometric::SetIKRotationWeight(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::SetIKRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIKRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.GetIKRotation
::UnityEngine::Quaternion RootMotion::FinalIK::IKSolverTrigonometric::GetIKRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::GetIKRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.GetIKRotationWeight
float RootMotion::FinalIK::IKSolverTrigonometric::GetIKRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::GetIKRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIKRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.SetChain
bool RootMotion::FinalIK::IKSolverTrigonometric::SetChain(::UnityEngine::Transform* bone1, ::UnityEngine::Transform* bone2, ::UnityEngine::Transform* bone3, ::UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::SetChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bone1), ::il2cpp_utils::ExtractType(bone2), ::il2cpp_utils::ExtractType(bone3), ::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bone1, bone2, bone3, root);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.Solve
void RootMotion::FinalIK::IKSolverTrigonometric::Solve(::UnityEngine::Transform* bone1, ::UnityEngine::Transform* bone2, ::UnityEngine::Transform* bone3, ::UnityEngine::Vector3 targetPosition, ::UnityEngine::Vector3 bendNormal, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::Solve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverTrigonometric", "Solve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bone1), ::il2cpp_utils::ExtractType(bone2), ::il2cpp_utils::ExtractType(bone3), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(bendNormal), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bone1, bone2, bone3, targetPosition, bendNormal, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.GetDirectionToBendPoint
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverTrigonometric::GetDirectionToBendPoint(::UnityEngine::Vector3 direction, float directionMag, ::UnityEngine::Vector3 bendDirection, float sqrMag1, float sqrMag2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::GetDirectionToBendPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverTrigonometric", "GetDirectionToBendPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(directionMag), ::il2cpp_utils::ExtractType(bendDirection), ::il2cpp_utils::ExtractType(sqrMag1), ::il2cpp_utils::ExtractType(sqrMag2)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, direction, directionMag, bendDirection, sqrMag1, sqrMag2);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.IsDirectHierarchy
bool RootMotion::FinalIK::IKSolverTrigonometric::IsDirectHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::IsDirectHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDirectHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.InitiateBones
void RootMotion::FinalIK::IKSolverTrigonometric::InitiateBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::InitiateBones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitiateBones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.OnInitiateVirtual
void RootMotion::FinalIK::IKSolverTrigonometric::OnInitiateVirtual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::OnInitiateVirtual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitiateVirtual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.OnUpdateVirtual
void RootMotion::FinalIK::IKSolverTrigonometric::OnUpdateVirtual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::OnUpdateVirtual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdateVirtual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.OnPostSolveVirtual
void RootMotion::FinalIK::IKSolverTrigonometric::OnPostSolveVirtual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::OnPostSolveVirtual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostSolveVirtual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.GetBendDirection
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverTrigonometric::GetBendDirection(::UnityEngine::Vector3 IKPosition, ::UnityEngine::Vector3 bendNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::GetBendDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBendDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(IKPosition), ::il2cpp_utils::ExtractType(bendNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, IKPosition, bendNormal);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.GetPoints
::ArrayW<::RootMotion::FinalIK::IKSolver::Point*> RootMotion::FinalIK::IKSolverTrigonometric::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::GetPoints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::RootMotion::FinalIK::IKSolver::Point*>, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.GetPoint
::RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverTrigonometric::GetPoint(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::GetPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverTrigonometric::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::StoreDefaultLocalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.FixTransforms
void RootMotion::FinalIK::IKSolverTrigonometric::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::FixTransforms");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.IsValid
bool RootMotion::FinalIK::IKSolverTrigonometric::IsValid(ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.OnInitiate
void RootMotion::FinalIK::IKSolverTrigonometric::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::OnInitiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric.OnUpdate
void RootMotion::FinalIK::IKSolverTrigonometric::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::OnUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverTrigonometric/RootMotion.FinalIK.TrigonometricBone
#include "RootMotion/FinalIK/IKSolverTrigonometric_TrigonometricBone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion targetToLocalSpace
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone::dyn_targetToLocalSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone::dyn_targetToLocalSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetToLocalSpace"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 defaultLocalBendNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone::dyn_defaultLocalBendNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone::dyn_defaultLocalBendNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultLocalBendNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric/RootMotion.FinalIK.TrigonometricBone.Initiate
void RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone::Initiate(::UnityEngine::Vector3 childPosition, ::UnityEngine::Vector3 bendNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childPosition), ::il2cpp_utils::ExtractType(bendNormal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, childPosition, bendNormal);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric/RootMotion.FinalIK.TrigonometricBone.GetRotation
::UnityEngine::Quaternion RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone::GetRotation(::UnityEngine::Vector3 direction, ::UnityEngine::Vector3 bendNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone::GetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(bendNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, direction, bendNormal);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverTrigonometric/RootMotion.FinalIK.TrigonometricBone.GetBendNormalFromCurrentRotation
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone::GetBendNormalFromCurrentRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverTrigonometric::TrigonometricBone::GetBendNormalFromCurrentRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBendNormalFromCurrentRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverVR
#include "RootMotion/FinalIK/IKSolverVR.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm
#include "RootMotion/FinalIK/IKSolverVR_Arm.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart
#include "RootMotion/FinalIK/IKSolverVR_BodyPart.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Footstep
#include "RootMotion/FinalIK/IKSolverVR_Footstep.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg
#include "RootMotion/FinalIK/IKSolverVR_Leg.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion
#include "RootMotion/FinalIK/IKSolverVR_Locomotion.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine
#include "RootMotion/FinalIK/IKSolverVR_Spine.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset
#include "RootMotion/FinalIK/IKSolverVR_PositionOffset.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.RotationOffset
#include "RootMotion/FinalIK/IKSolverVR_RotationOffset.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.VRIK/RootMotion.FinalIK.References
#include "RootMotion/FinalIK/VRIK_References.hpp"
// Including type: RootMotion.FinalIK.IKSolver/RootMotion.FinalIK.Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] solverTransforms
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& RootMotion::FinalIK::IKSolverVR::dyn_solverTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_solverTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solverTransforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasChest
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverVR::dyn_hasChest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_hasChest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasChest"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasNeck
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverVR::dyn_hasNeck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_hasNeck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasNeck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasShoulders
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverVR::dyn_hasShoulders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_hasShoulders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasShoulders"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasToes
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverVR::dyn_hasToes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_hasToes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasToes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasLegs
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverVR::dyn_hasLegs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_hasLegs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasLegs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] readPositions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& RootMotion::FinalIK::IKSolverVR::dyn_readPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_readPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion[] readRotations
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& RootMotion::FinalIK::IKSolverVR::dyn_readRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_readRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readRotations"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] solvedPositions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& RootMotion::FinalIK::IKSolverVR::dyn_solvedPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_solvedPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solvedPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion[] solvedRotations
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& RootMotion::FinalIK::IKSolverVR::dyn_solvedRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_solvedRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solvedRotations"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion[] defaultLocalRotations
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& RootMotion::FinalIK::IKSolverVR::dyn_defaultLocalRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_defaultLocalRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultLocalRotations"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] defaultLocalPositions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& RootMotion::FinalIK::IKSolverVR::dyn_defaultLocalPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_defaultLocalPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultLocalPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 rootV
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::dyn_rootV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_rootV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootV"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 rootVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::dyn_rootVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_rootVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 bodyOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::dyn_bodyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_bodyOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 supportLegIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverVR::dyn_supportLegIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_supportLegIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportLegIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastLOD
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverVR::dyn_lastLOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_lastLOD");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLOD"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 LOD
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverVR::dyn_LOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_LOD");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LOD"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean plantFeet
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverVR::dyn_plantFeet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_plantFeet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "plantFeet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone <rootBone>k__BackingField
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverVR::VirtualBone*& RootMotion::FinalIK::IKSolverVR::dyn_$rootBone$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_$rootBone$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rootBone>k__BackingField"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverVR::VirtualBone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine spine
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverVR::Spine*& RootMotion::FinalIK::IKSolverVR::dyn_spine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_spine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spine"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverVR::Spine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm leftArm
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverVR::Arm*& RootMotion::FinalIK::IKSolverVR::dyn_leftArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_leftArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftArm"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverVR::Arm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm rightArm
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverVR::Arm*& RootMotion::FinalIK::IKSolverVR::dyn_rightArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_rightArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightArm"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverVR::Arm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg leftLeg
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverVR::Leg*& RootMotion::FinalIK::IKSolverVR::dyn_leftLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_leftLeg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftLeg"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverVR::Leg**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg rightLeg
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverVR::Leg*& RootMotion::FinalIK::IKSolverVR::dyn_rightLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_rightLeg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightLeg"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverVR::Leg**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion locomotion
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverVR::Locomotion*& RootMotion::FinalIK::IKSolverVR::dyn_locomotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_locomotion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locomotion"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverVR::Locomotion**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg[] legs
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IKSolverVR::Leg*>& RootMotion::FinalIK::IKSolverVR::dyn_legs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_legs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "legs"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IKSolverVR::Leg*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm[] arms
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IKSolverVR::Arm*>& RootMotion::FinalIK::IKSolverVR::dyn_arms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_arms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arms"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IKSolverVR::Arm*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 headPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::dyn_headPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_headPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 headDeltaPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::dyn_headDeltaPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_headDeltaPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headDeltaPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 raycastOriginPelvis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::dyn_raycastOriginPelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_raycastOriginPelvis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycastOriginPelvis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::dyn_lastOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_lastOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 debugPos1
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::dyn_debugPos1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_debugPos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugPos1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 debugPos2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::dyn_debugPos2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_debugPos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugPos2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 debugPos3
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::dyn_debugPos3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_debugPos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugPos3"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 debugPos4
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::dyn_debugPos4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::dyn_debugPos4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugPos4"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.get_rootBone
::RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::get_rootBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::get_rootBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.set_rootBone
void RootMotion::FinalIK::IKSolverVR::set_rootBone(::RootMotion::FinalIK::IKSolverVR::VirtualBone* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::set_rootBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rootBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.SetToReferences
void RootMotion::FinalIK::IKSolverVR::SetToReferences(::RootMotion::FinalIK::VRIK::References* references) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::SetToReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, references);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GuessHandOrientations
void RootMotion::FinalIK::IKSolverVR::GuessHandOrientations(::RootMotion::FinalIK::VRIK::References* references, bool onlyIfZero) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::GuessHandOrientations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GuessHandOrientations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(references), ::il2cpp_utils::ExtractType(onlyIfZero)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, references, onlyIfZero);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.DefaultAnimationCurves
void RootMotion::FinalIK::IKSolverVR::DefaultAnimationCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::DefaultAnimationCurves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DefaultAnimationCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.AddPositionOffset
void RootMotion::FinalIK::IKSolverVR::AddPositionOffset(::RootMotion::FinalIK::IKSolverVR::PositionOffset positionOffset, ::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::AddPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positionOffset), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positionOffset, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.AddRotationOffset
void RootMotion::FinalIK::IKSolverVR::AddRotationOffset(::RootMotion::FinalIK::IKSolverVR::RotationOffset rotationOffset, ::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::AddRotationOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotationOffset), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotationOffset, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.AddRotationOffset
void RootMotion::FinalIK::IKSolverVR::AddRotationOffset(::RootMotion::FinalIK::IKSolverVR::RotationOffset rotationOffset, ::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::AddRotationOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotationOffset), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotationOffset, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.AddPlatformMotion
void RootMotion::FinalIK::IKSolverVR::AddPlatformMotion(::UnityEngine::Vector3 deltaPosition, ::UnityEngine::Quaternion deltaRotation, ::UnityEngine::Vector3 platformPivot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::AddPlatformMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPlatformMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaPosition), ::il2cpp_utils::ExtractType(deltaRotation), ::il2cpp_utils::ExtractType(platformPivot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaPosition, deltaRotation, platformPivot);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.Reset
void RootMotion::FinalIK::IKSolverVR::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GetNormal
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::GetNormal(::ArrayW<::UnityEngine::Transform*> transforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::GetNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transforms)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, transforms);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GuessWristToPalmAxis
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::GuessWristToPalmAxis(::UnityEngine::Transform* hand, ::UnityEngine::Transform* forearm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::GuessWristToPalmAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GuessWristToPalmAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(forearm)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, hand, forearm);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GuessPalmToThumbAxis
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::GuessPalmToThumbAxis(::UnityEngine::Transform* hand, ::UnityEngine::Transform* forearm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::GuessPalmToThumbAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GuessPalmToThumbAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hand), ::il2cpp_utils::ExtractType(forearm)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, hand, forearm);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GetSineKeyframes
::ArrayW<::UnityEngine::Keyframe> RootMotion::FinalIK::IKSolverVR::GetSineKeyframes(float mag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::GetSineKeyframes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR", "GetSineKeyframes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mag)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Keyframe>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mag);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.UpdateSolverTransforms
void RootMotion::FinalIK::IKSolverVR::UpdateSolverTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::UpdateSolverTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSolverTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.WriteTransforms
void RootMotion::FinalIK::IKSolverVR::WriteTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::WriteTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.Read
void RootMotion::FinalIK::IKSolverVR::Read(::ArrayW<::UnityEngine::Vector3> positions, ::ArrayW<::UnityEngine::Quaternion> rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(rotations), ::il2cpp_utils::ExtractType(hasChest), ::il2cpp_utils::ExtractType(hasNeck), ::il2cpp_utils::ExtractType(hasShoulders), ::il2cpp_utils::ExtractType(hasToes), ::il2cpp_utils::ExtractType(hasLegs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.Solve
void RootMotion::FinalIK::IKSolverVR::Solve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Solve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GetPosition
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::GetPosition(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GetRotation
::UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::GetRotation(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::GetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.Write
void RootMotion::FinalIK::IKSolverVR::Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GetPelvisOffset
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::GetPelvisOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::GetPelvisOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPelvisOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverVR::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::StoreDefaultLocalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.FixTransforms
void RootMotion::FinalIK::IKSolverVR::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::FixTransforms");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GetPoints
::ArrayW<::RootMotion::FinalIK::IKSolver::Point*> RootMotion::FinalIK::IKSolverVR::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::GetPoints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::RootMotion::FinalIK::IKSolver::Point*>, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.GetPoint
::RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverVR::GetPoint(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::GetPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.IsValid
bool RootMotion::FinalIK::IKSolverVR::IsValid(ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(message));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.OnInitiate
void RootMotion::FinalIK::IKSolverVR::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::OnInitiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR.OnUpdate
void RootMotion::FinalIK::IKSolverVR::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::OnUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm
#include "RootMotion/FinalIK/IKSolverVR_Arm.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single yawOffsetAngle
float RootMotion::FinalIK::IKSolverVR::Arm::_get_yawOffsetAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::_get_yawOffsetAngle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("RootMotion.FinalIK", "IKSolverVR/Arm", "yawOffsetAngle"));
}
// Autogenerated static field setter
// Set static field: static private System.Single yawOffsetAngle
void RootMotion::FinalIK::IKSolverVR::Arm::_set_yawOffsetAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::_set_yawOffsetAngle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/Arm", "yawOffsetAngle", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single pitchOffsetAngle
float RootMotion::FinalIK::IKSolverVR::Arm::_get_pitchOffsetAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::_get_pitchOffsetAngle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("RootMotion.FinalIK", "IKSolverVR/Arm", "pitchOffsetAngle"));
}
// Autogenerated static field setter
// Set static field: static private System.Single pitchOffsetAngle
void RootMotion::FinalIK::IKSolverVR::Arm::_set_pitchOffsetAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::_set_pitchOffsetAngle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/Arm", "pitchOffsetAngle", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolverVR::Arm::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform bendGoal
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolverVR::Arm::dyn_bendGoal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_bendGoal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendGoal"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single positionWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Arm::dyn_positionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_positionWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Arm::dyn_rotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_rotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm/RootMotion.FinalIK.ShoulderRotationMode shoulderRotationMode
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode& RootMotion::FinalIK::IKSolverVR::Arm::dyn_shoulderRotationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_shoulderRotationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shoulderRotationMode"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single shoulderRotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Arm::dyn_shoulderRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_shoulderRotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shoulderRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single shoulderTwistWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Arm::dyn_shoulderTwistWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_shoulderTwistWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shoulderTwistWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bendGoalWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Arm::dyn_bendGoalWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_bendGoalWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendGoalWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single swivelOffset
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Arm::dyn_swivelOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_swivelOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swivelOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 wristToPalmAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Arm::dyn_wristToPalmAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_wristToPalmAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wristToPalmAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 palmToThumbAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Arm::dyn_palmToThumbAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_palmToThumbAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "palmToThumbAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single armLengthMlp
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Arm::dyn_armLengthMlp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_armLengthMlp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "armLengthMlp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve stretchCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& RootMotion::FinalIK::IKSolverVR::Arm::dyn_stretchCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_stretchCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stretchCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 IKPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Arm::dyn_IKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_IKPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion IKRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Arm::dyn_IKRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_IKRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 bendDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Arm::dyn_bendDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_bendDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 handPositionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Arm::dyn_handPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_handPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <position>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Arm::dyn_$position$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_$position$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<position>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion <rotation>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Arm::dyn_$rotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_$rotation$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rotation>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasShoulder
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverVR::Arm::dyn_hasShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_hasShoulder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasShoulder"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 chestForwardAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Arm::dyn_chestForwardAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_chestForwardAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestForwardAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 chestUpAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Arm::dyn_chestUpAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_chestUpAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestUpAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion chestRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Arm::dyn_chestRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_chestRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 chestForward
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Arm::dyn_chestForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_chestForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestForward"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 chestUp
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Arm::dyn_chestUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_chestUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestUp"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion forearmRelToUpperArm
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Arm::dyn_forearmRelToUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_forearmRelToUpperArm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forearmRelToUpperArm"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 upperArmBendAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Arm::dyn_upperArmBendAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::dyn_upperArmBendAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upperArmBendAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.get_position
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Arm::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.set_position
void RootMotion::FinalIK::IKSolverVR::Arm::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.get_rotation
::UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Arm::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.set_rotation
void RootMotion::FinalIK::IKSolverVR::Arm::set_rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.get_shoulder
::RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Arm::get_shoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::get_shoulder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shoulder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.get_upperArm
::RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Arm::get_upperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::get_upperArm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_upperArm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.get_forearm
::RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Arm::get_forearm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::get_forearm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forearm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.get_hand
::RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Arm::get_hand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::get_hand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.Stretching
void RootMotion::FinalIK::IKSolverVR::Arm::Stretching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::Stretching");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stretching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.Solve
void RootMotion::FinalIK::IKSolverVR::Arm::Solve(bool isLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::Solve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLeft)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeft);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.DamperValue
float RootMotion::FinalIK::IKSolverVR::Arm::DamperValue(float value, float min, float max, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::DamperValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DamperValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value, min, max, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.GetBendNormal
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Arm::GetBendNormal(::UnityEngine::Vector3 dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::GetBendNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBendNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, dir);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.Visualize
void RootMotion::FinalIK::IKSolverVR::Arm::Visualize(::RootMotion::FinalIK::IKSolverVR::VirtualBone* bone1, ::RootMotion::FinalIK::IKSolverVR::VirtualBone* bone2, ::RootMotion::FinalIK::IKSolverVR::VirtualBone* bone3, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::Visualize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Visualize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bone1), ::il2cpp_utils::ExtractType(bone2), ::il2cpp_utils::ExtractType(bone3), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bone1, bone2, bone3, color);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.OnRead
void RootMotion::FinalIK::IKSolverVR::Arm::OnRead(::ArrayW<::UnityEngine::Vector3> positions, ::ArrayW<::UnityEngine::Quaternion> rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::OnRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(rotations), ::il2cpp_utils::ExtractType(hasChest), ::il2cpp_utils::ExtractType(hasNeck), ::il2cpp_utils::ExtractType(hasShoulders), ::il2cpp_utils::ExtractType(hasToes), ::il2cpp_utils::ExtractType(hasLegs), ::il2cpp_utils::ExtractType(rootIndex), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.PreSolve
void RootMotion::FinalIK::IKSolverVR::Arm::PreSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::PreSolve");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreSolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.ApplyOffsets
void RootMotion::FinalIK::IKSolverVR::Arm::ApplyOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::ApplyOffsets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.ResetOffsets
void RootMotion::FinalIK::IKSolverVR::Arm::ResetOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::ResetOffsets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm.Write
void RootMotion::FinalIK::IKSolverVR::Arm::Write(ByRef<::ArrayW<::UnityEngine::Vector3>> solvedPositions, ByRef<::ArrayW<::UnityEngine::Quaternion>> solvedRotations) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solvedPositions), ::il2cpp_utils::ExtractType(solvedRotations)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(solvedPositions), byref(solvedRotations));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm/RootMotion.FinalIK.ShoulderRotationMode
#include "RootMotion/FinalIK/IKSolverVR_Arm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm/RootMotion.FinalIK.ShoulderRotationMode YawPitch
::RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::_get_YawPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::_get_YawPitch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode>("RootMotion.FinalIK", "IKSolverVR/Arm/ShoulderRotationMode", "YawPitch"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm/RootMotion.FinalIK.ShoulderRotationMode YawPitch
void RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::_set_YawPitch(::RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::_set_YawPitch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/Arm/ShoulderRotationMode", "YawPitch", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm/RootMotion.FinalIK.ShoulderRotationMode FromTo
::RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::_get_FromTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::_get_FromTo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode>("RootMotion.FinalIK", "IKSolverVR/Arm/ShoulderRotationMode", "FromTo"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm/RootMotion.FinalIK.ShoulderRotationMode FromTo
void RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::_set_FromTo(::RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::_set_FromTo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/Arm/ShoulderRotationMode", "FromTo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Arm::ShoulderRotationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart
#include "RootMotion/FinalIK/IKSolverVR_BodyPart.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <sqrMag>k__BackingField
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::BodyPart::dyn_$sqrMag$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::dyn_$sqrMag$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sqrMag>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <mag>k__BackingField
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::BodyPart::dyn_$mag$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::dyn_$mag$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<mag>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone[] bones
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IKSolverVR::VirtualBone*>& RootMotion::FinalIK::IKSolverVR::BodyPart::dyn_bones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::dyn_bones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bones"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IKSolverVR::VirtualBone*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean initiated
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverVR::BodyPart::dyn_initiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::dyn_initiated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initiated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3 rootPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::BodyPart::dyn_rootPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::dyn_rootPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Quaternion rootRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::BodyPart::dyn_rootRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::dyn_rootRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 index
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverVR::BodyPart::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 LOD
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverVR::BodyPart::dyn_LOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::dyn_LOD");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LOD"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.get_sqrMag
float RootMotion::FinalIK::IKSolverVR::BodyPart::get_sqrMag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::get_sqrMag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sqrMag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.set_sqrMag
void RootMotion::FinalIK::IKSolverVR::BodyPart::set_sqrMag(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::set_sqrMag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sqrMag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.get_mag
float RootMotion::FinalIK::IKSolverVR::BodyPart::get_mag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::get_mag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.set_mag
void RootMotion::FinalIK::IKSolverVR::BodyPart::set_mag(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::set_mag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.OnRead
void RootMotion::FinalIK::IKSolverVR::BodyPart::OnRead(::ArrayW<::UnityEngine::Vector3> positions, ::ArrayW<::UnityEngine::Quaternion> rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::OnRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(rotations), ::il2cpp_utils::ExtractType(hasChest), ::il2cpp_utils::ExtractType(hasNeck), ::il2cpp_utils::ExtractType(hasShoulders), ::il2cpp_utils::ExtractType(hasToes), ::il2cpp_utils::ExtractType(hasLegs), ::il2cpp_utils::ExtractType(rootIndex), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.PreSolve
void RootMotion::FinalIK::IKSolverVR::BodyPart::PreSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::PreSolve");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreSolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.Write
void RootMotion::FinalIK::IKSolverVR::BodyPart::Write(ByRef<::ArrayW<::UnityEngine::Vector3>> solvedPositions, ByRef<::ArrayW<::UnityEngine::Quaternion>> solvedRotations) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solvedPositions), ::il2cpp_utils::ExtractType(solvedRotations)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(solvedPositions), byref(solvedRotations));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.ApplyOffsets
void RootMotion::FinalIK::IKSolverVR::BodyPart::ApplyOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::ApplyOffsets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.ResetOffsets
void RootMotion::FinalIK::IKSolverVR::BodyPart::ResetOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::ResetOffsets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.SetLOD
void RootMotion::FinalIK::IKSolverVR::BodyPart::SetLOD(int LOD) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::SetLOD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLOD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(LOD)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, LOD);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.Read
void RootMotion::FinalIK::IKSolverVR::BodyPart::Read(::ArrayW<::UnityEngine::Vector3> positions, ::ArrayW<::UnityEngine::Quaternion> rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(rotations), ::il2cpp_utils::ExtractType(hasChest), ::il2cpp_utils::ExtractType(hasNeck), ::il2cpp_utils::ExtractType(hasShoulders), ::il2cpp_utils::ExtractType(hasToes), ::il2cpp_utils::ExtractType(hasLegs), ::il2cpp_utils::ExtractType(rootIndex), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.MovePosition
void RootMotion::FinalIK::IKSolverVR::BodyPart::MovePosition(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::MovePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.MoveRotation
void RootMotion::FinalIK::IKSolverVR::BodyPart::MoveRotation(::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::MoveRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.Translate
void RootMotion::FinalIK::IKSolverVR::BodyPart::Translate(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.TranslateRoot
void RootMotion::FinalIK::IKSolverVR::BodyPart::TranslateRoot(::UnityEngine::Vector3 newRootPos, ::UnityEngine::Quaternion newRootRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::TranslateRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TranslateRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newRootPos), ::il2cpp_utils::ExtractType(newRootRot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newRootPos, newRootRot);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.RotateTo
void RootMotion::FinalIK::IKSolverVR::BodyPart::RotateTo(::RootMotion::FinalIK::IKSolverVR::VirtualBone* bone, ::UnityEngine::Quaternion rotation, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::RotateTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bone), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bone, rotation, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.Visualize
void RootMotion::FinalIK::IKSolverVR::BodyPart::Visualize(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::Visualize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Visualize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.BodyPart.Visualize
void RootMotion::FinalIK::IKSolverVR::BodyPart::Visualize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::BodyPart::Visualize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Visualize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Footstep
#include "RootMotion/FinalIK/IKSolverVR_Footstep.hpp"
// Including type: RootMotion.InterpolationMode
#include "RootMotion/InterpolationMode.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single stepSpeed
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Footstep::dyn_stepSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::dyn_stepSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stepSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 characterSpaceOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Footstep::dyn_characterSpaceOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::dyn_characterSpaceOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterSpaceOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Footstep::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Footstep::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion stepToRootRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Footstep::dyn_stepToRootRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::dyn_stepToRootRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stepToRootRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isSupportLeg
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverVR::Footstep::dyn_isSupportLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::dyn_isSupportLeg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isSupportLeg"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <stepProgress>k__BackingField
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Footstep::dyn_$stepProgress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::dyn_$stepProgress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<stepProgress>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 stepFrom
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Footstep::dyn_stepFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::dyn_stepFrom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stepFrom"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 stepTo
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Footstep::dyn_stepTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::dyn_stepTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stepTo"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion stepFromRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Footstep::dyn_stepFromRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::dyn_stepFromRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stepFromRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion stepToRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Footstep::dyn_stepToRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::dyn_stepToRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stepToRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion footRelativeToRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Footstep::dyn_footRelativeToRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::dyn_footRelativeToRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "footRelativeToRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single supportLegW
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Footstep::dyn_supportLegW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::dyn_supportLegW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportLegW"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single supportLegWV
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Footstep::dyn_supportLegWV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::dyn_supportLegWV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportLegWV"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Footstep.get_isStepping
bool RootMotion::FinalIK::IKSolverVR::Footstep::get_isStepping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::get_isStepping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isStepping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Footstep.get_stepProgress
float RootMotion::FinalIK::IKSolverVR::Footstep::get_stepProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::get_stepProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stepProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Footstep.set_stepProgress
void RootMotion::FinalIK::IKSolverVR::Footstep::set_stepProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::set_stepProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stepProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Footstep.Reset
void RootMotion::FinalIK::IKSolverVR::Footstep::Reset(::UnityEngine::Quaternion rootRotation, ::UnityEngine::Vector3 footPosition, ::UnityEngine::Quaternion footRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootRotation), ::il2cpp_utils::ExtractType(footPosition), ::il2cpp_utils::ExtractType(footRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootRotation, footPosition, footRotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Footstep.StepTo
void RootMotion::FinalIK::IKSolverVR::Footstep::StepTo(::UnityEngine::Vector3 p, ::UnityEngine::Quaternion rootRotation, float stepThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::StepTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StepTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(rootRotation), ::il2cpp_utils::ExtractType(stepThreshold)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p, rootRotation, stepThreshold);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Footstep.UpdateStepping
void RootMotion::FinalIK::IKSolverVR::Footstep::UpdateStepping(::UnityEngine::Vector3 p, ::UnityEngine::Quaternion rootRotation, float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::UpdateStepping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStepping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(rootRotation), ::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p, rootRotation, speed);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Footstep.UpdateStanding
void RootMotion::FinalIK::IKSolverVR::Footstep::UpdateStanding(::UnityEngine::Quaternion rootRotation, float minAngle, float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::UpdateStanding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStanding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootRotation), ::il2cpp_utils::ExtractType(minAngle), ::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootRotation, minAngle, speed);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Footstep.Update
void RootMotion::FinalIK::IKSolverVR::Footstep::Update(::RootMotion::InterpolationMode interpolation, ::UnityEngine::Events::UnityEvent* onStep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Footstep::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interpolation), ::il2cpp_utils::ExtractType(onStep)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interpolation, onStep);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg
#include "RootMotion/FinalIK/IKSolverVR_Leg.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolverVR::Leg::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform bendGoal
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolverVR::Leg::dyn_bendGoal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_bendGoal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendGoal"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single positionWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Leg::dyn_positionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_positionWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Leg::dyn_rotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_rotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bendGoalWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Leg::dyn_bendGoalWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_bendGoalWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendGoalWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single swivelOffset
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Leg::dyn_swivelOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_swivelOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swivelOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bendToTargetWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Leg::dyn_bendToTargetWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_bendToTargetWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendToTargetWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single legLengthMlp
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Leg::dyn_legLengthMlp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_legLengthMlp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "legLengthMlp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve stretchCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& RootMotion::FinalIK::IKSolverVR::Leg::dyn_stretchCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_stretchCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stretchCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 IKPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Leg::dyn_IKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_IKPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion IKRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Leg::dyn_IKRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_IKRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 footPositionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Leg::dyn_footPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_footPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "footPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 heelPositionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Leg::dyn_heelPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_heelPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heelPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion footRotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Leg::dyn_footRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_footRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "footRotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single currentMag
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Leg::dyn_currentMag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_currentMag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentMag"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useAnimatedBendNormal
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverVR::Leg::dyn_useAnimatedBendNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_useAnimatedBendNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useAnimatedBendNormal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <position>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Leg::dyn_$position$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_$position$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<position>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion <rotation>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Leg::dyn_$rotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_$rotation$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rotation>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <hasToes>k__BackingField
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverVR::Leg::dyn_$hasToes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_$hasToes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hasToes>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <thighRelativeToPelvis>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Leg::dyn_$thighRelativeToPelvis$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_$thighRelativeToPelvis$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<thighRelativeToPelvis>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 footPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Leg::dyn_footPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_footPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "footPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion footRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Leg::dyn_footRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_footRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "footRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 bendNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Leg::dyn_bendNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_bendNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion calfRelToThigh
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Leg::dyn_calfRelToThigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_calfRelToThigh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calfRelToThigh"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion thighRelToFoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Leg::dyn_thighRelToFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_thighRelToFoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thighRelToFoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 bendNormalRelToPelvis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Leg::dyn_bendNormalRelToPelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_bendNormalRelToPelvis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendNormalRelToPelvis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 bendNormalRelToTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Leg::dyn_bendNormalRelToTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::dyn_bendNormalRelToTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendNormalRelToTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.get_position
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Leg::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.set_position
void RootMotion::FinalIK::IKSolverVR::Leg::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.get_rotation
::UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Leg::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.set_rotation
void RootMotion::FinalIK::IKSolverVR::Leg::set_rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.get_hasToes
bool RootMotion::FinalIK::IKSolverVR::Leg::get_hasToes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::get_hasToes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasToes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.set_hasToes
void RootMotion::FinalIK::IKSolverVR::Leg::set_hasToes(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::set_hasToes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasToes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.get_thigh
::RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Leg::get_thigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::get_thigh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_thigh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.get_calf
::RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Leg::get_calf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::get_calf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_calf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.get_foot
::RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Leg::get_foot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::get_foot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_foot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.get_toes
::RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Leg::get_toes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::get_toes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_toes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.get_lastBone
::RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Leg::get_lastBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::get_lastBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.get_thighRelativeToPelvis
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Leg::get_thighRelativeToPelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::get_thighRelativeToPelvis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_thighRelativeToPelvis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.set_thighRelativeToPelvis
void RootMotion::FinalIK::IKSolverVR::Leg::set_thighRelativeToPelvis(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::set_thighRelativeToPelvis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_thighRelativeToPelvis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.ApplyPositionOffset
void RootMotion::FinalIK::IKSolverVR::Leg::ApplyPositionOffset(::UnityEngine::Vector3 offset, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::ApplyPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.ApplyRotationOffset
void RootMotion::FinalIK::IKSolverVR::Leg::ApplyRotationOffset(::UnityEngine::Quaternion offset, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::ApplyRotationOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyRotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.Solve
void RootMotion::FinalIK::IKSolverVR::Leg::Solve(bool stretch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::Solve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stretch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stretch);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.FixTwistRotations
void RootMotion::FinalIK::IKSolverVR::Leg::FixTwistRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::FixTwistRotations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixTwistRotations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.Stretching
void RootMotion::FinalIK::IKSolverVR::Leg::Stretching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::Stretching");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stretching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.OnRead
void RootMotion::FinalIK::IKSolverVR::Leg::OnRead(::ArrayW<::UnityEngine::Vector3> positions, ::ArrayW<::UnityEngine::Quaternion> rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::OnRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(rotations), ::il2cpp_utils::ExtractType(hasChest), ::il2cpp_utils::ExtractType(hasNeck), ::il2cpp_utils::ExtractType(hasShoulders), ::il2cpp_utils::ExtractType(hasToes), ::il2cpp_utils::ExtractType(hasLegs), ::il2cpp_utils::ExtractType(rootIndex), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.PreSolve
void RootMotion::FinalIK::IKSolverVR::Leg::PreSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::PreSolve");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreSolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.ApplyOffsets
void RootMotion::FinalIK::IKSolverVR::Leg::ApplyOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::ApplyOffsets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.Write
void RootMotion::FinalIK::IKSolverVR::Leg::Write(ByRef<::ArrayW<::UnityEngine::Vector3>> solvedPositions, ByRef<::ArrayW<::UnityEngine::Quaternion>> solvedRotations) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solvedPositions), ::il2cpp_utils::ExtractType(solvedRotations)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(solvedPositions), byref(solvedRotations));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg.ResetOffsets
void RootMotion::FinalIK::IKSolverVR::Leg::ResetOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Leg::ResetOffsets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion
#include "RootMotion/FinalIK/IKSolverVR_Locomotion.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Footstep
#include "RootMotion/FinalIK/IKSolverVR_Footstep.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine
#include "RootMotion/FinalIK/IKSolverVR_Spine.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg
#include "RootMotion/FinalIK/IKSolverVR_Leg.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm
#include "RootMotion/FinalIK/IKSolverVR_Arm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single weight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single footDistance
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_footDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_footDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "footDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stepThreshold
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_stepThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_stepThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stepThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angleThreshold
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_angleThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_angleThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angleThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single comAngleMlp
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_comAngleMlp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_comAngleMlp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comAngleMlp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxVelocity
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_maxVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_maxVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single velocityFactor
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_velocityFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_velocityFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxLegStretch
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_maxLegStretch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_maxLegStretch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLegStretch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rootSpeed
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_rootSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_rootSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stepSpeed
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_stepSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_stepSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stepSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve stepHeight
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_stepHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_stepHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stepHeight"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve heelHeight
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_heelHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_heelHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heelHeight"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single relaxLegTwistMinAngle
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_relaxLegTwistMinAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_relaxLegTwistMinAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "relaxLegTwistMinAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single relaxLegTwistSpeed
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_relaxLegTwistSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_relaxLegTwistSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "relaxLegTwistSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RootMotion.InterpolationMode stepInterpolation
[[deprecated("Use field access instead!")]] ::RootMotion::InterpolationMode& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_stepInterpolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_stepInterpolation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stepInterpolation"))->offset;
  return *reinterpret_cast<::RootMotion::InterpolationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean blockingEnabled
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_blockingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_blockingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blockingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask blockingLayers
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_blockingLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_blockingLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blockingLayers"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single raycastRadius
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_raycastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_raycastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single raycastHeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_raycastHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_raycastHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycastHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent onLeftFootstep
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_onLeftFootstep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_onLeftFootstep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onLeftFootstep"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent onRightFootstep
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_onRightFootstep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_onRightFootstep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onRightFootstep"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 <centerOfMass>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_$centerOfMass$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_$centerOfMass$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<centerOfMass>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Footstep[] footsteps
[[deprecated("Use field access instead!")]] ::ArrayW<::RootMotion::FinalIK::IKSolverVR::Footstep*>& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_footsteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_footsteps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "footsteps"))->offset;
  return *reinterpret_cast<::ArrayW<::RootMotion::FinalIK::IKSolverVR::Footstep*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastComPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_lastComPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_lastComPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastComPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 comVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_comVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_comVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 leftFootIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_leftFootIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_leftFootIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftFootIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 rightFootIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_rightFootIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::dyn_rightFootIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightFootIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion.get_centerOfMass
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Locomotion::get_centerOfMass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::get_centerOfMass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerOfMass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion.set_centerOfMass
void RootMotion::FinalIK::IKSolverVR::Locomotion::set_centerOfMass(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::set_centerOfMass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_centerOfMass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion.get_leftFootstepPosition
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Locomotion::get_leftFootstepPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::get_leftFootstepPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftFootstepPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion.get_rightFootstepPosition
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Locomotion::get_rightFootstepPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::get_rightFootstepPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightFootstepPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion.get_leftFootstepRotation
::UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Locomotion::get_leftFootstepRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::get_leftFootstepRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftFootstepRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion.get_rightFootstepRotation
::UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Locomotion::get_rightFootstepRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::get_rightFootstepRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightFootstepRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion.Initiate
void RootMotion::FinalIK::IKSolverVR::Locomotion::Initiate(::ArrayW<::UnityEngine::Vector3> positions, ::ArrayW<::UnityEngine::Quaternion> rotations, bool hasToes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(rotations), ::il2cpp_utils::ExtractType(hasToes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positions, rotations, hasToes);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion.Reset
void RootMotion::FinalIK::IKSolverVR::Locomotion::Reset(::ArrayW<::UnityEngine::Vector3> positions, ::ArrayW<::UnityEngine::Quaternion> rotations) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(rotations)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positions, rotations);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion.AddDeltaRotation
void RootMotion::FinalIK::IKSolverVR::Locomotion::AddDeltaRotation(::UnityEngine::Quaternion delta, ::UnityEngine::Vector3 pivot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::AddDeltaRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDeltaRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta), ::il2cpp_utils::ExtractType(pivot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delta, pivot);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion.AddDeltaPosition
void RootMotion::FinalIK::IKSolverVR::Locomotion::AddDeltaPosition(::UnityEngine::Vector3 delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::AddDeltaPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDeltaPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delta);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion.Solve
void RootMotion::FinalIK::IKSolverVR::Locomotion::Solve(::RootMotion::FinalIK::IKSolverVR::VirtualBone* rootBone, ::RootMotion::FinalIK::IKSolverVR::Spine* spine, ::RootMotion::FinalIK::IKSolverVR::Leg* leftLeg, ::RootMotion::FinalIK::IKSolverVR::Leg* rightLeg, ::RootMotion::FinalIK::IKSolverVR::Arm* leftArm, ::RootMotion::FinalIK::IKSolverVR::Arm* rightArm, int supportLegIndex, ByRef<::UnityEngine::Vector3> leftFootPosition, ByRef<::UnityEngine::Vector3> rightFootPosition, ByRef<::UnityEngine::Quaternion> leftFootRotation, ByRef<::UnityEngine::Quaternion> rightFootRotation, ByRef<float> leftFootOffset, ByRef<float> rightFootOffset, ByRef<float> leftHeelOffset, ByRef<float> rightHeelOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::Solve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootBone), ::il2cpp_utils::ExtractType(spine), ::il2cpp_utils::ExtractType(leftLeg), ::il2cpp_utils::ExtractType(rightLeg), ::il2cpp_utils::ExtractType(leftArm), ::il2cpp_utils::ExtractType(rightArm), ::il2cpp_utils::ExtractType(supportLegIndex), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootBone, spine, leftLeg, rightLeg, leftArm, rightArm, supportLegIndex, byref(leftFootPosition), byref(rightFootPosition), byref(leftFootRotation), byref(rightFootRotation), byref(leftFootOffset), byref(rightFootOffset), byref(leftHeelOffset), byref(rightHeelOffset));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion.StepBlocked
bool RootMotion::FinalIK::IKSolverVR::Locomotion::StepBlocked(::UnityEngine::Vector3 fromPosition, ::UnityEngine::Vector3 toPosition, ::UnityEngine::Vector3 rootPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::StepBlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StepBlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromPosition), ::il2cpp_utils::ExtractType(toPosition), ::il2cpp_utils::ExtractType(rootPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fromPosition, toPosition, rootPosition);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion.CanStep
bool RootMotion::FinalIK::IKSolverVR::Locomotion::CanStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::CanStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Locomotion.GetLineSphereCollision
bool RootMotion::FinalIK::IKSolverVR::Locomotion::GetLineSphereCollision(::UnityEngine::Vector3 lineStart, ::UnityEngine::Vector3 lineEnd, ::UnityEngine::Vector3 sphereCenter, float sphereRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Locomotion::GetLineSphereCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/Locomotion", "GetLineSphereCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineStart), ::il2cpp_utils::ExtractType(lineEnd), ::il2cpp_utils::ExtractType(sphereCenter), ::il2cpp_utils::ExtractType(sphereRadius)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lineStart, lineEnd, sphereCenter, sphereRadius);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine
#include "RootMotion/FinalIK/IKSolverVR_Spine.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Arm
#include "RootMotion/FinalIK/IKSolverVR_Arm.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Leg
#include "RootMotion/FinalIK/IKSolverVR_Leg.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform headTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolverVR::Spine::dyn_headTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_headTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform pelvisTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvisTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single positionWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_positionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_positionWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_rotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_rotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pelvisPositionWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisPositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisPositionWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvisPositionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pelvisRotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisRotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvisRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform chestGoal
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestGoal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestGoal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestGoal"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single chestGoalWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestGoalWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestGoalWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestGoalWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minHeadHeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_minHeadHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_minHeadHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minHeadHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bodyPosStiffness
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_bodyPosStiffness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_bodyPosStiffness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyPosStiffness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bodyRotStiffness
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_bodyRotStiffness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_bodyRotStiffness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyRotStiffness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single neckStiffness
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_neckStiffness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_neckStiffness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "neckStiffness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotateChestByHands
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_rotateChestByHands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_rotateChestByHands");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotateChestByHands"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single chestClampWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestClampWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestClampWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestClampWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single headClampWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_headClampWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_headClampWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headClampWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveBodyBackWhenCrouching
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_moveBodyBackWhenCrouching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_moveBodyBackWhenCrouching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveBodyBackWhenCrouching"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maintainPelvisPosition
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_maintainPelvisPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_maintainPelvisPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maintainPelvisPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxRootAngle
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_maxRootAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_maxRootAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRootAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rootHeadingOffset
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_rootHeadingOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_rootHeadingOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootHeadingOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 IKPositionHead
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Spine::dyn_IKPositionHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_IKPositionHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKPositionHead"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion IKRotationHead
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Spine::dyn_IKRotationHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_IKRotationHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKRotationHead"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 IKPositionPelvis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Spine::dyn_IKPositionPelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_IKPositionPelvis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKPositionPelvis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion IKRotationPelvis
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Spine::dyn_IKRotationPelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_IKRotationPelvis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IKRotationPelvis"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 goalPositionChest
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Spine::dyn_goalPositionChest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_goalPositionChest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goalPositionChest"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 pelvisPositionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvisPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 chestPositionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 headPositionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Spine::dyn_headPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_headPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion pelvisRotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvisRotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion chestRotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestRotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion headRotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Spine::dyn_headRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_headRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headRotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 faceDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Spine::dyn_faceDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_faceDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "faceDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 locomotionHeadPositionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Spine::dyn_locomotionHeadPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_locomotionHeadPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locomotionHeadPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 headPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Spine::dyn_headPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_headPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion <anchorRotation>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Spine::dyn_$anchorRotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_$anchorRotation$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<anchorRotation>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion <anchorRelativeToHead>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Spine::dyn_$anchorRelativeToHead$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_$anchorRelativeToHead$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<anchorRelativeToHead>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion headRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Spine::dyn_headRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_headRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion pelvisRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvisRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion anchorRelativeToPelvis
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Spine::dyn_anchorRelativeToPelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_anchorRelativeToPelvis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anchorRelativeToPelvis"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion pelvisRelativeRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisRelativeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisRelativeRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvisRelativeRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion chestRelativeRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestRelativeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestRelativeRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestRelativeRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 headDeltaPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Spine::dyn_headDeltaPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_headDeltaPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headDeltaPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion pelvisDeltaRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisDeltaRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisDeltaRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvisDeltaRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion chestTargetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestTargetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestTargetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestTargetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pelvisIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_pelvisIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pelvisIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 spineIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverVR::Spine::dyn_spineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_spineIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spineIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 chestIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 neckIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverVR::Spine::dyn_neckIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_neckIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "neckIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 headIndex
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverVR::Spine::dyn_headIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_headIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single length
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasChest
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverVR::Spine::dyn_hasChest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_hasChest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasChest"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasNeck
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverVR::Spine::dyn_hasNeck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_hasNeck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasNeck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasLegs
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::IKSolverVR::Spine::dyn_hasLegs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_hasLegs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasLegs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single headHeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_headHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_headHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single sizeMlp
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::Spine::dyn_sizeMlp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_sizeMlp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sizeMlp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 chestForward
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::dyn_chestForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestForward"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.get_pelvis
::RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Spine::get_pelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::get_pelvis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pelvis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.get_firstSpineBone
::RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Spine::get_firstSpineBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::get_firstSpineBone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstSpineBone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.get_chest
::RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Spine::get_chest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::get_chest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_chest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.get_neck
::RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Spine::get_neck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::get_neck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_neck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.get_head
::RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Spine::get_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::get_head");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_head", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.get_anchorRotation
::UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Spine::get_anchorRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::get_anchorRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.set_anchorRotation
void RootMotion::FinalIK::IKSolverVR::Spine::set_anchorRotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::set_anchorRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.get_anchorRelativeToHead
::UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Spine::get_anchorRelativeToHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::get_anchorRelativeToHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorRelativeToHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.set_anchorRelativeToHead
void RootMotion::FinalIK::IKSolverVR::Spine::set_anchorRelativeToHead(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::set_anchorRelativeToHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorRelativeToHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.CalculateChestTargetRotation
void RootMotion::FinalIK::IKSolverVR::Spine::CalculateChestTargetRotation(::RootMotion::FinalIK::IKSolverVR::VirtualBone* rootBone, ::ArrayW<::RootMotion::FinalIK::IKSolverVR::Arm*> arms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::CalculateChestTargetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateChestTargetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootBone), ::il2cpp_utils::ExtractType(arms)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootBone, arms);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.Solve
void RootMotion::FinalIK::IKSolverVR::Spine::Solve(::RootMotion::FinalIK::IKSolverVR::VirtualBone* rootBone, ::ArrayW<::RootMotion::FinalIK::IKSolverVR::Leg*> legs, ::ArrayW<::RootMotion::FinalIK::IKSolverVR::Arm*> arms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::Solve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootBone), ::il2cpp_utils::ExtractType(legs), ::il2cpp_utils::ExtractType(arms)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootBone, legs, arms);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.FABRIKPass
void RootMotion::FinalIK::IKSolverVR::Spine::FABRIKPass(::UnityEngine::Vector3 animatedPelvisPos, ::UnityEngine::Vector3 rootUp, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::FABRIKPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FABRIKPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animatedPelvisPos), ::il2cpp_utils::ExtractType(rootUp), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animatedPelvisPos, rootUp, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.SolvePelvis
void RootMotion::FinalIK::IKSolverVR::Spine::SolvePelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::SolvePelvis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SolvePelvis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.AdjustChestByHands
void RootMotion::FinalIK::IKSolverVR::Spine::AdjustChestByHands(ByRef<::UnityEngine::Quaternion> chestTargetRotation, ::ArrayW<::RootMotion::FinalIK::IKSolverVR::Arm*> arms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::AdjustChestByHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustChestByHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chestTargetRotation), ::il2cpp_utils::ExtractType(arms)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(chestTargetRotation), arms);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.InverseTranslateToHead
void RootMotion::FinalIK::IKSolverVR::Spine::InverseTranslateToHead(::ArrayW<::RootMotion::FinalIK::IKSolverVR::Leg*> legs, bool limited, bool useCurrentLegMag, ::UnityEngine::Vector3 offset, float w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::InverseTranslateToHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTranslateToHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(legs), ::il2cpp_utils::ExtractType(limited), ::il2cpp_utils::ExtractType(useCurrentLegMag), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, legs, limited, useCurrentLegMag, offset, w);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.TranslatePelvis
void RootMotion::FinalIK::IKSolverVR::Spine::TranslatePelvis(::ArrayW<::RootMotion::FinalIK::IKSolverVR::Leg*> legs, ::UnityEngine::Vector3 deltaPosition, ::UnityEngine::Quaternion deltaRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::TranslatePelvis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TranslatePelvis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(legs), ::il2cpp_utils::ExtractType(deltaPosition), ::il2cpp_utils::ExtractType(deltaRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, legs, deltaPosition, deltaRotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.LimitPelvisPosition
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Spine::LimitPelvisPosition(::ArrayW<::RootMotion::FinalIK::IKSolverVR::Leg*> legs, ::UnityEngine::Vector3 pelvisPosition, bool useCurrentLegMag, int it) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::LimitPelvisPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LimitPelvisPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(legs), ::il2cpp_utils::ExtractType(pelvisPosition), ::il2cpp_utils::ExtractType(useCurrentLegMag), ::il2cpp_utils::ExtractType(it)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, legs, pelvisPosition, useCurrentLegMag, it);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.Bend
void RootMotion::FinalIK::IKSolverVR::Spine::Bend(::ArrayW<::RootMotion::FinalIK::IKSolverVR::VirtualBone*> bones, int firstIndex, int lastIndex, ::UnityEngine::Quaternion targetRotation, float clampWeight, bool uniformWeight, float w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::Bend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(firstIndex), ::il2cpp_utils::ExtractType(lastIndex), ::il2cpp_utils::ExtractType(targetRotation), ::il2cpp_utils::ExtractType(clampWeight), ::il2cpp_utils::ExtractType(uniformWeight), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bones, firstIndex, lastIndex, targetRotation, clampWeight, uniformWeight, w);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.Bend
void RootMotion::FinalIK::IKSolverVR::Spine::Bend(::ArrayW<::RootMotion::FinalIK::IKSolverVR::VirtualBone*> bones, int firstIndex, int lastIndex, ::UnityEngine::Quaternion targetRotation, ::UnityEngine::Quaternion rotationOffset, float clampWeight, bool uniformWeight, float w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::Bend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(firstIndex), ::il2cpp_utils::ExtractType(lastIndex), ::il2cpp_utils::ExtractType(targetRotation), ::il2cpp_utils::ExtractType(rotationOffset), ::il2cpp_utils::ExtractType(clampWeight), ::il2cpp_utils::ExtractType(uniformWeight), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bones, firstIndex, lastIndex, targetRotation, rotationOffset, clampWeight, uniformWeight, w);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.OnRead
void RootMotion::FinalIK::IKSolverVR::Spine::OnRead(::ArrayW<::UnityEngine::Vector3> positions, ::ArrayW<::UnityEngine::Quaternion> rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::OnRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(rotations), ::il2cpp_utils::ExtractType(hasChest), ::il2cpp_utils::ExtractType(hasNeck), ::il2cpp_utils::ExtractType(hasShoulders), ::il2cpp_utils::ExtractType(hasToes), ::il2cpp_utils::ExtractType(hasLegs), ::il2cpp_utils::ExtractType(rootIndex), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.PreSolve
void RootMotion::FinalIK::IKSolverVR::Spine::PreSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::PreSolve");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreSolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.ApplyOffsets
void RootMotion::FinalIK::IKSolverVR::Spine::ApplyOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::ApplyOffsets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.Write
void RootMotion::FinalIK::IKSolverVR::Spine::Write(ByRef<::ArrayW<::UnityEngine::Vector3>> solvedPositions, ByRef<::ArrayW<::UnityEngine::Quaternion>> solvedRotations) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solvedPositions), ::il2cpp_utils::ExtractType(solvedRotations)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(solvedPositions), byref(solvedRotations));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.Spine.ResetOffsets
void RootMotion::FinalIK::IKSolverVR::Spine::ResetOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::Spine::ResetOffsets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset
#include "RootMotion/FinalIK/IKSolverVR_PositionOffset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset Pelvis
::RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_Pelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_Pelvis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "Pelvis"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset Pelvis
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_Pelvis(::RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_Pelvis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "Pelvis", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset Chest
::RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_Chest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_Chest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "Chest"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset Chest
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_Chest(::RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_Chest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "Chest", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset Head
::RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "Head"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset Head
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_Head(::RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset LeftHand
::RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset LeftHand
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_LeftHand(::RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset RightHand
::RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset RightHand
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_RightHand(::RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "RightHand", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset LeftFoot
::RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_LeftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_LeftFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "LeftFoot"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset LeftFoot
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_LeftFoot(::RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_LeftFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "LeftFoot", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset RightFoot
::RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_RightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_RightFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "RightFoot"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset RightFoot
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_RightFoot(::RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_RightFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "RightFoot", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset LeftHeel
::RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_LeftHeel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_LeftHeel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "LeftHeel"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset LeftHeel
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_LeftHeel(::RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_LeftHeel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "LeftHeel", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset RightHeel
::RootMotion::FinalIK::IKSolverVR::PositionOffset RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_RightHeel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_get_RightHeel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverVR::PositionOffset>("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "RightHeel"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.PositionOffset RightHeel
void RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_RightHeel(::RootMotion::FinalIK::IKSolverVR::PositionOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::_set_RightHeel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/PositionOffset", "RightHeel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverVR::PositionOffset::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::PositionOffset::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.RotationOffset
#include "RootMotion/FinalIK/IKSolverVR_RotationOffset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.RotationOffset Pelvis
::RootMotion::FinalIK::IKSolverVR::RotationOffset RootMotion::FinalIK::IKSolverVR::RotationOffset::_get_Pelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::RotationOffset::_get_Pelvis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverVR::RotationOffset>("RootMotion.FinalIK", "IKSolverVR/RotationOffset", "Pelvis"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.RotationOffset Pelvis
void RootMotion::FinalIK::IKSolverVR::RotationOffset::_set_Pelvis(::RootMotion::FinalIK::IKSolverVR::RotationOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::RotationOffset::_set_Pelvis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/RotationOffset", "Pelvis", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.RotationOffset Chest
::RootMotion::FinalIK::IKSolverVR::RotationOffset RootMotion::FinalIK::IKSolverVR::RotationOffset::_get_Chest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::RotationOffset::_get_Chest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverVR::RotationOffset>("RootMotion.FinalIK", "IKSolverVR/RotationOffset", "Chest"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.RotationOffset Chest
void RootMotion::FinalIK::IKSolverVR::RotationOffset::_set_Chest(::RootMotion::FinalIK::IKSolverVR::RotationOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::RotationOffset::_set_Chest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/RotationOffset", "Chest", value));
}
// Autogenerated static field getter
// Get static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.RotationOffset Head
::RootMotion::FinalIK::IKSolverVR::RotationOffset RootMotion::FinalIK::IKSolverVR::RotationOffset::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::RotationOffset::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RootMotion::FinalIK::IKSolverVR::RotationOffset>("RootMotion.FinalIK", "IKSolverVR/RotationOffset", "Head"));
}
// Autogenerated static field setter
// Set static field: static public RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.RotationOffset Head
void RootMotion::FinalIK::IKSolverVR::RotationOffset::_set_Head(::RootMotion::FinalIK::IKSolverVR::RotationOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::RotationOffset::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/RotationOffset", "Head", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& RootMotion::FinalIK::IKSolverVR::RotationOffset::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::RotationOffset::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 readPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::VirtualBone::dyn_readPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::dyn_readPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion readRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::VirtualBone::dyn_readRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::dyn_readRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 solverPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::VirtualBone::dyn_solverPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::dyn_solverPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solverPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion solverRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::IKSolverVR::VirtualBone::dyn_solverRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::dyn_solverRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solverRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single length
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::VirtualBone::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sqrMag
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::IKSolverVR::VirtualBone::dyn_sqrMag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::dyn_sqrMag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sqrMag"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 axis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::IKSolverVR::VirtualBone::dyn_axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::dyn_axis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone.Read
void RootMotion::FinalIK::IKSolverVR::VirtualBone::Read(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone.SwingRotation
void RootMotion::FinalIK::IKSolverVR::VirtualBone::SwingRotation(::ArrayW<::RootMotion::FinalIK::IKSolverVR::VirtualBone*> bones, int index, ::UnityEngine::Vector3 swingTarget, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::SwingRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "SwingRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(swingTarget), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bones, index, swingTarget, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone.PreSolve
float RootMotion::FinalIK::IKSolverVR::VirtualBone::PreSolve(ByRef<::ArrayW<::RootMotion::FinalIK::IKSolverVR::VirtualBone*>> bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::PreSolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "PreSolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(bones));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone.RotateAroundPoint
void RootMotion::FinalIK::IKSolverVR::VirtualBone::RotateAroundPoint(::ArrayW<::RootMotion::FinalIK::IKSolverVR::VirtualBone*> bones, int index, ::UnityEngine::Vector3 point, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::RotateAroundPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "RotateAroundPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bones, index, point, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone.RotateBy
void RootMotion::FinalIK::IKSolverVR::VirtualBone::RotateBy(::ArrayW<::RootMotion::FinalIK::IKSolverVR::VirtualBone*> bones, int index, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::RotateBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "RotateBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bones, index, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone.RotateBy
void RootMotion::FinalIK::IKSolverVR::VirtualBone::RotateBy(::ArrayW<::RootMotion::FinalIK::IKSolverVR::VirtualBone*> bones, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::RotateBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "RotateBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bones, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone.RotateTo
void RootMotion::FinalIK::IKSolverVR::VirtualBone::RotateTo(::ArrayW<::RootMotion::FinalIK::IKSolverVR::VirtualBone*> bones, int index, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::RotateTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "RotateTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bones, index, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone.SolveTrigonometric
void RootMotion::FinalIK::IKSolverVR::VirtualBone::SolveTrigonometric(::ArrayW<::RootMotion::FinalIK::IKSolverVR::VirtualBone*> bones, int first, int second, int third, ::UnityEngine::Vector3 targetPosition, ::UnityEngine::Vector3 bendNormal, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::SolveTrigonometric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "SolveTrigonometric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(third), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(bendNormal), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bones, first, second, third, targetPosition, bendNormal, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone.GetDirectionToBendPoint
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::VirtualBone::GetDirectionToBendPoint(::UnityEngine::Vector3 direction, float directionMag, ::UnityEngine::Vector3 bendDirection, float sqrMag1, float sqrMag2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::GetDirectionToBendPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "GetDirectionToBendPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(directionMag), ::il2cpp_utils::ExtractType(bendDirection), ::il2cpp_utils::ExtractType(sqrMag1), ::il2cpp_utils::ExtractType(sqrMag2)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, direction, directionMag, bendDirection, sqrMag1, sqrMag2);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone.SolveFABRIK
void RootMotion::FinalIK::IKSolverVR::VirtualBone::SolveFABRIK(::ArrayW<::RootMotion::FinalIK::IKSolverVR::VirtualBone*> bones, ::UnityEngine::Vector3 startPosition, ::UnityEngine::Vector3 targetPosition, float weight, float minNormalizedTargetDistance, int iterations, float length, ::UnityEngine::Vector3 startOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::SolveFABRIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "SolveFABRIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(minNormalizedTargetDistance), ::il2cpp_utils::ExtractType(iterations), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(startOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bones, startPosition, targetPosition, weight, minNormalizedTargetDistance, iterations, length, startOffset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone.SolveFABRIKJoint
::UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::VirtualBone::SolveFABRIKJoint(::UnityEngine::Vector3 pos1, ::UnityEngine::Vector3 pos2, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::SolveFABRIKJoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "SolveFABRIKJoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos1), ::il2cpp_utils::ExtractType(pos2), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pos1, pos2, length);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/RootMotion.FinalIK.VirtualBone.SolveCCD
void RootMotion::FinalIK::IKSolverVR::VirtualBone::SolveCCD(::ArrayW<::RootMotion::FinalIK::IKSolverVR::VirtualBone*> bones, ::UnityEngine::Vector3 targetPosition, float weight, int iterations) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::IKSolverVR::VirtualBone::SolveCCD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/VirtualBone", "SolveCCD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bones), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(iterations)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bones, targetPosition, weight, iterations);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.TwistRelaxer
#include "RootMotion/FinalIK/TwistRelaxer.hpp"
// Including type: RootMotion.FinalIK.IK
#include "RootMotion/FinalIK/IK.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RootMotion.FinalIK.IK ik
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IK*& RootMotion::FinalIK::TwistRelaxer::dyn_ik() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TwistRelaxer::dyn_ik");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ik"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IK**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform parent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::TwistRelaxer::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TwistRelaxer::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform child
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::TwistRelaxer::dyn_child() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TwistRelaxer::dyn_child");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "child"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single weight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::TwistRelaxer::dyn_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TwistRelaxer::dyn_weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single parentChildCrossfade
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::TwistRelaxer::dyn_parentChildCrossfade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TwistRelaxer::dyn_parentChildCrossfade");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentChildCrossfade"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single twistAngleOffset
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::TwistRelaxer::dyn_twistAngleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TwistRelaxer::dyn_twistAngleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "twistAngleOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 twistAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::TwistRelaxer::dyn_twistAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TwistRelaxer::dyn_twistAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "twistAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 axis
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::TwistRelaxer::dyn_axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TwistRelaxer::dyn_axis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 axisRelativeToParentDefault
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::TwistRelaxer::dyn_axisRelativeToParentDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TwistRelaxer::dyn_axisRelativeToParentDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisRelativeToParentDefault"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 axisRelativeToChildDefault
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::TwistRelaxer::dyn_axisRelativeToChildDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TwistRelaxer::dyn_axisRelativeToChildDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisRelativeToChildDefault"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.TwistRelaxer.Relax
void RootMotion::FinalIK::TwistRelaxer::Relax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TwistRelaxer::Relax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Relax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.TwistRelaxer.Start
void RootMotion::FinalIK::TwistRelaxer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TwistRelaxer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.TwistRelaxer.OnPostUpdate
void RootMotion::FinalIK::TwistRelaxer::OnPostUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TwistRelaxer::OnPostUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.TwistRelaxer.LateUpdate
void RootMotion::FinalIK::TwistRelaxer::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TwistRelaxer::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.TwistRelaxer.OnDestroy
void RootMotion::FinalIK::TwistRelaxer::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::TwistRelaxer::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.InteractionEffector
#include "RootMotion/FinalIK/InteractionEffector.hpp"
// Including type: RootMotion.FinalIK.InteractionObject
#include "RootMotion/FinalIK/InteractionObject.hpp"
// Including type: RootMotion.FinalIK.Poser
#include "RootMotion/FinalIK/Poser.hpp"
// Including type: RootMotion.FinalIK.IKEffector
#include "RootMotion/FinalIK/IKEffector.hpp"
// Including type: RootMotion.FinalIK.InteractionTarget
#include "RootMotion/FinalIK/InteractionTarget.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: RootMotion.FinalIK.InteractionSystem
#include "RootMotion/FinalIK/InteractionSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.FullBodyBipedEffector <effectorType>k__BackingField
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::FullBodyBipedEffector& RootMotion::FinalIK::InteractionEffector::dyn_$effectorType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_$effectorType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<effectorType>k__BackingField"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::FullBodyBipedEffector*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isPaused>k__BackingField
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::InteractionEffector::dyn_$isPaused$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_$isPaused$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isPaused>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.InteractionObject <interactionObject>k__BackingField
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::InteractionObject*& RootMotion::FinalIK::InteractionEffector::dyn_$interactionObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_$interactionObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<interactionObject>k__BackingField"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::InteractionObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.Poser poser
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::Poser*& RootMotion::FinalIK::InteractionEffector::dyn_poser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_poser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poser"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::Poser**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.IKEffector effector
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::IKEffector*& RootMotion::FinalIK::InteractionEffector::dyn_effector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_effector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "effector"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::IKEffector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timer
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::InteractionEffector::dyn_timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single length
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::InteractionEffector::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single weight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::InteractionEffector::dyn_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single fadeInSpeed
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::InteractionEffector::dyn_fadeInSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_fadeInSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeInSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single defaultPositionWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::InteractionEffector::dyn_defaultPositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_defaultPositionWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultPositionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single defaultRotationWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::InteractionEffector::dyn_defaultRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_defaultRotationWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single defaultPull
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::InteractionEffector::dyn_defaultPull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_defaultPull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultPull"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single defaultReach
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::InteractionEffector::dyn_defaultReach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_defaultReach");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultReach"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single defaultPush
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::InteractionEffector::dyn_defaultPush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_defaultPush");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultPush"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single defaultPushParent
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::InteractionEffector::dyn_defaultPushParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_defaultPushParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultPushParent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single defaultBendGoalWeight
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::InteractionEffector::dyn_defaultBendGoalWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_defaultBendGoalWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultBendGoalWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single resetTimer
[[deprecated("Use field access instead!")]] float& RootMotion::FinalIK::InteractionEffector::dyn_resetTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_resetTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetTimer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean positionWeightUsed
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::InteractionEffector::dyn_positionWeightUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_positionWeightUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionWeightUsed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean rotationWeightUsed
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::InteractionEffector::dyn_rotationWeightUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_rotationWeightUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationWeightUsed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean pullUsed
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::InteractionEffector::dyn_pullUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_pullUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pullUsed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean reachUsed
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::InteractionEffector::dyn_reachUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_reachUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reachUsed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean pushUsed
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::InteractionEffector::dyn_pushUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_pushUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pushUsed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean pushParentUsed
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::InteractionEffector::dyn_pushParentUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_pushParentUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pushParentUsed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean bendGoalWeightUsed
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::InteractionEffector::dyn_bendGoalWeightUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_bendGoalWeightUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bendGoalWeightUsed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean pickedUp
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::InteractionEffector::dyn_pickedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_pickedUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pickedUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean defaults
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::InteractionEffector::dyn_defaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_defaults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaults"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean pickUpOnPostFBBIK
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::InteractionEffector::dyn_pickUpOnPostFBBIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_pickUpOnPostFBBIK");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pickUpOnPostFBBIK"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 pickUpPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::InteractionEffector::dyn_pickUpPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_pickUpPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pickUpPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 pausePositionRelative
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& RootMotion::FinalIK::InteractionEffector::dyn_pausePositionRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_pausePositionRelative");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pausePositionRelative"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion pickUpRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::InteractionEffector::dyn_pickUpRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_pickUpRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pickUpRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion pauseRotationRelative
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& RootMotion::FinalIK::InteractionEffector::dyn_pauseRotationRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_pauseRotationRelative");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pauseRotationRelative"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.InteractionTarget interactionTarget
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::InteractionTarget*& RootMotion::FinalIK::InteractionEffector::dyn_interactionTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_interactionTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactionTarget"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::InteractionTarget**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& RootMotion::FinalIK::InteractionEffector::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Boolean> triggered
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<bool>*& RootMotion::FinalIK::InteractionEffector::dyn_triggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_triggered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triggered"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RootMotion.FinalIK.InteractionSystem interactionSystem
[[deprecated("Use field access instead!")]] ::RootMotion::FinalIK::InteractionSystem*& RootMotion::FinalIK::InteractionEffector::dyn_interactionSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_interactionSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactionSystem"))->offset;
  return *reinterpret_cast<::RootMotion::FinalIK::InteractionSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean started
[[deprecated("Use field access instead!")]] bool& RootMotion::FinalIK::InteractionEffector::dyn_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::dyn_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.get_effectorType
::RootMotion::FinalIK::FullBodyBipedEffector RootMotion::FinalIK::InteractionEffector::get_effectorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::get_effectorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_effectorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::FullBodyBipedEffector, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.set_effectorType
void RootMotion::FinalIK::InteractionEffector::set_effectorType(::RootMotion::FinalIK::FullBodyBipedEffector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::set_effectorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_effectorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.get_isPaused
bool RootMotion::FinalIK::InteractionEffector::get_isPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::get_isPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.set_isPaused
void RootMotion::FinalIK::InteractionEffector::set_isPaused(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::set_isPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.get_interactionObject
::RootMotion::FinalIK::InteractionObject* RootMotion::FinalIK::InteractionEffector::get_interactionObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::get_interactionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RootMotion::FinalIK::InteractionObject*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.set_interactionObject
void RootMotion::FinalIK::InteractionEffector::set_interactionObject(::RootMotion::FinalIK::InteractionObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::set_interactionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.get_inInteraction
bool RootMotion::FinalIK::InteractionEffector::get_inInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::get_inInteraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inInteraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.get_progress
float RootMotion::FinalIK::InteractionEffector::get_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::get_progress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.Initiate
void RootMotion::FinalIK::InteractionEffector::Initiate(::RootMotion::FinalIK::InteractionSystem* interactionSystem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::Initiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactionSystem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactionSystem);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.StoreDefaults
void RootMotion::FinalIK::InteractionEffector::StoreDefaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::StoreDefaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreDefaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.ResetToDefaults
bool RootMotion::FinalIK::InteractionEffector::ResetToDefaults(float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::ResetToDefaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetToDefaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, speed);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.Pause
bool RootMotion::FinalIK::InteractionEffector::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.Resume
bool RootMotion::FinalIK::InteractionEffector::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::Resume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.Start
bool RootMotion::FinalIK::InteractionEffector::Start(::RootMotion::FinalIK::InteractionObject* interactionObject, ::StringW tag, float fadeInTime, bool interrupt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactionObject), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(fadeInTime), ::il2cpp_utils::ExtractType(interrupt)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, interactionObject, tag, fadeInTime, interrupt);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.Update
void RootMotion::FinalIK::InteractionEffector::Update(::UnityEngine::Transform* root, float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, root, speed);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.TriggerUntriggeredEvents
void RootMotion::FinalIK::InteractionEffector::TriggerUntriggeredEvents(bool checkTime, ByRef<bool> pickUp, ByRef<bool> pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::TriggerUntriggeredEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerUntriggeredEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(checkTime), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, checkTime, byref(pickUp), byref(pause));
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.PickUp
void RootMotion::FinalIK::InteractionEffector::PickUp(::UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::PickUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PickUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, root);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.Stop
bool RootMotion::FinalIK::InteractionEffector::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.InteractionEffector.OnPostFBBIK
void RootMotion::FinalIK::InteractionEffector::OnPostFBBIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RootMotion::FinalIK::InteractionEffector::OnPostFBBIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostFBBIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
