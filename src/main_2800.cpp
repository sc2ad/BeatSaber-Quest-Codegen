// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRsenalLogger
#include "GlobalNamespace/VRsenalLogger.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
// Including type: StringSignal
#include "GlobalNamespace/StringSignal.hpp"
// Including type: VRsenalScoreLogger
#include "GlobalNamespace/VRsenalScoreLogger.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ScenesTransitionSetupDataSO _standardLevelScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ScenesTransitionSetupDataSO*& GlobalNamespace::VRsenalLogger::dyn__standardLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::dyn__standardLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ScenesTransitionSetupDataSO _tutorialScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ScenesTransitionSetupDataSO*& GlobalNamespace::VRsenalLogger::dyn__tutorialScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::dyn__tutorialScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private StringSignal _playerNameWasEnteredSignal
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StringSignal*& GlobalNamespace::VRsenalLogger::dyn__playerNameWasEnteredSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::dyn__playerNameWasEnteredSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerNameWasEnteredSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StringSignal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRsenalScoreLogger _vRsenalScoreLoggerPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRsenalScoreLogger*& GlobalNamespace::VRsenalLogger::dyn__vRsenalScoreLoggerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::dyn__vRsenalScoreLoggerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vRsenalScoreLoggerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRsenalScoreLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameScenesManager _gameScenesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameScenesManager*& GlobalNamespace::VRsenalLogger::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRsenalLogger.Awake
void GlobalNamespace::VRsenalLogger::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalLogger.OnDestroy
void GlobalNamespace::VRsenalLogger::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalLogger.HandleGameScenesManagerInstallEarlyBindings
void GlobalNamespace::VRsenalLogger::HandleGameScenesManagerInstallEarlyBindings(::GlobalNamespace::ScenesTransitionSetupDataSO* scenesTransitionSetupData, ::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::HandleGameScenesManagerInstallEarlyBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameScenesManagerInstallEarlyBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scenesTransitionSetupData), ::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scenesTransitionSetupData, container);
}
// Autogenerated method: VRsenalLogger.HandlePlayerNameWasEntered
void GlobalNamespace::VRsenalLogger::HandlePlayerNameWasEntered(::StringW playerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::HandlePlayerNameWasEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerNameWasEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRsenalScoreLogger
#include "GlobalNamespace/VRsenalScoreLogger.hpp"
// Including type: VRsenalScoreLogger/<Start>d__3
#include "GlobalNamespace/VRsenalScoreLogger_-Start-d__3.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: ILevelEndActions
#include "GlobalNamespace/ILevelEndActions.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private IScoreController _scoreController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IScoreController*& GlobalNamespace::VRsenalScoreLogger::dyn__scoreController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::dyn__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap _difficultyBeatmap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::VRsenalScoreLogger::dyn__difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::dyn__difficultyBeatmap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ILevelEndActions _levelEndActions
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILevelEndActions*& GlobalNamespace::VRsenalScoreLogger::dyn__levelEndActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::dyn__levelEndActions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelEndActions"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILevelEndActions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRsenalScoreLogger.Start
::System::Collections::IEnumerator* GlobalNamespace::VRsenalScoreLogger::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalScoreLogger.OnDestroy
void GlobalNamespace::VRsenalScoreLogger::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalScoreLogger.HandleLevelFinishedEvent
void GlobalNamespace::VRsenalScoreLogger::HandleLevelFinishedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::HandleLevelFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalScoreLogger.LogScore
void GlobalNamespace::VRsenalScoreLogger::LogScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::LogScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRsenalScoreLogger/<Start>d__3
#include "GlobalNamespace/VRsenalScoreLogger_-Start-d__3.hpp"
// Including type: UnityEngine.YieldInstruction
#include "UnityEngine/YieldInstruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRsenalScoreLogger::$Start$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::VRsenalScoreLogger::$Start$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRsenalScoreLogger <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRsenalScoreLogger*& GlobalNamespace::VRsenalScoreLogger::$Start$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRsenalScoreLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.YieldInstruction <yieldInstruction>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::YieldInstruction*& GlobalNamespace::VRsenalScoreLogger::$Start$d__3::dyn_$yieldInstruction$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::dyn_$yieldInstruction$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<yieldInstruction>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::YieldInstruction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRsenalScoreLogger/<Start>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::VRsenalScoreLogger::$Start$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalScoreLogger/<Start>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::VRsenalScoreLogger::$Start$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalScoreLogger/<Start>d__3.System.IDisposable.Dispose
void GlobalNamespace::VRsenalScoreLogger::$Start$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalScoreLogger/<Start>d__3.MoveNext
bool GlobalNamespace::VRsenalScoreLogger::$Start$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalScoreLogger/<Start>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::VRsenalScoreLogger::$Start$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditAvatarAnalytics
#include "GlobalNamespace/EditAvatarAnalytics.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: AvatarDataModel
#include "GlobalNamespace/AvatarDataModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private EditAvatarFlowCoordinator _editAvatarFlowCoordinator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EditAvatarFlowCoordinator*& GlobalNamespace::EditAvatarAnalytics::dyn__editAvatarFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::dyn__editAvatarFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editAvatarFlowCoordinator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EditAvatarFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EditAvatarViewController _editAvatarViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EditAvatarViewController*& GlobalNamespace::EditAvatarAnalytics::dyn__editAvatarViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::dyn__editAvatarViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editAvatarViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EditAvatarViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::EditAvatarAnalytics::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarDataModel _avatarDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarDataModel*& GlobalNamespace::EditAvatarAnalytics::dyn__avatarDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::dyn__avatarDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EditAvatarFlowCoordinator/EditAvatarType _lastEditAvatarType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType& GlobalNamespace::EditAvatarAnalytics::dyn__lastEditAvatarType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::dyn__lastEditAvatarType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastEditAvatarType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EditAvatarAnalytics.Awake
void GlobalNamespace::EditAvatarAnalytics::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarAnalytics.OnDestroy
void GlobalNamespace::EditAvatarAnalytics::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarAnalytics.HandleEditAvatarFlowCoordinatorWasSetup
void GlobalNamespace::EditAvatarAnalytics::HandleEditAvatarFlowCoordinatorWasSetup(::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType editAvatarType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::HandleEditAvatarFlowCoordinatorWasSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditAvatarFlowCoordinatorWasSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(editAvatarType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, editAvatarType);
}
// Autogenerated method: EditAvatarAnalytics.HandleEditAvatarViewControllerDidFinish
void GlobalNamespace::EditAvatarAnalytics::HandleEditAvatarViewControllerDidFinish(::GlobalNamespace::EditAvatarViewController::FinishAction finishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::HandleEditAvatarViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditAvatarViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishAction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finishAction);
}
// Autogenerated method: EditAvatarAnalytics.HandleEditAvatarViewControllerRandomizeAllButtonWasPressed
void GlobalNamespace::EditAvatarAnalytics::HandleEditAvatarViewControllerRandomizeAllButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::HandleEditAvatarViewControllerRandomizeAllButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditAvatarViewControllerRandomizeAllButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarAnalytics.CreateEditAvatarEventData
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* GlobalNamespace::EditAvatarAnalytics::CreateEditAvatarEventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::CreateEditAvatarEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEditAvatarEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAnalyticsModel.get_supportsOpenDataPrivacyPage
bool GlobalNamespace::IAnalyticsModel::get_supportsOpenDataPrivacyPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnalyticsModel::get_supportsOpenDataPrivacyPage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_supportsOpenDataPrivacyPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IAnalyticsModel.OpenDataPrivacyPage
void GlobalNamespace::IAnalyticsModel::OpenDataPrivacyPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnalyticsModel::OpenDataPrivacyPage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenDataPrivacyPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IAnalyticsModel.LogEvent
void GlobalNamespace::IAnalyticsModel::LogEvent(::StringW eventType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnalyticsModel::LogEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, eventData);
}
// Autogenerated method: IAnalyticsModel.LogEditAvatarEvent
void GlobalNamespace::IAnalyticsModel::LogEditAvatarEvent(::StringW eventType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnalyticsModel::LogEditAvatarEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEditAvatarEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, eventData);
}
// Autogenerated method: IAnalyticsModel.LogClick
void GlobalNamespace::IAnalyticsModel::LogClick(::StringW clickType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* clickData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnalyticsModel::LogClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickType), ::il2cpp_utils::ExtractType(clickData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickType, clickData);
}
// Autogenerated method: IAnalyticsModel.LogImpression
void GlobalNamespace::IAnalyticsModel::LogImpression(::StringW impressionType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* impressionData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnalyticsModel::LogImpression");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogImpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impressionType), ::il2cpp_utils::ExtractType(impressionData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, impressionType, impressionData);
}
// Autogenerated method: IAnalyticsModel.LogExposure
void GlobalNamespace::IAnalyticsModel::LogExposure(::StringW exposureType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* exposureData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnalyticsModel::LogExposure");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogExposure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exposureType), ::il2cpp_utils::ExtractType(exposureData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exposureType, exposureData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelCompletionResultsAnalyticsHelper
#include "GlobalNamespace/LevelCompletionResultsAnalyticsHelper.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelCompletionResultsAnalyticsHelper.FillEventData
void GlobalNamespace::LevelCompletionResultsAnalyticsHelper::FillEventData(::GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResultsAnalyticsHelper::FillEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LevelCompletionResultsAnalyticsHelper", "FillEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, levelCompletionResults, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelAnalytics
#include "GlobalNamespace/MissionLevelAnalytics.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionLevelScenesTransitionSetupDataSO _missionLevelScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*& GlobalNamespace::MissionLevelAnalytics::dyn__missionLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelAnalytics::dyn__missionLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::MissionLevelAnalytics::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelAnalytics::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionLevelAnalytics.Start
void GlobalNamespace::MissionLevelAnalytics::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelAnalytics::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelAnalytics.OnDestroy
void GlobalNamespace::MissionLevelAnalytics::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelAnalytics::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelAnalytics.HandleMissionLevelDidFinishEvent
void GlobalNamespace::MissionLevelAnalytics::HandleMissionLevelDidFinishEvent(::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* missionLevelScenesTransitionSetupData, ::GlobalNamespace::MissionCompletionResults* missionCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelAnalytics::HandleMissionLevelDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionLevelDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(missionCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionLevelScenesTransitionSetupData, missionCompletionResults);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelAnalytics
#include "GlobalNamespace/MultiplayerLevelAnalytics.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MultiplayerLevelScenesTransitionSetupDataSO _multiplayerLevelScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*& GlobalNamespace::MultiplayerLevelAnalytics::dyn__multiplayerLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelAnalytics::dyn__multiplayerLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::MultiplayerLevelAnalytics::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelAnalytics::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLevelAnalytics.Start
void GlobalNamespace::MultiplayerLevelAnalytics::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelAnalytics::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelAnalytics.OnDestroy
void GlobalNamespace::MultiplayerLevelAnalytics::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelAnalytics::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelAnalytics.HandleMultiplayerLevelDidFinish
void GlobalNamespace::MultiplayerLevelAnalytics::HandleMultiplayerLevelDidFinish(::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, ::GlobalNamespace::MultiplayerResultsData* multiplayerResultsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelAnalytics::HandleMultiplayerLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(multiplayerResultsData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, multiplayerLevelScenesTransitionSetupData, multiplayerResultsData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyAnalytics
#include "GlobalNamespace/MultiplayerLobbyAnalytics.hpp"
// Including type: GameServerLobbyFlowCoordinator/LobbyType
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_LobbyType.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameServerLobbyFlowCoordinator _gameServerLobbyFlowCoordinator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerLobbyFlowCoordinator*& GlobalNamespace::MultiplayerLobbyAnalytics::dyn__gameServerLobbyFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::dyn__gameServerLobbyFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerLobbyFlowCoordinator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerLobbyFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::MultiplayerLobbyAnalytics::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAnalytics.Awake
void GlobalNamespace::MultiplayerLobbyAnalytics::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAnalytics.OnDestroy
void GlobalNamespace::MultiplayerLobbyAnalytics::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAnalytics.HandleGameServerLobbyFlowCoordinatorDidSetupEvent
void GlobalNamespace::MultiplayerLobbyAnalytics::HandleGameServerLobbyFlowCoordinatorDidSetupEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::HandleGameServerLobbyFlowCoordinatorDidSetupEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerLobbyFlowCoordinatorDidSetupEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAnalytics.HandleGameServerLobbyFlowCoordinatorDidFinish
void GlobalNamespace::MultiplayerLobbyAnalytics::HandleGameServerLobbyFlowCoordinatorDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::HandleGameServerLobbyFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerLobbyFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAnalytics.HandleGameServerLobbyFlowCoordinatorStartGameOrReady
void GlobalNamespace::MultiplayerLobbyAnalytics::HandleGameServerLobbyFlowCoordinatorStartGameOrReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::HandleGameServerLobbyFlowCoordinatorStartGameOrReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerLobbyFlowCoordinatorStartGameOrReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAnalytics.HandleGameServerLobbyFlowCoordinatorDidOpenInvitePanel
void GlobalNamespace::MultiplayerLobbyAnalytics::HandleGameServerLobbyFlowCoordinatorDidOpenInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::HandleGameServerLobbyFlowCoordinatorDidOpenInvitePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerLobbyFlowCoordinatorDidOpenInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAnalytics.LogClick
void GlobalNamespace::MultiplayerLobbyAnalytics::LogClick(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* clickData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::LogClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickData);
}
// Autogenerated method: MultiplayerLobbyAnalytics.GetEventTypeFromLobbyType
::StringW GlobalNamespace::MultiplayerLobbyAnalytics::GetEventTypeFromLobbyType(::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType lobbyType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::GetEventTypeFromLobbyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEventTypeFromLobbyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, lobbyType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoAnalyticsModel
#include "GlobalNamespace/NoAnalyticsModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoAnalyticsModel.get_supportsOpenDataPrivacyPage
bool GlobalNamespace::NoAnalyticsModel::get_supportsOpenDataPrivacyPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoAnalyticsModel::get_supportsOpenDataPrivacyPage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_supportsOpenDataPrivacyPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NoAnalyticsModel.OpenDataPrivacyPage
void GlobalNamespace::NoAnalyticsModel::OpenDataPrivacyPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoAnalyticsModel::OpenDataPrivacyPage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenDataPrivacyPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoAnalyticsModel.LogEditAvatarEvent
void GlobalNamespace::NoAnalyticsModel::LogEditAvatarEvent(::StringW eventType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoAnalyticsModel::LogEditAvatarEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEditAvatarEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, eventData);
}
// Autogenerated method: NoAnalyticsModel.LogEvent
void GlobalNamespace::NoAnalyticsModel::LogEvent(::StringW eventType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoAnalyticsModel::LogEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, eventData);
}
// Autogenerated method: NoAnalyticsModel.LogClick
void GlobalNamespace::NoAnalyticsModel::LogClick(::StringW clickType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* clickData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoAnalyticsModel::LogClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickType), ::il2cpp_utils::ExtractType(clickData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickType, clickData);
}
// Autogenerated method: NoAnalyticsModel.LogImpression
void GlobalNamespace::NoAnalyticsModel::LogImpression(::StringW impressionType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* impressionData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoAnalyticsModel::LogImpression");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogImpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impressionType), ::il2cpp_utils::ExtractType(impressionData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, impressionType, impressionData);
}
// Autogenerated method: NoAnalyticsModel.LogExposure
void GlobalNamespace::NoAnalyticsModel::LogExposure(::StringW exposureType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* exposureData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoAnalyticsModel::LogExposure");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogExposure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exposureType), ::il2cpp_utils::ExtractType(exposureData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exposureType, exposureData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusAnalyticsModel
#include "GlobalNamespace/OculusAnalyticsModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusAnalyticsModel.get_supportsOpenDataPrivacyPage
bool GlobalNamespace::OculusAnalyticsModel::get_supportsOpenDataPrivacyPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusAnalyticsModel::get_supportsOpenDataPrivacyPage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_supportsOpenDataPrivacyPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusAnalyticsModel.OpenDataPrivacyPage
void GlobalNamespace::OculusAnalyticsModel::OpenDataPrivacyPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusAnalyticsModel::OpenDataPrivacyPage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenDataPrivacyPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusAnalyticsModel.LogEvent
void GlobalNamespace::OculusAnalyticsModel::LogEvent(::StringW eventType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusAnalyticsModel::LogEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, eventData);
}
// Autogenerated method: OculusAnalyticsModel.LogEditAvatarEvent
void GlobalNamespace::OculusAnalyticsModel::LogEditAvatarEvent(::StringW eventType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusAnalyticsModel::LogEditAvatarEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEditAvatarEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, eventData);
}
// Autogenerated method: OculusAnalyticsModel.LogClick
void GlobalNamespace::OculusAnalyticsModel::LogClick(::StringW clickType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* clickData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusAnalyticsModel::LogClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickType), ::il2cpp_utils::ExtractType(clickData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickType, clickData);
}
// Autogenerated method: OculusAnalyticsModel.LogImpression
void GlobalNamespace::OculusAnalyticsModel::LogImpression(::StringW impressionType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* impressionData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusAnalyticsModel::LogImpression");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogImpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impressionType), ::il2cpp_utils::ExtractType(impressionData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, impressionType, impressionData);
}
// Autogenerated method: OculusAnalyticsModel.LogExposure
void GlobalNamespace::OculusAnalyticsModel::LogExposure(::StringW exposureType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* exposureData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusAnalyticsModel::LogExposure");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogExposure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exposureType), ::il2cpp_utils::ExtractType(exposureData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exposureType, exposureData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelAnalytics
#include "GlobalNamespace/StandardLevelAnalytics.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private StandardLevelScenesTransitionSetupDataSO _standardLevelScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*& GlobalNamespace::StandardLevelAnalytics::dyn__standardLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelAnalytics::dyn__standardLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::StandardLevelAnalytics::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelAnalytics::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelAnalytics.Start
void GlobalNamespace::StandardLevelAnalytics::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelAnalytics::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelAnalytics.OnDestroy
void GlobalNamespace::StandardLevelAnalytics::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelAnalytics::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelAnalytics.HandleStandardLevelDidFinishEvent
void GlobalNamespace::StandardLevelAnalytics::HandleStandardLevelDidFinishEvent(::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* standardLevelScenesTransitionSetupData, ::GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelAnalytics::HandleStandardLevelDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStandardLevelDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standardLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standardLevelScenesTransitionSetupData, levelCompletionResults);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestAnalyticsModel
#include "GlobalNamespace/TestAnalyticsModel.hpp"
// Including type: TestAnalyticsModel/<>c
#include "GlobalNamespace/TestAnalyticsModel_--c.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestAnalyticsModel.get_supportsOpenDataPrivacyPage
bool GlobalNamespace::TestAnalyticsModel::get_supportsOpenDataPrivacyPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::get_supportsOpenDataPrivacyPage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_supportsOpenDataPrivacyPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TestAnalyticsModel.OpenDataPrivacyPage
void GlobalNamespace::TestAnalyticsModel::OpenDataPrivacyPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::OpenDataPrivacyPage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenDataPrivacyPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestAnalyticsModel.LogEvent
void GlobalNamespace::TestAnalyticsModel::LogEvent(::StringW eventType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::LogEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, eventData);
}
// Autogenerated method: TestAnalyticsModel.LogEditAvatarEvent
void GlobalNamespace::TestAnalyticsModel::LogEditAvatarEvent(::StringW eventType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* avatarEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::LogEditAvatarEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEditAvatarEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(avatarEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, avatarEventData);
}
// Autogenerated method: TestAnalyticsModel.LogClick
void GlobalNamespace::TestAnalyticsModel::LogClick(::StringW clickType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* clickData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::LogClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickType), ::il2cpp_utils::ExtractType(clickData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickType, clickData);
}
// Autogenerated method: TestAnalyticsModel.LogImpression
void GlobalNamespace::TestAnalyticsModel::LogImpression(::StringW impressionType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* impressionData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::LogImpression");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogImpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impressionType), ::il2cpp_utils::ExtractType(impressionData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, impressionType, impressionData);
}
// Autogenerated method: TestAnalyticsModel.LogExposure
void GlobalNamespace::TestAnalyticsModel::LogExposure(::StringW exposureType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* exposureData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::LogExposure");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogExposure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exposureType), ::il2cpp_utils::ExtractType(exposureData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exposureType, exposureData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestAnalyticsModel/<>c
#include "GlobalNamespace/TestAnalyticsModel_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly TestAnalyticsModel/<>c <>9
::GlobalNamespace::TestAnalyticsModel::$$c* GlobalNamespace::TestAnalyticsModel::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::TestAnalyticsModel::$$c*>("", "TestAnalyticsModel/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly TestAnalyticsModel/<>c <>9
void GlobalNamespace::TestAnalyticsModel::$$c::_set_$$9(::GlobalNamespace::TestAnalyticsModel::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "TestAnalyticsModel/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.String,System.String>,System.String> <>9__3_0
::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>, ::StringW>* GlobalNamespace::TestAnalyticsModel::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>, ::StringW>*>("", "TestAnalyticsModel/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.String,System.String>,System.String> <>9__3_0
void GlobalNamespace::TestAnalyticsModel::$$c::_set_$$9__3_0(::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "TestAnalyticsModel/<>c", "<>9__3_0", value)));
}
// Autogenerated method: TestAnalyticsModel/<>c..cctor
void GlobalNamespace::TestAnalyticsModel::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TestAnalyticsModel/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TestAnalyticsModel/<>c.<LogEvent>b__3_0
::StringW GlobalNamespace::TestAnalyticsModel::$$c::$LogEvent$b__3_0(::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW> kvp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::$$c::<LogEvent>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LogEvent>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kvp)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, kvp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInit
#include "GlobalNamespace/AppInit.hpp"
// Including type: AppInit/AppStartType
#include "GlobalNamespace/AppInit_AppStartType.hpp"
// Including type: AppInit/<>c
#include "GlobalNamespace/AppInit_--c.hpp"
// Including type: AppInit/<StartCoroutine>d__8
#include "GlobalNamespace/AppInit_-StartCoroutine-d__8.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: MultiplayerMockSettings
#include "GlobalNamespace/MultiplayerMockSettings.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: MockPlayersModel
#include "GlobalNamespace/MockPlayersModel.hpp"
// Including type: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitSceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _cameraGO
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::AppInit::dyn__cameraGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::dyn__cameraGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraGO"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerMockSettings _multiplayerMockSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerMockSettings*& GlobalNamespace::AppInit::dyn__multiplayerMockSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::dyn__multiplayerMockSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerMockSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerMockSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData _sceneSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData*& GlobalNamespace::AppInit::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameScenesManager _gameScenesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameScenesManager*& GlobalNamespace::AppInit::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AppInit.get_gameScenesManager
::GlobalNamespace::GameScenesManager* GlobalNamespace::AppInit::get_gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::get_gameScenesManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameScenesManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameScenesManager*, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.StartCoroutine
::System::Collections::IEnumerator* GlobalNamespace::AppInit::StartCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::StartCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.OnDestroy
void GlobalNamespace::AppInit::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.HandleBeforeDismissingScenes
void GlobalNamespace::AppInit::HandleBeforeDismissingScenes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::HandleBeforeDismissingScenes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeforeDismissingScenes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.GetMockPlayersModel
::GlobalNamespace::MockPlayersModel* GlobalNamespace::AppInit::GetMockPlayersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::GetMockPlayersModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMockPlayersModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MockPlayersModel*, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.GetAppStartType
::GlobalNamespace::AppInit::AppStartType GlobalNamespace::AppInit::GetAppStartType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::GetAppStartType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAppStartType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AppInit::AppStartType, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.AppStartAndMultiSceneEditorSetup
void GlobalNamespace::AppInit::AppStartAndMultiSceneEditorSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::AppStartAndMultiSceneEditorSetup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppStartAndMultiSceneEditorSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.RepeatableSetup
void GlobalNamespace::AppInit::RepeatableSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::RepeatableSetup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RepeatableSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.TransitionToNextScene
void GlobalNamespace::AppInit::TransitionToNextScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::TransitionToNextScene");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNextScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.Start
void GlobalNamespace::AppInit::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInit/AppStartType
#include "GlobalNamespace/AppInit_AppStartType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AppInit/AppStartType AppStart
::GlobalNamespace::AppInit::AppStartType GlobalNamespace::AppInit::AppStartType::_get_AppStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::AppStartType::_get_AppStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AppInit::AppStartType>("", "AppInit/AppStartType", "AppStart"));
}
// Autogenerated static field setter
// Set static field: static public AppInit/AppStartType AppStart
void GlobalNamespace::AppInit::AppStartType::_set_AppStart(::GlobalNamespace::AppInit::AppStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::AppStartType::_set_AppStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInit/AppStartType", "AppStart", value));
}
// Autogenerated static field getter
// Get static field: static public AppInit/AppStartType AppRestart
::GlobalNamespace::AppInit::AppStartType GlobalNamespace::AppInit::AppStartType::_get_AppRestart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::AppStartType::_get_AppRestart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AppInit::AppStartType>("", "AppInit/AppStartType", "AppRestart"));
}
// Autogenerated static field setter
// Set static field: static public AppInit/AppStartType AppRestart
void GlobalNamespace::AppInit::AppStartType::_set_AppRestart(::GlobalNamespace::AppInit::AppStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::AppStartType::_set_AppRestart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInit/AppStartType", "AppRestart", value));
}
// Autogenerated static field getter
// Get static field: static public AppInit/AppStartType MultiSceneEditor
::GlobalNamespace::AppInit::AppStartType GlobalNamespace::AppInit::AppStartType::_get_MultiSceneEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::AppStartType::_get_MultiSceneEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AppInit::AppStartType>("", "AppInit/AppStartType", "MultiSceneEditor"));
}
// Autogenerated static field setter
// Set static field: static public AppInit/AppStartType MultiSceneEditor
void GlobalNamespace::AppInit::AppStartType::_set_MultiSceneEditor(::GlobalNamespace::AppInit::AppStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::AppStartType::_set_MultiSceneEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInit/AppStartType", "MultiSceneEditor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AppInit::AppStartType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::AppStartType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInit/<>c
#include "GlobalNamespace/AppInit_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly AppInit/<>c <>9
::GlobalNamespace::AppInit::$$c* GlobalNamespace::AppInit::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::AppInit::$$c*>("", "AppInit/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly AppInit/<>c <>9
void GlobalNamespace::AppInit::$$c::_set_$$9(::GlobalNamespace::AppInit::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AppInit/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Boolean> <>9__8_0
::System::Func_1<bool>* GlobalNamespace::AppInit::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<bool>*>("", "AppInit/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Boolean> <>9__8_0
void GlobalNamespace::AppInit::$$c::_set_$$9__8_0(::System::Func_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AppInit/<>c", "<>9__8_0", value)));
}
// Autogenerated method: AppInit/<>c..cctor
void GlobalNamespace::AppInit::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AppInit/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AppInit/<>c.<StartCoroutine>b__8_0
bool GlobalNamespace::AppInit::$$c::$StartCoroutine$b__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::$$c::<StartCoroutine>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartCoroutine>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AppInit/<StartCoroutine>d__8
#include "GlobalNamespace/AppInit_-StartCoroutine-d__8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AppInit::$StartCoroutine$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::$StartCoroutine$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AppInit::$StartCoroutine$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::$StartCoroutine$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AppInit <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AppInit*& GlobalNamespace::AppInit::$StartCoroutine$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::$StartCoroutine$d__8::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AppInit**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AppInit/AppStartType <startType>5__2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AppInit::AppStartType& GlobalNamespace::AppInit::$StartCoroutine$d__8::dyn_$startType$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::$StartCoroutine$d__8::dyn_$startType$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startType>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AppInit::AppStartType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AppInit/<StartCoroutine>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AppInit::$StartCoroutine$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::$StartCoroutine$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AppInit/<StartCoroutine>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AppInit::$StartCoroutine$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::$StartCoroutine$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AppInit/<StartCoroutine>d__8.System.IDisposable.Dispose
void GlobalNamespace::AppInit::$StartCoroutine$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::$StartCoroutine$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInit/<StartCoroutine>d__8.MoveNext
bool GlobalNamespace::AppInit::$StartCoroutine$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::$StartCoroutine$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AppInit/<StartCoroutine>d__8.System.Collections.IEnumerator.Reset
void GlobalNamespace::AppInit::$StartCoroutine$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::$StartCoroutine$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DefaultScenesTransitionsFromInit
#include "GlobalNamespace/DefaultScenesTransitionsFromInit.hpp"
// Including type: HealthWarningScenesTransitionSetupDataSO
#include "GlobalNamespace/HealthWarningScenesTransitionSetupDataSO.hpp"
// Including type: RecordingToolScenesTransitionSetupDataSO
#include "GlobalNamespace/RecordingToolScenesTransitionSetupDataSO.hpp"
// Including type: MenuScenesTransitionSetupDataSO
#include "GlobalNamespace/MenuScenesTransitionSetupDataSO.hpp"
// Including type: BeatmapEditorScenesTransitionSetupDataSO
#include "GlobalNamespace/BeatmapEditorScenesTransitionSetupDataSO.hpp"
// Including type: ShaderWarmupScenesTransitionSetupDataSO
#include "GlobalNamespace/ShaderWarmupScenesTransitionSetupDataSO.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HealthWarningScenesTransitionSetupDataSO _healthWarningScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HealthWarningScenesTransitionSetupDataSO*& GlobalNamespace::DefaultScenesTransitionsFromInit::dyn__healthWarningScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultScenesTransitionsFromInit::dyn__healthWarningScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_healthWarningScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HealthWarningScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RecordingToolScenesTransitionSetupDataSO _recordingToolScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolScenesTransitionSetupDataSO*& GlobalNamespace::DefaultScenesTransitionsFromInit::dyn__recordingToolScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultScenesTransitionsFromInit::dyn__recordingToolScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingToolScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuScenesTransitionSetupDataSO _mainMenuScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuScenesTransitionSetupDataSO*& GlobalNamespace::DefaultScenesTransitionsFromInit::dyn__mainMenuScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultScenesTransitionsFromInit::dyn__mainMenuScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainMenuScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEditorScenesTransitionSetupDataSO _beatmapEditorScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*& GlobalNamespace::DefaultScenesTransitionsFromInit::dyn__beatmapEditorScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultScenesTransitionsFromInit::dyn__beatmapEditorScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEditorScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ShaderWarmupScenesTransitionSetupDataSO _shaderWarmupScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ShaderWarmupScenesTransitionSetupDataSO*& GlobalNamespace::DefaultScenesTransitionsFromInit::dyn__shaderWarmupScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultScenesTransitionsFromInit::dyn__shaderWarmupScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shaderWarmupScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ShaderWarmupScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameScenesManager*& GlobalNamespace::DefaultScenesTransitionsFromInit::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultScenesTransitionsFromInit::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DefaultScenesTransitionsFromInit.get_mainMenuScenesTransitionSetupData
::GlobalNamespace::MenuScenesTransitionSetupDataSO* GlobalNamespace::DefaultScenesTransitionsFromInit::get_mainMenuScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultScenesTransitionsFromInit::get_mainMenuScenesTransitionSetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainMenuScenesTransitionSetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MenuScenesTransitionSetupDataSO*, false>(this, ___internal__method);
}
// Autogenerated method: DefaultScenesTransitionsFromInit.TransitionToNextScene
void GlobalNamespace::DefaultScenesTransitionsFromInit::TransitionToNextScene(bool goStraightToMenu, bool goStraightToEditor, bool goToRecordingToolScene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultScenesTransitionsFromInit::TransitionToNextScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNextScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goStraightToMenu), ::il2cpp_utils::ExtractType(goStraightToEditor), ::il2cpp_utils::ExtractType(goToRecordingToolScene)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goStraightToMenu, goStraightToEditor, goToRecordingToolScene);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSystemInit
#include "GlobalNamespace/MainSystemInit.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
// Including type: PerceivedLoudnessPerLevelSO
#include "GlobalNamespace/PerceivedLoudnessPerLevelSO.hpp"
// Including type: RelativeSfxVolumePerLevelSO
#include "GlobalNamespace/RelativeSfxVolumePerLevelSO.hpp"
// Including type: AvatarDataModel
#include "GlobalNamespace/AvatarDataModel.hpp"
// Including type: AvatarPartsModelSO
#include "GlobalNamespace/AvatarPartsModelSO.hpp"
// Including type: SkinColorSetSO
#include "GlobalNamespace/SkinColorSetSO.hpp"
// Including type: MirrorRendererGraphicsSettingsPresets
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets.hpp"
// Including type: MainEffectGraphicsSettingsPresetsSO
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO.hpp"
// Including type: BloomPrePassGraphicsSettingsPresetsSO
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO.hpp"
// Including type: MirrorRendererSO
#include "GlobalNamespace/MirrorRendererSO.hpp"
// Including type: MainEffectContainerSO
#include "GlobalNamespace/MainEffectContainerSO.hpp"
// Including type: BloomPrePassEffectContainerSO
#include "GlobalNamespace/BloomPrePassEffectContainerSO.hpp"
// Including type: SongPackMaskModelSO
#include "GlobalNamespace/SongPackMaskModelSO.hpp"
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: TimeHelper
#include "GlobalNamespace/TimeHelper.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: CampaignProgressModel
#include "GlobalNamespace/CampaignProgressModel.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: CustomLevelLoader
#include "GlobalNamespace/CustomLevelLoader.hpp"
// Including type: CachedMediaAsyncLoader
#include "GlobalNamespace/CachedMediaAsyncLoader.hpp"
// Including type: ExternalCamerasManager
#include "GlobalNamespace/ExternalCamerasManager.hpp"
// Including type: MultiplayerSessionManager
#include "GlobalNamespace/MultiplayerSessionManager.hpp"
// Including type: VoipManager
#include "GlobalNamespace/VoipManager.hpp"
// Including type: LocalNetworkPlayerModel
#include "GlobalNamespace/LocalNetworkPlayerModel.hpp"
// Including type: MasterServerNetworkPlayerModel
#include "GlobalNamespace/MasterServerNetworkPlayerModel.hpp"
// Including type: GameLiftNetworkPlayerModel
#include "GlobalNamespace/GameLiftNetworkPlayerModel.hpp"
// Including type: NetworkPlayerEntitlementChecker
#include "GlobalNamespace/NetworkPlayerEntitlementChecker.hpp"
// Including type: HapticFeedbackController
#include "GlobalNamespace/HapticFeedbackController.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
// Including type: BloomPrePassLightsUpdateSystem
#include "GlobalNamespace/BloomPrePassLightsUpdateSystem.hpp"
// Including type: EnvironmentAudioEffectsPlayer
#include "GlobalNamespace/EnvironmentAudioEffectsPlayer.hpp"
// Including type: NodePoseSyncStateManager
#include "GlobalNamespace/NodePoseSyncStateManager.hpp"
// Including type: AlwaysOwnedContentContainerSO
#include "GlobalNamespace/AlwaysOwnedContentContainerSO.hpp"
// Including type: PSVRHelper
#include "GlobalNamespace/PSVRHelper.hpp"
// Including type: OculusVRHelper
#include "GlobalNamespace/OculusVRHelper.hpp"
// Including type: OpenVRHelper
#include "GlobalNamespace/OpenVRHelper.hpp"
// Including type: DevicelessVRHelper
#include "GlobalNamespace/DevicelessVRHelper.hpp"
// Including type: TestPlatformAdditionalContentModel
#include "GlobalNamespace/TestPlatformAdditionalContentModel.hpp"
// Including type: PS4PlatformAdditionalContentModel
#include "GlobalNamespace/PS4PlatformAdditionalContentModel.hpp"
// Including type: OculusPlatformAdditionalContentModel
#include "GlobalNamespace/OculusPlatformAdditionalContentModel.hpp"
// Including type: SteamPlatformAdditionalContentModel
#include "GlobalNamespace/SteamPlatformAdditionalContentModel.hpp"
// Including type: SteamLevelProductsModelSO
#include "GlobalNamespace/SteamLevelProductsModelSO.hpp"
// Including type: OculusLevelProductsModelSO
#include "GlobalNamespace/OculusLevelProductsModelSO.hpp"
// Including type: PS4LevelProductsModelSO
#include "GlobalNamespace/PS4LevelProductsModelSO.hpp"
// Including type: PS4LeaderboardIdsModelSO
#include "GlobalNamespace/PS4LeaderboardIdsModelSO.hpp"
// Including type: OnlineServices.ServerManager
#include "OnlineServices/ServerManager.hpp"
// Including type: RichPresenceManager
#include "GlobalNamespace/RichPresenceManager.hpp"
// Including type: DlcPromoPanelDataSO
#include "GlobalNamespace/DlcPromoPanelDataSO.hpp"
// Including type: NetworkConfigSO
#include "GlobalNamespace/NetworkConfigSO.hpp"
// Including type: SteamNetworkPlayerModel
#include "GlobalNamespace/SteamNetworkPlayerModel.hpp"
// Including type: OculusNetworkPlayerModel
#include "GlobalNamespace/OculusNetworkPlayerModel.hpp"
// Including type: PS4NetworkPlayerModel
#include "GlobalNamespace/PS4NetworkPlayerModel.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: LeaderboardScoreUploader
#include "GlobalNamespace/LeaderboardScoreUploader.hpp"
// Including type: PlatformLeaderboardsModel
#include "GlobalNamespace/PlatformLeaderboardsModel.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: RecordingToolInstallerSO
#include "GlobalNamespace/RecordingToolInstallerSO.hpp"
// Including type: EnvironmentCommandLineArgsProvider
#include "GlobalNamespace/EnvironmentCommandLineArgsProvider.hpp"
// Including type: MockPlayersModel
#include "GlobalNamespace/MockPlayersModel.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::MainSystemInit::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioManagerSO _audioManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioManagerSO*& GlobalNamespace::MainSystemInit::dyn__audioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__audioManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioManagerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PerceivedLoudnessPerLevelSO _perceivedLoudnessPerLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PerceivedLoudnessPerLevelSO*& GlobalNamespace::MainSystemInit::dyn__perceivedLoudnessPerLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__perceivedLoudnessPerLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_perceivedLoudnessPerLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PerceivedLoudnessPerLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RelativeSfxVolumePerLevelSO _relativeSfxVolumePerLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RelativeSfxVolumePerLevelSO*& GlobalNamespace::MainSystemInit::dyn__relativeSfxVolumePerLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__relativeSfxVolumePerLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeSfxVolumePerLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RelativeSfxVolumePerLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarDataModel _avatarDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarDataModel*& GlobalNamespace::MainSystemInit::dyn__avatarDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__avatarDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarPartsModelSO _avatarPartsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPartsModelSO*& GlobalNamespace::MainSystemInit::dyn__avatarPartsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__avatarPartsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPartsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SkinColorSetSO _skinColorSet
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SkinColorSetSO*& GlobalNamespace::MainSystemInit::dyn__skinColorSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__skinColorSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skinColorSet"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SkinColorSetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MirrorRendererGraphicsSettingsPresets _mirrorRendererGraphicsSettingsPresets
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MirrorRendererGraphicsSettingsPresets*& GlobalNamespace::MainSystemInit::dyn__mirrorRendererGraphicsSettingsPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__mirrorRendererGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorRendererGraphicsSettingsPresets"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirrorRendererGraphicsSettingsPresets**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainEffectGraphicsSettingsPresetsSO _mainEffectGraphicsSettingsPresets
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainEffectGraphicsSettingsPresetsSO*& GlobalNamespace::MainSystemInit::dyn__mainEffectGraphicsSettingsPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__mainEffectGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectGraphicsSettingsPresets"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainEffectGraphicsSettingsPresetsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassGraphicsSettingsPresetsSO _bloomPrePassGraphicsSettingsPresets
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO*& GlobalNamespace::MainSystemInit::dyn__bloomPrePassGraphicsSettingsPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__bloomPrePassGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassGraphicsSettingsPresets"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MirrorRendererSO _mirrorRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MirrorRendererSO*& GlobalNamespace::MainSystemInit::dyn__mirrorRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__mirrorRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirrorRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainEffectContainerSO _mainEffectContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainEffectContainerSO*& GlobalNamespace::MainSystemInit::dyn__mainEffectContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__mainEffectContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainEffectContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassEffectContainerSO _bloomPrePassEffectContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassEffectContainerSO*& GlobalNamespace::MainSystemInit::dyn__bloomPrePassEffectContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__bloomPrePassEffectContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassEffectContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassEffectContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPackMaskModelSO _songPackMaskModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMaskModelSO*& GlobalNamespace::MainSystemInit::dyn__songPackMaskModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__songPackMaskModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMaskModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMaskModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AppStaticSettingsSO _appStaticSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AppStaticSettingsSO*& GlobalNamespace::MainSystemInit::dyn__appStaticSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__appStaticSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appStaticSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AppStaticSettingsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private StandardLevelScenesTransitionSetupDataSO _standardLevelScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*& GlobalNamespace::MainSystemInit::dyn__standardLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__standardLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionLevelScenesTransitionSetupDataSO _missionLevelScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*& GlobalNamespace::MainSystemInit::dyn__missionLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__missionLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLevelScenesTransitionSetupDataSO _multiplayerLevelScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*& GlobalNamespace::MainSystemInit::dyn__multiplayerLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__multiplayerLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TimeHelper _timeHelperPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TimeHelper*& GlobalNamespace::MainSystemInit::dyn__timeHelperPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__timeHelperPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeHelperPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TimeHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerDataModel _playerDataModelPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::MainSystemInit::dyn__playerDataModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__playerDataModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModelPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CampaignProgressModel _campaignProgressModelPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CampaignProgressModel*& GlobalNamespace::MainSystemInit::dyn__campaignProgressModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__campaignProgressModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_campaignProgressModelPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CampaignProgressModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelsModel _beatmapLevelsModelPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelsModel*& GlobalNamespace::MainSystemInit::dyn__beatmapLevelsModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__beatmapLevelsModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelsModelPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CustomLevelLoader _customLevelLoaderPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CustomLevelLoader*& GlobalNamespace::MainSystemInit::dyn__customLevelLoaderPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__customLevelLoaderPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customLevelLoaderPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CustomLevelLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CachedMediaAsyncLoader _cachedMediaAsyncLoaderPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CachedMediaAsyncLoader*& GlobalNamespace::MainSystemInit::dyn__cachedMediaAsyncLoaderPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__cachedMediaAsyncLoaderPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedMediaAsyncLoaderPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CachedMediaAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExternalCamerasManager _externalCamerasManagerPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ExternalCamerasManager*& GlobalNamespace::MainSystemInit::dyn__externalCamerasManagerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__externalCamerasManagerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_externalCamerasManagerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ExternalCamerasManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerSessionManager _multiplayerSessionManagerPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerSessionManager*& GlobalNamespace::MainSystemInit::dyn__multiplayerSessionManagerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__multiplayerSessionManagerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManagerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VoipManager _voipManagerPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VoipManager*& GlobalNamespace::MainSystemInit::dyn__voipManagerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__voipManagerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_voipManagerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VoipManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkPlayerModel _localNetworkPlayerModelPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkPlayerModel*& GlobalNamespace::MainSystemInit::dyn__localNetworkPlayerModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__localNetworkPlayerModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localNetworkPlayerModelPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MasterServerNetworkPlayerModel _masterServerNetworkPlayerModelPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MasterServerNetworkPlayerModel*& GlobalNamespace::MainSystemInit::dyn__masterServerNetworkPlayerModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__masterServerNetworkPlayerModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_masterServerNetworkPlayerModelPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MasterServerNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameLiftNetworkPlayerModel _gameLiftNetworkPlayerModelPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameLiftNetworkPlayerModel*& GlobalNamespace::MainSystemInit::dyn__gameLiftNetworkPlayerModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__gameLiftNetworkPlayerModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameLiftNetworkPlayerModelPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameLiftNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NetworkPlayerEntitlementChecker _networkPlayerEntitlementCheckerPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkPlayerEntitlementChecker*& GlobalNamespace::MainSystemInit::dyn__networkPlayerEntitlementCheckerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__networkPlayerEntitlementCheckerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkPlayerEntitlementCheckerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkPlayerEntitlementChecker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HapticFeedbackController _hapticFeedbackControllerPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HapticFeedbackController*& GlobalNamespace::MainSystemInit::dyn__hapticFeedbackControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__hapticFeedbackControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hapticFeedbackControllerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HapticFeedbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.TimeTweeningManager _tweeningManagerPrefab
[[deprecated("Use field access instead!")]] ::Tweening::TimeTweeningManager*& GlobalNamespace::MainSystemInit::dyn__tweeningManagerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__tweeningManagerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManagerPrefab"))->offset;
  return *reinterpret_cast<::Tweening::TimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassLightsUpdateSystem _lightsUpdateSystemPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassLightsUpdateSystem*& GlobalNamespace::MainSystemInit::dyn__lightsUpdateSystemPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__lightsUpdateSystemPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightsUpdateSystemPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassLightsUpdateSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentAudioEffectsPlayer _environmentAudioEffectsPlayerPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentAudioEffectsPlayer*& GlobalNamespace::MainSystemInit::dyn__environmentAudioEffectsPlayerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__environmentAudioEffectsPlayerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentAudioEffectsPlayerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentAudioEffectsPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NodePoseSyncStateManager _nodePoseSyncStateManagerPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NodePoseSyncStateManager*& GlobalNamespace::MainSystemInit::dyn__nodePoseSyncStateManagerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__nodePoseSyncStateManagerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodePoseSyncStateManagerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NodePoseSyncStateManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AlwaysOwnedContentContainerSO _alwaysOwnedContentContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AlwaysOwnedContentContainerSO*& GlobalNamespace::MainSystemInit::dyn__alwaysOwnedContentContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__alwaysOwnedContentContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedContentContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AlwaysOwnedContentContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PSVRHelper _psVRHelperPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PSVRHelper*& GlobalNamespace::MainSystemInit::dyn__psVRHelperPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__psVRHelperPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_psVRHelperPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PSVRHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusVRHelper _oculusVRHelperPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusVRHelper*& GlobalNamespace::MainSystemInit::dyn__oculusVRHelperPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__oculusVRHelperPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusVRHelperPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusVRHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OpenVRHelper _openVRHelperPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OpenVRHelper*& GlobalNamespace::MainSystemInit::dyn__openVRHelperPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__openVRHelperPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_openVRHelperPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OpenVRHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DevicelessVRHelper _devicelessVRHelperPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DevicelessVRHelper*& GlobalNamespace::MainSystemInit::dyn__devicelessVRHelperPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__devicelessVRHelperPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_devicelessVRHelperPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DevicelessVRHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TestPlatformAdditionalContentModel _testPlatformAdditionalContentModelPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TestPlatformAdditionalContentModel*& GlobalNamespace::MainSystemInit::dyn__testPlatformAdditionalContentModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__testPlatformAdditionalContentModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_testPlatformAdditionalContentModelPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TestPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PS4PlatformAdditionalContentModel _ps4PlatformAdditionalContentModelPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PS4PlatformAdditionalContentModel*& GlobalNamespace::MainSystemInit::dyn__ps4PlatformAdditionalContentModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__ps4PlatformAdditionalContentModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ps4PlatformAdditionalContentModelPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PS4PlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusPlatformAdditionalContentModel _oculusPlatformAdditionalContentModelPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::MainSystemInit::dyn__oculusPlatformAdditionalContentModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__oculusPlatformAdditionalContentModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusPlatformAdditionalContentModelPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SteamPlatformAdditionalContentModel _steamPlatformAdditionalContentModelPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamPlatformAdditionalContentModel*& GlobalNamespace::MainSystemInit::dyn__steamPlatformAdditionalContentModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__steamPlatformAdditionalContentModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_steamPlatformAdditionalContentModelPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SteamLevelProductsModelSO _steamLevelProductsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamLevelProductsModelSO*& GlobalNamespace::MainSystemInit::dyn__steamLevelProductsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__steamLevelProductsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_steamLevelProductsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamLevelProductsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusLevelProductsModelSO _oculusLevelProducsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusLevelProductsModelSO*& GlobalNamespace::MainSystemInit::dyn__oculusLevelProducsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__oculusLevelProducsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusLevelProducsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusLevelProductsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PS4LevelProductsModelSO _ps4LevelProductsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PS4LevelProductsModelSO*& GlobalNamespace::MainSystemInit::dyn__ps4LevelProductsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__ps4LevelProductsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ps4LevelProductsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PS4LevelProductsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PS4LeaderboardIdsModelSO _ps4LeaderboardIdsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PS4LeaderboardIdsModelSO*& GlobalNamespace::MainSystemInit::dyn__ps4LeaderboardIdsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__ps4LeaderboardIdsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ps4LeaderboardIdsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PS4LeaderboardIdsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OnlineServices.ServerManager _onlineServicesServerManagerPrefab
[[deprecated("Use field access instead!")]] ::OnlineServices::ServerManager*& GlobalNamespace::MainSystemInit::dyn__onlineServicesServerManagerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__onlineServicesServerManagerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onlineServicesServerManagerPrefab"))->offset;
  return *reinterpret_cast<::OnlineServices::ServerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RichPresenceManager _richPresenceManagerPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RichPresenceManager*& GlobalNamespace::MainSystemInit::dyn__richPresenceManagerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__richPresenceManagerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_richPresenceManagerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RichPresenceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DlcPromoPanelDataSO _dlcPromoPanelData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DlcPromoPanelDataSO*& GlobalNamespace::MainSystemInit::dyn__dlcPromoPanelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__dlcPromoPanelData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dlcPromoPanelData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DlcPromoPanelDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NetworkConfigSO _networkConfig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkConfigSO*& GlobalNamespace::MainSystemInit::dyn__networkConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__networkConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkConfig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkConfigSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SteamNetworkPlayerModel _steamNetworkPlayerModelPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamNetworkPlayerModel*& GlobalNamespace::MainSystemInit::dyn__steamNetworkPlayerModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__steamNetworkPlayerModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_steamNetworkPlayerModelPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusNetworkPlayerModel _oculusNetworkPlayerModelPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusNetworkPlayerModel*& GlobalNamespace::MainSystemInit::dyn__oculusNetworkPlayerModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__oculusNetworkPlayerModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusNetworkPlayerModelPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PS4NetworkPlayerModel _ps4NetworkPlayerModelPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PS4NetworkPlayerModel*& GlobalNamespace::MainSystemInit::dyn__ps4NetworkPlayerModelPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__ps4NetworkPlayerModelPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ps4NetworkPlayerModelPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PS4NetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::MainSystemInit::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LeaderboardScoreUploader _leaderboardScoreUploader
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardScoreUploader*& GlobalNamespace::MainSystemInit::dyn__leaderboardScoreUploader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__leaderboardScoreUploader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardScoreUploader"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardScoreUploader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlatformLeaderboardsModel _platformLeaderboardsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsModel*& GlobalNamespace::MainSystemInit::dyn__platformLeaderboardsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__platformLeaderboardsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformLeaderboardsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO _anyBeatmapLevelSO
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSO*& GlobalNamespace::MainSystemInit::dyn__anyBeatmapLevelSO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__anyBeatmapLevelSO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anyBeatmapLevelSO"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RecordingToolInstallerSO _recordingToolInstaller
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolInstallerSO*& GlobalNamespace::MainSystemInit::dyn__recordingToolInstaller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__recordingToolInstaller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingToolInstaller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolInstallerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentCommandLineArgsProvider _commandLineArgsProvider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentCommandLineArgsProvider*& GlobalNamespace::MainSystemInit::dyn__commandLineArgsProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__commandLineArgsProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_commandLineArgsProvider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentCommandLineArgsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MockPlayersModel _mockPlayersModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MockPlayersModel*& GlobalNamespace::MainSystemInit::dyn__mockPlayersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::dyn__mockPlayersModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mockPlayersModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MockPlayersModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainSystemInit.Init
void GlobalNamespace::MainSystemInit::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainSystemInit.PreInstall
void GlobalNamespace::MainSystemInit::PreInstall(::GlobalNamespace::MockPlayersModel* mockPlayersModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::PreInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mockPlayersModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mockPlayersModel);
}
// Autogenerated method: MainSystemInit.InstallBindings
void GlobalNamespace::MainSystemInit::InstallBindings(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: MainSystemInit.InstallRichPresence
void GlobalNamespace::MainSystemInit::InstallRichPresence(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::InstallRichPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallRichPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: MainSystemInit.InstallOculusDestinationBindings
void GlobalNamespace::MainSystemInit::InstallOculusDestinationBindings(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::InstallOculusDestinationBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallOculusDestinationBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: MainSystemInit.InstallPlatformLeaderboardsModel
void GlobalNamespace::MainSystemInit::InstallPlatformLeaderboardsModel(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::InstallPlatformLeaderboardsModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallPlatformLeaderboardsModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: MainSystemInit.IsRunningFromNUnit
bool GlobalNamespace::MainSystemInit::IsRunningFromNUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSystemInit::IsRunningFromNUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRunningFromNUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusInit
#include "GlobalNamespace/OculusInit.hpp"
// Including type: OculusInit/<>c
#include "GlobalNamespace/OculusInit_--c.hpp"
// Including type: OculusDeeplinkManager
#include "GlobalNamespace/OculusDeeplinkManager.hpp"
// Including type: DlcPromoPanelModel
#include "GlobalNamespace/DlcPromoPanelModel.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean __enabled
bool GlobalNamespace::OculusInit::_get___enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInit::_get___enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OculusInit", "__enabled"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean __enabled
void GlobalNamespace::OculusInit::_set___enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInit::_set___enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusInit", "__enabled", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusDeeplinkManager _oculusDeeplinkManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusDeeplinkManager*& GlobalNamespace::OculusInit::dyn__oculusDeeplinkManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInit::dyn__oculusDeeplinkManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusDeeplinkManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusDeeplinkManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DlcPromoPanelModel _dlcPromoPanelModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DlcPromoPanelModel*& GlobalNamespace::OculusInit::dyn__dlcPromoPanelModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInit::dyn__dlcPromoPanelModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dlcPromoPanelModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DlcPromoPanelModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusInit..cctor
void GlobalNamespace::OculusInit::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInit::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusInit", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusInit.NoDomainReloadInit
void GlobalNamespace::OculusInit::NoDomainReloadInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInit::NoDomainReloadInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusInit", "NoDomainReloadInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusInit.Init
void GlobalNamespace::OculusInit::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInit::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusInit.TryToInitialize
void GlobalNamespace::OculusInit::TryToInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInit::TryToInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryToInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusInit.InitCallback
void GlobalNamespace::OculusInit::InitCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::PlatformInitialize*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInit::InitCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusInit/<>c
#include "GlobalNamespace/OculusInit_--c.hpp"
// Including type: Oculus.Platform.Message/Oculus.Platform.Callback
#include "Oculus/Platform/Message_Callback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OculusInit/<>c <>9
::GlobalNamespace::OculusInit::$$c* GlobalNamespace::OculusInit::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInit::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OculusInit::$$c*>("", "OculusInit/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OculusInit/<>c <>9
void GlobalNamespace::OculusInit::$$c::_set_$$9(::GlobalNamespace::OculusInit::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInit::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OculusInit/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/Oculus.Platform.Callback <>9__6_0
::Oculus::Platform::Message::Callback* GlobalNamespace::OculusInit::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInit::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Oculus::Platform::Message::Callback*>("", "OculusInit/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/Oculus.Platform.Callback <>9__6_0
void GlobalNamespace::OculusInit::$$c::_set_$$9__6_0(::Oculus::Platform::Message::Callback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInit::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OculusInit/<>c", "<>9__6_0", value)));
}
// Autogenerated method: OculusInit/<>c..cctor
void GlobalNamespace::OculusInit::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInit::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusInit/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusInit/<>c.<InitCallback>b__6_0
void GlobalNamespace::OculusInit::$$c::$InitCallback$b__6_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInit::$$c::<InitCallback>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitCallback>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PCAppInit
#include "GlobalNamespace/PCAppInit.hpp"
// Including type: MainSystemInit
#include "GlobalNamespace/MainSystemInit.hpp"
// Including type: OculusInit
#include "GlobalNamespace/OculusInit.hpp"
// Including type: SteamInit
#include "GlobalNamespace/SteamInit.hpp"
// Including type: DefaultScenesTransitionsFromInit
#include "GlobalNamespace/DefaultScenesTransitionsFromInit.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MainSystemInit _mainSystemInit
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSystemInit*& GlobalNamespace::PCAppInit::dyn__mainSystemInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCAppInit::dyn__mainSystemInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSystemInit"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSystemInit**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusInit _oculusInit
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusInit*& GlobalNamespace::PCAppInit::dyn__oculusInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCAppInit::dyn__oculusInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusInit"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusInit**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SteamInit _steamInit
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamInit*& GlobalNamespace::PCAppInit::dyn__steamInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCAppInit::dyn__steamInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_steamInit"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamInit**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DefaultScenesTransitionsFromInit _defaultScenesTransitionsFromInit
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DefaultScenesTransitionsFromInit*& GlobalNamespace::PCAppInit::dyn__defaultScenesTransitionsFromInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCAppInit::dyn__defaultScenesTransitionsFromInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultScenesTransitionsFromInit"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DefaultScenesTransitionsFromInit**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::PCAppInit::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCAppInit::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _goStraightToMenuCommandArgument
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PCAppInit::dyn__goStraightToMenuCommandArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCAppInit::dyn__goStraightToMenuCommandArgument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_goStraightToMenuCommandArgument"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _goStraightToEditorCommandArgument
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PCAppInit::dyn__goStraightToEditorCommandArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCAppInit::dyn__goStraightToEditorCommandArgument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_goStraightToEditorCommandArgument"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PCAppInit.AppStartAndMultiSceneEditorSetup
void GlobalNamespace::PCAppInit::AppStartAndMultiSceneEditorSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCAppInit::AppStartAndMultiSceneEditorSetup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppStartAndMultiSceneEditorSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PCAppInit.RepeatableSetup
void GlobalNamespace::PCAppInit::RepeatableSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCAppInit::RepeatableSetup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RepeatableSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PCAppInit.TransitionToNextScene
void GlobalNamespace::PCAppInit::TransitionToNextScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCAppInit::TransitionToNextScene");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNextScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PCAppInit.InstallBindings
void GlobalNamespace::PCAppInit::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PCAppInit::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PS4AppInit
#include "GlobalNamespace/PS4AppInit.hpp"
// Including type: MainSystemInit
#include "GlobalNamespace/MainSystemInit.hpp"
// Including type: DefaultScenesTransitionsFromInit
#include "GlobalNamespace/DefaultScenesTransitionsFromInit.hpp"
// Including type: AppInitScenesTransitionSetupDataContainerSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataContainerSO.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: PS4ActivePublisherSKUSettingsSO
#include "GlobalNamespace/PS4ActivePublisherSKUSettingsSO.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MainSystemInit _mainSystemInit
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSystemInit*& GlobalNamespace::PS4AppInit::dyn__mainSystemInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PS4AppInit::dyn__mainSystemInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSystemInit"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSystemInit**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DefaultScenesTransitionsFromInit _defaultScenesTransitionsFromInit
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DefaultScenesTransitionsFromInit*& GlobalNamespace::PS4AppInit::dyn__defaultScenesTransitionsFromInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PS4AppInit::dyn__defaultScenesTransitionsFromInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultScenesTransitionsFromInit"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DefaultScenesTransitionsFromInit**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AppInitScenesTransitionSetupDataContainerSO _appInitScenesTransitionSetupDataContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AppInitScenesTransitionSetupDataContainerSO*& GlobalNamespace::PS4AppInit::dyn__appInitScenesTransitionSetupDataContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PS4AppInit::dyn__appInitScenesTransitionSetupDataContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appInitScenesTransitionSetupDataContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AppInitScenesTransitionSetupDataContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::PS4AppInit::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PS4AppInit::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PS4ActivePublisherSKUSettingsSO _activePublisherSKUSettingsSO
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PS4ActivePublisherSKUSettingsSO*& GlobalNamespace::PS4AppInit::dyn__activePublisherSKUSettingsSO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PS4AppInit::dyn__activePublisherSKUSettingsSO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activePublisherSKUSettingsSO"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PS4ActivePublisherSKUSettingsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameScenesManager _gameScenesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameScenesManager*& GlobalNamespace::PS4AppInit::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PS4AppInit::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PS4AppInit.AppStartAndMultiSceneEditorSetup
void GlobalNamespace::PS4AppInit::AppStartAndMultiSceneEditorSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PS4AppInit::AppStartAndMultiSceneEditorSetup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppStartAndMultiSceneEditorSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PS4AppInit.RepeatableSetup
void GlobalNamespace::PS4AppInit::RepeatableSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PS4AppInit::RepeatableSetup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RepeatableSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PS4AppInit.TransitionToNextScene
void GlobalNamespace::PS4AppInit::TransitionToNextScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PS4AppInit::TransitionToNextScene");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNextScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PS4AppInit.InstallBindings
void GlobalNamespace::PS4AppInit::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PS4AppInit::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuestAppInit
#include "GlobalNamespace/QuestAppInit.hpp"
// Including type: MainSystemInit
#include "GlobalNamespace/MainSystemInit.hpp"
// Including type: OculusInit
#include "GlobalNamespace/OculusInit.hpp"
// Including type: DefaultScenesTransitionsFromInit
#include "GlobalNamespace/DefaultScenesTransitionsFromInit.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MainSystemInit _mainSystemInit
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSystemInit*& GlobalNamespace::QuestAppInit::dyn__mainSystemInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuestAppInit::dyn__mainSystemInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSystemInit"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSystemInit**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusInit _oculusInit
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusInit*& GlobalNamespace::QuestAppInit::dyn__oculusInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuestAppInit::dyn__oculusInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusInit"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusInit**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DefaultScenesTransitionsFromInit _defaultScenesTransitionsFromInit
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DefaultScenesTransitionsFromInit*& GlobalNamespace::QuestAppInit::dyn__defaultScenesTransitionsFromInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuestAppInit::dyn__defaultScenesTransitionsFromInit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultScenesTransitionsFromInit"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DefaultScenesTransitionsFromInit**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::QuestAppInit::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuestAppInit::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: QuestAppInit.AppStartAndMultiSceneEditorSetup
void GlobalNamespace::QuestAppInit::AppStartAndMultiSceneEditorSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuestAppInit::AppStartAndMultiSceneEditorSetup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppStartAndMultiSceneEditorSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuestAppInit.RepeatableSetup
void GlobalNamespace::QuestAppInit::RepeatableSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuestAppInit::RepeatableSetup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RepeatableSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuestAppInit.TransitionToNextScene
void GlobalNamespace::QuestAppInit::TransitionToNextScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuestAppInit::TransitionToNextScene");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNextScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuestAppInit.InstallBindings
void GlobalNamespace::QuestAppInit::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuestAppInit::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamInit
#include "GlobalNamespace/SteamInit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamInit.Init
void GlobalNamespace::SteamInit::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamInit::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioClipLoaderSO
#include "GlobalNamespace/AudioClipLoaderSO.hpp"
// Including type: AudioClipLoaderSO/<LoadAudioFileCoroutine>d__3
#include "GlobalNamespace/AudioClipLoaderSO_-LoadAudioFileCoroutine-d__3.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isLoading
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AudioClipLoaderSO::dyn__isLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipLoaderSO::dyn__isLoading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isLoading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioClipLoaderSO.LoadAudioFile
void GlobalNamespace::AudioClipLoaderSO::LoadAudioFile(::StringW filePath, ::System::Action_1<::UnityEngine::AudioClip*>* finishCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipLoaderSO::LoadAudioFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAudioFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(finishCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, filePath, finishCallback);
}
// Autogenerated method: AudioClipLoaderSO.LoadAudioFileCoroutine
::System::Collections::IEnumerator* GlobalNamespace::AudioClipLoaderSO::LoadAudioFileCoroutine(::StringW filePath, ::System::Action_1<::UnityEngine::AudioClip*>* finishCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipLoaderSO::LoadAudioFileCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAudioFileCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(finishCallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, filePath, finishCallback);
}
// Autogenerated method: AudioClipLoaderSO.OnEnable
void GlobalNamespace::AudioClipLoaderSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipLoaderSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AudioClipLoaderSO/<LoadAudioFileCoroutine>d__3
#include "GlobalNamespace/AudioClipLoaderSO_-LoadAudioFileCoroutine-d__3.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String filePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::dyn_filePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::dyn_filePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<UnityEngine.AudioClip> finishCallback
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::AudioClip*>*& GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::dyn_finishCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::dyn_finishCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishCallback"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioClipLoaderSO <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioClipLoaderSO*& GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioClipLoaderSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::dyn_$www$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::dyn_$www$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioClipLoaderSO/<LoadAudioFileCoroutine>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipLoaderSO/<LoadAudioFileCoroutine>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipLoaderSO/<LoadAudioFileCoroutine>d__3.System.IDisposable.Dispose
void GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipLoaderSO/<LoadAudioFileCoroutine>d__3.MoveNext
bool GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipLoaderSO/<LoadAudioFileCoroutine>d__3.<>m__Finally1
void GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipLoaderSO/<LoadAudioFileCoroutine>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipLoaderSO::$LoadAudioFileCoroutine$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioClipQueue
#include "GlobalNamespace/AudioClipQueue.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::AudioClipQueue::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipQueue::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.AudioClip> _queue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::AudioClip*>*& GlobalNamespace::AudioClipQueue::dyn__queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipQueue::dyn__queue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_queue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _delay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioClipQueue::dyn__delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipQueue::dyn__delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioClipQueue.Awake
void GlobalNamespace::AudioClipQueue::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipQueue::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipQueue.Update
void GlobalNamespace::AudioClipQueue::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipQueue::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipQueue.PlayAudioClipWithDelay
void GlobalNamespace::AudioClipQueue::PlayAudioClipWithDelay(::UnityEngine::AudioClip* audioClip, float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipQueue::PlayAudioClipWithDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayAudioClipWithDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip), ::il2cpp_utils::ExtractType(delay)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioClip, delay);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioFading
#include "GlobalNamespace/AudioFading.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::AudioFading::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioFading::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioFading::dyn__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioFading::dyn__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fadeInOnStart
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AudioFading::dyn__fadeInOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioFading::dyn__fadeInOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _targetVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioFading::dyn__targetVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioFading::dyn__targetVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioFading.Start
void GlobalNamespace::AudioFading::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioFading::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioFading.Update
void GlobalNamespace::AudioFading::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioFading::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioFading.FadeOut
void GlobalNamespace::AudioFading::FadeOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioFading::FadeOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioFading.FadeIn
void GlobalNamespace::AudioFading::FadeIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioFading::FadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioListenerController
#include "GlobalNamespace/AudioListenerController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _startAudioListenerPauseState
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AudioListenerController::dyn__startAudioListenerPauseState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioListenerController::dyn__startAudioListenerPauseState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startAudioListenerPauseState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioListenerController.get_isPaused
bool GlobalNamespace::AudioListenerController::get_isPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioListenerController::get_isPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioListenerController.Awake
void GlobalNamespace::AudioListenerController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioListenerController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioListenerController.OnDestroy
void GlobalNamespace::AudioListenerController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioListenerController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioListenerController.Pause
void GlobalNamespace::AudioListenerController::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioListenerController::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioListenerController.Resume
void GlobalNamespace::AudioListenerController::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioListenerController::Resume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
// Including type: UnityEngine.Audio.AudioMixer
#include "UnityEngine/Audio/AudioMixer.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultMusicVolume
float GlobalNamespace::AudioManagerSO::_get_kDefaultMusicVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::_get_kDefaultMusicVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "AudioManagerSO", "kDefaultMusicVolume"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultMusicVolume
void GlobalNamespace::AudioManagerSO::_set_kDefaultMusicVolume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::_set_kDefaultMusicVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AudioManagerSO", "kDefaultMusicVolume", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMsHrtfSpatializerPluginName
::StringW GlobalNamespace::AudioManagerSO::_get_kMsHrtfSpatializerPluginName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::_get_kMsHrtfSpatializerPluginName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "AudioManagerSO", "kMsHrtfSpatializerPluginName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMsHrtfSpatializerPluginName
void GlobalNamespace::AudioManagerSO::_set_kMsHrtfSpatializerPluginName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::_set_kMsHrtfSpatializerPluginName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AudioManagerSO", "kMsHrtfSpatializerPluginName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kSfxVolume
::StringW GlobalNamespace::AudioManagerSO::_get_kSfxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::_get_kSfxVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "AudioManagerSO", "kSfxVolume"));
}
// Autogenerated static field setter
// Set static field: static private System.String kSfxVolume
void GlobalNamespace::AudioManagerSO::_set_kSfxVolume(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::_set_kSfxVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AudioManagerSO", "kSfxVolume", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMainVolume
::StringW GlobalNamespace::AudioManagerSO::_get_kMainVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::_get_kMainVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "AudioManagerSO", "kMainVolume"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMainVolume
void GlobalNamespace::AudioManagerSO::_set_kMainVolume(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::_set_kMainVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AudioManagerSO", "kMainVolume", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMusicVolume
::StringW GlobalNamespace::AudioManagerSO::_get_kMusicVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::_get_kMusicVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "AudioManagerSO", "kMusicVolume"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMusicVolume
void GlobalNamespace::AudioManagerSO::_set_kMusicVolume(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::_set_kMusicVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AudioManagerSO", "kMusicVolume", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMusicPitch
::StringW GlobalNamespace::AudioManagerSO::_get_kMusicPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::_get_kMusicPitch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "AudioManagerSO", "kMusicPitch"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMusicPitch
void GlobalNamespace::AudioManagerSO::_set_kMusicPitch(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::_set_kMusicPitch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AudioManagerSO", "kMusicPitch", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMusicSpeed
::StringW GlobalNamespace::AudioManagerSO::_get_kMusicSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::_get_kMusicSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "AudioManagerSO", "kMusicSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMusicSpeed
void GlobalNamespace::AudioManagerSO::_set_kMusicSpeed(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::_set_kMusicSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AudioManagerSO", "kMusicSpeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMusicPitchShifterWet
::StringW GlobalNamespace::AudioManagerSO::_get_kMusicPitchShifterWet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::_get_kMusicPitchShifterWet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "AudioManagerSO", "kMusicPitchShifterWet"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMusicPitchShifterWet
void GlobalNamespace::AudioManagerSO::_set_kMusicPitchShifterWet(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::_set_kMusicPitchShifterWet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AudioManagerSO", "kMusicPitchShifterWet", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Audio.AudioMixer _audioMixer
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixer*& GlobalNamespace::AudioManagerSO::dyn__audioMixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::dyn__audioMixer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioMixer"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spatializerPluginLatency
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioManagerSO::dyn__spatializerPluginLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::dyn__spatializerPluginLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spatializerPluginLatency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spatializerSfxVolumeOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioManagerSO::dyn__spatializerSfxVolumeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::dyn__spatializerSfxVolumeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spatializerSfxVolumeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _musicVolumeOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioManagerSO::dyn__musicVolumeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::dyn__musicVolumeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_musicVolumeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sfxVolumeOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioManagerSO::dyn__sfxVolumeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::dyn__sfxVolumeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sfxVolumeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sfxVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioManagerSO::dyn__sfxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::dyn__sfxVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sfxVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sfxEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AudioManagerSO::dyn__sfxEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::dyn__sfxEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sfxEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioManagerSO.get_sfxLatency
float GlobalNamespace::AudioManagerSO::get_sfxLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::get_sfxLatency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sfxLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioManagerSO.set_mainVolume
void GlobalNamespace::AudioManagerSO::set_mainVolume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::set_mainVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mainVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioManagerSO.set_musicVolume
void GlobalNamespace::AudioManagerSO::set_musicVolume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::set_musicVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_musicVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioManagerSO.get_sfxVolume
float GlobalNamespace::AudioManagerSO::get_sfxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::get_sfxVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sfxVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioManagerSO.set_sfxVolume
void GlobalNamespace::AudioManagerSO::set_sfxVolume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::set_sfxVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sfxVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioManagerSO.get_sfxEnabled
bool GlobalNamespace::AudioManagerSO::get_sfxEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::get_sfxEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sfxEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioManagerSO.set_sfxEnabled
void GlobalNamespace::AudioManagerSO::set_sfxEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::set_sfxEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sfxEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioManagerSO.set_musicPitch
void GlobalNamespace::AudioManagerSO::set_musicPitch(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::set_musicPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_musicPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioManagerSO.set_musicSpeed
void GlobalNamespace::AudioManagerSO::set_musicSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::set_musicSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_musicSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioManagerSO.Init
void GlobalNamespace::AudioManagerSO::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioManagerSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioPitchGainEffect
#include "GlobalNamespace/AudioPitchGainEffect.hpp"
// Including type: AudioPitchGainEffect/<StartEffectCoroutine>d__8
#include "GlobalNamespace/AudioPitchGainEffect_-StartEffectCoroutine-d__8.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::AudioPitchGainEffect::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _duration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioPitchGainEffect::dyn__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::dyn__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _pitchCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::AudioPitchGainEffect::dyn__pitchCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::dyn__pitchCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pitchCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _gainCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::AudioPitchGainEffect::dyn__gainCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::dyn__gainCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gainCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _currentCoroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GlobalNamespace::AudioPitchGainEffect::dyn__currentCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::dyn__currentCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startPitch
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioPitchGainEffect::dyn__startPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::dyn__startPitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPitch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioPitchGainEffect::dyn__startVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::dyn__startVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioPitchGainEffect.Start
void GlobalNamespace::AudioPitchGainEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioPitchGainEffect.StartEffectCoroutine
::System::Collections::IEnumerator* GlobalNamespace::AudioPitchGainEffect::StartEffectCoroutine(float volumeScale, ::System::Action* finishCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::StartEffectCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartEffectCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volumeScale), ::il2cpp_utils::ExtractType(finishCallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, volumeScale, finishCallback);
}
// Autogenerated method: AudioPitchGainEffect.StartEffect
void GlobalNamespace::AudioPitchGainEffect::StartEffect(float volumeScale, ::System::Action* finishCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::StartEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volumeScale), ::il2cpp_utils::ExtractType(finishCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volumeScale, finishCallback);
}
// Autogenerated method: AudioPitchGainEffect.InterruptEffect
void GlobalNamespace::AudioPitchGainEffect::InterruptEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::InterruptEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterruptEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioPitchGainEffect.SetAudioSource
void GlobalNamespace::AudioPitchGainEffect::SetAudioSource(::UnityEngine::AudioSource* audioSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::SetAudioSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAudioSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioSource);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AudioPitchGainEffect/<StartEffectCoroutine>d__8
#include "GlobalNamespace/AudioPitchGainEffect_-StartEffectCoroutine-d__8.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioPitchGainEffect <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioPitchGainEffect*& GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioPitchGainEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumeScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::dyn_volumeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::dyn_volumeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action finishCallback
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::dyn_finishCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::dyn_finishCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishCallback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startPitch>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::dyn_$startPitch$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::dyn_$startPitch$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startPitch>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <time>5__3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::dyn_$time$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::dyn_$time$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioPitchGainEffect/<StartEffectCoroutine>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AudioPitchGainEffect/<StartEffectCoroutine>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AudioPitchGainEffect/<StartEffectCoroutine>d__8.System.IDisposable.Dispose
void GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioPitchGainEffect/<StartEffectCoroutine>d__8.MoveNext
bool GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioPitchGainEffect/<StartEffectCoroutine>d__8.System.Collections.IEnumerator.Reset
void GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPitchGainEffect::$StartEffectCoroutine$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioPlayerBase
#include "GlobalNamespace/AudioPlayerBase.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioPlayerBase.get_activeAudioClip
::UnityEngine::AudioClip* GlobalNamespace::AudioPlayerBase::get_activeAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPlayerBase::get_activeAudioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: AudioPlayerBase.FadeOut
void GlobalNamespace::AudioPlayerBase::FadeOut(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPlayerBase::FadeOut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated method: AudioPlayerBase.PauseCurrentChannel
void GlobalNamespace::AudioPlayerBase::PauseCurrentChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPlayerBase::PauseCurrentChannel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseCurrentChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioPlayerBase.UnPauseCurrentChannel
void GlobalNamespace::AudioPlayerBase::UnPauseCurrentChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioPlayerBase::UnPauseCurrentChannel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnPauseCurrentChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: AudioTimeSyncController/InitData
#include "GlobalNamespace/AudioTimeSyncController_InitData.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.WaitUntil
#include "UnityEngine/WaitUntil.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _audioSyncLerpSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioTimeSyncController::dyn__audioSyncLerpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__audioSyncLerpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSyncLerpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _forcedSyncDeltaTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioTimeSyncController::dyn__forcedSyncDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__forcedSyncDeltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forcedSyncDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startSyncDeltaTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioTimeSyncController::dyn__startSyncDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__startSyncDeltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startSyncDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _stopSyncDeltaTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioTimeSyncController::dyn__stopSyncDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__stopSyncDeltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stopSyncDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::AudioTimeSyncController::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FloatSO _audioLatency
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FloatSO*& GlobalNamespace::AudioTimeSyncController::dyn__audioLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__audioLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioLatency"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController/InitData _initData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioTimeSyncController::InitData*& GlobalNamespace::AudioTimeSyncController::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean forcedNoAudioSync
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AudioTimeSyncController::dyn_forcedNoAudioSync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn_forcedNoAudioSync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forcedNoAudioSync"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action stateChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AudioTimeSyncController::dyn_stateChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn_stateChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stateChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fixingAudioSyncError
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AudioTimeSyncController::dyn__fixingAudioSyncError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__fixingAudioSyncError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fixingAudioSyncError"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _audioStartTimeOffsetSinceStart
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioTimeSyncController::dyn__audioStartTimeOffsetSinceStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__audioStartTimeOffsetSinceStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioStartTimeOffsetSinceStart"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _playbackLoopIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AudioTimeSyncController::dyn__playbackLoopIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__playbackLoopIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackLoopIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevAudioSamplePos
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AudioTimeSyncController::dyn__prevAudioSamplePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__prevAudioSamplePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevAudioSamplePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startSongTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioTimeSyncController::dyn__startSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__startSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songTimeOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioTimeSyncController::dyn__songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__songTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _audioStarted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AudioTimeSyncController::dyn__audioStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__audioStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioStarted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioTimeSyncController::dyn__timeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__timeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioTimeSyncController::dyn__songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__songTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _dspTimeOffset
[[deprecated("Use field access instead!")]] double& GlobalNamespace::AudioTimeSyncController::dyn__dspTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__dspTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dspTimeOffset"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioTimeSyncController/State _state
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioTimeSyncController::State& GlobalNamespace::AudioTimeSyncController::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canStartSong
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AudioTimeSyncController::dyn__canStartSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__canStartSong");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canStartSong"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isReady
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AudioTimeSyncController::dyn__isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__isReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isReady"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastFrameDeltaSongTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioTimeSyncController::dyn__lastFrameDeltaSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__lastFrameDeltaSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFrameDeltaSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _forceNoAudioSyncOrAudioSyncErrorFixing
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AudioTimeSyncController::dyn__forceNoAudioSyncOrAudioSyncErrorFixing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::dyn__forceNoAudioSyncOrAudioSyncErrorFixing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forceNoAudioSyncOrAudioSyncErrorFixing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioTimeSyncController.get_state
::GlobalNamespace::AudioTimeSyncController::State GlobalNamespace::AudioTimeSyncController::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::get_state");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AudioTimeSyncController::State, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.get_songTime
float GlobalNamespace::AudioTimeSyncController::get_songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::get_songTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.get_lastFrameDeltaSongTime
float GlobalNamespace::AudioTimeSyncController::get_lastFrameDeltaSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::get_lastFrameDeltaSongTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastFrameDeltaSongTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.get_songLength
float GlobalNamespace::AudioTimeSyncController::get_songLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::get_songLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.get_isAudioLoaded
bool GlobalNamespace::AudioTimeSyncController::get_isAudioLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::get_isAudioLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAudioLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.get_songEndTime
float GlobalNamespace::AudioTimeSyncController::get_songEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::get_songEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.get_timeScale
float GlobalNamespace::AudioTimeSyncController::get_timeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::get_timeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.get_dspTimeOffset
double GlobalNamespace::AudioTimeSyncController::get_dspTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::get_dspTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dspTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.get_waitUntilAudioIsLoaded
::UnityEngine::WaitUntil* GlobalNamespace::AudioTimeSyncController::get_waitUntilAudioIsLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::get_waitUntilAudioIsLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_waitUntilAudioIsLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::WaitUntil*, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.get_isReady
bool GlobalNamespace::AudioTimeSyncController::get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::get_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.get_songTimeOffset
float GlobalNamespace::AudioTimeSyncController::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::get_songTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.get_forceNoAudioSyncOrAudioSyncErrorFixing
bool GlobalNamespace::AudioTimeSyncController::get_forceNoAudioSyncOrAudioSyncErrorFixing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::get_forceNoAudioSyncOrAudioSyncErrorFixing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forceNoAudioSyncOrAudioSyncErrorFixing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.set_forceNoAudioSyncOrAudioSyncErrorFixing
void GlobalNamespace::AudioTimeSyncController::set_forceNoAudioSyncOrAudioSyncErrorFixing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::set_forceNoAudioSyncOrAudioSyncErrorFixing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_forceNoAudioSyncOrAudioSyncErrorFixing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioTimeSyncController.get_timeSinceStart
float GlobalNamespace::AudioTimeSyncController::get_timeSinceStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::get_timeSinceStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeSinceStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.add_stateChangedEvent
void GlobalNamespace::AudioTimeSyncController::add_stateChangedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::add_stateChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_stateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioTimeSyncController.remove_stateChangedEvent
void GlobalNamespace::AudioTimeSyncController::remove_stateChangedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::remove_stateChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_stateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AudioTimeSyncController.Awake
void GlobalNamespace::AudioTimeSyncController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.Start
void GlobalNamespace::AudioTimeSyncController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.Update
void GlobalNamespace::AudioTimeSyncController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.StartSong
void GlobalNamespace::AudioTimeSyncController::StartSong(float startTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::StartSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTimeOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startTimeOffset);
}
// Autogenerated method: AudioTimeSyncController.SeekTo
void GlobalNamespace::AudioTimeSyncController::SeekTo(float startTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::SeekTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SeekTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTimeOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startTimeOffset);
}
// Autogenerated method: AudioTimeSyncController.StopSong
void GlobalNamespace::AudioTimeSyncController::StopSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::StopSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.Pause
void GlobalNamespace::AudioTimeSyncController::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.Resume
void GlobalNamespace::AudioTimeSyncController::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::Resume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.SetSongTimeIntoAudioTime
void GlobalNamespace::AudioTimeSyncController::SetSongTimeIntoAudioTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::SetSongTimeIntoAudioTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSongTimeIntoAudioTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioTimeSyncController.<get_waitUntilAudioIsLoaded>b__27_0
bool GlobalNamespace::AudioTimeSyncController::$get_waitUntilAudioIsLoaded$b__27_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::<get_waitUntilAudioIsLoaded>b__27_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_waitUntilAudioIsLoaded>b__27_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioTimeSyncController/InitData
#include "GlobalNamespace/AudioTimeSyncController_InitData.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.AudioClip audioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::AudioTimeSyncController::InitData::dyn_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::InitData::dyn_audioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single startSongTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioTimeSyncController::InitData::dyn_startSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::InitData::dyn_startSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single songTimeOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioTimeSyncController::InitData::dyn_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::InitData::dyn_songTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single timeScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioTimeSyncController::InitData::dyn_timeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::InitData::dyn_timeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioTimeSyncController/State
#include "GlobalNamespace/AudioTimeSyncController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AudioTimeSyncController/State Playing
::GlobalNamespace::AudioTimeSyncController::State GlobalNamespace::AudioTimeSyncController::State::_get_Playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::State::_get_Playing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AudioTimeSyncController::State>("", "AudioTimeSyncController/State", "Playing"));
}
// Autogenerated static field setter
// Set static field: static public AudioTimeSyncController/State Playing
void GlobalNamespace::AudioTimeSyncController::State::_set_Playing(::GlobalNamespace::AudioTimeSyncController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::State::_set_Playing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AudioTimeSyncController/State", "Playing", value));
}
// Autogenerated static field getter
// Get static field: static public AudioTimeSyncController/State Paused
::GlobalNamespace::AudioTimeSyncController::State GlobalNamespace::AudioTimeSyncController::State::_get_Paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::State::_get_Paused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AudioTimeSyncController::State>("", "AudioTimeSyncController/State", "Paused"));
}
// Autogenerated static field setter
// Set static field: static public AudioTimeSyncController/State Paused
void GlobalNamespace::AudioTimeSyncController::State::_set_Paused(::GlobalNamespace::AudioTimeSyncController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::State::_set_Paused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AudioTimeSyncController/State", "Paused", value));
}
// Autogenerated static field getter
// Get static field: static public AudioTimeSyncController/State Stopped
::GlobalNamespace::AudioTimeSyncController::State GlobalNamespace::AudioTimeSyncController::State::_get_Stopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::State::_get_Stopped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AudioTimeSyncController::State>("", "AudioTimeSyncController/State", "Stopped"));
}
// Autogenerated static field setter
// Set static field: static public AudioTimeSyncController/State Stopped
void GlobalNamespace::AudioTimeSyncController::State::_set_Stopped(::GlobalNamespace::AudioTimeSyncController::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::State::_set_Stopped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AudioTimeSyncController/State", "Stopped", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AudioTimeSyncController::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTimeSyncController::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AutomaticSFXVolume
#include "GlobalNamespace/AutomaticSFXVolume.hpp"
// Including type: AutomaticSFXVolume/InitData
#include "GlobalNamespace/AutomaticSFXVolume_InitData.hpp"
// Including type: AutomaticSFXVolumeParamsSO
#include "GlobalNamespace/AutomaticSFXVolumeParamsSO.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kBaseVolume
float GlobalNamespace::AutomaticSFXVolume::_get_kBaseVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::_get_kBaseVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "AutomaticSFXVolume", "kBaseVolume"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kBaseVolume
void GlobalNamespace::AutomaticSFXVolume::_set_kBaseVolume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::_set_kBaseVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AutomaticSFXVolume", "kBaseVolume", value));
}
// Autogenerated instance field getter
// Get instance field: private AutomaticSFXVolumeParamsSO _params
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AutomaticSFXVolumeParamsSO*& GlobalNamespace::AutomaticSFXVolume::dyn__params() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::dyn__params");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_params"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AutomaticSFXVolumeParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioManagerSO _audioManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioManagerSO*& GlobalNamespace::AutomaticSFXVolume::dyn__audioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::dyn__audioManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioManagerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AutomaticSFXVolume/InitData _initData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AutomaticSFXVolume::InitData*& GlobalNamespace::AutomaticSFXVolume::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AutomaticSFXVolume::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sampleRate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolume::dyn__sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::dyn__sampleRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sampleRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _volume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolume::dyn__volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::dyn__volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _envelope
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolume::dyn__envelope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::dyn__envelope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_envelope"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _attackSamples
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolume::dyn__attackSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::dyn__attackSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attackSamples"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _releaseSamples
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolume::dyn__releaseSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::dyn__releaseSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_releaseSamples"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _attackCoef
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolume::dyn__attackCoef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::dyn__attackCoef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attackCoef"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _releaseCoef
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolume::dyn__releaseCoef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::dyn__releaseCoef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_releaseCoef"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolume::dyn__maxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::dyn__maxVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AutomaticSFXVolume.Start
void GlobalNamespace::AutomaticSFXVolume::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutomaticSFXVolume.OnDisable
void GlobalNamespace::AutomaticSFXVolume::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutomaticSFXVolume.OnValidate
void GlobalNamespace::AutomaticSFXVolume::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutomaticSFXVolume.RecalculateParams
void GlobalNamespace::AutomaticSFXVolume::RecalculateParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::RecalculateParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutomaticSFXVolume.OnAudioFilterRead
void GlobalNamespace::AutomaticSFXVolume::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: AutomaticSFXVolume.Update
void GlobalNamespace::AutomaticSFXVolume::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AutomaticSFXVolume/InitData
#include "GlobalNamespace/AutomaticSFXVolume_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single volumeOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolume::InitData::dyn_volumeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::InitData::dyn_volumeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single maxVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolume::InitData::dyn_maxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::InitData::dyn_maxVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean adaptiveSfx
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AutomaticSFXVolume::InitData::dyn_adaptiveSfx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolume::InitData::dyn_adaptiveSfx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "adaptiveSfx"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AutomaticSFXVolumeParamsSO
#include "GlobalNamespace/AutomaticSFXVolumeParamsSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _musicVolumeMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolumeParamsSO::dyn__musicVolumeMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolumeParamsSO::dyn__musicVolumeMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_musicVolumeMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _threshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolumeParamsSO::dyn__threshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolumeParamsSO::dyn__threshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_threshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _impact
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolumeParamsSO::dyn__impact() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolumeParamsSO::dyn__impact");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_impact"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _attackTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolumeParamsSO::dyn__attackTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolumeParamsSO::dyn__attackTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attackTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _releaseTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolumeParamsSO::dyn__releaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolumeParamsSO::dyn__releaseTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_releaseTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolumeParamsSO::dyn__minVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolumeParamsSO::dyn__minVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolumeParamsSO::dyn__maxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolumeParamsSO::dyn__maxVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _volumeSmooth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AutomaticSFXVolumeParamsSO::dyn__volumeSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolumeParamsSO::dyn__volumeSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volumeSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AutomaticSFXVolumeParamsSO.get_musicVolumeMultiplier
float GlobalNamespace::AutomaticSFXVolumeParamsSO::get_musicVolumeMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolumeParamsSO::get_musicVolumeMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_musicVolumeMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AutomaticSFXVolumeParamsSO.get_threshold
float GlobalNamespace::AutomaticSFXVolumeParamsSO::get_threshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolumeParamsSO::get_threshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_threshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AutomaticSFXVolumeParamsSO.get_impact
float GlobalNamespace::AutomaticSFXVolumeParamsSO::get_impact() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolumeParamsSO::get_impact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_impact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AutomaticSFXVolumeParamsSO.get_attackTime
float GlobalNamespace::AutomaticSFXVolumeParamsSO::get_attackTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolumeParamsSO::get_attackTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attackTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AutomaticSFXVolumeParamsSO.get_releaseTime
float GlobalNamespace::AutomaticSFXVolumeParamsSO::get_releaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolumeParamsSO::get_releaseTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_releaseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AutomaticSFXVolumeParamsSO.get_minVolume
float GlobalNamespace::AutomaticSFXVolumeParamsSO::get_minVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolumeParamsSO::get_minVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AutomaticSFXVolumeParamsSO.get_maxVolume
float GlobalNamespace::AutomaticSFXVolumeParamsSO::get_maxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolumeParamsSO::get_maxVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AutomaticSFXVolumeParamsSO.get_volumeSmooth
float GlobalNamespace::AutomaticSFXVolumeParamsSO::get_volumeSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutomaticSFXVolumeParamsSO::get_volumeSmooth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_volumeSmooth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombCutSoundEffect
#include "GlobalNamespace/BombCutSoundEffect.hpp"
// Including type: BombCutSoundEffect/Pool
#include "GlobalNamespace/BombCutSoundEffect_Pool.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::BombCutSoundEffect::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffect::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<BombCutSoundEffect> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::BombCutSoundEffect*>*& GlobalNamespace::BombCutSoundEffect::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffect::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::BombCutSoundEffect*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Saber _saber
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Saber*& GlobalNamespace::BombCutSoundEffect::dyn__saber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffect::dyn__saber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saber"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Saber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BombCutSoundEffect.add_didFinishEvent
void GlobalNamespace::BombCutSoundEffect::add_didFinishEvent(::System::Action_1<::GlobalNamespace::BombCutSoundEffect*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffect::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BombCutSoundEffect.remove_didFinishEvent
void GlobalNamespace::BombCutSoundEffect::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::BombCutSoundEffect*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffect::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BombCutSoundEffect.Init
void GlobalNamespace::BombCutSoundEffect::Init(::UnityEngine::AudioClip* audioClip, ::GlobalNamespace::Saber* saber, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffect::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip), ::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioClip, saber, volume);
}
// Autogenerated method: BombCutSoundEffect.LateUpdate
void GlobalNamespace::BombCutSoundEffect::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffect::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BombCutSoundEffect.StopPlayingAndFinish
void GlobalNamespace::BombCutSoundEffect::StopPlayingAndFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffect::StopPlayingAndFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopPlayingAndFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombCutSoundEffect/Pool
#include "GlobalNamespace/BombCutSoundEffect_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombCutSoundEffectManager
#include "GlobalNamespace/BombCutSoundEffectManager.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: RandomObjectPicker`1
#include "GlobalNamespace/RandomObjectPicker_1.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: BombCutSoundEffect/Pool
#include "GlobalNamespace/BombCutSoundEffect_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _volume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BombCutSoundEffectManager::dyn__volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffectManager::dyn__volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _bombExplosionAudioClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::BombCutSoundEffectManager::dyn__bombExplosionAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffectManager::dyn__bombExplosionAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombExplosionAudioClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::BombCutSoundEffectManager::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffectManager::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberManager saberManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SaberManager*& GlobalNamespace::BombCutSoundEffectManager::dyn_saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffectManager::dyn_saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saberManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BombCutSoundEffect/Pool _bombCutSoundEffectPool
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BombCutSoundEffect::Pool*& GlobalNamespace::BombCutSoundEffectManager::dyn__bombCutSoundEffectPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffectManager::dyn__bombCutSoundEffectPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombCutSoundEffectPool"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BombCutSoundEffect::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RandomObjectPicker`1<UnityEngine.AudioClip> _randomSoundPicker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RandomObjectPicker_1<::UnityEngine::AudioClip*>*& GlobalNamespace::BombCutSoundEffectManager::dyn__randomSoundPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffectManager::dyn__randomSoundPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomSoundPicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RandomObjectPicker_1<::UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BombCutSoundEffectManager.Start
void GlobalNamespace::BombCutSoundEffectManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffectManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BombCutSoundEffectManager.HandleNoteWasCut
void GlobalNamespace::BombCutSoundEffectManager::HandleNoteWasCut(::GlobalNamespace::NoteController* noteController, ByRef<::GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffectManager::HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated method: BombCutSoundEffectManager.OnDestroy
void GlobalNamespace::BombCutSoundEffectManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffectManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BombCutSoundEffectManager.HandleBombCutSoundEffectDidFinish
void GlobalNamespace::BombCutSoundEffectManager::HandleBombCutSoundEffectDidFinish(::GlobalNamespace::BombCutSoundEffect* bombCutSoundEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombCutSoundEffectManager::HandleBombCutSoundEffectDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBombCutSoundEffectDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bombCutSoundEffect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bombCutSoundEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CrossFadeAudioSource
#include "GlobalNamespace/CrossFadeAudioSource.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: AudioPitchGainEffect
#include "GlobalNamespace/AudioPitchGainEffect.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
// Including type: Tweening.Tween`1
#include "Tweening/Tween_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _duration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CrossFadeAudioSource::dyn__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::dyn__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource1
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::CrossFadeAudioSource::dyn__audioSource1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::dyn__audioSource1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource1"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource2
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::CrossFadeAudioSource::dyn__audioSource2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::dyn__audioSource2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource2"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioPitchGainEffect _audioPitchGainEffect1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioPitchGainEffect*& GlobalNamespace::CrossFadeAudioSource::dyn__audioPitchGainEffect1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::dyn__audioPitchGainEffect1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioPitchGainEffect1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioPitchGainEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioPitchGainEffect _audioPitchGainEffect2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioPitchGainEffect*& GlobalNamespace::CrossFadeAudioSource::dyn__audioPitchGainEffect2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::dyn__audioPitchGainEffect2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioPitchGainEffect2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioPitchGainEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.TimeTweeningManager _tweeningManager
[[deprecated("Use field access instead!")]] ::Tweening::TimeTweeningManager*& GlobalNamespace::CrossFadeAudioSource::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::TimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _activeAudioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::CrossFadeAudioSource::dyn__activeAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::dyn__activeAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeAudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _inactiveAudioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::CrossFadeAudioSource::dyn__inactiveAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::dyn__inactiveAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inactiveAudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<System.Single> _volumeDownTween
[[deprecated("Use field access instead!")]] ::Tweening::Tween_1<float>*& GlobalNamespace::CrossFadeAudioSource::dyn__volumeDownTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::dyn__volumeDownTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volumeDownTween"))->offset;
  return *reinterpret_cast<::Tweening::Tween_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<System.Single> _volumeUpTween
[[deprecated("Use field access instead!")]] ::Tweening::Tween_1<float>*& GlobalNamespace::CrossFadeAudioSource::dyn__volumeUpTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::dyn__volumeUpTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volumeUpTween"))->offset;
  return *reinterpret_cast<::Tweening::Tween_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioPitchGainEffect _activePitchGainEffect
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioPitchGainEffect*& GlobalNamespace::CrossFadeAudioSource::dyn__activePitchGainEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::dyn__activePitchGainEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activePitchGainEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioPitchGainEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioPitchGainEffect _inactivePitchGainEffect
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioPitchGainEffect*& GlobalNamespace::CrossFadeAudioSource::dyn__inactivePitchGainEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::dyn__inactivePitchGainEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inactivePitchGainEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioPitchGainEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CrossFadeAudioSource.get_clip
::UnityEngine::AudioClip* GlobalNamespace::CrossFadeAudioSource::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: CrossFadeAudioSource.set_clip
void GlobalNamespace::CrossFadeAudioSource::set_clip(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::set_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CrossFadeAudioSource.set_pitch
void GlobalNamespace::CrossFadeAudioSource::set_pitch(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::set_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CrossFadeAudioSource.set_time
void GlobalNamespace::CrossFadeAudioSource::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CrossFadeAudioSource.get_isPlaying
bool GlobalNamespace::CrossFadeAudioSource::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CrossFadeAudioSource.Awake
void GlobalNamespace::CrossFadeAudioSource::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CrossFadeAudioSource.OnDestroy
void GlobalNamespace::CrossFadeAudioSource::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CrossFadeAudioSource.PlayPitchGainEffect
void GlobalNamespace::CrossFadeAudioSource::PlayPitchGainEffect(float volumeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::PlayPitchGainEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayPitchGainEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volumeScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volumeScale);
}
// Autogenerated method: CrossFadeAudioSource.InterruptLastPitchGainEffect
void GlobalNamespace::CrossFadeAudioSource::InterruptLastPitchGainEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::InterruptLastPitchGainEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterruptLastPitchGainEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CrossFadeAudioSource.CrossFade
void GlobalNamespace::CrossFadeAudioSource::CrossFade(float toSongTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toSongTime), ::il2cpp_utils::ExtractType(toVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toSongTime, toVolume);
}
// Autogenerated method: CrossFadeAudioSource.Play
void GlobalNamespace::CrossFadeAudioSource::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CrossFadeAudioSource.Stop
void GlobalNamespace::CrossFadeAudioSource::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CrossFadeAudioSource.<Awake>b__21_0
void GlobalNamespace::CrossFadeAudioSource::$Awake$b__21_0(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::<Awake>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: CrossFadeAudioSource.<Awake>b__21_1
void GlobalNamespace::CrossFadeAudioSource::$Awake$b__21_1(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::<Awake>b__21_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: CrossFadeAudioSource.<CrossFade>b__25_0
void GlobalNamespace::CrossFadeAudioSource::$CrossFade$b__25_0(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::<CrossFade>b__25_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CrossFade>b__25_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: CrossFadeAudioSource.<CrossFade>b__25_1
void GlobalNamespace::CrossFadeAudioSource::$CrossFade$b__25_1(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::<CrossFade>b__25_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CrossFade>b__25_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: CrossFadeAudioSource.<CrossFade>b__25_2
void GlobalNamespace::CrossFadeAudioSource::$CrossFade$b__25_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrossFadeAudioSource::<CrossFade>b__25_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CrossFade>b__25_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisableSpatializerOnOldWindows
#include "GlobalNamespace/DisableSpatializerOnOldWindows.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::DisableSpatializerOnOldWindows::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableSpatializerOnOldWindows::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentAudioEffectsPlayer
#include "GlobalNamespace/EnvironmentAudioEffectsPlayer.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::EnvironmentAudioEffectsPlayer::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentAudioEffectsPlayer::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentAudioEffectsPlayer.get_audioSource
::UnityEngine::AudioSource* GlobalNamespace::EnvironmentAudioEffectsPlayer::get_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentAudioEffectsPlayer::get_audioSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioSource*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentAudioEffectsPlayer.PlayEffect
void GlobalNamespace::EnvironmentAudioEffectsPlayer::PlayEffect(::UnityEngine::AudioClip* clip, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentAudioEffectsPlayer::PlayEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip, volume);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentStartEndSongAudioEffect
#include "GlobalNamespace/EnvironmentStartEndSongAudioEffect.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: ILevelEndActions
#include "GlobalNamespace/ILevelEndActions.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: IGamePause
#include "GlobalNamespace/IGamePause.hpp"
// Including type: EnvironmentAudioEffectsPlayer
#include "GlobalNamespace/EnvironmentAudioEffectsPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSmallSongTime
float GlobalNamespace::EnvironmentStartEndSongAudioEffect::_get_kSmallSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::_get_kSmallSongTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "EnvironmentStartEndSongAudioEffect", "kSmallSongTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSmallSongTime
void GlobalNamespace::EnvironmentStartEndSongAudioEffect::_set_kSmallSongTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::_set_kSmallSongTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentStartEndSongAudioEffect", "kSmallSongTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _playStartSongForNonZeroStartSongTime
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__playStartSongForNonZeroStartSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__playStartSongForNonZeroStartSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playStartSongForNonZeroStartSongTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songFinishedAheadTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__songFinishedAheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__songFinishedAheadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songFinishedAheadTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songStartAudioClipVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__songStartAudioClipVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__songStartAudioClipVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songStartAudioClipVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songFinishedAudioClipVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__songFinishedAudioClipVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__songFinishedAudioClipVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songFinishedAudioClipVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songFailedAudioClipVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__songFailedAudioClipVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__songFailedAudioClipVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songFailedAudioClipVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _songStartAudioClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__songStartAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__songStartAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songStartAudioClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _songFinishedAudioClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__songFinishedAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__songFinishedAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songFinishedAudioClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _songFailedAudioClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__songFailedAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__songFailedAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songFailedAudioClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILevelEndActions _levelEndActions
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILevelEndActions*& GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__levelEndActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__levelEndActions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelEndActions"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILevelEndActions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSource
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAudioTimeSource*& GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__audioTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IGamePause _gamePause
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IGamePause*& GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__gamePause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__gamePause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gamePause"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IGamePause**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentAudioEffectsPlayer _audioEffectsPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentAudioEffectsPlayer*& GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__audioEffectsPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__audioEffectsPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioEffectsPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentAudioEffectsPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentContext _environmentContext
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentContext& GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__environmentContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__environmentContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentContext"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentContext*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _songFinishedPlayed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__songFinishedPlayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__songFinishedPlayed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songFinishedPlayed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isWaitingToPlayStartAudio
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__isWaitingToPlayStartAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::dyn__isWaitingToPlayStartAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isWaitingToPlayStartAudio"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentStartEndSongAudioEffect.Start
void GlobalNamespace::EnvironmentStartEndSongAudioEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentStartEndSongAudioEffect.OnDestroy
void GlobalNamespace::EnvironmentStartEndSongAudioEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentStartEndSongAudioEffect.Update
void GlobalNamespace::EnvironmentStartEndSongAudioEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentStartEndSongAudioEffect.LevelWillFinishWithinAheadTime
void GlobalNamespace::EnvironmentStartEndSongAudioEffect::LevelWillFinishWithinAheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::LevelWillFinishWithinAheadTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelWillFinishWithinAheadTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentStartEndSongAudioEffect.HandleLevelFailed
void GlobalNamespace::EnvironmentStartEndSongAudioEffect::HandleLevelFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::HandleLevelFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentStartEndSongAudioEffect.HandleGamePauseDidResume
void GlobalNamespace::EnvironmentStartEndSongAudioEffect::HandleGamePauseDidResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::HandleGamePauseDidResume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGamePauseDidResume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentStartEndSongAudioEffect.HandleGamePauseDidPause
void GlobalNamespace::EnvironmentStartEndSongAudioEffect::HandleGamePauseDidPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentStartEndSongAudioEffect::HandleGamePauseDidPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGamePauseDidPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FadeOutSongPreviewPlayerOnSceneTransitionStart
#include "GlobalNamespace/FadeOutSongPreviewPlayerOnSceneTransitionStart.hpp"
// Including type: AudioPlayerBase
#include "GlobalNamespace/AudioPlayerBase.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AudioPlayerBase _songPreviewPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioPlayerBase*& GlobalNamespace::FadeOutSongPreviewPlayerOnSceneTransitionStart::dyn__songPreviewPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutSongPreviewPlayerOnSceneTransitionStart::dyn__songPreviewPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPreviewPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioPlayerBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameScenesManager _gameScenesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameScenesManager*& GlobalNamespace::FadeOutSongPreviewPlayerOnSceneTransitionStart::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutSongPreviewPlayerOnSceneTransitionStart::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FadeOutSongPreviewPlayerOnSceneTransitionStart.Start
void GlobalNamespace::FadeOutSongPreviewPlayerOnSceneTransitionStart::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutSongPreviewPlayerOnSceneTransitionStart::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeOutSongPreviewPlayerOnSceneTransitionStart.OnDestroy
void GlobalNamespace::FadeOutSongPreviewPlayerOnSceneTransitionStart::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutSongPreviewPlayerOnSceneTransitionStart::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeOutSongPreviewPlayerOnSceneTransitionStart.HandleGameScenesManagerTransitionDidStart
void GlobalNamespace::FadeOutSongPreviewPlayerOnSceneTransitionStart::HandleGameScenesManagerTransitionDidStart(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutSongPreviewPlayerOnSceneTransitionStart::HandleGameScenesManagerTransitionDidStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameScenesManagerTransitionDidStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAudioTimeSource.get_songTime
float GlobalNamespace::IAudioTimeSource::get_songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAudioTimeSource::get_songTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IAudioTimeSource.get_lastFrameDeltaSongTime
float GlobalNamespace::IAudioTimeSource::get_lastFrameDeltaSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAudioTimeSource::get_lastFrameDeltaSongTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastFrameDeltaSongTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IAudioTimeSource.get_songEndTime
float GlobalNamespace::IAudioTimeSource::get_songEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAudioTimeSource::get_songEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IAudioTimeSource.get_songLength
float GlobalNamespace::IAudioTimeSource::get_songLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAudioTimeSource::get_songLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IAudioTimeSource.get_isReady
bool GlobalNamespace::IAudioTimeSource::get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAudioTimeSource::get_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainAudioEffects
#include "GlobalNamespace/MainAudioEffects.hpp"
// Including type: UnityEngine.AudioLowPassFilter
#include "UnityEngine/AudioLowPassFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kDefaultCutoffFrequency
int GlobalNamespace::MainAudioEffects::_get_kDefaultCutoffFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainAudioEffects::_get_kDefaultCutoffFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainAudioEffects", "kDefaultCutoffFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kDefaultCutoffFrequency
void GlobalNamespace::MainAudioEffects::_set_kDefaultCutoffFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainAudioEffects::_set_kDefaultCutoffFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainAudioEffects", "kDefaultCutoffFrequency", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kLowPassCutoffFrequency
int GlobalNamespace::MainAudioEffects::_get_kLowPassCutoffFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainAudioEffects::_get_kLowPassCutoffFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainAudioEffects", "kLowPassCutoffFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kLowPassCutoffFrequency
void GlobalNamespace::MainAudioEffects::_set_kLowPassCutoffFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainAudioEffects::_set_kLowPassCutoffFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainAudioEffects", "kLowPassCutoffFrequency", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioLowPassFilter _audioLowPassFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioLowPassFilter*& GlobalNamespace::MainAudioEffects::dyn__audioLowPassFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainAudioEffects::dyn__audioLowPassFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioLowPassFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioLowPassFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MainAudioEffects::dyn__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainAudioEffects::dyn__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _targetFrequency
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MainAudioEffects::dyn__targetFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainAudioEffects::dyn__targetFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetFrequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainAudioEffects.Start
void GlobalNamespace::MainAudioEffects::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainAudioEffects::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainAudioEffects.LateUpdate
void GlobalNamespace::MainAudioEffects::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainAudioEffects::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainAudioEffects.ResumeNormalSound
void GlobalNamespace::MainAudioEffects::ResumeNormalSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainAudioEffects::ResumeNormalSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResumeNormalSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainAudioEffects.TriggerLowPass
void GlobalNamespace::MainAudioEffects::TriggerLowPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainAudioEffects::TriggerLowPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerLowPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MockAudioTimeSource
#include "GlobalNamespace/MockAudioTimeSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <songTime>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MockAudioTimeSource::dyn_$songTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockAudioTimeSource::dyn_$songTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <lastFrameDeltaSongTime>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MockAudioTimeSource::dyn_$lastFrameDeltaSongTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockAudioTimeSource::dyn_$lastFrameDeltaSongTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lastFrameDeltaSongTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MockAudioTimeSource.get_songTime
float GlobalNamespace::MockAudioTimeSource::get_songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockAudioTimeSource::get_songTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MockAudioTimeSource.set_songTime
void GlobalNamespace::MockAudioTimeSource::set_songTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockAudioTimeSource::set_songTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_songTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockAudioTimeSource.get_lastFrameDeltaSongTime
float GlobalNamespace::MockAudioTimeSource::get_lastFrameDeltaSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockAudioTimeSource::get_lastFrameDeltaSongTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastFrameDeltaSongTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MockAudioTimeSource.set_lastFrameDeltaSongTime
void GlobalNamespace::MockAudioTimeSource::set_lastFrameDeltaSongTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockAudioTimeSource::set_lastFrameDeltaSongTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lastFrameDeltaSongTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockAudioTimeSource.get_songEndTime
float GlobalNamespace::MockAudioTimeSource::get_songEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockAudioTimeSource::get_songEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MockAudioTimeSource.get_songLength
float GlobalNamespace::MockAudioTimeSource::get_songLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockAudioTimeSource::get_songLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MockAudioTimeSource.get_isReady
bool GlobalNamespace::MockAudioTimeSource::get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockAudioTimeSource::get_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MockAudioTimeSource.Update
void GlobalNamespace::MockAudioTimeSource::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockAudioTimeSource::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoteCutSoundEffectDidFinishEvent
#include "GlobalNamespace/INoteCutSoundEffectDidFinishEvent.hpp"
// Including type: NoteCutSoundEffect
#include "GlobalNamespace/NoteCutSoundEffect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoteCutSoundEffectDidFinishEvent.HandleNoteCutSoundEffectDidFinish
void GlobalNamespace::INoteCutSoundEffectDidFinishEvent::HandleNoteCutSoundEffectDidFinish(::GlobalNamespace::NoteCutSoundEffect* noteCutSoundEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INoteCutSoundEffectDidFinishEvent::HandleNoteCutSoundEffectDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteCutSoundEffectDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteCutSoundEffect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteCutSoundEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutSoundEffect
#include "GlobalNamespace/NoteCutSoundEffect.hpp"
// Including type: NoteCutSoundEffect/Pool
#include "GlobalNamespace/NoteCutSoundEffect_Pool.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: RandomObjectPicker`1
#include "GlobalNamespace/RandomObjectPicker_1.hpp"
// Including type: LazyCopyHashSet`1
#include "GlobalNamespace/LazyCopyHashSet_1.hpp"
// Including type: INoteCutSoundEffectDidFinishEvent
#include "GlobalNamespace/INoteCutSoundEffectDidFinishEvent.hpp"
// Including type: ILazyCopyHashSet`1
#include "GlobalNamespace/ILazyCopyHashSet_1.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kEndOverlap
float GlobalNamespace::NoteCutSoundEffect::_get_kEndOverlap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::_get_kEndOverlap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteCutSoundEffect", "kEndOverlap"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kEndOverlap
void GlobalNamespace::NoteCutSoundEffect::_set_kEndOverlap(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::_set_kEndOverlap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutSoundEffect", "kEndOverlap", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kEndFadeLength
float GlobalNamespace::NoteCutSoundEffect::_get_kEndFadeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::_get_kEndFadeLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteCutSoundEffect", "kEndFadeLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kEndFadeLength
void GlobalNamespace::NoteCutSoundEffect::_set_kEndFadeLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::_set_kEndFadeLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutSoundEffect", "kEndFadeLength", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::NoteCutSoundEffect::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _speedToVolumeCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::NoteCutSoundEffect::dyn__speedToVolumeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__speedToVolumeCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speedToVolumeCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _badCutSoundEffectAudioClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::NoteCutSoundEffect::dyn__badCutSoundEffectAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__badCutSoundEffectAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_badCutSoundEffectAudioClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _badCutVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutSoundEffect::dyn__badCutVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__badCutVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_badCutVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _goodCutVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutSoundEffect::dyn__goodCutVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__goodCutVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_goodCutVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Saber _saber
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Saber*& GlobalNamespace::NoteCutSoundEffect::dyn__saber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__saber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saber"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Saber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteController _noteController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteController*& GlobalNamespace::NoteCutSoundEffect::dyn__noteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__noteController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isPlaying
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NoteCutSoundEffect::dyn__isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__isPlaying");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isPlaying"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _volumeMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutSoundEffect::dyn__volumeMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__volumeMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volumeMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _noteWasCut
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NoteCutSoundEffect::dyn__noteWasCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__noteWasCut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteWasCut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _aheadTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutSoundEffect::dyn__aheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__aheadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_aheadTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeToNextNote
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutSoundEffect::dyn__timeToNextNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__timeToNextNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeToNextNote"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeToPrevNote
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutSoundEffect::dyn__timeToPrevNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__timeToPrevNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeToPrevNote"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _startDSPTime
[[deprecated("Use field access instead!")]] double& GlobalNamespace::NoteCutSoundEffect::dyn__startDSPTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__startDSPTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startDSPTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _endDSPtime
[[deprecated("Use field access instead!")]] double& GlobalNamespace::NoteCutSoundEffect::dyn__endDSPtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__endDSPtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endDSPtime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _fadeOutStartDSPtime
[[deprecated("Use field access instead!")]] double& GlobalNamespace::NoteCutSoundEffect::dyn__fadeOutStartDSPtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__fadeOutStartDSPtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutStartDSPtime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteMissedTimeOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutSoundEffect::dyn__noteMissedTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__noteMissedTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteMissedTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _beforeCutVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutSoundEffect::dyn__beforeCutVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__beforeCutVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beforeCutVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _goodCut
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NoteCutSoundEffect::dyn__goodCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__goodCut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_goodCut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _pitch
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutSoundEffect::dyn__pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__pitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pitch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RandomObjectPicker`1<UnityEngine.AudioClip> _badCutRandomSoundPicker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RandomObjectPicker_1<::UnityEngine::AudioClip*>*& GlobalNamespace::NoteCutSoundEffect::dyn__badCutRandomSoundPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__badCutRandomSoundPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_badCutRandomSoundPicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RandomObjectPicker_1<::UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _handleWrongSaberTypeAsGood
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NoteCutSoundEffect::dyn__handleWrongSaberTypeAsGood() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__handleWrongSaberTypeAsGood");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handleWrongSaberTypeAsGood"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _ignoreSaberSpeed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NoteCutSoundEffect::dyn__ignoreSaberSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__ignoreSaberSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreSaberSpeed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _ignoreBadCuts
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NoteCutSoundEffect::dyn__ignoreBadCuts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__ignoreBadCuts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreBadCuts"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<INoteCutSoundEffectDidFinishEvent> _didFinishEvent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LazyCopyHashSet_1<::GlobalNamespace::INoteCutSoundEffectDidFinishEvent*>*& GlobalNamespace::NoteCutSoundEffect::dyn__didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::dyn__didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinishEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LazyCopyHashSet_1<::GlobalNamespace::INoteCutSoundEffectDidFinishEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteCutSoundEffect.get_didFinishEvent
::GlobalNamespace::ILazyCopyHashSet_1<::GlobalNamespace::INoteCutSoundEffectDidFinishEvent*>* GlobalNamespace::NoteCutSoundEffect::get_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::get_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ILazyCopyHashSet_1<::GlobalNamespace::INoteCutSoundEffectDidFinishEvent*>*, false>(this, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffect.get_volumeMultiplier
float GlobalNamespace::NoteCutSoundEffect::get_volumeMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::get_volumeMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_volumeMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffect.set_volumeMultiplier
void GlobalNamespace::NoteCutSoundEffect::set_volumeMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::set_volumeMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_volumeMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteCutSoundEffect.get_time
float GlobalNamespace::NoteCutSoundEffect::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffect.Awake
void GlobalNamespace::NoteCutSoundEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffect.Start
void GlobalNamespace::NoteCutSoundEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffect.Init
void GlobalNamespace::NoteCutSoundEffect::Init(::UnityEngine::AudioClip* audioClip, ::GlobalNamespace::NoteController* noteController, double noteDSPTime, float aheadTime, float missedTimeOffset, float timeToPrevNote, float timeToNextNote, ::GlobalNamespace::Saber* saber, bool handleWrongSaberTypeAsGood, float volumeMultiplier, bool ignoreSaberSpeed, bool ignoreBadCuts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip), ::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteDSPTime), ::il2cpp_utils::ExtractType(aheadTime), ::il2cpp_utils::ExtractType(missedTimeOffset), ::il2cpp_utils::ExtractType(timeToPrevNote), ::il2cpp_utils::ExtractType(timeToNextNote), ::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(handleWrongSaberTypeAsGood), ::il2cpp_utils::ExtractType(volumeMultiplier), ::il2cpp_utils::ExtractType(ignoreSaberSpeed), ::il2cpp_utils::ExtractType(ignoreBadCuts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioClip, noteController, noteDSPTime, aheadTime, missedTimeOffset, timeToPrevNote, timeToNextNote, saber, handleWrongSaberTypeAsGood, volumeMultiplier, ignoreSaberSpeed, ignoreBadCuts);
}
// Autogenerated method: NoteCutSoundEffect.ComputeDSPTimes
void GlobalNamespace::NoteCutSoundEffect::ComputeDSPTimes(double noteDSPTime, float aheadTime, float timeToPrevNote, float timeToNextNote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::ComputeDSPTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeDSPTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteDSPTime), ::il2cpp_utils::ExtractType(aheadTime), ::il2cpp_utils::ExtractType(timeToPrevNote), ::il2cpp_utils::ExtractType(timeToNextNote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteDSPTime, aheadTime, timeToPrevNote, timeToNextNote);
}
// Autogenerated method: NoteCutSoundEffect.LateUpdate
void GlobalNamespace::NoteCutSoundEffect::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffect.StopPlayingAndFinish
void GlobalNamespace::NoteCutSoundEffect::StopPlayingAndFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::StopPlayingAndFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopPlayingAndFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffect.NoteWasCut
void GlobalNamespace::NoteCutSoundEffect::NoteWasCut(::GlobalNamespace::NoteController* noteController, ByRef<::GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffect::NoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutSoundEffect/Pool
#include "GlobalNamespace/NoteCutSoundEffect_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutSoundEffectManager
#include "GlobalNamespace/NoteCutSoundEffectManager.hpp"
// Including type: NoteCutSoundEffectManager/InitData
#include "GlobalNamespace/NoteCutSoundEffectManager_InitData.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: RandomObjectPicker`1
#include "GlobalNamespace/RandomObjectPicker_1.hpp"
// Including type: MemoryPoolContainer`1
#include "GlobalNamespace/MemoryPoolContainer_1.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: NoteCutSoundEffect/Pool
#include "GlobalNamespace/NoteCutSoundEffect_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxNumberOfEffects
int GlobalNamespace::NoteCutSoundEffectManager::_get_kMaxNumberOfEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::_get_kMaxNumberOfEffects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NoteCutSoundEffectManager", "kMaxNumberOfEffects"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxNumberOfEffects
void GlobalNamespace::NoteCutSoundEffectManager::_set_kMaxNumberOfEffects(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::_set_kMaxNumberOfEffects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutSoundEffectManager", "kMaxNumberOfEffects", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kTwoNotesAtTheSameTimeVolumeMul
float GlobalNamespace::NoteCutSoundEffectManager::_get_kTwoNotesAtTheSameTimeVolumeMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::_get_kTwoNotesAtTheSameTimeVolumeMul");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteCutSoundEffectManager", "kTwoNotesAtTheSameTimeVolumeMul"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kTwoNotesAtTheSameTimeVolumeMul
void GlobalNamespace::NoteCutSoundEffectManager::_set_kTwoNotesAtTheSameTimeVolumeMul(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::_set_kTwoNotesAtTheSameTimeVolumeMul");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutSoundEffectManager", "kTwoNotesAtTheSameTimeVolumeMul", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kDenseNotesVolumeMul
float GlobalNamespace::NoteCutSoundEffectManager::_get_kDenseNotesVolumeMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::_get_kDenseNotesVolumeMul");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteCutSoundEffectManager", "kDenseNotesVolumeMul"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kDenseNotesVolumeMul
void GlobalNamespace::NoteCutSoundEffectManager::_set_kDenseNotesVolumeMul(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::_set_kDenseNotesVolumeMul");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutSoundEffectManager", "kDenseNotesVolumeMul", value));
}
// Autogenerated instance field getter
// Get instance field: private AudioManagerSO _audioManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioManagerSO*& GlobalNamespace::NoteCutSoundEffectManager::dyn__audioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__audioManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioManagerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _audioSamplesBeatAlignOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutSoundEffectManager::dyn__audioSamplesBeatAlignOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__audioSamplesBeatAlignOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSamplesBeatAlignOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _longCutEffectsAudioClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::NoteCutSoundEffectManager::dyn__longCutEffectsAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__longCutEffectsAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_longCutEffectsAudioClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _shortCutEffectsAudioClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::NoteCutSoundEffectManager::dyn__shortCutEffectsAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__shortCutEffectsAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shortCutEffectsAudioClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _testAudioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::NoteCutSoundEffectManager::dyn__testAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__testAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_testAudioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly NoteCutSoundEffectManager/InitData _initData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutSoundEffectManager::InitData*& GlobalNamespace::NoteCutSoundEffectManager::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutSoundEffectManager::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::NoteCutSoundEffectManager::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberManager _saberManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SaberManager*& GlobalNamespace::NoteCutSoundEffectManager::dyn__saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly NoteCutSoundEffect/Pool _noteCutSoundEffectPool
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutSoundEffect::Pool*& GlobalNamespace::NoteCutSoundEffectManager::dyn__noteCutSoundEffectPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__noteCutSoundEffectPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteCutSoundEffectPool"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutSoundEffect::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::NoteCutSoundEffectManager::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <handleWrongSaberTypeAsGood>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NoteCutSoundEffectManager::dyn_$handleWrongSaberTypeAsGood$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn_$handleWrongSaberTypeAsGood$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<handleWrongSaberTypeAsGood>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RandomObjectPicker`1<UnityEngine.AudioClip> _randomLongCutSoundPicker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RandomObjectPicker_1<::UnityEngine::AudioClip*>*& GlobalNamespace::NoteCutSoundEffectManager::dyn__randomLongCutSoundPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__randomLongCutSoundPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomLongCutSoundPicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RandomObjectPicker_1<::UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RandomObjectPicker`1<UnityEngine.AudioClip> _randomShortCutSoundPicker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RandomObjectPicker_1<::UnityEngine::AudioClip*>*& GlobalNamespace::NoteCutSoundEffectManager::dyn__randomShortCutSoundPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__randomShortCutSoundPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomShortCutSoundPicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RandomObjectPicker_1<::UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevNoteATime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutSoundEffectManager::dyn__prevNoteATime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__prevNoteATime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevNoteATime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevNoteBTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutSoundEffectManager::dyn__prevNoteBTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__prevNoteBTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevNoteBTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutSoundEffect _prevNoteASoundEffect
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutSoundEffect*& GlobalNamespace::NoteCutSoundEffectManager::dyn__prevNoteASoundEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__prevNoteASoundEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevNoteASoundEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutSoundEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutSoundEffect _prevNoteBSoundEffect
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutSoundEffect*& GlobalNamespace::NoteCutSoundEffectManager::dyn__prevNoteBSoundEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__prevNoteBSoundEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevNoteBSoundEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutSoundEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _beatAlignOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutSoundEffectManager::dyn__beatAlignOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__beatAlignOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatAlignOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useTestAudioClips
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NoteCutSoundEffectManager::dyn__useTestAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__useTestAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useTestAudioClips"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<NoteCutSoundEffect> _noteCutSoundEffectPoolContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::NoteCutSoundEffect*>*& GlobalNamespace::NoteCutSoundEffectManager::dyn__noteCutSoundEffectPoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::dyn__noteCutSoundEffectPoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteCutSoundEffectPoolContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::NoteCutSoundEffect*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteCutSoundEffectManager.get_handleWrongSaberTypeAsGood
bool GlobalNamespace::NoteCutSoundEffectManager::get_handleWrongSaberTypeAsGood() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::get_handleWrongSaberTypeAsGood");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handleWrongSaberTypeAsGood", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffectManager.set_handleWrongSaberTypeAsGood
void GlobalNamespace::NoteCutSoundEffectManager::set_handleWrongSaberTypeAsGood(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::set_handleWrongSaberTypeAsGood");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_handleWrongSaberTypeAsGood", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteCutSoundEffectManager.Start
void GlobalNamespace::NoteCutSoundEffectManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffectManager.OnDestroy
void GlobalNamespace::NoteCutSoundEffectManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffectManager.HandleNoteWasSpawned
void GlobalNamespace::NoteCutSoundEffectManager::HandleNoteWasSpawned(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::HandleNoteWasSpawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: NoteCutSoundEffectManager.HandleNoteWasCut
void GlobalNamespace::NoteCutSoundEffectManager::HandleNoteWasCut(::GlobalNamespace::NoteController* noteController, ByRef<::GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated method: NoteCutSoundEffectManager.HandleNoteCutSoundEffectDidFinish
void GlobalNamespace::NoteCutSoundEffectManager::HandleNoteCutSoundEffectDidFinish(::GlobalNamespace::NoteCutSoundEffect* noteCutSoundEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::HandleNoteCutSoundEffectDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteCutSoundEffectDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteCutSoundEffect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteCutSoundEffect);
}
// Autogenerated method: NoteCutSoundEffectManager.IsSupportedNote
bool GlobalNamespace::NoteCutSoundEffectManager::IsSupportedNote(::GlobalNamespace::NoteData* noteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::IsSupportedNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSupportedNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, noteData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutSoundEffectManager/InitData
#include "GlobalNamespace/NoteCutSoundEffectManager_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean useTestAudioClips
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NoteCutSoundEffectManager::InitData::dyn_useTestAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::InitData::dyn_useTestAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useTestAudioClips"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean ignoreBadCuts
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NoteCutSoundEffectManager::InitData::dyn_ignoreBadCuts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutSoundEffectManager::InitData::dyn_ignoreBadCuts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignoreBadCuts"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleSaberSoundEffect
#include "GlobalNamespace/ObstacleSaberSoundEffect.hpp"
// Including type: ObstacleSaberSparkleEffectManager
#include "GlobalNamespace/ObstacleSaberSparkleEffectManager.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSmooth
float GlobalNamespace::ObstacleSaberSoundEffect::_get_kSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSoundEffect::_get_kSmooth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ObstacleSaberSoundEffect", "kSmooth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSmooth
void GlobalNamespace::ObstacleSaberSoundEffect::_set_kSmooth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSoundEffect::_set_kSmooth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObstacleSaberSoundEffect", "kSmooth", value));
}
// Autogenerated instance field getter
// Get instance field: private ObstacleSaberSparkleEffectManager _obstacleSaberSparkleEffectManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObstacleSaberSparkleEffectManager*& GlobalNamespace::ObstacleSaberSoundEffect::dyn__obstacleSaberSparkleEffectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSoundEffect::dyn__obstacleSaberSparkleEffectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleSaberSparkleEffectManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObstacleSaberSparkleEffectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SaberType _saberType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SaberType& GlobalNamespace::ObstacleSaberSoundEffect::dyn__saberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSoundEffect::dyn__saberType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SaberType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::ObstacleSaberSoundEffect::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSoundEffect::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _volume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ObstacleSaberSoundEffect::dyn__volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSoundEffect::dyn__volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _targetVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ObstacleSaberSoundEffect::dyn__targetVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSoundEffect::dyn__targetVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObstacleSaberSoundEffect.Awake
void GlobalNamespace::ObstacleSaberSoundEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSoundEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleSaberSoundEffect.OnDestroy
void GlobalNamespace::ObstacleSaberSoundEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSoundEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleSaberSoundEffect.LateUpdate
void GlobalNamespace::ObstacleSaberSoundEffect::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSoundEffect::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleSaberSoundEffect.HandleSparkleEffectDidStart
void GlobalNamespace::ObstacleSaberSoundEffect::HandleSparkleEffectDidStart(::GlobalNamespace::SaberType saberType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSoundEffect::HandleSparkleEffectDidStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSparkleEffectDidStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saberType);
}
// Autogenerated method: ObstacleSaberSoundEffect.HandleSparkleEffecDidEnd
void GlobalNamespace::ObstacleSaberSoundEffect::HandleSparkleEffecDidEnd(::GlobalNamespace::SaberType saberType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSoundEffect::HandleSparkleEffecDidEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSparkleEffecDidEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saberType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayAudioOnGameEventController
#include "GlobalNamespace/PlayAudioOnGameEventController.hpp"
// Including type: PlayAudioOnGameEventController/EventAudioBinding
#include "GlobalNamespace/PlayAudioOnGameEventController_EventAudioBinding.hpp"
// Including type: AudioClipQueue
#include "GlobalNamespace/AudioClipQueue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AudioClipQueue _audioClipQueue
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioClipQueue*& GlobalNamespace::PlayAudioOnGameEventController::dyn__audioClipQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayAudioOnGameEventController::dyn__audioClipQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClipQueue"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioClipQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayAudioOnGameEventController/EventAudioBinding[] _eventAudioBindings
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding*>& GlobalNamespace::PlayAudioOnGameEventController::dyn__eventAudioBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayAudioOnGameEventController::dyn__eventAudioBindings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventAudioBindings"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayAudioOnGameEventController.Awake
void GlobalNamespace::PlayAudioOnGameEventController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayAudioOnGameEventController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayAudioOnGameEventController.OnDestroy
void GlobalNamespace::PlayAudioOnGameEventController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayAudioOnGameEventController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayAudioOnGameEventController/EventAudioBinding
#include "GlobalNamespace/PlayAudioOnGameEventController_EventAudioBinding.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: LocalizedAudioClipSO
#include "GlobalNamespace/LocalizedAudioClipSO.hpp"
// Including type: AudioClipQueue
#include "GlobalNamespace/AudioClipQueue.hpp"
// Including type: RandomObjectPicker`1
#include "GlobalNamespace/RandomObjectPicker_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Signal _signal
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Signal*& GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__signal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__signal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_signal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _delay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalizedAudioClipSO[] _localizedAudioClips
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::LocalizedAudioClipSO*>& GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__localizedAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__localizedAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localizedAudioClips"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::LocalizedAudioClipSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioClipQueue _audioClipQueue
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioClipQueue*& GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__audioClipQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__audioClipQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClipQueue"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioClipQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RandomObjectPicker`1<LocalizedAudioClipSO> _randomObjectPicker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RandomObjectPicker_1<::GlobalNamespace::LocalizedAudioClipSO*>*& GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__randomObjectPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__randomObjectPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomObjectPicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RandomObjectPicker_1<::GlobalNamespace::LocalizedAudioClipSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayAudioOnGameEventController/EventAudioBinding.Init
void GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::Init(::GlobalNamespace::AudioClipQueue* audioClipQueue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClipQueue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioClipQueue);
}
// Autogenerated method: PlayAudioOnGameEventController/EventAudioBinding.Deinit
void GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::Deinit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::Deinit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deinit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayAudioOnGameEventController/EventAudioBinding.HandleGameEvent
void GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::HandleGameEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::HandleGameEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResetPitchOnGameplayFinished
#include "GlobalNamespace/ResetPitchOnGameplayFinished.hpp"
// Including type: GameplayLevelSceneTransitionEvents
#include "GlobalNamespace/GameplayLevelSceneTransitionEvents.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly GameplayLevelSceneTransitionEvents _gameplayLevelSceneTransitionEvents
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayLevelSceneTransitionEvents*& GlobalNamespace::ResetPitchOnGameplayFinished::dyn__gameplayLevelSceneTransitionEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResetPitchOnGameplayFinished::dyn__gameplayLevelSceneTransitionEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayLevelSceneTransitionEvents"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayLevelSceneTransitionEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioManagerSO _audioManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioManagerSO*& GlobalNamespace::ResetPitchOnGameplayFinished::dyn__audioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResetPitchOnGameplayFinished::dyn__audioManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioManagerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResetPitchOnGameplayFinished.HandleAnyGameplayLevelDidFinish
void GlobalNamespace::ResetPitchOnGameplayFinished::HandleAnyGameplayLevelDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResetPitchOnGameplayFinished::HandleAnyGameplayLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAnyGameplayLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResetPitchOnGameplayFinished.Finalize
void GlobalNamespace::ResetPitchOnGameplayFinished::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResetPitchOnGameplayFinished::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleAudioPlayer
#include "GlobalNamespace/SimpleAudioPlayer.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _audioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::SimpleAudioPlayer::dyn__audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleAudioPlayer::dyn__audioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::SimpleAudioPlayer::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleAudioPlayer::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _targetVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleAudioPlayer::dyn__targetVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleAudioPlayer::dyn__targetVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _loop
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleAudioPlayer::dyn__loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleAudioPlayer::dyn__loop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleAudioPlayer::dyn__fadeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleAudioPlayer::dyn__fadeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fadingIn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SimpleAudioPlayer::dyn__fadingIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleAudioPlayer::dyn__fadingIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadingIn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleAudioPlayer.Start
void GlobalNamespace::SimpleAudioPlayer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleAudioPlayer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleAudioPlayer.Update
void GlobalNamespace::SimpleAudioPlayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleAudioPlayer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleAudioPlayer.FadeIn
void GlobalNamespace::SimpleAudioPlayer::FadeIn(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleAudioPlayer::FadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated method: SimpleAudioPlayer.get_activeAudioClip
::UnityEngine::AudioClip* GlobalNamespace::SimpleAudioPlayer::get_activeAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleAudioPlayer::get_activeAudioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: SimpleAudioPlayer.FadeOut
void GlobalNamespace::SimpleAudioPlayer::FadeOut(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleAudioPlayer::FadeOut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated method: SimpleAudioPlayer.PauseCurrentChannel
void GlobalNamespace::SimpleAudioPlayer::PauseCurrentChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleAudioPlayer::PauseCurrentChannel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseCurrentChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleAudioPlayer.UnPauseCurrentChannel
void GlobalNamespace::SimpleAudioPlayer::UnPauseCurrentChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleAudioPlayer::UnPauseCurrentChannel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnPauseCurrentChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: SongPreviewPlayer/InitData
#include "GlobalNamespace/SongPreviewPlayer_InitData.hpp"
// Including type: SongPreviewPlayer/AudioSourceParams
#include "GlobalNamespace/SongPreviewPlayer_AudioSourceParams.hpp"
// Including type: SongPreviewPlayer/AudioSourceVolumeController
#include "GlobalNamespace/SongPreviewPlayer_AudioSourceVolumeController.hpp"
// Including type: SongPreviewPlayer/<CrossFadeAfterDelayCoroutine>d__28
#include "GlobalNamespace/SongPreviewPlayer_-CrossFadeAfterDelayCoroutine-d__28.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _channelsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SongPreviewPlayer::dyn__channelsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__channelsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_channelsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSourcePrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::SongPreviewPlayer::dyn__audioSourcePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__audioSourcePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSourcePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _defaultAudioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::SongPreviewPlayer::dyn__defaultAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__defaultAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultAudioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _volume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongPreviewPlayer::dyn__volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _crossFadeToAnotherSongSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongPreviewPlayer::dyn__crossFadeToAnotherSongSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__crossFadeToAnotherSongSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_crossFadeToAnotherSongSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _crossFadeToDefaultSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongPreviewPlayer::dyn__crossFadeToDefaultSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__crossFadeToDefaultSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_crossFadeToDefaultSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeInSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongPreviewPlayer::dyn__fadeInSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__fadeInSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPreviewPlayer/AudioSourceParams _defaultAudioSourceParams
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPreviewPlayer::AudioSourceParams*& GlobalNamespace::SongPreviewPlayer::dyn__defaultAudioSourceParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__defaultAudioSourceParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultAudioSourceParams"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPreviewPlayer::AudioSourceParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPreviewPlayer/AudioSourceParams _othersAudioSourceParams
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPreviewPlayer::AudioSourceParams*& GlobalNamespace::SongPreviewPlayer::dyn__othersAudioSourceParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__othersAudioSourceParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_othersAudioSourceParams"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPreviewPlayer::AudioSourceParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPreviewPlayer/InitData _initData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPreviewPlayer::InitData*& GlobalNamespace::SongPreviewPlayer::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPreviewPlayer::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioManagerSO _audioManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioManagerSO*& GlobalNamespace::SongPreviewPlayer::dyn__audioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__audioManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioManagerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPreviewPlayer/AudioSourceVolumeController[] _audioSourceControllers
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController*>& GlobalNamespace::SongPreviewPlayer::dyn__audioSourceControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__audioSourceControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSourceControllers"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _activeChannel
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SongPreviewPlayer::dyn__activeChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__activeChannel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeChannel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeToDefaultAudioTransition
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongPreviewPlayer::dyn__timeToDefaultAudioTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__timeToDefaultAudioTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeToDefaultAudioTransition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _transitionAfterDelay
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SongPreviewPlayer::dyn__transitionAfterDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__transitionAfterDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionAfterDelay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _volumeScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongPreviewPlayer::dyn__volumeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__volumeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volumeScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongPreviewPlayer::dyn__fadeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__fadeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _ambientVolumeScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongPreviewPlayer::dyn__ambientVolumeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__ambientVolumeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ambientVolumeScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isActiveChannelPaused
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SongPreviewPlayer::dyn__isActiveChannelPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__isActiveChannelPaused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isActiveChannelPaused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Action> _channelToFadeOutCallbackDictionary
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::System::Action*>*& GlobalNamespace::SongPreviewPlayer::dyn__channelToFadeOutCallbackDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::dyn__channelToFadeOutCallbackDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_channelToFadeOutCallbackDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::System::Action*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPreviewPlayer.Awake
void GlobalNamespace::SongPreviewPlayer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.Start
void GlobalNamespace::SongPreviewPlayer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.OnEnable
void GlobalNamespace::SongPreviewPlayer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.CrossFadeAfterDelayCoroutine
::System::Collections::IEnumerator* GlobalNamespace::SongPreviewPlayer::CrossFadeAfterDelayCoroutine(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::CrossFadeAfterDelayCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeAfterDelayCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: SongPreviewPlayer.OnDisable
void GlobalNamespace::SongPreviewPlayer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.Update
void GlobalNamespace::SongPreviewPlayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.CrossfadeToDefault
void GlobalNamespace::SongPreviewPlayer::CrossfadeToDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::CrossfadeToDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossfadeToDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.CrossfadeToNewDefault
void GlobalNamespace::SongPreviewPlayer::CrossfadeToNewDefault(::UnityEngine::AudioClip* audioClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::CrossfadeToNewDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossfadeToNewDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioClip);
}
// Autogenerated method: SongPreviewPlayer.CrossfadeTo
void GlobalNamespace::SongPreviewPlayer::CrossfadeTo(::UnityEngine::AudioClip* audioClip, float musicVolume, float startTime, float duration, ::System::Action* onFadeOutCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::CrossfadeTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossfadeTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip), ::il2cpp_utils::ExtractType(musicVolume), ::il2cpp_utils::ExtractType(startTime), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(onFadeOutCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioClip, musicVolume, startTime, duration, onFadeOutCallback);
}
// Autogenerated method: SongPreviewPlayer.CrossfadeTo
void GlobalNamespace::SongPreviewPlayer::CrossfadeTo(::UnityEngine::AudioClip* audioClip, float musicVolume, float startTime, float duration, bool isDefault, ::System::Action* onFadeOutCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::CrossfadeTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossfadeTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip), ::il2cpp_utils::ExtractType(musicVolume), ::il2cpp_utils::ExtractType(startTime), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(isDefault), ::il2cpp_utils::ExtractType(onFadeOutCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioClip, musicVolume, startTime, duration, isDefault, onFadeOutCallback);
}
// Autogenerated method: SongPreviewPlayer.ReportChannelDidFadeOut
void GlobalNamespace::SongPreviewPlayer::ReportChannelDidFadeOut(int channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::ReportChannelDidFadeOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportChannelDidFadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channel);
}
// Autogenerated method: SongPreviewPlayer.get_activeAudioClip
::UnityEngine::AudioClip* GlobalNamespace::SongPreviewPlayer::get_activeAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::get_activeAudioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.PauseCurrentChannel
void GlobalNamespace::SongPreviewPlayer::PauseCurrentChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::PauseCurrentChannel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseCurrentChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.UnPauseCurrentChannel
void GlobalNamespace::SongPreviewPlayer::UnPauseCurrentChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::UnPauseCurrentChannel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnPauseCurrentChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.FadeOut
void GlobalNamespace::SongPreviewPlayer::FadeOut(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::FadeOut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPreviewPlayer/InitData
#include "GlobalNamespace/SongPreviewPlayer_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single ambientVolumeScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongPreviewPlayer::InitData::dyn_ambientVolumeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::InitData::dyn_ambientVolumeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ambientVolumeScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPreviewPlayer/AudioSourceParams
#include "GlobalNamespace/SongPreviewPlayer_AudioSourceParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SongPreviewPlayer::AudioSourceParams::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::AudioSourceParams::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _reverbZoneMix
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongPreviewPlayer::AudioSourceParams::dyn__reverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::AudioSourceParams::dyn__reverbZoneMix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reverbZoneMix"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spatialBlend
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongPreviewPlayer::AudioSourceParams::dyn__spatialBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::AudioSourceParams::dyn__spatialBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spatialBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spread
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongPreviewPlayer::AudioSourceParams::dyn__spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::AudioSourceParams::dyn__spread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPreviewPlayer/AudioSourceParams.get_position
::UnityEngine::Vector3 GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/AudioSourceParams.get_reverbZoneMix
float GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_reverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_reverbZoneMix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reverbZoneMix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/AudioSourceParams.get_spatialBlend
float GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_spatialBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_spatialBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spatialBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/AudioSourceParams.get_spread
float GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_spread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPreviewPlayer/AudioSourceVolumeController
#include "GlobalNamespace/SongPreviewPlayer_AudioSourceVolumeController.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <maxVolume>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::dyn_$maxVolume$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::dyn_$maxVolume$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<maxVolume>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _volume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::dyn__volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::dyn__volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPreviewPlayer/AudioSourceVolumeController.get_volume
float GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::get_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::get_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/AudioSourceVolumeController.set_volume
void GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::set_volume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::set_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongPreviewPlayer/AudioSourceVolumeController.get_maxVolume
float GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::get_maxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::get_maxVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/AudioSourceVolumeController.set_maxVolume
void GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::set_maxVolume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::set_maxVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPreviewPlayer/<CrossFadeAfterDelayCoroutine>d__28
#include "GlobalNamespace/SongPreviewPlayer_-CrossFadeAfterDelayCoroutine-d__28.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SongPreviewPlayer <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPreviewPlayer*& GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPreviewPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPreviewPlayer/<CrossFadeAfterDelayCoroutine>d__28.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/<CrossFadeAfterDelayCoroutine>d__28.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/<CrossFadeAfterDelayCoroutine>d__28.System.IDisposable.Dispose
void GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/<CrossFadeAfterDelayCoroutine>d__28.MoveNext
bool GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/<CrossFadeAfterDelayCoroutine>d__28.System.Collections.IEnumerator.Reset
void GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__28::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPreviewPlayerPauseOnInputFocusLost
#include "GlobalNamespace/SongPreviewPlayerPauseOnInputFocusLost.hpp"
// Including type: AudioPlayerBase
#include "GlobalNamespace/AudioPlayerBase.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AudioPlayerBase _songPreviewPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioPlayerBase*& GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::dyn__songPreviewPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::dyn__songPreviewPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPreviewPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioPlayerBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IVRPlatformHelper _vrPlatformHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPreviewPlayerPauseOnInputFocusLost.Start
void GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayerPauseOnInputFocusLost.OnDestroy
void GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayerPauseOnInputFocusLost.HandleInputFocusCaptured
void GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::HandleInputFocusCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::HandleInputFocusCaptured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFocusCaptured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPreviewPlayerPauseOnInputFocusLost.HandleInputFocusReleased
void GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::HandleInputFocusReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::HandleInputFocusReleased");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFocusReleased", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongTimeFixedUpdateController
#include "GlobalNamespace/SongTimeFixedUpdateController.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kFixedDeltaTime
float GlobalNamespace::SongTimeFixedUpdateController::_get_kFixedDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeFixedUpdateController::_get_kFixedDeltaTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SongTimeFixedUpdateController", "kFixedDeltaTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kFixedDeltaTime
void GlobalNamespace::SongTimeFixedUpdateController::_set_kFixedDeltaTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeFixedUpdateController::_set_kFixedDeltaTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongTimeFixedUpdateController", "kFixedDeltaTime", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSource
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAudioTimeSource*& GlobalNamespace::SongTimeFixedUpdateController::dyn__audioTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeFixedUpdateController::dyn__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> songControllerFixedTimeDidUpdateEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& GlobalNamespace::SongTimeFixedUpdateController::dyn_songControllerFixedTimeDidUpdateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeFixedUpdateController::dyn_songControllerFixedTimeDidUpdateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songControllerFixedTimeDidUpdateEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action songControllerTimeDidUpdateEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::SongTimeFixedUpdateController::dyn_songControllerTimeDidUpdateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeFixedUpdateController::dyn_songControllerTimeDidUpdateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songControllerTimeDidUpdateEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _accumulator
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongTimeFixedUpdateController::dyn__accumulator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeFixedUpdateController::dyn__accumulator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_accumulator"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _interpolationFactor
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongTimeFixedUpdateController::dyn__interpolationFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeFixedUpdateController::dyn__interpolationFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interpolationFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongTimeFixedUpdateController.get_fixedDeltaTime
float GlobalNamespace::SongTimeFixedUpdateController::get_fixedDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeFixedUpdateController::get_fixedDeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fixedDeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SongTimeFixedUpdateController.get_interpolationFactor
float GlobalNamespace::SongTimeFixedUpdateController::get_interpolationFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeFixedUpdateController::get_interpolationFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interpolationFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SongTimeFixedUpdateController.add_songControllerFixedTimeDidUpdateEvent
void GlobalNamespace::SongTimeFixedUpdateController::add_songControllerFixedTimeDidUpdateEvent(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeFixedUpdateController::add_songControllerFixedTimeDidUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_songControllerFixedTimeDidUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongTimeFixedUpdateController.remove_songControllerFixedTimeDidUpdateEvent
void GlobalNamespace::SongTimeFixedUpdateController::remove_songControllerFixedTimeDidUpdateEvent(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeFixedUpdateController::remove_songControllerFixedTimeDidUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_songControllerFixedTimeDidUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongTimeFixedUpdateController.add_songControllerTimeDidUpdateEvent
void GlobalNamespace::SongTimeFixedUpdateController::add_songControllerTimeDidUpdateEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeFixedUpdateController::add_songControllerTimeDidUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_songControllerTimeDidUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongTimeFixedUpdateController.remove_songControllerTimeDidUpdateEvent
void GlobalNamespace::SongTimeFixedUpdateController::remove_songControllerTimeDidUpdateEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeFixedUpdateController::remove_songControllerTimeDidUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_songControllerTimeDidUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongTimeFixedUpdateController.Update
void GlobalNamespace::SongTimeFixedUpdateController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeFixedUpdateController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AnimatedAvatarPoseController
#include "GlobalNamespace/AnimatedAvatarPoseController.hpp"
// Including type: AvatarPoseController
#include "GlobalNamespace/AvatarPoseController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPoseController _avatarPoseController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPoseController*& GlobalNamespace::AnimatedAvatarPoseController::dyn__avatarPoseController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnimatedAvatarPoseController::dyn__avatarPoseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPoseController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPoseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AnimatedAvatarPoseController.LateUpdate
void GlobalNamespace::AnimatedAvatarPoseController::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnimatedAvatarPoseController::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarColorPropertyIds
#include "GlobalNamespace/AvatarColorPropertyIds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D9A1C
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 colorPropertyId
int GlobalNamespace::AvatarColorPropertyIds::_get_colorPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorPropertyIds::_get_colorPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AvatarColorPropertyIds", "colorPropertyId"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 colorPropertyId
void GlobalNamespace::AvatarColorPropertyIds::_set_colorPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorPropertyIds::_set_colorPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AvatarColorPropertyIds", "colorPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D9A2C
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 rimLightColorPropertyId
int GlobalNamespace::AvatarColorPropertyIds::_get_rimLightColorPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorPropertyIds::_get_rimLightColorPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AvatarColorPropertyIds", "rimLightColorPropertyId"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 rimLightColorPropertyId
void GlobalNamespace::AvatarColorPropertyIds::_set_rimLightColorPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorPropertyIds::_set_rimLightColorPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AvatarColorPropertyIds", "rimLightColorPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D9A3C
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 uvColorsPropertyId
int GlobalNamespace::AvatarColorPropertyIds::_get_uvColorsPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorPropertyIds::_get_uvColorsPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AvatarColorPropertyIds", "uvColorsPropertyId"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 uvColorsPropertyId
void GlobalNamespace::AvatarColorPropertyIds::_set_uvColorsPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorPropertyIds::_set_uvColorsPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AvatarColorPropertyIds", "uvColorsPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D9A4C
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 uvRimLightColorsPropertyId
int GlobalNamespace::AvatarColorPropertyIds::_get_uvRimLightColorsPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorPropertyIds::_get_uvRimLightColorsPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AvatarColorPropertyIds", "uvRimLightColorsPropertyId"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 uvRimLightColorsPropertyId
void GlobalNamespace::AvatarColorPropertyIds::_set_uvRimLightColorsPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorPropertyIds::_set_uvRimLightColorsPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AvatarColorPropertyIds", "uvRimLightColorsPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D9A5C
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 segmentToHighlightPropertyId
int GlobalNamespace::AvatarColorPropertyIds::_get_segmentToHighlightPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorPropertyIds::_get_segmentToHighlightPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AvatarColorPropertyIds", "segmentToHighlightPropertyId"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 segmentToHighlightPropertyId
void GlobalNamespace::AvatarColorPropertyIds::_set_segmentToHighlightPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorPropertyIds::_set_segmentToHighlightPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AvatarColorPropertyIds", "segmentToHighlightPropertyId", value));
}
// Autogenerated method: AvatarColorPropertyIds..cctor
void GlobalNamespace::AvatarColorPropertyIds::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorPropertyIds::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AvatarColorPropertyIds", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarHeadOffset
#include "GlobalNamespace/AvatarHeadOffset.hpp"
// Including type: AvatarPoseController
#include "GlobalNamespace/AvatarPoseController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _positionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AvatarHeadOffset::dyn__positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarHeadOffset::dyn__positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPoseController _avatarPoseController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPoseController*& GlobalNamespace::AvatarHeadOffset::dyn__avatarPoseController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarHeadOffset::dyn__avatarPoseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPoseController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPoseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarHeadOffset.Start
void GlobalNamespace::AvatarHeadOffset::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarHeadOffset::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarHeadOffset.OnDestroy
void GlobalNamespace::AvatarHeadOffset::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarHeadOffset::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarHeadOffset.HandleMultiplayerAvatarPoseControllerDidUpdatePose
void GlobalNamespace::AvatarHeadOffset::HandleMultiplayerAvatarPoseControllerDidUpdatePose(::UnityEngine::Vector3 headLocalPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarHeadOffset::HandleMultiplayerAvatarPoseControllerDidUpdatePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerAvatarPoseControllerDidUpdatePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headLocalPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headLocalPosition);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarPoseController
#include "GlobalNamespace/AvatarPoseController.hpp"
// Including type: AvatarPoseController/PositionsWillBeSetDelegate
#include "GlobalNamespace/AvatarPoseController_PositionsWillBeSetDelegate.hpp"
// Including type: AvatarPoseController/LatePositionsWillBeSetDelegate
#include "GlobalNamespace/AvatarPoseController_LatePositionsWillBeSetDelegate.hpp"
// Including type: AvatarPoseController/RotationsWillBeSetDelegate
#include "GlobalNamespace/AvatarPoseController_RotationsWillBeSetDelegate.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: HeadBodyOffsetSO
#include "GlobalNamespace/HeadBodyOffsetSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform _headTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AvatarPoseController::dyn__headTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::dyn__headTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform _leftHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AvatarPoseController::dyn__leftHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::dyn__leftHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform _rightHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AvatarPoseController::dyn__rightHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::dyn__rightHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform _bodyTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AvatarPoseController::dyn__bodyTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::dyn__bodyTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bodyTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected HeadBodyOffsetSO _headBodyOffset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HeadBodyOffsetSO*& GlobalNamespace::AvatarPoseController::dyn__headBodyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::dyn__headBodyOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headBodyOffset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HeadBodyOffsetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarPoseController/PositionsWillBeSetDelegate <earlyPositionsWillBeSetCallback>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate*& GlobalNamespace::AvatarPoseController::dyn_$earlyPositionsWillBeSetCallback$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::dyn_$earlyPositionsWillBeSetCallback$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<earlyPositionsWillBeSetCallback>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarPoseController/LatePositionsWillBeSetDelegate <latePositionsWillBeSetCallback>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate*& GlobalNamespace::AvatarPoseController::dyn_$latePositionsWillBeSetCallback$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::dyn_$latePositionsWillBeSetCallback$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<latePositionsWillBeSetCallback>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarPoseController/RotationsWillBeSetDelegate <earlyRotationsWillBeSetCallback>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate*& GlobalNamespace::AvatarPoseController::dyn_$earlyRotationsWillBeSetCallback$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::dyn_$earlyRotationsWillBeSetCallback$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<earlyRotationsWillBeSetCallback>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Vector3> didUpdatePoseEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Vector3>*& GlobalNamespace::AvatarPoseController::dyn_didUpdatePoseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::dyn_didUpdatePoseEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didUpdatePoseEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarPoseController.get_earlyPositionsWillBeSetCallback
::GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate* GlobalNamespace::AvatarPoseController::get_earlyPositionsWillBeSetCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::get_earlyPositionsWillBeSetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_earlyPositionsWillBeSetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPoseController.set_earlyPositionsWillBeSetCallback
void GlobalNamespace::AvatarPoseController::set_earlyPositionsWillBeSetCallback(::GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::set_earlyPositionsWillBeSetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_earlyPositionsWillBeSetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarPoseController.get_latePositionsWillBeSetCallback
::GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate* GlobalNamespace::AvatarPoseController::get_latePositionsWillBeSetCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::get_latePositionsWillBeSetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_latePositionsWillBeSetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPoseController.set_latePositionsWillBeSetCallback
void GlobalNamespace::AvatarPoseController::set_latePositionsWillBeSetCallback(::GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::set_latePositionsWillBeSetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_latePositionsWillBeSetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarPoseController.get_earlyRotationsWillBeSetCallback
::GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate* GlobalNamespace::AvatarPoseController::get_earlyRotationsWillBeSetCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::get_earlyRotationsWillBeSetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_earlyRotationsWillBeSetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPoseController.set_earlyRotationsWillBeSetCallback
void GlobalNamespace::AvatarPoseController::set_earlyRotationsWillBeSetCallback(::GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::set_earlyRotationsWillBeSetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_earlyRotationsWillBeSetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarPoseController.add_didUpdatePoseEvent
void GlobalNamespace::AvatarPoseController::add_didUpdatePoseEvent(::System::Action_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::add_didUpdatePoseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didUpdatePoseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarPoseController.remove_didUpdatePoseEvent
void GlobalNamespace::AvatarPoseController::remove_didUpdatePoseEvent(::System::Action_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::remove_didUpdatePoseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didUpdatePoseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarPoseController.UpdateTransforms
void GlobalNamespace::AvatarPoseController::UpdateTransforms(::UnityEngine::Vector3 headPosition, ::UnityEngine::Vector3 leftHandPosition, ::UnityEngine::Vector3 rightHandPosition, ::UnityEngine::Quaternion headRotation, ::UnityEngine::Quaternion leftHandRotation, ::UnityEngine::Quaternion rightHandRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::UpdateTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headPosition), ::il2cpp_utils::ExtractType(leftHandPosition), ::il2cpp_utils::ExtractType(rightHandPosition), ::il2cpp_utils::ExtractType(headRotation), ::il2cpp_utils::ExtractType(leftHandRotation), ::il2cpp_utils::ExtractType(rightHandRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headPosition, leftHandPosition, rightHandPosition, headRotation, leftHandRotation, rightHandRotation);
}
// Autogenerated method: AvatarPoseController.UpdateBodyPosition
void GlobalNamespace::AvatarPoseController::UpdateBodyPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::UpdateBodyPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBodyPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarPoseController/PositionsWillBeSetDelegate
#include "GlobalNamespace/AvatarPoseController_PositionsWillBeSetDelegate.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarPoseController/PositionsWillBeSetDelegate.Invoke
void GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate::Invoke(::UnityEngine::Vector3 headPosition, ::UnityEngine::Vector3 leftHandPosition, ::UnityEngine::Vector3 rightHandPosition, ByRef<::UnityEngine::Vector3> newHeadPosition, ByRef<::UnityEngine::Vector3> newLeftHandPosition, ByRef<::UnityEngine::Vector3> newRightHandPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headPosition), ::il2cpp_utils::ExtractType(leftHandPosition), ::il2cpp_utils::ExtractType(rightHandPosition), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headPosition, leftHandPosition, rightHandPosition, byref(newHeadPosition), byref(newLeftHandPosition), byref(newRightHandPosition));
}
// Autogenerated method: AvatarPoseController/PositionsWillBeSetDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate::BeginInvoke(::UnityEngine::Vector3 headPosition, ::UnityEngine::Vector3 leftHandPosition, ::UnityEngine::Vector3 rightHandPosition, ByRef<::UnityEngine::Vector3> newHeadPosition, ByRef<::UnityEngine::Vector3> newLeftHandPosition, ByRef<::UnityEngine::Vector3> newRightHandPosition, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headPosition), ::il2cpp_utils::ExtractType(leftHandPosition), ::il2cpp_utils::ExtractType(rightHandPosition), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, headPosition, leftHandPosition, rightHandPosition, byref(newHeadPosition), byref(newLeftHandPosition), byref(newRightHandPosition), callback, object);
}
// Autogenerated method: AvatarPoseController/PositionsWillBeSetDelegate.EndInvoke
void GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate::EndInvoke(ByRef<::UnityEngine::Vector3> newHeadPosition, ByRef<::UnityEngine::Vector3> newLeftHandPosition, ByRef<::UnityEngine::Vector3> newRightHandPosition, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(newHeadPosition), byref(newLeftHandPosition), byref(newRightHandPosition), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarPoseController/LatePositionsWillBeSetDelegate
#include "GlobalNamespace/AvatarPoseController_LatePositionsWillBeSetDelegate.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarPoseController/LatePositionsWillBeSetDelegate.Invoke
void GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate::Invoke(::UnityEngine::Quaternion headRotation, ::UnityEngine::Vector3 headPosition, ::UnityEngine::Vector3 leftHandPosition, ::UnityEngine::Vector3 rightHandPosition, ByRef<::UnityEngine::Vector3> newHeadPosition, ByRef<::UnityEngine::Vector3> newLeftHandPosition, ByRef<::UnityEngine::Vector3> newRightHandPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headRotation), ::il2cpp_utils::ExtractType(headPosition), ::il2cpp_utils::ExtractType(leftHandPosition), ::il2cpp_utils::ExtractType(rightHandPosition), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headRotation, headPosition, leftHandPosition, rightHandPosition, byref(newHeadPosition), byref(newLeftHandPosition), byref(newRightHandPosition));
}
// Autogenerated method: AvatarPoseController/LatePositionsWillBeSetDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate::BeginInvoke(::UnityEngine::Quaternion headRotation, ::UnityEngine::Vector3 headPosition, ::UnityEngine::Vector3 leftHandPosition, ::UnityEngine::Vector3 rightHandPosition, ByRef<::UnityEngine::Vector3> newHeadPosition, ByRef<::UnityEngine::Vector3> newLeftHandPosition, ByRef<::UnityEngine::Vector3> newRightHandPosition, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headRotation), ::il2cpp_utils::ExtractType(headPosition), ::il2cpp_utils::ExtractType(leftHandPosition), ::il2cpp_utils::ExtractType(rightHandPosition), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, headRotation, headPosition, leftHandPosition, rightHandPosition, byref(newHeadPosition), byref(newLeftHandPosition), byref(newRightHandPosition), callback, object);
}
// Autogenerated method: AvatarPoseController/LatePositionsWillBeSetDelegate.EndInvoke
void GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate::EndInvoke(ByRef<::UnityEngine::Vector3> newHeadPosition, ByRef<::UnityEngine::Vector3> newLeftHandPosition, ByRef<::UnityEngine::Vector3> newRightHandPosition, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(newHeadPosition), byref(newLeftHandPosition), byref(newRightHandPosition), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarPoseController/RotationsWillBeSetDelegate
#include "GlobalNamespace/AvatarPoseController_RotationsWillBeSetDelegate.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarPoseController/RotationsWillBeSetDelegate.Invoke
void GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate::Invoke(::UnityEngine::Quaternion headRotation, ::UnityEngine::Quaternion leftHandRotation, ::UnityEngine::Quaternion rightHandRotation, ByRef<::UnityEngine::Quaternion> newHeadRotation, ByRef<::UnityEngine::Quaternion> newLeftHandRotation, ByRef<::UnityEngine::Quaternion> newRightHandRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headRotation), ::il2cpp_utils::ExtractType(leftHandRotation), ::il2cpp_utils::ExtractType(rightHandRotation), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headRotation, leftHandRotation, rightHandRotation, byref(newHeadRotation), byref(newLeftHandRotation), byref(newRightHandRotation));
}
// Autogenerated method: AvatarPoseController/RotationsWillBeSetDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate::BeginInvoke(::UnityEngine::Quaternion headRotation, ::UnityEngine::Quaternion leftHandRotation, ::UnityEngine::Quaternion rightHandRotation, ByRef<::UnityEngine::Quaternion> newHeadRotation, ByRef<::UnityEngine::Quaternion> newLeftHandRotation, ByRef<::UnityEngine::Quaternion> newRightHandRotation, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headRotation), ::il2cpp_utils::ExtractType(leftHandRotation), ::il2cpp_utils::ExtractType(rightHandRotation), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, headRotation, leftHandRotation, rightHandRotation, byref(newHeadRotation), byref(newLeftHandRotation), byref(newRightHandRotation), callback, object);
}
// Autogenerated method: AvatarPoseController/RotationsWillBeSetDelegate.EndInvoke
void GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate::EndInvoke(ByRef<::UnityEngine::Quaternion> newHeadRotation, ByRef<::UnityEngine::Quaternion> newLeftHandRotation, ByRef<::UnityEngine::Quaternion> newRightHandRotation, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(newHeadRotation), byref(newLeftHandRotation), byref(newRightHandRotation), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarPoseMirror
#include "GlobalNamespace/AvatarPoseMirror.hpp"
// Including type: AvatarPoseController
#include "GlobalNamespace/AvatarPoseController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPoseController _avatarPoseController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPoseController*& GlobalNamespace::AvatarPoseMirror::dyn__avatarPoseController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseMirror::dyn__avatarPoseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPoseController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPoseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarPoseMirror.Start
void GlobalNamespace::AvatarPoseMirror::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseMirror::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPoseMirror.HandleAvatarPoseControllerPositionsWillBeSet
void GlobalNamespace::AvatarPoseMirror::HandleAvatarPoseControllerPositionsWillBeSet(::UnityEngine::Vector3 headPosition, ::UnityEngine::Vector3 leftHandPosition, ::UnityEngine::Vector3 rightHandPosition, ByRef<::UnityEngine::Vector3> newHeadPosition, ByRef<::UnityEngine::Vector3> newLeftHandPosition, ByRef<::UnityEngine::Vector3> newRightHandPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseMirror::HandleAvatarPoseControllerPositionsWillBeSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AvatarPoseMirror", "HandleAvatarPoseControllerPositionsWillBeSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headPosition), ::il2cpp_utils::ExtractType(leftHandPosition), ::il2cpp_utils::ExtractType(rightHandPosition), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, headPosition, leftHandPosition, rightHandPosition, byref(newHeadPosition), byref(newLeftHandPosition), byref(newRightHandPosition));
}
// Autogenerated method: AvatarPoseMirror.HandleAvatarPoseControllerRotationsWillBeSet
void GlobalNamespace::AvatarPoseMirror::HandleAvatarPoseControllerRotationsWillBeSet(::UnityEngine::Quaternion headRotation, ::UnityEngine::Quaternion leftHandRotation, ::UnityEngine::Quaternion rightHandRotation, ByRef<::UnityEngine::Quaternion> newHeadRotation, ByRef<::UnityEngine::Quaternion> newLeftHandRotation, ByRef<::UnityEngine::Quaternion> newRightHandRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseMirror::HandleAvatarPoseControllerRotationsWillBeSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AvatarPoseMirror", "HandleAvatarPoseControllerRotationsWillBeSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headRotation), ::il2cpp_utils::ExtractType(leftHandRotation), ::il2cpp_utils::ExtractType(rightHandRotation), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, headRotation, leftHandRotation, rightHandRotation, byref(newHeadRotation), byref(newLeftHandRotation), byref(newRightHandRotation));
}
// Autogenerated method: AvatarPoseMirror.MirrorRotation
::UnityEngine::Quaternion GlobalNamespace::AvatarPoseMirror::MirrorRotation(::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseMirror::MirrorRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AvatarPoseMirror", "MirrorRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rotation);
}
// Autogenerated method: AvatarPoseMirror.MirrorPosition
::UnityEngine::Vector3 GlobalNamespace::AvatarPoseMirror::MirrorPosition(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseMirror::MirrorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AvatarPoseMirror", "MirrorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarPoseRestrictions
#include "GlobalNamespace/AvatarPoseRestrictions.hpp"
// Including type: AvatarPoseController
#include "GlobalNamespace/AvatarPoseController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _maxHeadSquareDistanceFromCenter
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarPoseRestrictions::dyn__maxHeadSquareDistanceFromCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseRestrictions::dyn__maxHeadSquareDistanceFromCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxHeadSquareDistanceFromCenter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minHeadYPos
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarPoseRestrictions::dyn__minHeadYPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseRestrictions::dyn__minHeadYPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minHeadYPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxHeadYPos
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarPoseRestrictions::dyn__maxHeadYPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseRestrictions::dyn__maxHeadYPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxHeadYPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minHandXZSquareDistanceFromHeadCenter
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarPoseRestrictions::dyn__minHandXZSquareDistanceFromHeadCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseRestrictions::dyn__minHandXZSquareDistanceFromHeadCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minHandXZSquareDistanceFromHeadCenter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxHandXZSquareDistanceFromHeadCenter
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarPoseRestrictions::dyn__maxHandXZSquareDistanceFromHeadCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseRestrictions::dyn__maxHandXZSquareDistanceFromHeadCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxHandXZSquareDistanceFromHeadCenter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minHandYDistanceFromHeadCenter
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarPoseRestrictions::dyn__minHandYDistanceFromHeadCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseRestrictions::dyn__minHandYDistanceFromHeadCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minHandYDistanceFromHeadCenter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxHandYDistanceFromHeadCenter
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarPoseRestrictions::dyn__maxHandYDistanceFromHeadCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseRestrictions::dyn__maxHandYDistanceFromHeadCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxHandYDistanceFromHeadCenter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _forceHeadPosition
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AvatarPoseRestrictions::dyn__forceHeadPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseRestrictions::dyn__forceHeadPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forceHeadPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _centerHeadOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AvatarPoseRestrictions::dyn__centerHeadOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseRestrictions::dyn__centerHeadOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerHeadOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPoseController _avatarPoseController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPoseController*& GlobalNamespace::AvatarPoseRestrictions::dyn__avatarPoseController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseRestrictions::dyn__avatarPoseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPoseController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPoseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarPoseRestrictions.Start
void GlobalNamespace::AvatarPoseRestrictions::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseRestrictions::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPoseRestrictions.HandleAvatarPoseControllerPositionsWillBeSet
void GlobalNamespace::AvatarPoseRestrictions::HandleAvatarPoseControllerPositionsWillBeSet(::UnityEngine::Quaternion headRotation, ::UnityEngine::Vector3 headPosition, ::UnityEngine::Vector3 leftHandPosition, ::UnityEngine::Vector3 rightHandPosition, ByRef<::UnityEngine::Vector3> newHeadPosition, ByRef<::UnityEngine::Vector3> newLeftHandPosition, ByRef<::UnityEngine::Vector3> newRightHandPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseRestrictions::HandleAvatarPoseControllerPositionsWillBeSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAvatarPoseControllerPositionsWillBeSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headRotation), ::il2cpp_utils::ExtractType(headPosition), ::il2cpp_utils::ExtractType(leftHandPosition), ::il2cpp_utils::ExtractType(rightHandPosition), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headRotation, headPosition, leftHandPosition, rightHandPosition, byref(newHeadPosition), byref(newLeftHandPosition), byref(newRightHandPosition));
}
// Autogenerated method: AvatarPoseRestrictions.LimitHandPositionRelativeToHead
::UnityEngine::Vector3 GlobalNamespace::AvatarPoseRestrictions::LimitHandPositionRelativeToHead(::UnityEngine::Vector3 handPosition, ::UnityEngine::Vector3 headCenter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPoseRestrictions::LimitHandPositionRelativeToHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LimitHandPositionRelativeToHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handPosition), ::il2cpp_utils::ExtractType(headCenter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, handPosition, headCenter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarPropertyBlockColorSetter
#include "GlobalNamespace/AvatarPropertyBlockColorSetter.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D9C94
// Autogenerated static field getter
// Get static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
::UnityEngine::MaterialPropertyBlock* GlobalNamespace::AvatarPropertyBlockColorSetter::_get__materialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::_get__materialPropertyBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MaterialPropertyBlock*>("", "AvatarPropertyBlockColorSetter", "_materialPropertyBlock"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
void GlobalNamespace::AvatarPropertyBlockColorSetter::_set__materialPropertyBlock(::UnityEngine::MaterialPropertyBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::_set__materialPropertyBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AvatarPropertyBlockColorSetter", "_materialPropertyBlock", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _defaultColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__defaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__defaultColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _darkerColorMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__darkerColorMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__darkerColorMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_darkerColorMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _whiteBoost
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__whiteBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__whiteBoost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whiteBoost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _editInPlayMode
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__editInPlayMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__editInPlayMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editInPlayMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _rimLightColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__rimLightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__rimLightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rimLightColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _mainColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__mainColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__mainColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _boostColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__boostColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__boostColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boostColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _highlighted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__highlighted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlighted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarPropertyBlockColorSetter.Awake
void GlobalNamespace::AvatarPropertyBlockColorSetter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPropertyBlockColorSetter.OnValidate
void GlobalNamespace::AvatarPropertyBlockColorSetter::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPropertyBlockColorSetter.SetColor
void GlobalNamespace::AvatarPropertyBlockColorSetter::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: AvatarPropertyBlockColorSetter.SetColors
void GlobalNamespace::AvatarPropertyBlockColorSetter::SetColors(::UnityEngine::Color mainColor, ::UnityEngine::Color rimLightColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainColor), ::il2cpp_utils::ExtractType(rimLightColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainColor, rimLightColor);
}
// Autogenerated method: AvatarPropertyBlockColorSetter.SetHighlight
void GlobalNamespace::AvatarPropertyBlockColorSetter::SetHighlight(bool highlighted, int uvSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::SetHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highlighted), ::il2cpp_utils::ExtractType(uvSegment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, highlighted, uvSegment);
}
// Autogenerated method: AvatarPropertyBlockColorSetter.UpdateRenderer
void GlobalNamespace::AvatarPropertyBlockColorSetter::UpdateRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPropertyBlockColorSetter::UpdateRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarTweenController
#include "GlobalNamespace/AvatarTweenController.hpp"
// Including type: AvatarTweenController/<>c__DisplayClass52_0
#include "GlobalNamespace/AvatarTweenController_--c__DisplayClass52_0.hpp"
// Including type: AvatarTweenController/<AppearAnimation>d__53
#include "GlobalNamespace/AvatarTweenController_-AppearAnimation-d__53.hpp"
// Including type: AvatarTweenController/<DisappearAnimation>d__58
#include "GlobalNamespace/AvatarTweenController_-DisappearAnimation-d__58.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
// Including type: Tweening.Tween`1
#include "Tweening/Tween_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _avatarTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__avatarTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__avatarTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _headParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__headParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__headParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _leftHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__leftHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__leftHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _rightHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__rightHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__rightHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _bodyTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__bodyTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__bodyTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bodyTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _headInnerTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__headInnerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__headInnerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headInnerTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _leftHandInnerTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__leftHandInnerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__leftHandInnerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandInnerTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _rightHandInnerTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__rightHandInnerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__rightHandInnerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandInnerTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _bodyInnerTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__bodyInnerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__bodyInnerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bodyInnerTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _popDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarTweenController::dyn__popDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__popDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_popDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EaseType _popEaseType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EaseType& GlobalNamespace::AvatarTweenController::dyn__popEaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__popEaseType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_popEaseType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _headPopAmount
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarTweenController::dyn__headPopAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__headPopAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headPopAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _handsPopAmount
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarTweenController::dyn__handsPopAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__handsPopAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handsPopAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _clothesPopAmount
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarTweenController::dyn__clothesPopAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__clothesPopAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clothesPopAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _allPopAmount
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarTweenController::dyn__allPopAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__allPopAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allPopAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _appearDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarTweenController::dyn__appearDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__appearDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _appearSpacing
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarTweenController::dyn__appearSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__appearSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _appearHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarTweenController::dyn__appearHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__appearHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _squashFactor
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AvatarTweenController::dyn__squashFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__squashFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_squashFactor"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _disappearDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarTweenController::dyn__disappearDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__disappearDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _disappearHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarTweenController::dyn__disappearHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__disappearHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _disappearSquash
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AvatarTweenController::dyn__disappearSquash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__disappearSquash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearSquash"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EaseType _disappearScaleEase
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EaseType& GlobalNamespace::AvatarTweenController::dyn__disappearScaleEase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__disappearScaleEase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearScaleEase"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EaseType _disappearPositionEase
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EaseType& GlobalNamespace::AvatarTweenController::dyn__disappearPositionEase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__disappearPositionEase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearPositionEase"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.TimeTweeningManager _tweeningManager
[[deprecated("Use field access instead!")]] ::Tweening::TimeTweeningManager*& GlobalNamespace::AvatarTweenController::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::TimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<System.Single> _popHeadTween
[[deprecated("Use field access instead!")]] ::Tweening::Tween_1<float>*& GlobalNamespace::AvatarTweenController::dyn__popHeadTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__popHeadTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_popHeadTween"))->offset;
  return *reinterpret_cast<::Tweening::Tween_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<System.Single> _popLeftHandTween
[[deprecated("Use field access instead!")]] ::Tweening::Tween_1<float>*& GlobalNamespace::AvatarTweenController::dyn__popLeftHandTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__popLeftHandTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_popLeftHandTween"))->offset;
  return *reinterpret_cast<::Tweening::Tween_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<System.Single> _popRightHandTween
[[deprecated("Use field access instead!")]] ::Tweening::Tween_1<float>*& GlobalNamespace::AvatarTweenController::dyn__popRightHandTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__popRightHandTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_popRightHandTween"))->offset;
  return *reinterpret_cast<::Tweening::Tween_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<System.Single> _popClothesTween
[[deprecated("Use field access instead!")]] ::Tweening::Tween_1<float>*& GlobalNamespace::AvatarTweenController::dyn__popClothesTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__popClothesTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_popClothesTween"))->offset;
  return *reinterpret_cast<::Tweening::Tween_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _appearHeadPositionTween
[[deprecated("Use field access instead!")]] ::Tweening::Tween_1<::UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__appearHeadPositionTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__appearHeadPositionTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearHeadPositionTween"))->offset;
  return *reinterpret_cast<::Tweening::Tween_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _appearHeadScaleTween
[[deprecated("Use field access instead!")]] ::Tweening::Tween_1<::UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__appearHeadScaleTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__appearHeadScaleTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearHeadScaleTween"))->offset;
  return *reinterpret_cast<::Tweening::Tween_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _appearBodyPositionTween
[[deprecated("Use field access instead!")]] ::Tweening::Tween_1<::UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__appearBodyPositionTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__appearBodyPositionTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearBodyPositionTween"))->offset;
  return *reinterpret_cast<::Tweening::Tween_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _appearBodyScaleTween
[[deprecated("Use field access instead!")]] ::Tweening::Tween_1<::UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__appearBodyScaleTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__appearBodyScaleTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearBodyScaleTween"))->offset;
  return *reinterpret_cast<::Tweening::Tween_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _appearRightHandPositionTween
[[deprecated("Use field access instead!")]] ::Tweening::Tween_1<::UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__appearRightHandPositionTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__appearRightHandPositionTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearRightHandPositionTween"))->offset;
  return *reinterpret_cast<::Tweening::Tween_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _appearRightHandScaleTween
[[deprecated("Use field access instead!")]] ::Tweening::Tween_1<::UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__appearRightHandScaleTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__appearRightHandScaleTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearRightHandScaleTween"))->offset;
  return *reinterpret_cast<::Tweening::Tween_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _appearLeftHandPositionTween
[[deprecated("Use field access instead!")]] ::Tweening::Tween_1<::UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__appearLeftHandPositionTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__appearLeftHandPositionTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearLeftHandPositionTween"))->offset;
  return *reinterpret_cast<::Tweening::Tween_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _appearLeftHandScaleTween
[[deprecated("Use field access instead!")]] ::Tweening::Tween_1<::UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__appearLeftHandScaleTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__appearLeftHandScaleTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearLeftHandScaleTween"))->offset;
  return *reinterpret_cast<::Tweening::Tween_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _disappearScaleTween
[[deprecated("Use field access instead!")]] ::Tweening::Tween_1<::UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__disappearScaleTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__disappearScaleTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearScaleTween"))->offset;
  return *reinterpret_cast<::Tweening::Tween_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _disappearPositionTween
[[deprecated("Use field access instead!")]] ::Tweening::Tween_1<::UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__disappearPositionTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__disappearPositionTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearPositionTween"))->offset;
  return *reinterpret_cast<::Tweening::Tween_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _avatarLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AvatarTweenController::dyn__avatarLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__avatarLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _avatarLocalScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AvatarTweenController::dyn__avatarLocalScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::dyn__avatarLocalScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarLocalScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarTweenController.Awake
void GlobalNamespace::AvatarTweenController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController.OnDisable
void GlobalNamespace::AvatarTweenController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController.PresentAvatar
void GlobalNamespace::AvatarTweenController::PresentAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::PresentAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController.HideAvatar
void GlobalNamespace::AvatarTweenController::HideAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::HideAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController.PopAll
void GlobalNamespace::AvatarTweenController::PopAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::PopAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController.PopHead
void GlobalNamespace::AvatarTweenController::PopHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::PopHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController.PopHands
void GlobalNamespace::AvatarTweenController::PopHands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::PopHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController.PopClothes
void GlobalNamespace::AvatarTweenController::PopClothes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::PopClothes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopClothes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController.PopHead
void GlobalNamespace::AvatarTweenController::PopHead(float popAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::PopHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(popAmount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, popAmount);
}
// Autogenerated method: AvatarTweenController.PopHands
void GlobalNamespace::AvatarTweenController::PopHands(float popAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::PopHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(popAmount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, popAmount);
}
// Autogenerated method: AvatarTweenController.PopClothes
void GlobalNamespace::AvatarTweenController::PopClothes(float popAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::PopClothes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopClothes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(popAmount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, popAmount);
}
// Autogenerated method: AvatarTweenController.CreatePopTween
::Tweening::Tween_1<float>* GlobalNamespace::AvatarTweenController::CreatePopTween(::UnityEngine::Transform* partTransform, float popAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::CreatePopTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePopTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partTransform), ::il2cpp_utils::ExtractType(popAmount)})));
  return ::il2cpp_utils::RunMethodRethrow<::Tweening::Tween_1<float>*, false>(this, ___internal__method, partTransform, popAmount);
}
// Autogenerated method: AvatarTweenController.AppearAnimation
::System::Collections::IEnumerator* GlobalNamespace::AvatarTweenController::AppearAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::AppearAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppearAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController.AppearBody
void GlobalNamespace::AvatarTweenController::AppearBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::AppearBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppearBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController.AppearHead
void GlobalNamespace::AvatarTweenController::AppearHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::AppearHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppearHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController.AppearLeftHand
void GlobalNamespace::AvatarTweenController::AppearLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::AppearLeftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppearLeftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController.AppearRightHand
void GlobalNamespace::AvatarTweenController::AppearRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::AppearRightHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppearRightHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController.DisappearAnimation
::System::Collections::IEnumerator* GlobalNamespace::AvatarTweenController::DisappearAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::DisappearAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisappearAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController.StopAll
void GlobalNamespace::AvatarTweenController::StopAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::StopAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController.<AppearBody>b__54_0
void GlobalNamespace::AvatarTweenController::$AppearBody$b__54_0(::UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::<AppearBody>b__54_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppearBody>b__54_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<AppearBody>b__54_1
void GlobalNamespace::AvatarTweenController::$AppearBody$b__54_1(::UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::<AppearBody>b__54_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppearBody>b__54_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<AppearHead>b__55_0
void GlobalNamespace::AvatarTweenController::$AppearHead$b__55_0(::UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::<AppearHead>b__55_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppearHead>b__55_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<AppearHead>b__55_1
void GlobalNamespace::AvatarTweenController::$AppearHead$b__55_1(::UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::<AppearHead>b__55_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppearHead>b__55_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<AppearLeftHand>b__56_0
void GlobalNamespace::AvatarTweenController::$AppearLeftHand$b__56_0(::UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::<AppearLeftHand>b__56_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppearLeftHand>b__56_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<AppearLeftHand>b__56_1
void GlobalNamespace::AvatarTweenController::$AppearLeftHand$b__56_1(::UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::<AppearLeftHand>b__56_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppearLeftHand>b__56_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<AppearRightHand>b__57_0
void GlobalNamespace::AvatarTweenController::$AppearRightHand$b__57_0(::UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::<AppearRightHand>b__57_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppearRightHand>b__57_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<AppearRightHand>b__57_1
void GlobalNamespace::AvatarTweenController::$AppearRightHand$b__57_1(::UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::<AppearRightHand>b__57_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppearRightHand>b__57_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<DisappearAnimation>b__58_0
void GlobalNamespace::AvatarTweenController::$DisappearAnimation$b__58_0(::UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::<DisappearAnimation>b__58_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DisappearAnimation>b__58_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<DisappearAnimation>b__58_1
void GlobalNamespace::AvatarTweenController::$DisappearAnimation$b__58_1(::UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::<DisappearAnimation>b__58_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DisappearAnimation>b__58_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarTweenController/<>c__DisplayClass52_0
#include "GlobalNamespace/AvatarTweenController_--c__DisplayClass52_0.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform partTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::$$c__DisplayClass52_0::dyn_partTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$$c__DisplayClass52_0::dyn_partTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 originalScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::AvatarTweenController::$$c__DisplayClass52_0::dyn_originalScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$$c__DisplayClass52_0::dyn_originalScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarTweenController/<>c__DisplayClass52_0.<CreatePopTween>b__0
void GlobalNamespace::AvatarTweenController::$$c__DisplayClass52_0::$CreatePopTween$b__0(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$$c__DisplayClass52_0::<CreatePopTween>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreatePopTween>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarTweenController/<AppearAnimation>d__53
#include "GlobalNamespace/AvatarTweenController_-AppearAnimation-d__53.hpp"
// Including type: UnityEngine.WaitForSeconds
#include "UnityEngine/WaitForSeconds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AvatarTweenController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarTweenController*& GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarTweenController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.WaitForSeconds <waitYieldInstruction>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::WaitForSeconds*& GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::dyn_$waitYieldInstruction$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::dyn_$waitYieldInstruction$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<waitYieldInstruction>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::WaitForSeconds**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarTweenController/<AppearAnimation>d__53.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<AppearAnimation>d__53.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<AppearAnimation>d__53.System.IDisposable.Dispose
void GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<AppearAnimation>d__53.MoveNext
bool GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<AppearAnimation>d__53.System.Collections.IEnumerator.Reset
void GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarTweenController/<DisappearAnimation>d__58
#include "GlobalNamespace/AvatarTweenController_-DisappearAnimation-d__58.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AvatarTweenController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarTweenController*& GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarTweenController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarTweenController/<DisappearAnimation>d__58.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<DisappearAnimation>d__58.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<DisappearAnimation>d__58.System.IDisposable.Dispose
void GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<DisappearAnimation>d__58.MoveNext
bool GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<DisappearAnimation>d__58.System.Collections.IEnumerator.Reset
void GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarVisualController
#include "GlobalNamespace/AvatarVisualController.hpp"
// Including type: AvatarVisualController/HighlighterDelegate
#include "GlobalNamespace/AvatarVisualController_HighlighterDelegate.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: MulticolorAvatarPartPropertyBlockSetter
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter.hpp"
// Including type: AvatarPropertyBlockColorSetter
#include "GlobalNamespace/AvatarPropertyBlockColorSetter.hpp"
// Including type: AvatarPartsModel
#include "GlobalNamespace/AvatarPartsModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: AvatarData
#include "GlobalNamespace/AvatarData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _headTopMeshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__headTopMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__headTopMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTopMeshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _glassesMeshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__glassesMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__glassesMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glassesMeshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _facialHairMeshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__facialHairMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__facialHairMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_facialHairMeshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _leftHandsHairMeshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__leftHandsHairMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__leftHandsHairMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandsHairMeshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _rightHandsHairMeshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__rightHandsHairMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__rightHandsHairMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandsHairMeshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _eyesSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::SpriteRenderer*& GlobalNamespace::AvatarVisualController::dyn__eyesSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__eyesSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eyesSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _mouthSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::SpriteRenderer*& GlobalNamespace::AvatarVisualController::dyn__mouthSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__mouthSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mouthSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _bodyMeshFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__bodyMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__bodyMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bodyMeshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MulticolorAvatarPartPropertyBlockSetter _headTopPropertyBlockColorSetter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter*& GlobalNamespace::AvatarVisualController::dyn__headTopPropertyBlockColorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__headTopPropertyBlockColorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTopPropertyBlockColorSetter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarPropertyBlockColorSetter _glassesPropertyBlockColorSetter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPropertyBlockColorSetter*& GlobalNamespace::AvatarVisualController::dyn__glassesPropertyBlockColorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__glassesPropertyBlockColorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glassesPropertyBlockColorSetter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPropertyBlockColorSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarPropertyBlockColorSetter _facialHairPropertyBlockColorSetter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPropertyBlockColorSetter*& GlobalNamespace::AvatarVisualController::dyn__facialHairPropertyBlockColorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__facialHairPropertyBlockColorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_facialHairPropertyBlockColorSetter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPropertyBlockColorSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarPropertyBlockColorSetter _skinPropertyBlockColorSetter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPropertyBlockColorSetter*& GlobalNamespace::AvatarVisualController::dyn__skinPropertyBlockColorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__skinPropertyBlockColorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skinPropertyBlockColorSetter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPropertyBlockColorSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MulticolorAvatarPartPropertyBlockSetter _clothesPropertyBlockSetter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter*& GlobalNamespace::AvatarVisualController::dyn__clothesPropertyBlockSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__clothesPropertyBlockSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clothesPropertyBlockSetter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MulticolorAvatarPartPropertyBlockSetter _leftHandPropertyBlockSetter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter*& GlobalNamespace::AvatarVisualController::dyn__leftHandPropertyBlockSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__leftHandPropertyBlockSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandPropertyBlockSetter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MulticolorAvatarPartPropertyBlockSetter _rightHandPropertyBlockSetter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter*& GlobalNamespace::AvatarVisualController::dyn__rightHandPropertyBlockSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__rightHandPropertyBlockSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandPropertyBlockSetter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartsModel _avatarPartsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPartsModel*& GlobalNamespace::AvatarVisualController::dyn__avatarPartsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__avatarPartsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPartsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<EditAvatarViewController/AvatarEditPart,AvatarVisualController/HighlighterDelegate> _avatarPartHighlightSetters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::EditAvatarViewController::AvatarEditPart, ::GlobalNamespace::AvatarVisualController::HighlighterDelegate*>*& GlobalNamespace::AvatarVisualController::dyn__avatarPartHighlightSetters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__avatarPartHighlightSetters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPartHighlightSetters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::EditAvatarViewController::AvatarEditPart, ::GlobalNamespace::AvatarVisualController::HighlighterDelegate*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _lightColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarVisualController::dyn__lightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__lightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarData _avatarData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarData*& GlobalNamespace::AvatarVisualController::dyn__avatarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__avatarData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarVisualController/HighlighterDelegate _currentHighlighter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarVisualController::HighlighterDelegate*& GlobalNamespace::AvatarVisualController::dyn__currentHighlighter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::dyn__currentHighlighter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentHighlighter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarVisualController::HighlighterDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarVisualController.get_lightColor
::UnityEngine::Color GlobalNamespace::AvatarVisualController::get_lightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::get_lightColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: AvatarVisualController.Awake
void GlobalNamespace::AvatarVisualController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarVisualController.UpdateAvatarVisual
void GlobalNamespace::AvatarVisualController::UpdateAvatarVisual(::GlobalNamespace::AvatarData* avatarData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::UpdateAvatarVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAvatarVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatarData);
}
// Autogenerated method: AvatarVisualController.SetLightColor
void GlobalNamespace::AvatarVisualController::SetLightColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::SetLightColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLightColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: AvatarVisualController.UpdateAvatarColors
void GlobalNamespace::AvatarVisualController::UpdateAvatarColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::UpdateAvatarColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAvatarColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarVisualController.HighlightEditedPart
void GlobalNamespace::AvatarVisualController::HighlightEditedPart(::GlobalNamespace::EditAvatarViewController::AvatarEditPart editPart, int uvSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::HighlightEditedPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightEditedPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(editPart), ::il2cpp_utils::ExtractType(uvSegment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, editPart, uvSegment);
}
// Autogenerated method: AvatarVisualController.DisableEditedPartHighlight
void GlobalNamespace::AvatarVisualController::DisableEditedPartHighlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::DisableEditedPartHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableEditedPartHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarVisualController.SetHandsHighlight
void GlobalNamespace::AvatarVisualController::SetHandsHighlight(bool highlighted, int uvSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::SetHandsHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHandsHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highlighted), ::il2cpp_utils::ExtractType(uvSegment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, highlighted, uvSegment);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarVisualController/HighlighterDelegate
#include "GlobalNamespace/AvatarVisualController_HighlighterDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarVisualController/HighlighterDelegate.Invoke
void GlobalNamespace::AvatarVisualController::HighlighterDelegate::Invoke(bool highlighted, int uvSegmentNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::HighlighterDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highlighted), ::il2cpp_utils::ExtractType(uvSegmentNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, highlighted, uvSegmentNumber);
}
// Autogenerated method: AvatarVisualController/HighlighterDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::AvatarVisualController::HighlighterDelegate::BeginInvoke(bool highlighted, int uvSegmentNumber, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::HighlighterDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highlighted), ::il2cpp_utils::ExtractType(uvSegmentNumber), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, highlighted, uvSegmentNumber, callback, object);
}
// Autogenerated method: AvatarVisualController/HighlighterDelegate.EndInvoke
void GlobalNamespace::AvatarVisualController::HighlighterDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarVisualController::HighlighterDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerName
#include "GlobalNamespace/ConnectedPlayerName.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _nameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ConnectedPlayerName::dyn__nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerName::dyn__nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IConnectedPlayer _connectedPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::ConnectedPlayerName::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerName::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedPlayerName.Start
void GlobalNamespace::ConnectedPlayerName::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerName::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HeadBodyOffsetSO
#include "GlobalNamespace/HeadBodyOffsetSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _headNeckOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::HeadBodyOffsetSO::dyn__headNeckOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadBodyOffsetSO::dyn__headNeckOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headNeckOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _verticalOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HeadBodyOffsetSO::dyn__verticalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadBodyOffsetSO::dyn__verticalOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_verticalOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HeadBodyOffsetSO.get_headNeckOffset
::UnityEngine::Vector3 GlobalNamespace::HeadBodyOffsetSO::get_headNeckOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadBodyOffsetSO::get_headNeckOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headNeckOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: HeadBodyOffsetSO.get_verticalOffset
float GlobalNamespace::HeadBodyOffsetSO::get_verticalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadBodyOffsetSO::get_verticalOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyAvatarInstaller
#include "GlobalNamespace/LobbyAvatarInstaller.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IConnectedPlayer _connectedPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::LobbyAvatarInstaller::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyAvatarInstaller::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyAvatarInstaller.InstallBindings
void GlobalNamespace::LobbyAvatarInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyAvatarInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MulticolorAvatarPartPropertyBlockSetter
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter.hpp"
// Including type: MulticolorAvatarPartPropertyBlockSetter/ColorData
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter_ColorData.hpp"
// Including type: MulticolorAvatarPartPropertyBlockSetter/<>c
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter_--c.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10DA200
// Autogenerated static field getter
// Get static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
::UnityEngine::MaterialPropertyBlock* GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::_get__materialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::_get__materialPropertyBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MaterialPropertyBlock*>("", "MulticolorAvatarPartPropertyBlockSetter", "_materialPropertyBlock"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::_set__materialPropertyBlock(::UnityEngine::MaterialPropertyBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::_set__materialPropertyBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MulticolorAvatarPartPropertyBlockSetter", "_materialPropertyBlock", value));
}
// Autogenerated instance field getter
// Get instance field: private MulticolorAvatarPartPropertyBlockSetter/ColorData[] _colorDataList
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData*>& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__colorDataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__colorDataList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorDataList"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _editInPlayMode
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__editInPlayMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__editInPlayMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editInPlayMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector4[] _colors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector4>& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector4[] _rimLightColors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector4>& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__rimLightColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__rimLightColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rimLightColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] _boostColors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__boostColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__boostColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boostColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _highlighted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__highlighted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlighted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _uvSegment
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__uvSegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__uvSegment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uvSegment"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter.OnValidate
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter.SetColors
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::SetColors(::ArrayW<::UnityEngine::Color> colors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colors);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter.SetHighlight
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::SetHighlight(bool highlighted, int uvSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::SetHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highlighted), ::il2cpp_utils::ExtractType(uvSegment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, highlighted, uvSegment);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter.UpdateRenderer
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::UpdateRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::UpdateRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MulticolorAvatarPartPropertyBlockSetter/ColorData
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter_ColorData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _defaultColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__defaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__defaultColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _darkerColorMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__darkerColorMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__darkerColorMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_darkerColorMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _whiteBoost
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__whiteBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__whiteBoost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whiteBoost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter/ColorData.get_defaultColor
::UnityEngine::Color GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_defaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_defaultColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter/ColorData.get_darkerColorMultiplier
float GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_darkerColorMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_darkerColorMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_darkerColorMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter/ColorData.get_whiteBoost
float GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_whiteBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_whiteBoost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_whiteBoost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MulticolorAvatarPartPropertyBlockSetter/<>c
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: MulticolorAvatarPartPropertyBlockSetter/ColorData
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter_ColorData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MulticolorAvatarPartPropertyBlockSetter/<>c <>9
::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c* GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c*>("", "MulticolorAvatarPartPropertyBlockSetter/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MulticolorAvatarPartPropertyBlockSetter/<>c <>9
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_set_$$9(::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MulticolorAvatarPartPropertyBlockSetter/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<MulticolorAvatarPartPropertyBlockSetter/ColorData,UnityEngine.Color> <>9__10_0
::System::Func_2<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData*, ::UnityEngine::Color>* GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData*, ::UnityEngine::Color>*>("", "MulticolorAvatarPartPropertyBlockSetter/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<MulticolorAvatarPartPropertyBlockSetter/ColorData,UnityEngine.Color> <>9__10_0
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_set_$$9__10_0(::System::Func_2<::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData*, ::UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MulticolorAvatarPartPropertyBlockSetter/<>c", "<>9__10_0", value)));
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter/<>c..cctor
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MulticolorAvatarPartPropertyBlockSetter/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter/<>c.<OnValidate>b__10_0
::UnityEngine::Color GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::$OnValidate$b__10_0(::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::<OnValidate>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnValidate>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerAvatarAudioController
#include "GlobalNamespace/MultiplayerAvatarAudioController.hpp"
// Including type: MultiplayerAvatarAudioController/<Start>d__4
#include "GlobalNamespace/MultiplayerAvatarAudioController_-Start-d__4.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::MultiplayerAvatarAudioController::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IConnectedPlayer _connectedPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::MultiplayerAvatarAudioController::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerAvatarAudioController.set_connectedPlayer
void GlobalNamespace::MultiplayerAvatarAudioController::set_connectedPlayer(::GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::set_connectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerAvatarAudioController.Start
::System::Collections::IEnumerator* GlobalNamespace::MultiplayerAvatarAudioController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerAvatarAudioController/<Start>d__4
#include "GlobalNamespace/MultiplayerAvatarAudioController_-Start-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerAvatarAudioController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerAvatarAudioController*& GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerAvatarAudioController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerAvatarAudioController/<Start>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerAvatarAudioController/<Start>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerAvatarAudioController/<Start>d__4.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerAvatarAudioController/<Start>d__4.MoveNext
bool GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerAvatarAudioController/<Start>d__4.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarAudioController::$Start$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerAvatarPoseController
#include "GlobalNamespace/MultiplayerAvatarPoseController.hpp"
// Including type: AvatarPoseController
#include "GlobalNamespace/AvatarPoseController.hpp"
// Including type: INodePoseSyncStateManager
#include "GlobalNamespace/INodePoseSyncStateManager.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AvatarPoseController _avatarPoseController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPoseController*& GlobalNamespace::MultiplayerAvatarPoseController::dyn__avatarPoseController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarPoseController::dyn__avatarPoseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPoseController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPoseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly INodePoseSyncStateManager _nodePoseSyncStateManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INodePoseSyncStateManager*& GlobalNamespace::MultiplayerAvatarPoseController::dyn__nodePoseSyncStateManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarPoseController::dyn__nodePoseSyncStateManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodePoseSyncStateManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INodePoseSyncStateManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IConnectedPlayer _connectedPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::MultiplayerAvatarPoseController::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarPoseController::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerAvatarPoseController.set_connectedPlayer
void GlobalNamespace::MultiplayerAvatarPoseController::set_connectedPlayer(::GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarPoseController::set_connectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerAvatarPoseController.Start
void GlobalNamespace::MultiplayerAvatarPoseController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarPoseController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerAvatarPoseController.Update
void GlobalNamespace::MultiplayerAvatarPoseController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarPoseController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerAvatarVisualProvider
#include "GlobalNamespace/MultiplayerAvatarVisualProvider.hpp"
// Including type: AvatarVisualController
#include "GlobalNamespace/AvatarVisualController.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AvatarVisualController _avatarVisualController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarVisualController*& GlobalNamespace::MultiplayerAvatarVisualProvider::dyn__avatarVisualController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarVisualProvider::dyn__avatarVisualController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarVisualController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IConnectedPlayer _connectedPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::MultiplayerAvatarVisualProvider::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarVisualProvider::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerAvatarVisualProvider.Start
void GlobalNamespace::MultiplayerAvatarVisualProvider::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarVisualProvider::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyAvatarController
#include "GlobalNamespace/MultiplayerLobbyAvatarController.hpp"
// Including type: MultiplayerLobbyAvatarController/Factory
#include "GlobalNamespace/MultiplayerLobbyAvatarController_Factory.hpp"
// Including type: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-SpawnAnimationCoroutine-d__8.hpp"
// Including type: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-ShowDespawnAnimationAndDestroy-d__10.hpp"
// Including type: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-DespawnAnimationCoroutine-d__12.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: VFXController
#include "GlobalNamespace/VFXController.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableDirector _spawnEffect
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableDirector*& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__spawnEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::dyn__spawnEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnEffect"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VFXController _despawnVFXController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VFXController*& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__despawnVFXController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::dyn__despawnVFXController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_despawnVFXController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VFXController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spawnAvatarDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__spawnAvatarDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::dyn__spawnAvatarDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnAvatarDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _despawnAvatarDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__despawnAvatarDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::dyn__despawnAvatarDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_despawnAvatarDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _destroyAvatarDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__destroyAvatarDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::dyn__destroyAvatarDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_destroyAvatarDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _visualObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__visualObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::dyn__visualObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_visualObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarController.ShowSpawnAnimation
void GlobalNamespace::MultiplayerLobbyAvatarController::ShowSpawnAnimation(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::ShowSpawnAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowSpawnAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: MultiplayerLobbyAvatarController.SpawnAnimationCoroutine
::System::Collections::IEnumerator* GlobalNamespace::MultiplayerLobbyAvatarController::SpawnAnimationCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::SpawnAnimationCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnAnimationCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController.ActivateVisualObjects
void GlobalNamespace::MultiplayerLobbyAvatarController::ActivateVisualObjects(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::ActivateVisualObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateVisualObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: MultiplayerLobbyAvatarController.ShowDespawnAnimationAndDestroy
::System::Collections::IEnumerator* GlobalNamespace::MultiplayerLobbyAvatarController::ShowDespawnAnimationAndDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::ShowDespawnAnimationAndDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowDespawnAnimationAndDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController.DestroySelf
void GlobalNamespace::MultiplayerLobbyAvatarController::DestroySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::DestroySelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroySelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController.DespawnAnimationCoroutine
::System::Collections::IEnumerator* GlobalNamespace::MultiplayerLobbyAvatarController::DespawnAnimationCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::DespawnAnimationCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnAnimationCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyAvatarController/Factory
#include "GlobalNamespace/MultiplayerLobbyAvatarController_Factory.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-SpawnAnimationCoroutine-d__8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerLobbyAvatarController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyAvatarController*& GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyAvatarController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8.MoveNext
bool GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-ShowDespawnAnimationAndDestroy-d__10.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerLobbyAvatarController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyAvatarController*& GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyAvatarController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10.MoveNext
bool GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-DespawnAnimationCoroutine-d__12.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerLobbyAvatarController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyAvatarController*& GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyAvatarController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12.MoveNext
bool GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
