// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkPlayersViewController
#include "GlobalNamespace/LocalNetworkPlayersViewController.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: LocalNetworkPlayerModel
#include "GlobalNamespace/LocalNetworkPlayerModel.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _enableNetworkingToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::LocalNetworkPlayersViewController::dyn__enableNetworkingToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayersViewController::dyn__enableNetworkingToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enableNetworkingToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _enableOpenPartyToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::LocalNetworkPlayersViewController::dyn__enableOpenPartyToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayersViewController::dyn__enableOpenPartyToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enableOpenPartyToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LocalNetworkPlayerModel _localNetworkPlayerModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkPlayerModel*& GlobalNamespace::LocalNetworkPlayersViewController::dyn__localNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayersViewController::dyn__localNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localNetworkPlayerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly INetworkConfig _networkConfig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkConfig*& GlobalNamespace::LocalNetworkPlayersViewController::dyn__networkConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayersViewController::dyn__networkConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkConfig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ToggleBinder _toggleBinder
[[deprecated("Use field access instead!")]] ::HMUI::ToggleBinder*& GlobalNamespace::LocalNetworkPlayersViewController::dyn__toggleBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayersViewController::dyn__toggleBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggleBinder"))->offset;
  return *reinterpret_cast<::HMUI::ToggleBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _enableBroadcasting
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayersViewController::dyn__enableBroadcasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayersViewController::dyn__enableBroadcasting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enableBroadcasting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowAnyoneToJoin
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayersViewController::dyn__allowAnyoneToJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayersViewController::dyn__allowAnyoneToJoin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowAnyoneToJoin"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkPlayersViewController.HandleNetworkingToggleChanged
void GlobalNamespace::LocalNetworkPlayersViewController::HandleNetworkingToggleChanged(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayersViewController::HandleNetworkingToggleChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNetworkingToggleChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: LocalNetworkPlayersViewController.HandleOpenPartyToggleChanged
void GlobalNamespace::LocalNetworkPlayersViewController::HandleOpenPartyToggleChanged(bool openParty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayersViewController::HandleOpenPartyToggleChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOpenPartyToggleChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(openParty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, openParty);
}
// Autogenerated method: LocalNetworkPlayersViewController.RefreshParty
void GlobalNamespace::LocalNetworkPlayersViewController::RefreshParty(bool overrideHide) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayersViewController::RefreshParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overrideHide)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, overrideHide);
}
// Autogenerated method: LocalNetworkPlayersViewController.get_myPartyTitle
::StringW GlobalNamespace::LocalNetworkPlayersViewController::get_myPartyTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayersViewController::get_myPartyTitle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_myPartyTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayersViewController.get_otherPlayersTitle
::StringW GlobalNamespace::LocalNetworkPlayersViewController::get_otherPlayersTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayersViewController::get_otherPlayersTitle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_otherPlayersTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayersViewController.get_networkPlayerModel
::GlobalNamespace::INetworkPlayerModel* GlobalNamespace::LocalNetworkPlayersViewController::get_networkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayersViewController::get_networkPlayerModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_networkPlayerModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::INetworkPlayerModel*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayersViewController.NetworkPlayersViewControllerDidActivate
void GlobalNamespace::LocalNetworkPlayersViewController::NetworkPlayersViewControllerDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayersViewController::NetworkPlayersViewControllerDidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NetworkPlayersViewControllerDidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: LocalNetworkPlayersViewController.DidDeactivate
void GlobalNamespace::LocalNetworkPlayersViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayersViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: LocalNetworkPlayersViewController.OnDestroy
void GlobalNamespace::LocalNetworkPlayersViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayersViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainMenuViewController
#include "GlobalNamespace/MainMenuViewController.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: MusicPackPromoBanner
#include "GlobalNamespace/MusicPackPromoBanner.hpp"
// Including type: DlcPromoPanelModel
#include "GlobalNamespace/DlcPromoPanelModel.hpp"
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _soloButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MainMenuViewController::dyn__soloButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::dyn__soloButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_soloButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _partyButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MainMenuViewController::dyn__partyButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::dyn__partyButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _campaignButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MainMenuViewController::dyn__campaignButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::dyn__campaignButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_campaignButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _quitButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MainMenuViewController::dyn__quitButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::dyn__quitButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_quitButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _howToPlayButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MainMenuViewController::dyn__howToPlayButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::dyn__howToPlayButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_howToPlayButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _beatmapEditorButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MainMenuViewController::dyn__beatmapEditorButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::dyn__beatmapEditorButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEditorButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _multiplayerButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MainMenuViewController::dyn__multiplayerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::dyn__multiplayerButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _optionsButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MainMenuViewController::dyn__optionsButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::dyn__optionsButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optionsButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _musicPackPromoButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MainMenuViewController::dyn__musicPackPromoButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::dyn__musicPackPromoButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_musicPackPromoButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MusicPackPromoBanner _musicPackPromoBanner
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MusicPackPromoBanner*& GlobalNamespace::MainMenuViewController::dyn__musicPackPromoBanner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::dyn__musicPackPromoBanner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_musicPackPromoBanner"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MusicPackPromoBanner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly DlcPromoPanelModel _dlcPromoPanelModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DlcPromoPanelModel*& GlobalNamespace::MainMenuViewController::dyn__dlcPromoPanelModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::dyn__dlcPromoPanelModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dlcPromoPanelModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DlcPromoPanelModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AppStaticSettingsSO _appStaticSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AppStaticSettingsSO*& GlobalNamespace::MainMenuViewController::dyn__appStaticSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::dyn__appStaticSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appStaticSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AppStaticSettingsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::MainMenuViewController::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<MainMenuViewController,MainMenuViewController/MenuButton> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::MainMenuViewController*, ::GlobalNamespace::MainMenuViewController::MenuButton>*& GlobalNamespace::MainMenuViewController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::MainMenuViewController*, ::GlobalNamespace::MainMenuViewController::MenuButton>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<IBeatmapLevelPack,IPreviewBeatmapLevel> musicPackPromoButtonWasPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::IBeatmapLevelPack*, ::GlobalNamespace::IPreviewBeatmapLevel*>*& GlobalNamespace::MainMenuViewController::dyn_musicPackPromoButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::dyn_musicPackPromoButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "musicPackPromoButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::IBeatmapLevelPack*, ::GlobalNamespace::IPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainMenuViewController.add_didFinishEvent
void GlobalNamespace::MainMenuViewController::add_didFinishEvent(::System::Action_2<::GlobalNamespace::MainMenuViewController*, ::GlobalNamespace::MainMenuViewController::MenuButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainMenuViewController.remove_didFinishEvent
void GlobalNamespace::MainMenuViewController::remove_didFinishEvent(::System::Action_2<::GlobalNamespace::MainMenuViewController*, ::GlobalNamespace::MainMenuViewController::MenuButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainMenuViewController.add_musicPackPromoButtonWasPressedEvent
void GlobalNamespace::MainMenuViewController::add_musicPackPromoButtonWasPressedEvent(::System::Action_2<::GlobalNamespace::IBeatmapLevelPack*, ::GlobalNamespace::IPreviewBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::add_musicPackPromoButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_musicPackPromoButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainMenuViewController.remove_musicPackPromoButtonWasPressedEvent
void GlobalNamespace::MainMenuViewController::remove_musicPackPromoButtonWasPressedEvent(::System::Action_2<::GlobalNamespace::IBeatmapLevelPack*, ::GlobalNamespace::IPreviewBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::remove_musicPackPromoButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_musicPackPromoButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainMenuViewController.PackPromoButtonWasPressed
void GlobalNamespace::MainMenuViewController::PackPromoButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::PackPromoButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackPromoButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.HandleMenuButton
void GlobalNamespace::MainMenuViewController::HandleMenuButton(::GlobalNamespace::MainMenuViewController::MenuButton menuButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::HandleMenuButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(menuButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, menuButton);
}
// Autogenerated method: MainMenuViewController.<DidActivate>b__20_0
void GlobalNamespace::MainMenuViewController::$DidActivate$b__20_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::<DidActivate>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.<DidActivate>b__20_1
void GlobalNamespace::MainMenuViewController::$DidActivate$b__20_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::<DidActivate>b__20_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__20_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.<DidActivate>b__20_2
void GlobalNamespace::MainMenuViewController::$DidActivate$b__20_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::<DidActivate>b__20_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__20_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.<DidActivate>b__20_3
void GlobalNamespace::MainMenuViewController::$DidActivate$b__20_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::<DidActivate>b__20_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__20_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.<DidActivate>b__20_4
void GlobalNamespace::MainMenuViewController::$DidActivate$b__20_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::<DidActivate>b__20_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__20_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.<DidActivate>b__20_5
void GlobalNamespace::MainMenuViewController::$DidActivate$b__20_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::<DidActivate>b__20_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__20_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.<DidActivate>b__20_6
void GlobalNamespace::MainMenuViewController::$DidActivate$b__20_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::<DidActivate>b__20_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__20_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.<DidActivate>b__20_7
void GlobalNamespace::MainMenuViewController::$DidActivate$b__20_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::<DidActivate>b__20_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__20_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.DidActivate
void GlobalNamespace::MainMenuViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainMenuViewController/MenuButton
#include "GlobalNamespace/MainMenuViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton SoloFreePlay
::GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_SoloFreePlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_get_SoloFreePlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "SoloFreePlay"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton SoloFreePlay
void GlobalNamespace::MainMenuViewController::MenuButton::_set_SoloFreePlay(::GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_set_SoloFreePlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "SoloFreePlay", value));
}
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton Party
::GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_Party() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_get_Party");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "Party"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton Party
void GlobalNamespace::MainMenuViewController::MenuButton::_set_Party(::GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_set_Party");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "Party", value));
}
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton BeatmapEditor
::GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_BeatmapEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_get_BeatmapEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "BeatmapEditor"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton BeatmapEditor
void GlobalNamespace::MainMenuViewController::MenuButton::_set_BeatmapEditor(::GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_set_BeatmapEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "BeatmapEditor", value));
}
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton SoloCampaign
::GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_SoloCampaign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_get_SoloCampaign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "SoloCampaign"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton SoloCampaign
void GlobalNamespace::MainMenuViewController::MenuButton::_set_SoloCampaign(::GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_set_SoloCampaign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "SoloCampaign", value));
}
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton FloorAdjust
::GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_FloorAdjust() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_get_FloorAdjust");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "FloorAdjust"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton FloorAdjust
void GlobalNamespace::MainMenuViewController::MenuButton::_set_FloorAdjust(::GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_set_FloorAdjust");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "FloorAdjust", value));
}
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton Quit
::GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_Quit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_get_Quit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "Quit"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton Quit
void GlobalNamespace::MainMenuViewController::MenuButton::_set_Quit(::GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_set_Quit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "Quit", value));
}
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton Multiplayer
::GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_Multiplayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_get_Multiplayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "Multiplayer"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton Multiplayer
void GlobalNamespace::MainMenuViewController::MenuButton::_set_Multiplayer(::GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_set_Multiplayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "Multiplayer", value));
}
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton Options
::GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_get_Options");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "Options"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton Options
void GlobalNamespace::MainMenuViewController::MenuButton::_set_Options(::GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_set_Options");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "Options", value));
}
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton HowToPlay
::GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_HowToPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_get_HowToPlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "HowToPlay"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton HowToPlay
void GlobalNamespace::MainMenuViewController::MenuButton::_set_HowToPlay(::GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::_set_HowToPlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "HowToPlay", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MainMenuViewController::MenuButton::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuViewController::MenuButton::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SettingsSubMenuInfo
#include "GlobalNamespace/SettingsSubMenuInfo.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController _viewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& GlobalNamespace::SettingsSubMenuInfo::dyn__viewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsSubMenuInfo::dyn__viewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _menuName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SettingsSubMenuInfo::dyn__menuName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsSubMenuInfo::dyn__menuName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SettingsSubMenuInfo.get_viewController
::HMUI::ViewController* GlobalNamespace::SettingsSubMenuInfo::get_viewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsSubMenuInfo::get_viewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_viewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: SettingsSubMenuInfo.get_localizedMenuName
::StringW GlobalNamespace::SettingsSubMenuInfo::get_localizedMenuName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsSubMenuInfo::get_localizedMenuName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedMenuName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSettingsMenuViewController
#include "GlobalNamespace/MainSettingsMenuViewController.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: SettingsSubMenuInfo
#include "GlobalNamespace/SettingsSubMenuInfo.hpp"
// Including type: HMUI.TextSegmentedControl
#include "HMUI/TextSegmentedControl.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`2<SettingsSubMenuInfo,System.Int32> didSelectSettingsSubMenuEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::SettingsSubMenuInfo*, int>*& GlobalNamespace::MainSettingsMenuViewController::dyn_didSelectSettingsSubMenuEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewController::dyn_didSelectSettingsSubMenuEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectSettingsSubMenuEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::SettingsSubMenuInfo*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SettingsSubMenuInfo[] _settingsSubMenuInfos
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SettingsSubMenuInfo*>& GlobalNamespace::MainSettingsMenuViewController::dyn__settingsSubMenuInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewController::dyn__settingsSubMenuInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingsSubMenuInfos"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SettingsSubMenuInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TextSegmentedControl _settingsMenuSegmentedControl
[[deprecated("Use field access instead!")]] ::HMUI::TextSegmentedControl*& GlobalNamespace::MainSettingsMenuViewController::dyn__settingsMenuSegmentedControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewController::dyn__settingsMenuSegmentedControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingsMenuSegmentedControl"))->offset;
  return *reinterpret_cast<::HMUI::TextSegmentedControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SettingsSubMenuInfo _selectedSubMenuInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SettingsSubMenuInfo*& GlobalNamespace::MainSettingsMenuViewController::dyn__selectedSubMenuInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewController::dyn__selectedSubMenuInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedSubMenuInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SettingsSubMenuInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _selectedSubMenuInfoIdx
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MainSettingsMenuViewController::dyn__selectedSubMenuInfoIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewController::dyn__selectedSubMenuInfoIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedSubMenuInfoIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainSettingsMenuViewController.get_numberOfSubMenus
int GlobalNamespace::MainSettingsMenuViewController::get_numberOfSubMenus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewController::get_numberOfSubMenus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfSubMenus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsMenuViewController.get_selectedSubMenuInfo
::GlobalNamespace::SettingsSubMenuInfo* GlobalNamespace::MainSettingsMenuViewController::get_selectedSubMenuInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewController::get_selectedSubMenuInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedSubMenuInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SettingsSubMenuInfo*, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsMenuViewController.add_didSelectSettingsSubMenuEvent
void GlobalNamespace::MainSettingsMenuViewController::add_didSelectSettingsSubMenuEvent(::System::Action_2<::GlobalNamespace::SettingsSubMenuInfo*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewController::add_didSelectSettingsSubMenuEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectSettingsSubMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainSettingsMenuViewController.remove_didSelectSettingsSubMenuEvent
void GlobalNamespace::MainSettingsMenuViewController::remove_didSelectSettingsSubMenuEvent(::System::Action_2<::GlobalNamespace::SettingsSubMenuInfo*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewController::remove_didSelectSettingsSubMenuEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectSettingsSubMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainSettingsMenuViewController.Init
void GlobalNamespace::MainSettingsMenuViewController::Init(int selectedSubMenuInfoIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectedSubMenuInfoIdx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectedSubMenuInfoIdx);
}
// Autogenerated method: MainSettingsMenuViewController.HandleSettingsMenuSegmentedControlDidSelectCell
void GlobalNamespace::MainSettingsMenuViewController::HandleSettingsMenuSegmentedControlDidSelectCell(::HMUI::SegmentedControl* segmentedControl, int cellIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewController::HandleSettingsMenuSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSettingsMenuSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellIdx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, segmentedControl, cellIdx);
}
// Autogenerated method: MainSettingsMenuViewController.DidActivate
void GlobalNamespace::MainSettingsMenuViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionHelpViewController
#include "GlobalNamespace/MissionHelpViewController.hpp"
// Including type: MissionHelpViewController/MissionHelpGameObjectPair
#include "GlobalNamespace/MissionHelpViewController_MissionHelpGameObjectPair.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MissionHelpSO
#include "GlobalNamespace/MissionHelpSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _okButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MissionHelpViewController::dyn__okButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionHelpViewController::dyn__okButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_okButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionHelpViewController/MissionHelpGameObjectPair[] _missionHelpGameObjectPairs
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionHelpViewController::MissionHelpGameObjectPair*>& GlobalNamespace::MissionHelpViewController::dyn__missionHelpGameObjectPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionHelpViewController::dyn__missionHelpGameObjectPairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionHelpGameObjectPairs"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionHelpViewController::MissionHelpGameObjectPair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MissionHelpViewController> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MissionHelpViewController*>*& GlobalNamespace::MissionHelpViewController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionHelpViewController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MissionHelpViewController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionHelpSO _missionHelp
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionHelpSO*& GlobalNamespace::MissionHelpViewController::dyn__missionHelp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionHelpViewController::dyn__missionHelp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionHelp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionHelpSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionHelpViewController.add_didFinishEvent
void GlobalNamespace::MissionHelpViewController::add_didFinishEvent(::System::Action_1<::GlobalNamespace::MissionHelpViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionHelpViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionHelpViewController.remove_didFinishEvent
void GlobalNamespace::MissionHelpViewController::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::MissionHelpViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionHelpViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionHelpViewController.Setup
void GlobalNamespace::MissionHelpViewController::Setup(::GlobalNamespace::MissionHelpSO* missionHelp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionHelpViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionHelp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionHelp);
}
// Autogenerated method: MissionHelpViewController.RefreshContent
void GlobalNamespace::MissionHelpViewController::RefreshContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionHelpViewController::RefreshContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionHelpViewController.OkButtonPressed
void GlobalNamespace::MissionHelpViewController::OkButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionHelpViewController::OkButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OkButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionHelpViewController.DidActivate
void GlobalNamespace::MissionHelpViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionHelpViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionHelpViewController/MissionHelpGameObjectPair
#include "GlobalNamespace/MissionHelpViewController_MissionHelpGameObjectPair.hpp"
// Including type: MissionHelpSO
#include "GlobalNamespace/MissionHelpSO.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MissionHelpSO missionHelp
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionHelpSO*& GlobalNamespace::MissionHelpViewController::MissionHelpGameObjectPair::dyn_missionHelp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionHelpViewController::MissionHelpGameObjectPair::dyn_missionHelp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missionHelp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionHelpSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject gameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MissionHelpViewController::MissionHelpGameObjectPair::dyn_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionHelpViewController::MissionHelpGameObjectPair::dyn_gameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelDetailViewController
#include "GlobalNamespace/MissionLevelDetailViewController.hpp"
// Including type: MissionLevelDetailViewController/<>c__DisplayClass14_0
#include "GlobalNamespace/MissionLevelDetailViewController_--c__DisplayClass14_0.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: ObjectiveListItemsList
#include "GlobalNamespace/ObjectiveListItemsList.hpp"
// Including type: GameplayModifierInfoListItemsList
#include "GlobalNamespace/GameplayModifierInfoListItemsList.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiersModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::MissionLevelDetailViewController::dyn__gameplayModifiersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::dyn__gameplayModifiersModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _playButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MissionLevelDetailViewController::dyn__playButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::dyn__playButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelBar _levelBar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelBar*& GlobalNamespace::MissionLevelDetailViewController::dyn__levelBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::dyn__levelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ObjectiveListItemsList _objectiveListItems
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectiveListItemsList*& GlobalNamespace::MissionLevelDetailViewController::dyn__objectiveListItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::dyn__objectiveListItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectiveListItems"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectiveListItemsList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierInfoListItemsList _gameplayModifierInfoListItemsList
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierInfoListItemsList*& GlobalNamespace::MissionLevelDetailViewController::dyn__gameplayModifierInfoListItemsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::dyn__gameplayModifierInfoListItemsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifierInfoListItemsList"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierInfoListItemsList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _modifiersPanelGO
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MissionLevelDetailViewController::dyn__modifiersPanelGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::dyn__modifiersPanelGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modifiersPanelGO"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MissionLevelDetailViewController> didPressPlayButtonEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MissionLevelDetailViewController*>*& GlobalNamespace::MissionLevelDetailViewController::dyn_didPressPlayButtonEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::dyn_didPressPlayButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressPlayButtonEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MissionLevelDetailViewController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNode _missionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNode*& GlobalNamespace::MissionLevelDetailViewController::dyn__missionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::dyn__missionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionLevelDetailViewController.get_missionNode
::GlobalNamespace::MissionNode* GlobalNamespace::MissionLevelDetailViewController::get_missionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::get_missionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelDetailViewController.add_didPressPlayButtonEvent
void GlobalNamespace::MissionLevelDetailViewController::add_didPressPlayButtonEvent(::System::Action_1<::GlobalNamespace::MissionLevelDetailViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::add_didPressPlayButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressPlayButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelDetailViewController.remove_didPressPlayButtonEvent
void GlobalNamespace::MissionLevelDetailViewController::remove_didPressPlayButtonEvent(::System::Action_1<::GlobalNamespace::MissionLevelDetailViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::remove_didPressPlayButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressPlayButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelDetailViewController.Setup
void GlobalNamespace::MissionLevelDetailViewController::Setup(::GlobalNamespace::MissionNode* missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionNode);
}
// Autogenerated method: MissionLevelDetailViewController.RefreshContent
void GlobalNamespace::MissionLevelDetailViewController::RefreshContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::RefreshContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelDetailViewController.PlayButtonPressed
void GlobalNamespace::MissionLevelDetailViewController::PlayButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::PlayButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelDetailViewController.DidActivate
void GlobalNamespace::MissionLevelDetailViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelDetailViewController/<>c__DisplayClass14_0
#include "GlobalNamespace/MissionLevelDetailViewController_--c__DisplayClass14_0.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: ObjectiveListItem
#include "GlobalNamespace/ObjectiveListItem.hpp"
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MissionObjective[] missionObjectives
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionObjective*>& GlobalNamespace::MissionLevelDetailViewController::$$c__DisplayClass14_0::dyn_missionObjectives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::$$c__DisplayClass14_0::dyn_missionObjectives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missionObjectives"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionObjective*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GameplayModifierParamsSO> modifierParamsList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>*& GlobalNamespace::MissionLevelDetailViewController::$$c__DisplayClass14_0::dyn_modifierParamsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::$$c__DisplayClass14_0::dyn_modifierParamsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifierParamsList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionLevelDetailViewController/<>c__DisplayClass14_0.<RefreshContent>b__0
void GlobalNamespace::MissionLevelDetailViewController::$$c__DisplayClass14_0::$RefreshContent$b__0(int idx, ::GlobalNamespace::ObjectiveListItem* objectiveListItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::$$c__DisplayClass14_0::<RefreshContent>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RefreshContent>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(objectiveListItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, objectiveListItem);
}
// Autogenerated method: MissionLevelDetailViewController/<>c__DisplayClass14_0.<RefreshContent>b__1
void GlobalNamespace::MissionLevelDetailViewController::$$c__DisplayClass14_0::$RefreshContent$b__1(int idx, ::GlobalNamespace::GameplayModifierInfoListItem* gameplayModifierInfoListItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelDetailViewController::$$c__DisplayClass14_0::<RefreshContent>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RefreshContent>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(gameplayModifierInfoListItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, gameplayModifierInfoListItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelModifiersViewController
#include "GlobalNamespace/MissionLevelModifiersViewController.hpp"
// Including type: MissionLevelModifiersViewController/<>c__DisplayClass7_0
#include "GlobalNamespace/MissionLevelModifiersViewController_--c__DisplayClass7_0.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: GameplayModifierInfoListItemsList
#include "GlobalNamespace/GameplayModifierInfoListItemsList.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiersModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::MissionLevelModifiersViewController::dyn__gameplayModifiersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelModifiersViewController::dyn__gameplayModifiersModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierInfoListItemsList _gameplayModifierInfoListItemsList
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierInfoListItemsList*& GlobalNamespace::MissionLevelModifiersViewController::dyn__gameplayModifierInfoListItemsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelModifiersViewController::dyn__gameplayModifierInfoListItemsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifierInfoListItemsList"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierInfoListItemsList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _modifiersPanel
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MissionLevelModifiersViewController::dyn__modifiersPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelModifiersViewController::dyn__modifiersPanel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modifiersPanel"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _titleText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MissionLevelModifiersViewController::dyn__titleText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelModifiersViewController::dyn__titleText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiers _gameplayModifiers
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiers*& GlobalNamespace::MissionLevelModifiersViewController::dyn__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelModifiersViewController::dyn__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionLevelModifiersViewController.Setup
void GlobalNamespace::MissionLevelModifiersViewController::Setup(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelModifiersViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: MissionLevelModifiersViewController.RefreshContent
void GlobalNamespace::MissionLevelModifiersViewController::RefreshContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelModifiersViewController::RefreshContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelModifiersViewController.DidActivate
void GlobalNamespace::MissionLevelModifiersViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelModifiersViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelModifiersViewController/<>c__DisplayClass7_0
#include "GlobalNamespace/MissionLevelModifiersViewController_--c__DisplayClass7_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GameplayModifierParamsSO> modifierParamsList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>*& GlobalNamespace::MissionLevelModifiersViewController::$$c__DisplayClass7_0::dyn_modifierParamsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelModifiersViewController::$$c__DisplayClass7_0::dyn_modifierParamsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifierParamsList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionLevelModifiersViewController/<>c__DisplayClass7_0.<RefreshContent>b__0
void GlobalNamespace::MissionLevelModifiersViewController::$$c__DisplayClass7_0::$RefreshContent$b__0(int idx, ::GlobalNamespace::GameplayModifierInfoListItem* gameplayModifierInfoListItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelModifiersViewController::$$c__DisplayClass7_0::<RefreshContent>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RefreshContent>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(gameplayModifierInfoListItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, gameplayModifierInfoListItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionResultsViewController
#include "GlobalNamespace/MissionResultsViewController.hpp"
// Including type: MissionResultsViewController/<StartFireworksAfterDelay>d__28
#include "GlobalNamespace/MissionResultsViewController_-StartFireworksAfterDelay-d__28.hpp"
// Including type: MissionResultsViewController/<>c__DisplayClass29_0
#include "GlobalNamespace/MissionResultsViewController_--c__DisplayClass29_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: ResultObjectiveListItemsList
#include "GlobalNamespace/ResultObjectiveListItemsList.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: FireworksController
#include "GlobalNamespace/FireworksController.hpp"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _failedBannerGo
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MissionResultsViewController::dyn__failedBannerGo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__failedBannerGo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failedBannerGo"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _clearedBannerGo
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MissionResultsViewController::dyn__clearedBannerGo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__clearedBannerGo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedBannerGo"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _missionNameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MissionResultsViewController::dyn__missionNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__missionNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _songNameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MissionResultsViewController::dyn__songNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__songNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songNameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _successIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::MissionResultsViewController::dyn__successIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__successIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_successIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _successIconGlow
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::MissionResultsViewController::dyn__successIconGlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__successIconGlow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_successIconGlow"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _successColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MissionResultsViewController::dyn__successColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__successColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_successColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _failIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::MissionResultsViewController::dyn__failIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__failIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _failIconGlow
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::MissionResultsViewController::dyn__failIconGlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__failIconGlow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failIconGlow"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _failColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MissionResultsViewController::dyn__failColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__failColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ResultObjectiveListItemsList _resultObjectiveListItemList
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ResultObjectiveListItemsList*& GlobalNamespace::MissionResultsViewController::dyn__resultObjectiveListItemList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__resultObjectiveListItemList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultObjectiveListItemList"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ResultObjectiveListItemsList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _continueButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MissionResultsViewController::dyn__continueButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__continueButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_continueButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _retryButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MissionResultsViewController::dyn__retryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__retryButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_retryButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _levelClearedAudioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::MissionResultsViewController::dyn__levelClearedAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__levelClearedAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelClearedAudioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly FireworksController _fireworksController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FireworksController*& GlobalNamespace::MissionResultsViewController::dyn__fireworksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__fireworksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fireworksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FireworksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPreviewPlayer _songPreviewPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPreviewPlayer*& GlobalNamespace::MissionResultsViewController::dyn__songPreviewPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__songPreviewPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPreviewPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPreviewPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MissionResultsViewController> continueButtonPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MissionResultsViewController*>*& GlobalNamespace::MissionResultsViewController::dyn_continueButtonPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn_continueButtonPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "continueButtonPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MissionResultsViewController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MissionResultsViewController> retryButtonPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MissionResultsViewController*>*& GlobalNamespace::MissionResultsViewController::dyn_retryButtonPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn_retryButtonPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "retryButtonPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MissionResultsViewController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNode _missionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNode*& GlobalNamespace::MissionResultsViewController::dyn__missionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__missionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionCompletionResults _missionCompletionResults
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionCompletionResults*& GlobalNamespace::MissionResultsViewController::dyn__missionCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__missionCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionCompletionResults"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _startFireworksAfterDelayCoroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GlobalNamespace::MissionResultsViewController::dyn__startFireworksAfterDelayCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::dyn__startFireworksAfterDelayCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startFireworksAfterDelayCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionResultsViewController.add_continueButtonPressedEvent
void GlobalNamespace::MissionResultsViewController::add_continueButtonPressedEvent(::System::Action_1<::GlobalNamespace::MissionResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::add_continueButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_continueButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionResultsViewController.remove_continueButtonPressedEvent
void GlobalNamespace::MissionResultsViewController::remove_continueButtonPressedEvent(::System::Action_1<::GlobalNamespace::MissionResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::remove_continueButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_continueButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionResultsViewController.add_retryButtonPressedEvent
void GlobalNamespace::MissionResultsViewController::add_retryButtonPressedEvent(::System::Action_1<::GlobalNamespace::MissionResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::add_retryButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_retryButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionResultsViewController.remove_retryButtonPressedEvent
void GlobalNamespace::MissionResultsViewController::remove_retryButtonPressedEvent(::System::Action_1<::GlobalNamespace::MissionResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::remove_retryButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_retryButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionResultsViewController.Init
void GlobalNamespace::MissionResultsViewController::Init(::GlobalNamespace::MissionNode* missionNode, ::GlobalNamespace::MissionCompletionResults* missionCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionNode), ::il2cpp_utils::ExtractType(missionCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionNode, missionCompletionResults);
}
// Autogenerated method: MissionResultsViewController.StartFireworksAfterDelay
::System::Collections::IEnumerator* GlobalNamespace::MissionResultsViewController::StartFireworksAfterDelay(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::StartFireworksAfterDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartFireworksAfterDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: MissionResultsViewController.SetDataToUI
void GlobalNamespace::MissionResultsViewController::SetDataToUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::SetDataToUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataToUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionResultsViewController.ContinueButtonPressed
void GlobalNamespace::MissionResultsViewController::ContinueButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::ContinueButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContinueButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionResultsViewController.RetryButtonPressed
void GlobalNamespace::MissionResultsViewController::RetryButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::RetryButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RetryButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionResultsViewController.DidActivate
void GlobalNamespace::MissionResultsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: MissionResultsViewController.DidDeactivate
void GlobalNamespace::MissionResultsViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionResultsViewController/<StartFireworksAfterDelay>d__28
#include "GlobalNamespace/MissionResultsViewController_-StartFireworksAfterDelay-d__28.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionResultsViewController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionResultsViewController*& GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionResultsViewController/<StartFireworksAfterDelay>d__28.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionResultsViewController/<StartFireworksAfterDelay>d__28.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionResultsViewController/<StartFireworksAfterDelay>d__28.System.IDisposable.Dispose
void GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionResultsViewController/<StartFireworksAfterDelay>d__28.MoveNext
bool GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionResultsViewController/<StartFireworksAfterDelay>d__28.System.Collections.IEnumerator.Reset
void GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionResultsViewController/<>c__DisplayClass29_0
#include "GlobalNamespace/MissionResultsViewController_--c__DisplayClass29_0.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: MissionObjectiveResult
#include "GlobalNamespace/MissionObjectiveResult.hpp"
// Including type: ResultObjectiveListItem
#include "GlobalNamespace/ResultObjectiveListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean levelCleared
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::dyn_levelCleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::dyn_levelCleared");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelCleared"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionResultsViewController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionResultsViewController*& GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionObjective[] missionObjectives
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionObjective*>& GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::dyn_missionObjectives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::dyn_missionObjectives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missionObjectives"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionObjective*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionObjectiveResult[] missionObjectiveResults
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionObjectiveResult*>& GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::dyn_missionObjectiveResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::dyn_missionObjectiveResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missionObjectiveResults"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionObjectiveResult*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionResultsViewController/<>c__DisplayClass29_0.<SetDataToUI>b__0
void GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::$SetDataToUI$b__0(int idx, ::GlobalNamespace::ResultObjectiveListItem* objectiveListItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::<SetDataToUI>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetDataToUI>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(objectiveListItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, objectiveListItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionSelectionMapViewController
#include "GlobalNamespace/MissionSelectionMapViewController.hpp"
// Including type: MissionSelectionMapViewController/<>c__DisplayClass15_0
#include "GlobalNamespace/MissionSelectionMapViewController_--c__DisplayClass15_0.hpp"
// Including type: MissionSelectionMapViewController/<SongPlayerCrossfadeToLevelAsync>d__15
#include "GlobalNamespace/MissionSelectionMapViewController_-SongPlayerCrossfadeToLevelAsync-d__15.hpp"
// Including type: HMUI.ScrollView
#include "HMUI/ScrollView.hpp"
// Including type: MissionNodeSelectionManager
#include "GlobalNamespace/MissionNodeSelectionManager.hpp"
// Including type: MissionMapAnimationController
#include "GlobalNamespace/MissionMapAnimationController.hpp"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: PerceivedLoudnessPerLevelModel
#include "GlobalNamespace/PerceivedLoudnessPerLevelModel.hpp"
// Including type: AudioClipAsyncLoader
#include "GlobalNamespace/AudioClipAsyncLoader.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.ScrollView _mapScrollView
[[deprecated("Use field access instead!")]] ::HMUI::ScrollView*& GlobalNamespace::MissionSelectionMapViewController::dyn__mapScrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::dyn__mapScrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mapScrollView"))->offset;
  return *reinterpret_cast<::HMUI::ScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodeSelectionManager _missionNodeSelectionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodeSelectionManager*& GlobalNamespace::MissionSelectionMapViewController::dyn__missionNodeSelectionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::dyn__missionNodeSelectionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodeSelectionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodeSelectionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionMapAnimationController _missionMapAnimationController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionMapAnimationController*& GlobalNamespace::MissionSelectionMapViewController::dyn__missionMapAnimationController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::dyn__missionMapAnimationController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionMapAnimationController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionMapAnimationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPreviewPlayer _songPreviewPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPreviewPlayer*& GlobalNamespace::MissionSelectionMapViewController::dyn__songPreviewPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::dyn__songPreviewPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPreviewPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPreviewPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PerceivedLoudnessPerLevelModel _perceivedLoudnessPerLevelModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PerceivedLoudnessPerLevelModel*& GlobalNamespace::MissionSelectionMapViewController::dyn__perceivedLoudnessPerLevelModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::dyn__perceivedLoudnessPerLevelModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_perceivedLoudnessPerLevelModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PerceivedLoudnessPerLevelModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioClipAsyncLoader _audioClipAsyncLoader
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioClipAsyncLoader*& GlobalNamespace::MissionSelectionMapViewController::dyn__audioClipAsyncLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::dyn__audioClipAsyncLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClipAsyncLoader"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioClipAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<MissionSelectionMapViewController,MissionNode> didSelectMissionLevelEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::MissionSelectionMapViewController*, ::GlobalNamespace::MissionNode*>*& GlobalNamespace::MissionSelectionMapViewController::dyn_didSelectMissionLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::dyn_didSelectMissionLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectMissionLevelEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::MissionSelectionMapViewController*, ::GlobalNamespace::MissionNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNode _selectedMissionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNode*& GlobalNamespace::MissionSelectionMapViewController::dyn__selectedMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::dyn__selectedMissionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedMissionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionSelectionMapViewController.get_animatedUpdateIsRequired
bool GlobalNamespace::MissionSelectionMapViewController::get_animatedUpdateIsRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::get_animatedUpdateIsRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animatedUpdateIsRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionSelectionMapViewController.add_didSelectMissionLevelEvent
void GlobalNamespace::MissionSelectionMapViewController::add_didSelectMissionLevelEvent(::System::Action_2<::GlobalNamespace::MissionSelectionMapViewController*, ::GlobalNamespace::MissionNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::add_didSelectMissionLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectMissionLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionSelectionMapViewController.remove_didSelectMissionLevelEvent
void GlobalNamespace::MissionSelectionMapViewController::remove_didSelectMissionLevelEvent(::System::Action_2<::GlobalNamespace::MissionSelectionMapViewController*, ::GlobalNamespace::MissionNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::remove_didSelectMissionLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectMissionLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionSelectionMapViewController.HandleMissionNodeSelectionManagerDidSelectMissionNode
void GlobalNamespace::MissionSelectionMapViewController::HandleMissionNodeSelectionManagerDidSelectMissionNode(::GlobalNamespace::MissionNodeVisualController* missionNodeVisualController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::HandleMissionNodeSelectionManagerDidSelectMissionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionNodeSelectionManagerDidSelectMissionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionNodeVisualController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionNodeVisualController);
}
// Autogenerated method: MissionSelectionMapViewController.SongPlayerCrossfadeToLevelAsync
void GlobalNamespace::MissionSelectionMapViewController::SongPlayerCrossfadeToLevelAsync(::GlobalNamespace::IPreviewBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::SongPlayerCrossfadeToLevelAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SongPlayerCrossfadeToLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: MissionSelectionMapViewController.ShowMissionClearedAnimation
void GlobalNamespace::MissionSelectionMapViewController::ShowMissionClearedAnimation(::System::Action* finishCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::ShowMissionClearedAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowMissionClearedAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finishCallback);
}
// Autogenerated method: MissionSelectionMapViewController.DeselectSelectedNode
void GlobalNamespace::MissionSelectionMapViewController::DeselectSelectedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::DeselectSelectedNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeselectSelectedNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionSelectionMapViewController.DidActivate
void GlobalNamespace::MissionSelectionMapViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: MissionSelectionMapViewController.DidDeactivate
void GlobalNamespace::MissionSelectionMapViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionSelectionMapViewController/<>c__DisplayClass15_0
#include "GlobalNamespace/MissionSelectionMapViewController_--c__DisplayClass15_0.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MissionSelectionMapViewController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionSelectionMapViewController*& GlobalNamespace::MissionSelectionMapViewController::$$c__DisplayClass15_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::$$c__DisplayClass15_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionSelectionMapViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IPreviewBeatmapLevel level
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::MissionSelectionMapViewController::$$c__DisplayClass15_0::dyn_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::$$c__DisplayClass15_0::dyn_level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "level"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionSelectionMapViewController/<>c__DisplayClass15_0.<SongPlayerCrossfadeToLevelAsync>b__0
void GlobalNamespace::MissionSelectionMapViewController::$$c__DisplayClass15_0::$SongPlayerCrossfadeToLevelAsync$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::$$c__DisplayClass15_0::<SongPlayerCrossfadeToLevelAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SongPlayerCrossfadeToLevelAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionSelectionMapViewController/<SongPlayerCrossfadeToLevelAsync>d__15
#include "GlobalNamespace/MissionSelectionMapViewController_-SongPlayerCrossfadeToLevelAsync-d__15.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: MissionSelectionMapViewController/<>c__DisplayClass15_0
#include "GlobalNamespace/MissionSelectionMapViewController_--c__DisplayClass15_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionSelectionMapViewController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionSelectionMapViewController*& GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionSelectionMapViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IPreviewBeatmapLevel level
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::dyn_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::dyn_level");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "level"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionSelectionMapViewController/<>c__DisplayClass15_0 <>8__1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionSelectionMapViewController::$$c__DisplayClass15_0*& GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::dyn_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionSelectionMapViewController::$$c__DisplayClass15_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <musicVolume>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::dyn_$musicVolume$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::dyn_$musicVolume$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<musicVolume>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.AudioClip> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::AudioClip*>& GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionSelectionMapViewController/<SongPlayerCrossfadeToLevelAsync>d__15.MoveNext
void GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionSelectionMapViewController/<SongPlayerCrossfadeToLevelAsync>d__15.SetStateMachine
void GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionMapViewController::$SongPlayerCrossfadeToLevelAsync$d__15::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionSelectionNavigationController
#include "GlobalNamespace/MissionSelectionNavigationController.hpp"
// Including type: MissionSelectionNavigationController/<>c__DisplayClass11_0
#include "GlobalNamespace/MissionSelectionNavigationController_--c__DisplayClass11_0.hpp"
// Including type: MissionSelectionMapViewController
#include "GlobalNamespace/MissionSelectionMapViewController.hpp"
// Including type: MissionLevelDetailViewController
#include "GlobalNamespace/MissionLevelDetailViewController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionSelectionMapViewController _missionSelectionMapViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionSelectionMapViewController*& GlobalNamespace::MissionSelectionNavigationController::dyn__missionSelectionMapViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionNavigationController::dyn__missionSelectionMapViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionSelectionMapViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionSelectionMapViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionLevelDetailViewController _missionLevelDetailViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionLevelDetailViewController*& GlobalNamespace::MissionSelectionNavigationController::dyn__missionLevelDetailViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionNavigationController::dyn__missionLevelDetailViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelDetailViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionLevelDetailViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MissionSelectionNavigationController> didPressPlayButtonEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MissionSelectionNavigationController*>*& GlobalNamespace::MissionSelectionNavigationController::dyn_didPressPlayButtonEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionNavigationController::dyn_didPressPlayButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressPlayButtonEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MissionSelectionNavigationController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionSelectionNavigationController.get_selectedMissionNode
::GlobalNamespace::MissionNode* GlobalNamespace::MissionSelectionNavigationController::get_selectedMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionNavigationController::get_selectedMissionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedMissionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionSelectionNavigationController.add_didPressPlayButtonEvent
void GlobalNamespace::MissionSelectionNavigationController::add_didPressPlayButtonEvent(::System::Action_1<::GlobalNamespace::MissionSelectionNavigationController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionNavigationController::add_didPressPlayButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressPlayButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionSelectionNavigationController.remove_didPressPlayButtonEvent
void GlobalNamespace::MissionSelectionNavigationController::remove_didPressPlayButtonEvent(::System::Action_1<::GlobalNamespace::MissionSelectionNavigationController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionNavigationController::remove_didPressPlayButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressPlayButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionSelectionNavigationController.HandleMissionSelectionMapViewControllerDidSelectMissionLevel
void GlobalNamespace::MissionSelectionNavigationController::HandleMissionSelectionMapViewControllerDidSelectMissionLevel(::GlobalNamespace::MissionSelectionMapViewController* viewController, ::GlobalNamespace::MissionNode* _missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionNavigationController::HandleMissionSelectionMapViewControllerDidSelectMissionLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionSelectionMapViewControllerDidSelectMissionLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(_missionNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController, _missionNode);
}
// Autogenerated method: MissionSelectionNavigationController.HandleMissionLevelDetailViewControllerDidPressPlayButton
void GlobalNamespace::MissionSelectionNavigationController::HandleMissionLevelDetailViewControllerDidPressPlayButton(::GlobalNamespace::MissionLevelDetailViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionNavigationController::HandleMissionLevelDetailViewControllerDidPressPlayButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionLevelDetailViewControllerDidPressPlayButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: MissionSelectionNavigationController.PresentMissionClearedIfNeeded
void GlobalNamespace::MissionSelectionNavigationController::PresentMissionClearedIfNeeded(::System::Action_1<bool>* finishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionNavigationController::PresentMissionClearedIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentMissionClearedIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishedCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finishedCallback);
}
// Autogenerated method: MissionSelectionNavigationController.DidActivate
void GlobalNamespace::MissionSelectionNavigationController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionNavigationController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: MissionSelectionNavigationController.DidDeactivate
void GlobalNamespace::MissionSelectionNavigationController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionNavigationController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionSelectionNavigationController/<>c__DisplayClass11_0
#include "GlobalNamespace/MissionSelectionNavigationController_--c__DisplayClass11_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MissionSelectionNavigationController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionSelectionNavigationController*& GlobalNamespace::MissionSelectionNavigationController::$$c__DisplayClass11_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionNavigationController::$$c__DisplayClass11_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionSelectionNavigationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> finishedCallback
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& GlobalNamespace::MissionSelectionNavigationController::$$c__DisplayClass11_0::dyn_finishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionNavigationController::$$c__DisplayClass11_0::dyn_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action <>9__1
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::MissionSelectionNavigationController::$$c__DisplayClass11_0::dyn_$$9__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionNavigationController::$$c__DisplayClass11_0::dyn_$$9__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__1"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionSelectionNavigationController/<>c__DisplayClass11_0.<PresentMissionClearedIfNeeded>b__0
void GlobalNamespace::MissionSelectionNavigationController::$$c__DisplayClass11_0::$PresentMissionClearedIfNeeded$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionNavigationController::$$c__DisplayClass11_0::<PresentMissionClearedIfNeeded>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentMissionClearedIfNeeded>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionSelectionNavigationController/<>c__DisplayClass11_0.<PresentMissionClearedIfNeeded>b__1
void GlobalNamespace::MissionSelectionNavigationController::$$c__DisplayClass11_0::$PresentMissionClearedIfNeeded$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionSelectionNavigationController::$$c__DisplayClass11_0::<PresentMissionClearedIfNeeded>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentMissionClearedIfNeeded>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseMultiplayerStartGameCountdownViewController
#include "GlobalNamespace/BaseMultiplayerStartGameCountdownViewController.hpp"
// Including type: BeatmapSelectionView
#include "GlobalNamespace/BeatmapSelectionView.hpp"
// Including type: ModifiersSelectionView
#include "GlobalNamespace/ModifiersSelectionView.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: ILevelGameplaySetupData
#include "GlobalNamespace/ILevelGameplaySetupData.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapSelectionView _beatmapSelectionView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapSelectionView*& GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::dyn__beatmapSelectionView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::dyn__beatmapSelectionView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapSelectionView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapSelectionView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ModifiersSelectionView _modifiersSelectionView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ModifiersSelectionView*& GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::dyn__modifiersSelectionView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::dyn__modifiersSelectionView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modifiersSelectionView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ModifiersSelectionView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.Toggle _spectateToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::dyn__spectateToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::dyn__spectateToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectateToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> playerActiveStateChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::dyn_playerActiveStateChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::dyn_playerActiveStateChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerActiveStateChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ToggleBinder _toggleBinder
[[deprecated("Use field access instead!")]] ::HMUI::ToggleBinder*& GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::dyn__toggleBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::dyn__toggleBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggleBinder"))->offset;
  return *reinterpret_cast<::HMUI::ToggleBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseMultiplayerStartGameCountdownViewController.add_playerActiveStateChangedEvent
void GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::add_playerActiveStateChangedEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::add_playerActiveStateChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerActiveStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseMultiplayerStartGameCountdownViewController.remove_playerActiveStateChangedEvent
void GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::remove_playerActiveStateChangedEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::remove_playerActiveStateChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerActiveStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseMultiplayerStartGameCountdownViewController.SetLevelGameplaySetupData
void GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::SetLevelGameplaySetupData(::GlobalNamespace::ILevelGameplaySetupData* levelGameplaySetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::SetLevelGameplaySetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLevelGameplaySetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelGameplaySetupData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelGameplaySetupData);
}
// Autogenerated method: BaseMultiplayerStartGameCountdownViewController.SetLobbyPlayerData
void GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::SetLobbyPlayerData(::GlobalNamespace::ILobbyPlayerData* lobbyPlayerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::SetLobbyPlayerData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLobbyPlayerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyPlayerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyPlayerData);
}
// Autogenerated method: BaseMultiplayerStartGameCountdownViewController.<DidActivate>b__9_0
void GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::$DidActivate$b__9_0(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::<DidActivate>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseMultiplayerStartGameCountdownViewController.DidActivate
void GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: BaseMultiplayerStartGameCountdownViewController.DidDeactivate
void GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: BaseMultiplayerStartGameCountdownViewController.OnDestroy
void GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CenterStageLobbyViewController
#include "GlobalNamespace/CenterStageLobbyViewController.hpp"
// Including type: BeatmapSelectionView
#include "GlobalNamespace/BeatmapSelectionView.hpp"
// Including type: ModifiersSelectionView
#include "GlobalNamespace/ModifiersSelectionView.hpp"
// Including type: ILevelGameplaySetupData
#include "GlobalNamespace/ILevelGameplaySetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapSelectionView _beatmapSelectionView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapSelectionView*& GlobalNamespace::CenterStageLobbyViewController::dyn__beatmapSelectionView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageLobbyViewController::dyn__beatmapSelectionView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapSelectionView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapSelectionView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ModifiersSelectionView _modifiersSelectionView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ModifiersSelectionView*& GlobalNamespace::CenterStageLobbyViewController::dyn__modifiersSelectionView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageLobbyViewController::dyn__modifiersSelectionView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modifiersSelectionView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ModifiersSelectionView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CenterStageLobbyViewController.SetLevelGameplaySetupData
void GlobalNamespace::CenterStageLobbyViewController::SetLevelGameplaySetupData(::GlobalNamespace::ILevelGameplaySetupData* levelGameplaySetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageLobbyViewController::SetLevelGameplaySetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLevelGameplaySetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelGameplaySetupData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelGameplaySetupData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CenterStageScreenController
#include "GlobalNamespace/CenterStageScreenController.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: BeatmapSelectionView
#include "GlobalNamespace/BeatmapSelectionView.hpp"
// Including type: ModifiersSelectionView
#include "GlobalNamespace/ModifiersSelectionView.hpp"
// Including type: CountdownController
#include "GlobalNamespace/CountdownController.hpp"
// Including type: MultiplayerLobbyCenterScreenLayoutAnimator
#include "GlobalNamespace/MultiplayerLobbyCenterScreenLayoutAnimator.hpp"
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: ILevelGameplaySetupData
#include "GlobalNamespace/ILevelGameplaySetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected MenuLightsPresetSO _defaultMenuLightsPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::CenterStageScreenController::dyn__defaultMenuLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::dyn__defaultMenuLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultMenuLightsPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected MenuLightsPresetSO _lobbyLightsPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::CenterStageScreenController::dyn__lobbyLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::dyn__lobbyLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyLightsPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected MenuLightsPresetSO _countdownMenuLightsPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::CenterStageScreenController::dyn__countdownMenuLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::dyn__countdownMenuLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_countdownMenuLightsPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapSelectionView _beatmapSelectionView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapSelectionView*& GlobalNamespace::CenterStageScreenController::dyn__beatmapSelectionView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::dyn__beatmapSelectionView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapSelectionView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapSelectionView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ModifiersSelectionView _modifiersSelectionView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ModifiersSelectionView*& GlobalNamespace::CenterStageScreenController::dyn__modifiersSelectionView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::dyn__modifiersSelectionView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modifiersSelectionView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ModifiersSelectionView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CountdownController _countdownController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CountdownController*& GlobalNamespace::CenterStageScreenController::dyn__countdownController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::dyn__countdownController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_countdownController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CountdownController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLobbyCenterScreenLayoutAnimator _multiplayerLobbyCenterScreenLayoutAnimator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator*& GlobalNamespace::CenterStageScreenController::dyn__multiplayerLobbyCenterScreenLayoutAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::dyn__multiplayerLobbyCenterScreenLayoutAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLobbyCenterScreenLayoutAnimator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyGameStateController _lobbyGameStateController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyGameStateController*& GlobalNamespace::CenterStageScreenController::dyn__lobbyGameStateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::dyn__lobbyGameStateController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyGameStateController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyGameStateController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuLightsManager _menuLightsManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsManager*& GlobalNamespace::CenterStageScreenController::dyn__menuLightsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::dyn__menuLightsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuLightsManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <countdownShown>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CenterStageScreenController::dyn_$countdownShown$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::dyn_$countdownShown$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<countdownShown>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _countdownEndTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CenterStageScreenController::dyn__countdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::dyn__countdownEndTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_countdownEndTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CenterStageScreenController.get_countdownShown
bool GlobalNamespace::CenterStageScreenController::get_countdownShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::get_countdownShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_countdownShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CenterStageScreenController.set_countdownShown
void GlobalNamespace::CenterStageScreenController::set_countdownShown(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::set_countdownShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_countdownShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CenterStageScreenController.Setup
void GlobalNamespace::CenterStageScreenController::Setup(bool showModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showModifiers);
}
// Autogenerated method: CenterStageScreenController.Show
void GlobalNamespace::CenterStageScreenController::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CenterStageScreenController.Hide
void GlobalNamespace::CenterStageScreenController::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CenterStageScreenController.ShowCountdown
void GlobalNamespace::CenterStageScreenController::ShowCountdown(float countdownEndTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::ShowCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(countdownEndTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, countdownEndTime);
}
// Autogenerated method: CenterStageScreenController.HideCountdown
void GlobalNamespace::CenterStageScreenController::HideCountdown(bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::HideCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instant);
}
// Autogenerated method: CenterStageScreenController.SetCountdownEndTime
void GlobalNamespace::CenterStageScreenController::SetCountdownEndTime(float countdownEndTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::SetCountdownEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(countdownEndTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, countdownEndTime);
}
// Autogenerated method: CenterStageScreenController.ShowCountdownColorPreset
void GlobalNamespace::CenterStageScreenController::ShowCountdownColorPreset(bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::ShowCountdownColorPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowCountdownColorPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animated);
}
// Autogenerated method: CenterStageScreenController.ShowLobbyColorPreset
void GlobalNamespace::CenterStageScreenController::ShowLobbyColorPreset(bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::ShowLobbyColorPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowLobbyColorPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animated);
}
// Autogenerated method: CenterStageScreenController.HandleLobbyGameStateControllerSelectedLevelGameplaySetupDataChanged
void GlobalNamespace::CenterStageScreenController::HandleLobbyGameStateControllerSelectedLevelGameplaySetupDataChanged(::GlobalNamespace::ILevelGameplaySetupData* levelGameplaySetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::HandleLobbyGameStateControllerSelectedLevelGameplaySetupDataChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerSelectedLevelGameplaySetupDataChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelGameplaySetupData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelGameplaySetupData);
}
// Autogenerated method: CenterStageScreenController.SetNextGameplaySetupData
void GlobalNamespace::CenterStageScreenController::SetNextGameplaySetupData(::GlobalNamespace::ILevelGameplaySetupData* levelGameplaySetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CenterStageScreenController::SetNextGameplaySetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNextGameplaySetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelGameplaySetupData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelGameplaySetupData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreateServerViewController
#include "GlobalNamespace/CreateServerViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: CreateServerFormController
#include "GlobalNamespace/CreateServerFormController.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MultiplayerModeSettings
#include "GlobalNamespace/MultiplayerModeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _createServerButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::CreateServerViewController::dyn__createServerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerViewController::dyn__createServerButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_createServerButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _cancelCreateServerButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::CreateServerViewController::dyn__cancelCreateServerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerViewController::dyn__cancelCreateServerButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelCreateServerButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CreateServerFormController _createServerFormController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CreateServerFormController*& GlobalNamespace::CreateServerViewController::dyn__createServerFormController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerViewController::dyn__createServerFormController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_createServerFormController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CreateServerFormController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.Boolean,CreateServerFormData> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<bool, ::GlobalNamespace::CreateServerFormData>*& GlobalNamespace::CreateServerViewController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerViewController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<bool, ::GlobalNamespace::CreateServerFormData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerModeSettings _multiplayerModeSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerModeSettings*& GlobalNamespace::CreateServerViewController::dyn__multiplayerModeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerViewController::dyn__multiplayerModeSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerModeSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerModeSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreateServerViewController.get_multiplayerModeSettings
::GlobalNamespace::MultiplayerModeSettings* GlobalNamespace::CreateServerViewController::get_multiplayerModeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerViewController::get_multiplayerModeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerModeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerModeSettings*, false>(this, ___internal__method);
}
// Autogenerated method: CreateServerViewController.add_didFinishEvent
void GlobalNamespace::CreateServerViewController::add_didFinishEvent(::System::Action_2<bool, ::GlobalNamespace::CreateServerFormData>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CreateServerViewController.remove_didFinishEvent
void GlobalNamespace::CreateServerViewController::remove_didFinishEvent(::System::Action_2<bool, ::GlobalNamespace::CreateServerFormData>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CreateServerViewController.Setup
void GlobalNamespace::CreateServerViewController::Setup(::GlobalNamespace::MultiplayerModeSettings* multiplayerModeSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerModeSettings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, multiplayerModeSettings);
}
// Autogenerated method: CreateServerViewController.ApplyAndGetData
::GlobalNamespace::CreateServerFormData GlobalNamespace::CreateServerViewController::ApplyAndGetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerViewController::ApplyAndGetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyAndGetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::CreateServerFormData, false>(this, ___internal__method);
}
// Autogenerated method: CreateServerViewController.<DidActivate>b__10_0
void GlobalNamespace::CreateServerViewController::$DidActivate$b__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerViewController::<DidActivate>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreateServerViewController.<DidActivate>b__10_1
void GlobalNamespace::CreateServerViewController::$DidActivate$b__10_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerViewController::<DidActivate>b__10_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreateServerViewController.DidActivate
void GlobalNamespace::CreateServerViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerBrowserStackedController
#include "GlobalNamespace/GameServerBrowserStackedController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameServerBrowserStackedController.DidActivate
void GlobalNamespace::GameServerBrowserStackedController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerBrowserStackedController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: GameServerBrowserStackedController.DidDeactivate
void GlobalNamespace::GameServerBrowserStackedController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerBrowserStackedController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerBrowserViewController
#include "GlobalNamespace/GameServerBrowserViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: GameServersFilterText
#include "GlobalNamespace/GameServersFilterText.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: GameServersListTableView
#include "GlobalNamespace/GameServersListTableView.hpp"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _filterServersButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::GameServerBrowserViewController::dyn__filterServersButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerBrowserViewController::dyn__filterServersButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filterServersButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameServersFilterText _filterText
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServersFilterText*& GlobalNamespace::GameServerBrowserViewController::dyn__filterText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerBrowserViewController::dyn__filterText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filterText"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServersFilterText**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _canBeInvitedOnLocalNetworkToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::GameServerBrowserViewController::dyn__canBeInvitedOnLocalNetworkToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerBrowserViewController::dyn__canBeInvitedOnLocalNetworkToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canBeInvitedOnLocalNetworkToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _createServerButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::GameServerBrowserViewController::dyn__createServerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerBrowserViewController::dyn__createServerButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_createServerButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameServersListTableView _gameServersListTableView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServersListTableView*& GlobalNamespace::GameServerBrowserViewController::dyn__gameServersListTableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerBrowserViewController::dyn__gameServersListTableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServersListTableView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServersListTableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LoadingControl _mainLoadingControl
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LoadingControl*& GlobalNamespace::GameServerBrowserViewController::dyn__mainLoadingControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerBrowserViewController::dyn__mainLoadingControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainLoadingControl"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LoadingControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LoadingControl _smallLoadingControl
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LoadingControl*& GlobalNamespace::GameServerBrowserViewController::dyn__smallLoadingControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerBrowserViewController::dyn__smallLoadingControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smallLoadingControl"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LoadingControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServersFilterViewController
#include "GlobalNamespace/GameServersFilterViewController.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: BeatmapDifficultyDropdown
#include "GlobalNamespace/BeatmapDifficultyDropdown.hpp"
// Including type: GameplayModifiersDropdown
#include "GlobalNamespace/GameplayModifiersDropdown.hpp"
// Including type: SongPacksDropdown
#include "GlobalNamespace/SongPacksDropdown.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: GameServersFilter
#include "GlobalNamespace/GameServersFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _filterByDifficultyToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::GameServersFilterViewController::dyn__filterByDifficultyToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::dyn__filterByDifficultyToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filterByDifficultyToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _filterByDifficultyButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::GameServersFilterViewController::dyn__filterByDifficultyButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::dyn__filterByDifficultyButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filterByDifficultyButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficultyDropdown _beatmapDifficultyDropdown
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficultyDropdown*& GlobalNamespace::GameServersFilterViewController::dyn__beatmapDifficultyDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::dyn__beatmapDifficultyDropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficultyDropdown"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficultyDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _filterByModifiersToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::GameServersFilterViewController::dyn__filterByModifiersToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::dyn__filterByModifiersToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filterByModifiersToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _filterByModifiersButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::GameServersFilterViewController::dyn__filterByModifiersButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::dyn__filterByModifiersButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filterByModifiersButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersDropdown _gameplayModifiersDropdown
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiersDropdown*& GlobalNamespace::GameServersFilterViewController::dyn__gameplayModifiersDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::dyn__gameplayModifiersDropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersDropdown"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiersDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _filterBySongsToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::GameServersFilterViewController::dyn__filterBySongsToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::dyn__filterBySongsToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filterBySongsToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _filterBySongsButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::GameServersFilterViewController::dyn__filterBySongsButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::dyn__filterBySongsButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filterBySongsButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPacksDropdown _songPacksDropdown
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPacksDropdown*& GlobalNamespace::GameServersFilterViewController::dyn__songPacksDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::dyn__songPacksDropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPacksDropdown"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPacksDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _showFullToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::GameServersFilterViewController::dyn__showFullToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::dyn__showFullToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showFullToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _showPasswordProtectedToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::GameServersFilterViewController::dyn__showPasswordProtectedToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::dyn__showPasswordProtectedToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showPasswordProtectedToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ToggleBinder _toggleBinder
[[deprecated("Use field access instead!")]] ::HMUI::ToggleBinder*& GlobalNamespace::GameServersFilterViewController::dyn__toggleBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::dyn__toggleBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggleBinder"))->offset;
  return *reinterpret_cast<::HMUI::ToggleBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showInternetGames
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServersFilterViewController::dyn__showInternetGames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::dyn__showInternetGames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showInternetGames"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServersFilterViewController.get_gameServersFilter
::GlobalNamespace::GameServersFilter* GlobalNamespace::GameServersFilterViewController::get_gameServersFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::get_gameServersFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameServersFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameServersFilter*, false>(this, ___internal__method);
}
// Autogenerated method: GameServersFilterViewController.SetupGameServersFilter
void GlobalNamespace::GameServersFilterViewController::SetupGameServersFilter(::GlobalNamespace::GameServersFilter* gameServersFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::SetupGameServersFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupGameServersFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameServersFilter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameServersFilter);
}
// Autogenerated method: GameServersFilterViewController.Refresh
void GlobalNamespace::GameServersFilterViewController::Refresh(::GlobalNamespace::GameServersFilter* currentFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentFilter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentFilter);
}
// Autogenerated method: GameServersFilterViewController.<DidActivate>b__16_0
void GlobalNamespace::GameServersFilterViewController::$DidActivate$b__16_0(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::<DidActivate>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: GameServersFilterViewController.<DidActivate>b__16_1
void GlobalNamespace::GameServersFilterViewController::$DidActivate$b__16_1(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::<DidActivate>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: GameServersFilterViewController.<DidActivate>b__16_2
void GlobalNamespace::GameServersFilterViewController::$DidActivate$b__16_2(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::<DidActivate>b__16_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__16_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: GameServersFilterViewController.DidActivate
void GlobalNamespace::GameServersFilterViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: GameServersFilterViewController.OnDestroy
void GlobalNamespace::GameServersFilterViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: JoinQuickPlayViewController
#include "GlobalNamespace/JoinQuickPlayViewController.hpp"
// Including type: BeatmapDifficultyDropdown
#include "GlobalNamespace/BeatmapDifficultyDropdown.hpp"
// Including type: QuickPlaySongPacksDropdown
#include "GlobalNamespace/QuickPlaySongPacksDropdown.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MultiplayerModeSettings
#include "GlobalNamespace/MultiplayerModeSettings.hpp"
// Including type: QuickPlaySetupData
#include "GlobalNamespace/QuickPlaySetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficultyDropdown _beatmapDifficultyDropdown
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficultyDropdown*& GlobalNamespace::JoinQuickPlayViewController::dyn__beatmapDifficultyDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoinQuickPlayViewController::dyn__beatmapDifficultyDropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficultyDropdown"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficultyDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private QuickPlaySongPacksDropdown _songPacksDropdown
[[deprecated("Use field access instead!")]] ::GlobalNamespace::QuickPlaySongPacksDropdown*& GlobalNamespace::JoinQuickPlayViewController::dyn__songPacksDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoinQuickPlayViewController::dyn__songPacksDropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPacksDropdown"))->offset;
  return *reinterpret_cast<::GlobalNamespace::QuickPlaySongPacksDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _levelSelectionToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::JoinQuickPlayViewController::dyn__levelSelectionToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoinQuickPlayViewController::dyn__levelSelectionToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelSelectionToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _joinButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::JoinQuickPlayViewController::dyn__joinButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoinQuickPlayViewController::dyn__joinButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joinButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _cancelJoinButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::JoinQuickPlayViewController::dyn__cancelJoinButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoinQuickPlayViewController::dyn__cancelJoinButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelJoinButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& GlobalNamespace::JoinQuickPlayViewController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoinQuickPlayViewController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerModeSettings _multiplayerModeSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerModeSettings*& GlobalNamespace::JoinQuickPlayViewController::dyn__multiplayerModeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoinQuickPlayViewController::dyn__multiplayerModeSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerModeSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerModeSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: JoinQuickPlayViewController.get_multiplayerModeSettings
::GlobalNamespace::MultiplayerModeSettings* GlobalNamespace::JoinQuickPlayViewController::get_multiplayerModeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoinQuickPlayViewController::get_multiplayerModeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerModeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerModeSettings*, false>(this, ___internal__method);
}
// Autogenerated method: JoinQuickPlayViewController.add_didFinishEvent
void GlobalNamespace::JoinQuickPlayViewController::add_didFinishEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoinQuickPlayViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: JoinQuickPlayViewController.remove_didFinishEvent
void GlobalNamespace::JoinQuickPlayViewController::remove_didFinishEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoinQuickPlayViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: JoinQuickPlayViewController.Setup
void GlobalNamespace::JoinQuickPlayViewController::Setup(::GlobalNamespace::QuickPlaySetupData* quickPlaySetupData, ::GlobalNamespace::MultiplayerModeSettings* multiplayerModeSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoinQuickPlayViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(quickPlaySetupData), ::il2cpp_utils::ExtractType(multiplayerModeSettings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, quickPlaySetupData, multiplayerModeSettings);
}
// Autogenerated method: JoinQuickPlayViewController.ButtonPressed
void GlobalNamespace::JoinQuickPlayViewController::ButtonPressed(bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoinQuickPlayViewController::ButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success);
}
// Autogenerated method: JoinQuickPlayViewController.<DidActivate>b__12_0
void GlobalNamespace::JoinQuickPlayViewController::$DidActivate$b__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoinQuickPlayViewController::<DidActivate>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: JoinQuickPlayViewController.<DidActivate>b__12_1
void GlobalNamespace::JoinQuickPlayViewController::$DidActivate$b__12_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoinQuickPlayViewController::<DidActivate>b__12_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__12_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: JoinQuickPlayViewController.DidActivate
void GlobalNamespace::JoinQuickPlayViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoinQuickPlayViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: JoiningLobbyViewController
#include "GlobalNamespace/JoiningLobbyViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _cancelJoiningButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::JoiningLobbyViewController::dyn__cancelJoiningButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoiningLobbyViewController::dyn__cancelJoiningButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelJoiningButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LoadingControl _loadingControl
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LoadingControl*& GlobalNamespace::JoiningLobbyViewController::dyn__loadingControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoiningLobbyViewController::dyn__loadingControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadingControl"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LoadingControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _text
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::JoiningLobbyViewController::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoiningLobbyViewController::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didCancelEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::JoiningLobbyViewController::dyn_didCancelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoiningLobbyViewController::dyn_didCancelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didCancelEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: JoiningLobbyViewController.add_didCancelEvent
void GlobalNamespace::JoiningLobbyViewController::add_didCancelEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoiningLobbyViewController::add_didCancelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didCancelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: JoiningLobbyViewController.remove_didCancelEvent
void GlobalNamespace::JoiningLobbyViewController::remove_didCancelEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoiningLobbyViewController::remove_didCancelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didCancelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: JoiningLobbyViewController.Init
void GlobalNamespace::JoiningLobbyViewController::Init(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoiningLobbyViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: JoiningLobbyViewController.HideLoading
void GlobalNamespace::JoiningLobbyViewController::HideLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoiningLobbyViewController::HideLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: JoiningLobbyViewController.<DidActivate>b__8_0
void GlobalNamespace::JoiningLobbyViewController::$DidActivate$b__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoiningLobbyViewController::<DidActivate>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: JoiningLobbyViewController.DidActivate
void GlobalNamespace::JoiningLobbyViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::JoiningLobbyViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbySetupViewController
#include "GlobalNamespace/LobbySetupViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: Polyglot.LocalizedTextMeshProUGUI
#include "Polyglot/LocalizedTextMeshProUGUI.hpp"
// Including type: GameServersFilterText
#include "GlobalNamespace/GameServersFilterText.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: EditableBeatmapSelectionView
#include "GlobalNamespace/EditableBeatmapSelectionView.hpp"
// Including type: EditableModifiersSelectionView
#include "GlobalNamespace/EditableModifiersSelectionView.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
// Including type: CannotStartGameReason
#include "GlobalNamespace/CannotStartGameReason.hpp"
// Including type: MultiplayerLobbyState
#include "GlobalNamespace/MultiplayerLobbyState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x10EB9DC
// Autogenerated static field getter
// Get static field: static private System.String kStartTextKey
::StringW GlobalNamespace::LobbySetupViewController::_get_kStartTextKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::_get_kStartTextKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "LobbySetupViewController", "kStartTextKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kStartTextKey
void GlobalNamespace::LobbySetupViewController::_set_kStartTextKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::_set_kStartTextKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LobbySetupViewController", "kStartTextKey", value));
}
// [LocalizationKeyAttribute] Offset: 0x10EB9EC
// Autogenerated static field getter
// Get static field: static private System.String kCancelTextKey
::StringW GlobalNamespace::LobbySetupViewController::_get_kCancelTextKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::_get_kCancelTextKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "LobbySetupViewController", "kCancelTextKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCancelTextKey
void GlobalNamespace::LobbySetupViewController::_set_kCancelTextKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::_set_kCancelTextKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LobbySetupViewController", "kCancelTextKey", value));
}
// [LocalizationKeyAttribute] Offset: 0x10EB9FC
// Autogenerated static field getter
// Get static field: static private System.String kReadyTextKey
::StringW GlobalNamespace::LobbySetupViewController::_get_kReadyTextKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::_get_kReadyTextKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "LobbySetupViewController", "kReadyTextKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kReadyTextKey
void GlobalNamespace::LobbySetupViewController::_set_kReadyTextKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::_set_kReadyTextKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LobbySetupViewController", "kReadyTextKey", value));
}
// [LocalizationKeyAttribute] Offset: 0x10EBA0C
// Autogenerated static field getter
// Get static field: static private System.String kUnreadyTextKey
::StringW GlobalNamespace::LobbySetupViewController::_get_kUnreadyTextKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::_get_kUnreadyTextKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "LobbySetupViewController", "kUnreadyTextKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kUnreadyTextKey
void GlobalNamespace::LobbySetupViewController::_set_kUnreadyTextKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::_set_kUnreadyTextKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LobbySetupViewController", "kUnreadyTextKey", value));
}
// [LocalizationKeyAttribute] Offset: 0x10EBA1C
// Autogenerated static field getter
// Get static field: static private System.String kRetryTextKey
::StringW GlobalNamespace::LobbySetupViewController::_get_kRetryTextKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::_get_kRetryTextKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "LobbySetupViewController", "kRetryTextKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kRetryTextKey
void GlobalNamespace::LobbySetupViewController::_set_kRetryTextKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::_set_kRetryTextKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LobbySetupViewController", "kRetryTextKey", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _startGameReadyButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::LobbySetupViewController::dyn__startGameReadyButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn__startGameReadyButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startGameReadyButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _cancelGameUnreadyButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::LobbySetupViewController::dyn__cancelGameUnreadyButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn__cancelGameUnreadyButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelGameUnreadyButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.LocalizedTextMeshProUGUI _startReadyText
[[deprecated("Use field access instead!")]] ::Polyglot::LocalizedTextMeshProUGUI*& GlobalNamespace::LobbySetupViewController::dyn__startReadyText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn__startReadyText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startReadyText"))->offset;
  return *reinterpret_cast<::Polyglot::LocalizedTextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.LocalizedTextMeshProUGUI _cancelUnreadyText
[[deprecated("Use field access instead!")]] ::Polyglot::LocalizedTextMeshProUGUI*& GlobalNamespace::LobbySetupViewController::dyn__cancelUnreadyText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn__cancelUnreadyText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelUnreadyText"))->offset;
  return *reinterpret_cast<::Polyglot::LocalizedTextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameServersFilterText _serverSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServersFilterText*& GlobalNamespace::LobbySetupViewController::dyn__serverSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn__serverSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServersFilterText**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _suggestionHeader
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::LobbySetupViewController::dyn__suggestionHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn__suggestionHeader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suggestionHeader"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EditableBeatmapSelectionView _beatmapSelectionView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EditableBeatmapSelectionView*& GlobalNamespace::LobbySetupViewController::dyn__beatmapSelectionView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn__beatmapSelectionView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapSelectionView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EditableBeatmapSelectionView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EditableModifiersSelectionView _modifiersSelectionView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EditableModifiersSelectionView*& GlobalNamespace::LobbySetupViewController::dyn__modifiersSelectionView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn__modifiersSelectionView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modifiersSelectionView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EditableModifiersSelectionView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.HoverHint _cantStartGameHoverHint
[[deprecated("Use field access instead!")]] ::HMUI::HoverHint*& GlobalNamespace::LobbySetupViewController::dyn__cantStartGameHoverHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn__cantStartGameHoverHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cantStartGameHoverHint"))->offset;
  return *reinterpret_cast<::HMUI::HoverHint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _playerMissingLevelHoverHintWrapper
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::LobbySetupViewController::dyn__playerMissingLevelHoverHintWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn__playerMissingLevelHoverHintWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerMissingLevelHoverHintWrapper"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.HoverHint _playersMissingLevelHoverHint
[[deprecated("Use field access instead!")]] ::HMUI::HoverHint*& GlobalNamespace::LobbySetupViewController::dyn__playersMissingLevelHoverHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn__playersMissingLevelHoverHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersMissingLevelHoverHint"))->offset;
  return *reinterpret_cast<::HMUI::HoverHint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _spectatorWarningTextWrapper
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::LobbySetupViewController::dyn__spectatorWarningTextWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn__spectatorWarningTextWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectatorWarningTextWrapper"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ToggleBinder _toggleBinder
[[deprecated("Use field access instead!")]] ::HMUI::ToggleBinder*& GlobalNamespace::LobbySetupViewController::dyn__toggleBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn__toggleBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggleBinder"))->offset;
  return *reinterpret_cast<::HMUI::ToggleBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action selectBeatmapEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LobbySetupViewController::dyn_selectBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn_selectBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectBeatmapEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action selectModifiersEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LobbySetupViewController::dyn_selectModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn_selectModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectModifiersEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action startGameOrReadyEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LobbySetupViewController::dyn_startGameOrReadyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn_startGameOrReadyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startGameOrReadyEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action cancelGameOrUnreadyEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LobbySetupViewController::dyn_cancelGameOrUnreadyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn_cancelGameOrUnreadyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelGameOrUnreadyEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action clearSuggestedBeatmapEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LobbySetupViewController::dyn_clearSuggestedBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn_clearSuggestedBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearSuggestedBeatmapEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action clearSuggestedModifiersEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LobbySetupViewController::dyn_clearSuggestedModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn_clearSuggestedModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearSuggestedModifiersEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isPartyOwner
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LobbySetupViewController::dyn__isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn__isPartyOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isPartyOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isQuickStart
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LobbySetupViewController::dyn__isQuickStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::dyn__isQuickStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isQuickStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbySetupViewController.add_selectBeatmapEvent
void GlobalNamespace::LobbySetupViewController::add_selectBeatmapEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::add_selectBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbySetupViewController.remove_selectBeatmapEvent
void GlobalNamespace::LobbySetupViewController::remove_selectBeatmapEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::remove_selectBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbySetupViewController.add_selectModifiersEvent
void GlobalNamespace::LobbySetupViewController::add_selectModifiersEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::add_selectModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbySetupViewController.remove_selectModifiersEvent
void GlobalNamespace::LobbySetupViewController::remove_selectModifiersEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::remove_selectModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbySetupViewController.add_startGameOrReadyEvent
void GlobalNamespace::LobbySetupViewController::add_startGameOrReadyEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::add_startGameOrReadyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startGameOrReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbySetupViewController.remove_startGameOrReadyEvent
void GlobalNamespace::LobbySetupViewController::remove_startGameOrReadyEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::remove_startGameOrReadyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startGameOrReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbySetupViewController.add_cancelGameOrUnreadyEvent
void GlobalNamespace::LobbySetupViewController::add_cancelGameOrUnreadyEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::add_cancelGameOrUnreadyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelGameOrUnreadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbySetupViewController.remove_cancelGameOrUnreadyEvent
void GlobalNamespace::LobbySetupViewController::remove_cancelGameOrUnreadyEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::remove_cancelGameOrUnreadyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelGameOrUnreadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbySetupViewController.add_clearSuggestedBeatmapEvent
void GlobalNamespace::LobbySetupViewController::add_clearSuggestedBeatmapEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::add_clearSuggestedBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clearSuggestedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbySetupViewController.remove_clearSuggestedBeatmapEvent
void GlobalNamespace::LobbySetupViewController::remove_clearSuggestedBeatmapEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::remove_clearSuggestedBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clearSuggestedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbySetupViewController.add_clearSuggestedModifiersEvent
void GlobalNamespace::LobbySetupViewController::add_clearSuggestedModifiersEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::add_clearSuggestedModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clearSuggestedModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbySetupViewController.remove_clearSuggestedModifiersEvent
void GlobalNamespace::LobbySetupViewController::remove_clearSuggestedModifiersEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::remove_clearSuggestedModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clearSuggestedModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbySetupViewController.Setup
void GlobalNamespace::LobbySetupViewController::Setup(::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, bool isPartyOwner, bool allowSongSelection, bool allowModifierSelection, bool isManaged, bool isQuickStart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(allowSongSelection), ::il2cpp_utils::ExtractType(allowModifierSelection), ::il2cpp_utils::ExtractType(isManaged), ::il2cpp_utils::ExtractType(isQuickStart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectionMask, isPartyOwner, allowSongSelection, allowModifierSelection, isManaged, isQuickStart);
}
// Autogenerated method: LobbySetupViewController.SetLobbyPlayerData
void GlobalNamespace::LobbySetupViewController::SetLobbyPlayerData(::GlobalNamespace::ILobbyPlayerData* lobbyPlayerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::SetLobbyPlayerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLobbyPlayerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyPlayerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyPlayerData);
}
// Autogenerated method: LobbySetupViewController.SetPlayersMissingLevelText
void GlobalNamespace::LobbySetupViewController::SetPlayersMissingLevelText(::StringW playersMissingLevelText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::SetPlayersMissingLevelText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayersMissingLevelText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersMissingLevelText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playersMissingLevelText);
}
// Autogenerated method: LobbySetupViewController.SetPlayerActiveState
void GlobalNamespace::LobbySetupViewController::SetPlayerActiveState(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::SetPlayerActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isActive);
}
// Autogenerated method: LobbySetupViewController.SetStartGameEnabled
void GlobalNamespace::LobbySetupViewController::SetStartGameEnabled(::GlobalNamespace::CannotStartGameReason cannotStartGameReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::SetStartGameEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartGameEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cannotStartGameReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cannotStartGameReason);
}
// Autogenerated method: LobbySetupViewController.SetLobbyState
void GlobalNamespace::LobbySetupViewController::SetLobbyState(::GlobalNamespace::MultiplayerLobbyState lobbyState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::SetLobbyState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLobbyState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyState);
}
// Autogenerated method: LobbySetupViewController.<DidActivate>b__44_0
void GlobalNamespace::LobbySetupViewController::$DidActivate$b__44_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::<DidActivate>b__44_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbySetupViewController.<DidActivate>b__44_1
void GlobalNamespace::LobbySetupViewController::$DidActivate$b__44_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::<DidActivate>b__44_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbySetupViewController.<DidActivate>b__44_2
void GlobalNamespace::LobbySetupViewController::$DidActivate$b__44_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::<DidActivate>b__44_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbySetupViewController.<DidActivate>b__44_3
void GlobalNamespace::LobbySetupViewController::$DidActivate$b__44_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::<DidActivate>b__44_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbySetupViewController.<DidActivate>b__44_4
void GlobalNamespace::LobbySetupViewController::$DidActivate$b__44_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::<DidActivate>b__44_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbySetupViewController.<DidActivate>b__44_5
void GlobalNamespace::LobbySetupViewController::$DidActivate$b__44_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::<DidActivate>b__44_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbySetupViewController.DidActivate
void GlobalNamespace::LobbySetupViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: LobbySetupViewController.OnDestroy
void GlobalNamespace::LobbySetupViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbySetupViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerModeSelectionViewController
#include "GlobalNamespace/MultiplayerModeSelectionViewController.hpp"
// Including type: MultiplayerStatusData
#include "GlobalNamespace/MultiplayerStatusData.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _quickPlayButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MultiplayerModeSelectionViewController::dyn__quickPlayButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::dyn__quickPlayButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_quickPlayButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _gameBrowserButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MultiplayerModeSelectionViewController::dyn__gameBrowserButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::dyn__gameBrowserButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameBrowserButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _joinWithCodeButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MultiplayerModeSelectionViewController::dyn__joinWithCodeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::dyn__joinWithCodeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joinWithCodeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _createServerButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MultiplayerModeSelectionViewController::dyn__createServerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::dyn__createServerButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_createServerButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _maintenanceMessageText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MultiplayerModeSelectionViewController::dyn__maintenanceMessageText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::dyn__maintenanceMessageText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maintenanceMessageText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _customServerEndPointText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MultiplayerModeSelectionViewController::dyn__customServerEndPointText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::dyn__customServerEndPointText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customServerEndPointText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly INetworkConfig _networkConfig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkConfig*& GlobalNamespace::MultiplayerModeSelectionViewController::dyn__networkConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::dyn__networkConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkConfig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<MultiplayerModeSelectionViewController,MultiplayerModeSelectionViewController/MenuButton> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::MultiplayerModeSelectionViewController*, ::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>*& GlobalNamespace::MultiplayerModeSelectionViewController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::MultiplayerModeSelectionViewController*, ::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerModeSelectionViewController.add_didFinishEvent
void GlobalNamespace::MultiplayerModeSelectionViewController::add_didFinishEvent(::System::Action_2<::GlobalNamespace::MultiplayerModeSelectionViewController*, ::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerModeSelectionViewController.remove_didFinishEvent
void GlobalNamespace::MultiplayerModeSelectionViewController::remove_didFinishEvent(::System::Action_2<::GlobalNamespace::MultiplayerModeSelectionViewController*, ::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerModeSelectionViewController.SetData
void GlobalNamespace::MultiplayerModeSelectionViewController::SetData(::GlobalNamespace::MultiplayerStatusData* multiplayerStatusData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerStatusData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, multiplayerStatusData);
}
// Autogenerated method: MultiplayerModeSelectionViewController.HandleMenuButton
void GlobalNamespace::MultiplayerModeSelectionViewController::HandleMenuButton(::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton menuButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::HandleMenuButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(menuButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, menuButton);
}
// Autogenerated method: MultiplayerModeSelectionViewController.<DidActivate>b__11_0
void GlobalNamespace::MultiplayerModeSelectionViewController::$DidActivate$b__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::<DidActivate>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionViewController.<DidActivate>b__11_1
void GlobalNamespace::MultiplayerModeSelectionViewController::$DidActivate$b__11_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::<DidActivate>b__11_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__11_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionViewController.<DidActivate>b__11_2
void GlobalNamespace::MultiplayerModeSelectionViewController::$DidActivate$b__11_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::<DidActivate>b__11_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__11_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionViewController.<DidActivate>b__11_3
void GlobalNamespace::MultiplayerModeSelectionViewController::$DidActivate$b__11_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::<DidActivate>b__11_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__11_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionViewController.DidActivate
void GlobalNamespace::MultiplayerModeSelectionViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerModeSelectionViewController/MenuButton
#include "GlobalNamespace/MultiplayerModeSelectionViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerModeSelectionViewController/MenuButton QuickPlay
::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_get_QuickPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_get_QuickPlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>("", "MultiplayerModeSelectionViewController/MenuButton", "QuickPlay"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerModeSelectionViewController/MenuButton QuickPlay
void GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_set_QuickPlay(::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_set_QuickPlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerModeSelectionViewController/MenuButton", "QuickPlay", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerModeSelectionViewController/MenuButton CreateServer
::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_get_CreateServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_get_CreateServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>("", "MultiplayerModeSelectionViewController/MenuButton", "CreateServer"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerModeSelectionViewController/MenuButton CreateServer
void GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_set_CreateServer(::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_set_CreateServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerModeSelectionViewController/MenuButton", "CreateServer", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerModeSelectionViewController/MenuButton JoinWithCode
::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_get_JoinWithCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_get_JoinWithCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>("", "MultiplayerModeSelectionViewController/MenuButton", "JoinWithCode"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerModeSelectionViewController/MenuButton JoinWithCode
void GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_set_JoinWithCode(::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_set_JoinWithCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerModeSelectionViewController/MenuButton", "JoinWithCode", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerModeSelectionViewController/MenuButton GameBrowser
::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_get_GameBrowser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_get_GameBrowser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>("", "MultiplayerModeSelectionViewController/MenuButton", "GameBrowser"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerModeSelectionViewController/MenuButton GameBrowser
void GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_set_GameBrowser(::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_set_GameBrowser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerModeSelectionViewController/MenuButton", "GameBrowser", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerResultsViewController
#include "GlobalNamespace/MultiplayerResultsViewController.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: ResultsTableView
#include "GlobalNamespace/ResultsTableView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _levelClearedGO
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MultiplayerResultsViewController::dyn__levelClearedGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::dyn__levelClearedGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelClearedGO"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _levelFailedGO
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MultiplayerResultsViewController::dyn__levelFailedGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::dyn__levelFailedGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelFailedGO"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _levelResultsGO
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MultiplayerResultsViewController::dyn__levelResultsGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::dyn__levelResultsGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelResultsGO"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelBar _levelBar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelBar*& GlobalNamespace::MultiplayerResultsViewController::dyn__levelBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::dyn__levelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ResultsTableView _resultsTableView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ResultsTableView*& GlobalNamespace::MultiplayerResultsViewController::dyn__resultsTableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::dyn__resultsTableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsTableView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ResultsTableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _backToLobbyButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MultiplayerResultsViewController::dyn__backToLobbyButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::dyn__backToLobbyButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backToLobbyButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _backToMenuButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::MultiplayerResultsViewController::dyn__backToMenuButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::dyn__backToMenuButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backToMenuButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MultiplayerResultsViewController> backToLobbyPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MultiplayerResultsViewController*>*& GlobalNamespace::MultiplayerResultsViewController::dyn_backToLobbyPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::dyn_backToLobbyPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backToLobbyPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MultiplayerResultsViewController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MultiplayerResultsViewController> backToMenuPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MultiplayerResultsViewController*>*& GlobalNamespace::MultiplayerResultsViewController::dyn_backToMenuPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::dyn_backToMenuPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backToMenuPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MultiplayerResultsViewController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerResultsViewController.add_backToLobbyPressedEvent
void GlobalNamespace::MultiplayerResultsViewController::add_backToLobbyPressedEvent(::System::Action_1<::GlobalNamespace::MultiplayerResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::add_backToLobbyPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_backToLobbyPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerResultsViewController.remove_backToLobbyPressedEvent
void GlobalNamespace::MultiplayerResultsViewController::remove_backToLobbyPressedEvent(::System::Action_1<::GlobalNamespace::MultiplayerResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::remove_backToLobbyPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_backToLobbyPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerResultsViewController.add_backToMenuPressedEvent
void GlobalNamespace::MultiplayerResultsViewController::add_backToMenuPressedEvent(::System::Action_1<::GlobalNamespace::MultiplayerResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::add_backToMenuPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_backToMenuPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerResultsViewController.remove_backToMenuPressedEvent
void GlobalNamespace::MultiplayerResultsViewController::remove_backToMenuPressedEvent(::System::Action_1<::GlobalNamespace::MultiplayerResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::remove_backToMenuPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_backToMenuPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerResultsViewController.Init
void GlobalNamespace::MultiplayerResultsViewController::Init(::GlobalNamespace::MultiplayerResultsData* multiplayerResultsData, ::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, ::GlobalNamespace::BeatmapDifficulty beatmapDifficulty, ::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, bool showBackToLobbyButton, bool showBackToMenuButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerResultsData), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(showBackToLobbyButton), ::il2cpp_utils::ExtractType(showBackToMenuButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, multiplayerResultsData, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, showBackToLobbyButton, showBackToMenuButton);
}
// Autogenerated method: MultiplayerResultsViewController.BackToLobbyPressed
void GlobalNamespace::MultiplayerResultsViewController::BackToLobbyPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::BackToLobbyPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackToLobbyPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsViewController.BackToMenuPressed
void GlobalNamespace::MultiplayerResultsViewController::BackToMenuPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::BackToMenuPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackToMenuPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsViewController.DidActivate
void GlobalNamespace::MultiplayerResultsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectModifiersViewController
#include "GlobalNamespace/SelectModifiersViewController.hpp"
// Including type: GameplayModifiersPanelController
#include "GlobalNamespace/GameplayModifiersPanelController.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersPanelController _gameplayModifiersPanelController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiersPanelController*& GlobalNamespace::SelectModifiersViewController::dyn__gameplayModifiersPanelController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectModifiersViewController::dyn__gameplayModifiersPanelController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersPanelController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiersPanelController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SelectModifiersViewController.get_gameplayModifiers
::GlobalNamespace::GameplayModifiers* GlobalNamespace::SelectModifiersViewController::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectModifiersViewController::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: SelectModifiersViewController.Setup
void GlobalNamespace::SelectModifiersViewController::Setup(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectModifiersViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: SelectModifiersViewController.DidActivate
void GlobalNamespace::SelectModifiersViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectModifiersViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ServerCodeEntryViewController
#include "GlobalNamespace/ServerCodeEntryViewController.hpp"
// Including type: HMUI.UIKeyboard
#include "HMUI/UIKeyboard.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: HMUI.InputFieldViewChangeBinder
#include "HMUI/InputFieldViewChangeBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.UIKeyboard _uiKeyboard
[[deprecated("Use field access instead!")]] ::HMUI::UIKeyboard*& GlobalNamespace::ServerCodeEntryViewController::dyn__uiKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeEntryViewController::dyn__uiKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uiKeyboard"))->offset;
  return *reinterpret_cast<::HMUI::UIKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.InputFieldView _codeInputField
[[deprecated("Use field access instead!")]] ::HMUI::InputFieldView*& GlobalNamespace::ServerCodeEntryViewController::dyn__codeInputField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeEntryViewController::dyn__codeInputField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codeInputField"))->offset;
  return *reinterpret_cast<::HMUI::InputFieldView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _joinButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::ServerCodeEntryViewController::dyn__joinButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeEntryViewController::dyn__joinButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joinButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _cancelButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::ServerCodeEntryViewController::dyn__cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeEntryViewController::dyn__cancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.Boolean,System.String> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<bool, ::StringW>*& GlobalNamespace::ServerCodeEntryViewController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeEntryViewController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<bool, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.InputFieldViewChangeBinder _inputFieldViewChangeBinder
[[deprecated("Use field access instead!")]] ::HMUI::InputFieldViewChangeBinder*& GlobalNamespace::ServerCodeEntryViewController::dyn__inputFieldViewChangeBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeEntryViewController::dyn__inputFieldViewChangeBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputFieldViewChangeBinder"))->offset;
  return *reinterpret_cast<::HMUI::InputFieldViewChangeBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ServerCodeEntryViewController.add_didFinishEvent
void GlobalNamespace::ServerCodeEntryViewController::add_didFinishEvent(::System::Action_2<bool, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeEntryViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerCodeEntryViewController.remove_didFinishEvent
void GlobalNamespace::ServerCodeEntryViewController::remove_didFinishEvent(::System::Action_2<bool, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeEntryViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerCodeEntryViewController.HandleInputFieldChanged
void GlobalNamespace::ServerCodeEntryViewController::HandleInputFieldChanged(::HMUI::InputFieldView* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeEntryViewController::HandleInputFieldChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFieldChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: ServerCodeEntryViewController.HandleJoinButtonPressed
void GlobalNamespace::ServerCodeEntryViewController::HandleJoinButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeEntryViewController::HandleJoinButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerCodeEntryViewController.HandleCancelButtonPressed
void GlobalNamespace::ServerCodeEntryViewController::HandleCancelButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeEntryViewController::HandleCancelButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCancelButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerCodeEntryViewController.DidActivate
void GlobalNamespace::ServerCodeEntryViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeEntryViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: ServerCodeEntryViewController.DidDeactivate
void GlobalNamespace::ServerCodeEntryViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeEntryViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: ServerCodeEntryViewController.OnDestroy
void GlobalNamespace::ServerCodeEntryViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeEntryViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ServerPasswordEntryViewController
#include "GlobalNamespace/ServerPasswordEntryViewController.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: HMUI.UIKeyboard
#include "HMUI/UIKeyboard.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.InputFieldView _passwordInput
[[deprecated("Use field access instead!")]] ::HMUI::InputFieldView*& GlobalNamespace::ServerPasswordEntryViewController::dyn__passwordInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPasswordEntryViewController::dyn__passwordInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_passwordInput"))->offset;
  return *reinterpret_cast<::HMUI::InputFieldView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.UIKeyboard _uiKeyboard
[[deprecated("Use field access instead!")]] ::HMUI::UIKeyboard*& GlobalNamespace::ServerPasswordEntryViewController::dyn__uiKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPasswordEntryViewController::dyn__uiKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uiKeyboard"))->offset;
  return *reinterpret_cast<::HMUI::UIKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<INetworkPlayer,System.String> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::INetworkPlayer*, ::StringW>*& GlobalNamespace::ServerPasswordEntryViewController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPasswordEntryViewController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::INetworkPlayer*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayer _selectedNetworkPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkPlayer*& GlobalNamespace::ServerPasswordEntryViewController::dyn__selectedNetworkPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPasswordEntryViewController::dyn__selectedNetworkPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedNetworkPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ServerPasswordEntryViewController.add_didFinishEvent
void GlobalNamespace::ServerPasswordEntryViewController::add_didFinishEvent(::System::Action_2<::GlobalNamespace::INetworkPlayer*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPasswordEntryViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPasswordEntryViewController.remove_didFinishEvent
void GlobalNamespace::ServerPasswordEntryViewController::remove_didFinishEvent(::System::Action_2<::GlobalNamespace::INetworkPlayer*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPasswordEntryViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPasswordEntryViewController.Setup
void GlobalNamespace::ServerPasswordEntryViewController::Setup(::GlobalNamespace::INetworkPlayer* selectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPasswordEntryViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectedPlayer);
}
// Autogenerated method: ServerPasswordEntryViewController.HandleJoinClicked
void GlobalNamespace::ServerPasswordEntryViewController::HandleJoinClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPasswordEntryViewController::HandleJoinClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerPasswordEntryViewController.HandleUIKeyboardOkButtonWasPressed
void GlobalNamespace::ServerPasswordEntryViewController::HandleUIKeyboardOkButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPasswordEntryViewController::HandleUIKeyboardOkButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUIKeyboardOkButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerPasswordEntryViewController.DidActivate
void GlobalNamespace::ServerPasswordEntryViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPasswordEntryViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: ServerPasswordEntryViewController.DidDeactivate
void GlobalNamespace::ServerPasswordEntryViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPasswordEntryViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ServerPlayerListViewController
#include "GlobalNamespace/ServerPlayerListViewController.hpp"
// Including type: GameServerPlayersTableView
#include "GlobalNamespace/GameServerPlayersTableView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
// Including type: IInvitePlatformHandler
#include "GlobalNamespace/IInvitePlatformHandler.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: MultiplayerLobbyState
#include "GlobalNamespace/MultiplayerLobbyState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameServerPlayersTableView _gameServerPlayersTableView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerPlayersTableView*& GlobalNamespace::ServerPlayerListViewController::dyn__gameServerPlayersTableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::dyn__gameServerPlayersTableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerPlayersTableView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerPlayersTableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _invitePlayerButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::ServerPlayerListViewController::dyn__invitePlayerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::dyn__invitePlayerButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_invitePlayerButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.HoverHint _cantInvitePlayerHoverHint
[[deprecated("Use field access instead!")]] ::HMUI::HoverHint*& GlobalNamespace::ServerPlayerListViewController::dyn__cantInvitePlayerHoverHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::dyn__cantInvitePlayerHoverHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cantInvitePlayerHoverHint"))->offset;
  return *reinterpret_cast<::HMUI::HoverHint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IInvitePlatformHandler _invitePlatformHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IInvitePlatformHandler*& GlobalNamespace::ServerPlayerListViewController::dyn__invitePlatformHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::dyn__invitePlatformHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_invitePlatformHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IInvitePlatformHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyPlayersDataModel _lobbyPlayersDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyPlayersDataModel*& GlobalNamespace::ServerPlayerListViewController::dyn__lobbyPlayersDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::dyn__lobbyPlayersDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayersDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyPlayersDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyStateDataModel _lobbyStateDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyStateDataModel*& GlobalNamespace::ServerPlayerListViewController::dyn__lobbyStateDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::dyn__lobbyStateDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyStateDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyStateDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LobbyPlayerPermissionsModel*& GlobalNamespace::ServerPlayerListViewController::dyn__lobbyPlayerPermissionsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::dyn__lobbyPlayerPermissionsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayerPermissionsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyPlayerPermissionsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyGameStateController _lobbyGameStateController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyGameStateController*& GlobalNamespace::ServerPlayerListViewController::dyn__lobbyGameStateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::dyn__lobbyGameStateController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyGameStateController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyGameStateController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<PreviewDifficultyBeatmap> selectSuggestedBeatmapEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::PreviewDifficultyBeatmap*>*& GlobalNamespace::ServerPlayerListViewController::dyn_selectSuggestedBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::dyn_selectSuggestedBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectSuggestedBeatmapEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::PreviewDifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<GameplayModifiers> selectSuggestedGameplayModifiersEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::GameplayModifiers*>*& GlobalNamespace::ServerPlayerListViewController::dyn_selectSuggestedGameplayModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::dyn_selectSuggestedGameplayModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectSuggestedGameplayModifiersEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::GameplayModifiers*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> kickPlayerEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::ServerPlayerListViewController::dyn_kickPlayerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::dyn_kickPlayerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kickPlayerEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didOpenInvitePanelEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::ServerPlayerListViewController::dyn_didOpenInvitePanelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::dyn_didOpenInvitePanelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didOpenInvitePanelEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ButtonBinder _buttonBinder
[[deprecated("Use field access instead!")]] ::HMUI::ButtonBinder*& GlobalNamespace::ServerPlayerListViewController::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ServerPlayerListViewController.add_selectSuggestedBeatmapEvent
void GlobalNamespace::ServerPlayerListViewController::add_selectSuggestedBeatmapEvent(::System::Action_1<::GlobalNamespace::PreviewDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::add_selectSuggestedBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectSuggestedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPlayerListViewController.remove_selectSuggestedBeatmapEvent
void GlobalNamespace::ServerPlayerListViewController::remove_selectSuggestedBeatmapEvent(::System::Action_1<::GlobalNamespace::PreviewDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::remove_selectSuggestedBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectSuggestedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPlayerListViewController.add_selectSuggestedGameplayModifiersEvent
void GlobalNamespace::ServerPlayerListViewController::add_selectSuggestedGameplayModifiersEvent(::System::Action_1<::GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::add_selectSuggestedGameplayModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectSuggestedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPlayerListViewController.remove_selectSuggestedGameplayModifiersEvent
void GlobalNamespace::ServerPlayerListViewController::remove_selectSuggestedGameplayModifiersEvent(::System::Action_1<::GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::remove_selectSuggestedGameplayModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectSuggestedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPlayerListViewController.add_kickPlayerEvent
void GlobalNamespace::ServerPlayerListViewController::add_kickPlayerEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::add_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPlayerListViewController.remove_kickPlayerEvent
void GlobalNamespace::ServerPlayerListViewController::remove_kickPlayerEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::remove_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPlayerListViewController.add_didOpenInvitePanelEvent
void GlobalNamespace::ServerPlayerListViewController::add_didOpenInvitePanelEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::add_didOpenInvitePanelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didOpenInvitePanelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPlayerListViewController.remove_didOpenInvitePanelEvent
void GlobalNamespace::ServerPlayerListViewController::remove_didOpenInvitePanelEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::remove_didOpenInvitePanelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didOpenInvitePanelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPlayerListViewController.HandleLobbyPlayersDataDidChange
void GlobalNamespace::ServerPlayerListViewController::HandleLobbyPlayersDataDidChange(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::HandleLobbyPlayersDataDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyPlayersDataDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: ServerPlayerListViewController.HandleLobbyGameStateControllerLobbyStateChanged
void GlobalNamespace::ServerPlayerListViewController::HandleLobbyGameStateControllerLobbyStateChanged(::GlobalNamespace::MultiplayerLobbyState _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::HandleLobbyGameStateControllerLobbyStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerLobbyStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _);
}
// Autogenerated method: ServerPlayerListViewController.HandleLobbyPlayerPermissionChanged
void GlobalNamespace::ServerPlayerListViewController::HandleLobbyPlayerPermissionChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::HandleLobbyPlayerPermissionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyPlayerPermissionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerPlayerListViewController.SetDataToTable
void GlobalNamespace::ServerPlayerListViewController::SetDataToTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::SetDataToTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataToTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerPlayerListViewController.HandleSelectSuggestedLevel
void GlobalNamespace::ServerPlayerListViewController::HandleSelectSuggestedLevel(::GlobalNamespace::PreviewDifficultyBeatmap* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::HandleSelectSuggestedLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectSuggestedLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: ServerPlayerListViewController.HandleSelectSuggestedGameplayModifiers
void GlobalNamespace::ServerPlayerListViewController::HandleSelectSuggestedGameplayModifiers(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::HandleSelectSuggestedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectSuggestedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: ServerPlayerListViewController.HandleKickPlayer
void GlobalNamespace::ServerPlayerListViewController::HandleKickPlayer(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::HandleKickPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: ServerPlayerListViewController.HandleOpenPlatformInvitePanel
void GlobalNamespace::ServerPlayerListViewController::HandleOpenPlatformInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::HandleOpenPlatformInvitePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOpenPlatformInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerPlayerListViewController.TrySetInviteButtonEnabled
void GlobalNamespace::ServerPlayerListViewController::TrySetInviteButtonEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::TrySetInviteButtonEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySetInviteButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerPlayerListViewController.DidActivate
void GlobalNamespace::ServerPlayerListViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: ServerPlayerListViewController.DidDeactivate
void GlobalNamespace::ServerPlayerListViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerPlayerListViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkPlayersViewController
#include "GlobalNamespace/NetworkPlayersViewController.hpp"
// Including type: NetworkPlayersTableView
#include "GlobalNamespace/NetworkPlayersTableView.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NetworkPlayersTableView _networkPlayersTableView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkPlayersTableView*& GlobalNamespace::NetworkPlayersViewController::dyn__networkPlayersTableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::dyn__networkPlayersTableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkPlayersTableView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkPlayersTableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _refreshIsNeeded
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NetworkPlayersViewController::dyn__refreshIsNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::dyn__refreshIsNeeded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refreshIsNeeded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayer> onJoinRequestEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayer*>*& GlobalNamespace::NetworkPlayersViewController::dyn_onJoinRequestEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::dyn_onJoinRequestEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onJoinRequestEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayer> onInviteRequestEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayer*>*& GlobalNamespace::NetworkPlayersViewController::dyn_onInviteRequestEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::dyn_onInviteRequestEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onInviteRequestEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkPlayersViewController.get_myPartyTitle
::StringW GlobalNamespace::NetworkPlayersViewController::get_myPartyTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::get_myPartyTitle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_myPartyTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayersViewController.get_otherPlayersTitle
::StringW GlobalNamespace::NetworkPlayersViewController::get_otherPlayersTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::get_otherPlayersTitle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_otherPlayersTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayersViewController.get_networkPlayerModel
::GlobalNamespace::INetworkPlayerModel* GlobalNamespace::NetworkPlayersViewController::get_networkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::get_networkPlayerModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_networkPlayerModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::INetworkPlayerModel*, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayersViewController.add_onJoinRequestEvent
void GlobalNamespace::NetworkPlayersViewController::add_onJoinRequestEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::add_onJoinRequestEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onJoinRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkPlayersViewController.remove_onJoinRequestEvent
void GlobalNamespace::NetworkPlayersViewController::remove_onJoinRequestEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::remove_onJoinRequestEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onJoinRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkPlayersViewController.add_onInviteRequestEvent
void GlobalNamespace::NetworkPlayersViewController::add_onInviteRequestEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::add_onInviteRequestEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onInviteRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkPlayersViewController.remove_onInviteRequestEvent
void GlobalNamespace::NetworkPlayersViewController::remove_onInviteRequestEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::remove_onInviteRequestEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onInviteRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkPlayersViewController.NetworkPlayersViewControllerDidActivate
void GlobalNamespace::NetworkPlayersViewController::NetworkPlayersViewControllerDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::NetworkPlayersViewControllerDidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NetworkPlayersViewControllerDidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: NetworkPlayersViewController.NetworkPlayersViewControllerDidDeactivate
void GlobalNamespace::NetworkPlayersViewController::NetworkPlayersViewControllerDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::NetworkPlayersViewControllerDidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NetworkPlayersViewControllerDidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: NetworkPlayersViewController.HandlePartyChanged
void GlobalNamespace::NetworkPlayersViewController::HandlePartyChanged(::GlobalNamespace::INetworkPlayerModel* playerModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::HandlePartyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePartyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerModel);
}
// Autogenerated method: NetworkPlayersViewController.HandleJoinRequest
void GlobalNamespace::NetworkPlayersViewController::HandleJoinRequest(::GlobalNamespace::INetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::HandleJoinRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: NetworkPlayersViewController.HandleInviteRequest
void GlobalNamespace::NetworkPlayersViewController::HandleInviteRequest(::GlobalNamespace::INetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::HandleInviteRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInviteRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: NetworkPlayersViewController.Refresh
void GlobalNamespace::NetworkPlayersViewController::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayersViewController.DidActivate
void GlobalNamespace::NetworkPlayersViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: NetworkPlayersViewController.DidDeactivate
void GlobalNamespace::NetworkPlayersViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: NetworkPlayersViewController.OnDestroy
void GlobalNamespace::NetworkPlayersViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServicesInfoViewController
#include "GlobalNamespace/OnlineServicesInfoViewController.hpp"
// Including type: OnlineServicesInfoViewController/<GetServerStatus>d__8
#include "GlobalNamespace/OnlineServicesInfoViewController_-GetServerStatus-d__8.hpp"
// Including type: HMUI.TextPageScrollView
#include "HMUI/TextPageScrollView.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: OnlineServices.ServerManager
#include "OnlineServices/ServerManager.hpp"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.TextPageScrollView _textPageScrollView
[[deprecated("Use field access instead!")]] ::HMUI::TextPageScrollView*& GlobalNamespace::OnlineServicesInfoViewController::dyn__textPageScrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::dyn__textPageScrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textPageScrollView"))->offset;
  return *reinterpret_cast<::HMUI::TextPageScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO _testBeatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSO*& GlobalNamespace::OnlineServicesInfoViewController::dyn__testBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::dyn__testBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_testBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _testBeatmapCharacteristic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::OnlineServicesInfoViewController::dyn__testBeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::dyn__testBeatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_testBeatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _refreshButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OnlineServicesInfoViewController::dyn__refreshButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::dyn__refreshButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refreshButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OnlineServices.ServerManager _serverManager
[[deprecated("Use field access instead!")]] ::OnlineServices::ServerManager*& GlobalNamespace::OnlineServicesInfoViewController::dyn__serverManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::dyn__serverManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverManager"))->offset;
  return *reinterpret_cast<::OnlineServices::ServerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IPlatformUserModel _platformUserModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPlatformUserModel*& GlobalNamespace::OnlineServicesInfoViewController::dyn__platformUserModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::dyn__platformUserModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformUserModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPlatformUserModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder _sb
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& GlobalNamespace::OnlineServicesInfoViewController::dyn__sb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::dyn__sb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sb"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OnlineServicesInfoViewController.GetServerStatus
void GlobalNamespace::OnlineServicesInfoViewController::GetServerStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::GetServerStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServerStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OnlineServicesInfoViewController.AppendLine
void GlobalNamespace::OnlineServicesInfoViewController::AppendLine(::StringW line) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, line);
}
// Autogenerated method: OnlineServicesInfoViewController.DidActivate
void GlobalNamespace::OnlineServicesInfoViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServicesInfoViewController/<GetServerStatus>d__8
#include "GlobalNamespace/OnlineServicesInfoViewController_-GetServerStatus-d__8.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
// Including type: OnlineServices.LeaderboardEntriesResult
#include "OnlineServices/LeaderboardEntriesResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OnlineServicesInfoViewController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OnlineServicesInfoViewController*& GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OnlineServicesInfoViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UserInfo> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::UserInfo*>& GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::UserInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<OnlineServices.LeaderboardEntriesResult> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::OnlineServices::LeaderboardEntriesResult*>& GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::OnlineServices::LeaderboardEntriesResult*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OnlineServicesInfoViewController/<GetServerStatus>d__8.MoveNext
void GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OnlineServicesInfoViewController/<GetServerStatus>d__8.SetStateMachine
void GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServicesSettingsViewController
#include "GlobalNamespace/OnlineServicesSettingsViewController.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BoolSO _onlineServicesEnabled
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BoolSO*& GlobalNamespace::OnlineServicesSettingsViewController::dyn__onlineServicesEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesSettingsViewController::dyn__onlineServicesEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onlineServicesEnabled"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _enableOnlineServicesToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::OnlineServicesSettingsViewController::dyn__enableOnlineServicesToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesSettingsViewController::dyn__enableOnlineServicesToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enableOnlineServicesToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ToggleBinder _toggleBinder
[[deprecated("Use field access instead!")]] ::HMUI::ToggleBinder*& GlobalNamespace::OnlineServicesSettingsViewController::dyn__toggleBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesSettingsViewController::dyn__toggleBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggleBinder"))->offset;
  return *reinterpret_cast<::HMUI::ToggleBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OnlineServicesSettingsViewController.HandleEnableOnlineServicesToggleValueChanged
void GlobalNamespace::OnlineServicesSettingsViewController::HandleEnableOnlineServicesToggleValueChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesSettingsViewController::HandleEnableOnlineServicesToggleValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEnableOnlineServicesToggleValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OnlineServicesSettingsViewController.DidActivate
void GlobalNamespace::OnlineServicesSettingsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesSettingsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServicesViewController
#include "GlobalNamespace/OnlineServicesViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _enableButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OnlineServicesViewController::dyn__enableButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesViewController::dyn__enableButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enableButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _dontEnableButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OnlineServicesViewController::dyn__dontEnableButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesViewController::dyn__dontEnableButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dontEnableButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& GlobalNamespace::OnlineServicesViewController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesViewController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OnlineServicesViewController.add_didFinishEvent
void GlobalNamespace::OnlineServicesViewController::add_didFinishEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OnlineServicesViewController.remove_didFinishEvent
void GlobalNamespace::OnlineServicesViewController::remove_didFinishEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OnlineServicesViewController.<DidActivate>b__5_0
void GlobalNamespace::OnlineServicesViewController::$DidActivate$b__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesViewController::<DidActivate>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OnlineServicesViewController.<DidActivate>b__5_1
void GlobalNamespace::OnlineServicesViewController::$DidActivate$b__5_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesViewController::<DidActivate>b__5_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__5_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OnlineServicesViewController.DidActivate
void GlobalNamespace::OnlineServicesViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OnlineServicesViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OptionsViewController
#include "GlobalNamespace/OptionsViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _editAvatarButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OptionsViewController::dyn__editAvatarButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::dyn__editAvatarButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editAvatarButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _playerOptionsButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OptionsViewController::dyn__playerOptionsButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::dyn__playerOptionsButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerOptionsButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _settingsButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::OptionsViewController::dyn__settingsButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::dyn__settingsButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingsButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AppStaticSettingsSO _appStaticSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AppStaticSettingsSO*& GlobalNamespace::OptionsViewController::dyn__appStaticSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::dyn__appStaticSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appStaticSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AppStaticSettingsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<OptionsViewController/OptionsButton> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::OptionsViewController::OptionsButton>*& GlobalNamespace::OptionsViewController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::OptionsViewController::OptionsButton>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OptionsViewController.add_didFinishEvent
void GlobalNamespace::OptionsViewController::add_didFinishEvent(::System::Action_1<::GlobalNamespace::OptionsViewController::OptionsButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OptionsViewController.remove_didFinishEvent
void GlobalNamespace::OptionsViewController::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::OptionsViewController::OptionsButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OptionsViewController.<DidActivate>b__8_0
void GlobalNamespace::OptionsViewController::$DidActivate$b__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::<DidActivate>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OptionsViewController.<DidActivate>b__8_1
void GlobalNamespace::OptionsViewController::$DidActivate$b__8_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::<DidActivate>b__8_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OptionsViewController.<DidActivate>b__8_2
void GlobalNamespace::OptionsViewController::$DidActivate$b__8_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::<DidActivate>b__8_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OptionsViewController.DidActivate
void GlobalNamespace::OptionsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OptionsViewController/OptionsButton
#include "GlobalNamespace/OptionsViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OptionsViewController/OptionsButton EditAvatar
::GlobalNamespace::OptionsViewController::OptionsButton GlobalNamespace::OptionsViewController::OptionsButton::_get_EditAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::OptionsButton::_get_EditAvatar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OptionsViewController::OptionsButton>("", "OptionsViewController/OptionsButton", "EditAvatar"));
}
// Autogenerated static field setter
// Set static field: static public OptionsViewController/OptionsButton EditAvatar
void GlobalNamespace::OptionsViewController::OptionsButton::_set_EditAvatar(::GlobalNamespace::OptionsViewController::OptionsButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::OptionsButton::_set_EditAvatar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OptionsViewController/OptionsButton", "EditAvatar", value));
}
// Autogenerated static field getter
// Get static field: static public OptionsViewController/OptionsButton PlayerOptions
::GlobalNamespace::OptionsViewController::OptionsButton GlobalNamespace::OptionsViewController::OptionsButton::_get_PlayerOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::OptionsButton::_get_PlayerOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OptionsViewController::OptionsButton>("", "OptionsViewController/OptionsButton", "PlayerOptions"));
}
// Autogenerated static field setter
// Set static field: static public OptionsViewController/OptionsButton PlayerOptions
void GlobalNamespace::OptionsViewController::OptionsButton::_set_PlayerOptions(::GlobalNamespace::OptionsViewController::OptionsButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::OptionsButton::_set_PlayerOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OptionsViewController/OptionsButton", "PlayerOptions", value));
}
// Autogenerated static field getter
// Get static field: static public OptionsViewController/OptionsButton Settings
::GlobalNamespace::OptionsViewController::OptionsButton GlobalNamespace::OptionsViewController::OptionsButton::_get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::OptionsButton::_get_Settings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OptionsViewController::OptionsButton>("", "OptionsViewController/OptionsButton", "Settings"));
}
// Autogenerated static field setter
// Set static field: static public OptionsViewController/OptionsButton Settings
void GlobalNamespace::OptionsViewController::OptionsButton::_set_Settings(::GlobalNamespace::OptionsViewController::OptionsButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::OptionsButton::_set_Settings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OptionsViewController/OptionsButton", "Settings", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OptionsViewController::OptionsButton::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OptionsViewController::OptionsButton::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardViewController
#include "GlobalNamespace/PlatformLeaderboardViewController.hpp"
// Including type: PlatformLeaderboardViewController/<RefreshDelayed>d__31
#include "GlobalNamespace/PlatformLeaderboardViewController_-RefreshDelayed-d__31.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: HMUI.IconSegmentedControl
#include "HMUI/IconSegmentedControl.hpp"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: LevelStatsView
#include "GlobalNamespace/LevelStatsView.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LeaderboardTableView/ScoreData
#include "GlobalNamespace/LeaderboardTableView_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresResult
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresResult.hpp"
// Including type: PlatformLeaderboardsModel/LeaderboardScore
#include "GlobalNamespace/PlatformLeaderboardsModel_LeaderboardScore.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EC0AC
// Autogenerated static field getter
// Get static field: static private PlatformLeaderboardsModel/ScoresScope _scoresScope
::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope GlobalNamespace::PlatformLeaderboardViewController::_get__scoresScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::_get__scoresScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope>("", "PlatformLeaderboardViewController", "_scoresScope"));
}
// Autogenerated static field setter
// Set static field: static private PlatformLeaderboardsModel/ScoresScope _scoresScope
void GlobalNamespace::PlatformLeaderboardViewController::_set__scoresScope(::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::_set__scoresScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardViewController", "_scoresScope", value));
}
// Autogenerated instance field getter
// Get instance field: private LeaderboardTableView _leaderboardTableView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardTableView*& GlobalNamespace::PlatformLeaderboardViewController::dyn__leaderboardTableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::dyn__leaderboardTableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardTableView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardTableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.IconSegmentedControl _scopeSegmentedControl
[[deprecated("Use field access instead!")]] ::HMUI::IconSegmentedControl*& GlobalNamespace::PlatformLeaderboardViewController::dyn__scopeSegmentedControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::dyn__scopeSegmentedControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scopeSegmentedControl"))->offset;
  return *reinterpret_cast<::HMUI::IconSegmentedControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LoadingControl _loadingControl
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LoadingControl*& GlobalNamespace::PlatformLeaderboardViewController::dyn__loadingControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::dyn__loadingControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadingControl"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LoadingControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _globalLeaderboardIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::PlatformLeaderboardViewController::dyn__globalLeaderboardIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::dyn__globalLeaderboardIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_globalLeaderboardIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _aroundPlayerLeaderboardIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::PlatformLeaderboardViewController::dyn__aroundPlayerLeaderboardIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::dyn__aroundPlayerLeaderboardIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_aroundPlayerLeaderboardIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _friendsLeaderboardIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::PlatformLeaderboardViewController::dyn__friendsLeaderboardIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::dyn__friendsLeaderboardIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_friendsLeaderboardIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelStatsView _levelStatsView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelStatsView*& GlobalNamespace::PlatformLeaderboardViewController::dyn__levelStatsView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::dyn__levelStatsView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelStatsView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelStatsView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlatformLeaderboardsModel _leaderboardsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsModel*& GlobalNamespace::PlatformLeaderboardViewController::dyn__leaderboardsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::dyn__leaderboardsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::PlatformLeaderboardViewController::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMAsyncRequest _getScoresAsyncRequest
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HMAsyncRequest*& GlobalNamespace::PlatformLeaderboardViewController::dyn__getScoresAsyncRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::dyn__getScoresAsyncRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_getScoresAsyncRequest"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HMAsyncRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _playerScorePos
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::PlatformLeaderboardViewController::dyn__playerScorePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::dyn__playerScorePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerScorePos"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<LeaderboardTableView/ScoreData> _scores
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardTableView::ScoreData*>*& GlobalNamespace::PlatformLeaderboardViewController::dyn__scores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::dyn__scores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scores"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardTableView::ScoreData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap _difficultyBeatmap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::PlatformLeaderboardViewController::dyn__difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::dyn__difficultyBeatmap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _refreshIsNeeded
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlatformLeaderboardViewController::dyn__refreshIsNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::dyn__refreshIsNeeded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refreshIsNeeded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasScoresData
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlatformLeaderboardViewController::dyn__hasScoresData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::dyn__hasScoresData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasScoresData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlatformLeaderboardsModel/ScoresScope[] _scoreScopes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope>& GlobalNamespace::PlatformLeaderboardViewController::dyn__scoreScopes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::dyn__scoreScopes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreScopes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlatformLeaderboardViewController.get_leaderboardsModel
::GlobalNamespace::PlatformLeaderboardsModel* GlobalNamespace::PlatformLeaderboardViewController::get_leaderboardsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::get_leaderboardsModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leaderboardsModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlatformLeaderboardsModel*, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController..cctor
void GlobalNamespace::PlatformLeaderboardViewController::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlatformLeaderboardViewController", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController.ScoreScopeToScoreScopeIndex
int GlobalNamespace::PlatformLeaderboardViewController::ScoreScopeToScoreScopeIndex(::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope scoresScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::ScoreScopeToScoreScopeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScoreScopeToScoreScopeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoresScope)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, scoresScope);
}
// Autogenerated method: PlatformLeaderboardViewController.ScopeScopeIndexToScoreScope
::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope GlobalNamespace::PlatformLeaderboardViewController::ScopeScopeIndexToScoreScope(int scoreScopeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::ScopeScopeIndexToScoreScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScopeScopeIndexToScoreScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreScopeIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope, false>(this, ___internal__method, scoreScopeIndex);
}
// Autogenerated method: PlatformLeaderboardViewController.HandleDidPressRefreshButton
void GlobalNamespace::PlatformLeaderboardViewController::HandleDidPressRefreshButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::HandleDidPressRefreshButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidPressRefreshButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController.HandleLeaderboardsResultsReturned
void GlobalNamespace::PlatformLeaderboardViewController::HandleLeaderboardsResultsReturned(::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult result, ::ArrayW<::GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore*> scores, int playerScoreIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::HandleLeaderboardsResultsReturned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLeaderboardsResultsReturned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(scores), ::il2cpp_utils::ExtractType(playerScoreIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result, scores, playerScoreIndex);
}
// Autogenerated method: PlatformLeaderboardViewController.HandleScopeSegmentedControlDidSelectCell
void GlobalNamespace::PlatformLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell(::HMUI::SegmentedControl* segmentedControl, int cellNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleScopeSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, segmentedControl, cellNumber);
}
// Autogenerated method: PlatformLeaderboardViewController.HandlePlatformLeaderboardsModelAllScoresDidUpload
void GlobalNamespace::PlatformLeaderboardViewController::HandlePlatformLeaderboardsModelAllScoresDidUpload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::HandlePlatformLeaderboardsModelAllScoresDidUpload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlatformLeaderboardsModelAllScoresDidUpload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController.Refresh
void GlobalNamespace::PlatformLeaderboardViewController::Refresh(bool showLoadingIndicator, bool clear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showLoadingIndicator), ::il2cpp_utils::ExtractType(clear)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showLoadingIndicator, clear);
}
// Autogenerated method: PlatformLeaderboardViewController.RefreshDelayed
::System::Collections::IEnumerator* GlobalNamespace::PlatformLeaderboardViewController::RefreshDelayed(bool showLoadingIndicator, bool clear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::RefreshDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showLoadingIndicator), ::il2cpp_utils::ExtractType(clear)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, showLoadingIndicator, clear);
}
// Autogenerated method: PlatformLeaderboardViewController.ClearContent
void GlobalNamespace::PlatformLeaderboardViewController::ClearContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::ClearContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController.SetData
void GlobalNamespace::PlatformLeaderboardViewController::SetData(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::SetData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: PlatformLeaderboardViewController.RefreshLevelStats
void GlobalNamespace::PlatformLeaderboardViewController::RefreshLevelStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::RefreshLevelStats");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshLevelStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController.DidActivate
void GlobalNamespace::PlatformLeaderboardViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: PlatformLeaderboardViewController.DidDeactivate
void GlobalNamespace::PlatformLeaderboardViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: PlatformLeaderboardViewController.OnDestroy
void GlobalNamespace::PlatformLeaderboardViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlatformLeaderboardViewController/<RefreshDelayed>d__31
#include "GlobalNamespace/PlatformLeaderboardViewController_-RefreshDelayed-d__31.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlatformLeaderboardViewController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardViewController*& GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean clear
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::dyn_clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::dyn_clear");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clear"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showLoadingIndicator
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::dyn_showLoadingIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::dyn_showLoadingIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showLoadingIndicator"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlatformLeaderboardViewController/<RefreshDelayed>d__31.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController/<RefreshDelayed>d__31.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController/<RefreshDelayed>d__31.System.IDisposable.Dispose
void GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController/<RefreshDelayed>d__31.MoveNext
bool GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController/<RefreshDelayed>d__31.System.Collections.IEnumerator.Reset
void GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerStatisticsViewController
#include "GlobalNamespace/PlayerStatisticsViewController.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
// Including type: HMUI.TextSegmentedControl
#include "HMUI/TextSegmentedControl.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
// Including type: PlayerAllOverallStatsData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData_PlayerOverallStatsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.TextSegmentedControl _statsScopeSegmentedControl
[[deprecated("Use field access instead!")]] ::HMUI::TextSegmentedControl*& GlobalNamespace::PlayerStatisticsViewController::dyn__statsScopeSegmentedControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::dyn__statsScopeSegmentedControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_statsScopeSegmentedControl"))->offset;
  return *reinterpret_cast<::HMUI::TextSegmentedControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _playedLevelsCountText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::PlayerStatisticsViewController::dyn__playedLevelsCountText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::dyn__playedLevelsCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playedLevelsCountText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _clearedLevelsCountText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::PlayerStatisticsViewController::dyn__clearedLevelsCountText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::dyn__clearedLevelsCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedLevelsCountText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _failedLevelsCountText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::PlayerStatisticsViewController::dyn__failedLevelsCountText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::dyn__failedLevelsCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failedLevelsCountText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _timePlayedText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::PlayerStatisticsViewController::dyn__timePlayedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::dyn__timePlayedText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timePlayedText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _goodCutsCountText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::PlayerStatisticsViewController::dyn__goodCutsCountText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::dyn__goodCutsCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_goodCutsCountText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _badCutsCountCountText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::PlayerStatisticsViewController::dyn__badCutsCountCountText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::dyn__badCutsCountCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_badCutsCountCountText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _missedCountText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::PlayerStatisticsViewController::dyn__missedCountText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::dyn__missedCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missedCountText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _totalScoreText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::PlayerStatisticsViewController::dyn__totalScoreText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::dyn__totalScoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_totalScoreText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _fullComboCountText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::PlayerStatisticsViewController::dyn__fullComboCountText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::dyn__fullComboCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullComboCountText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _handDistanceTravelledText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::PlayerStatisticsViewController::dyn__handDistanceTravelledText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::dyn__handDistanceTravelledText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handDistanceTravelledText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::PlayerStatisticsViewController::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AppStaticSettingsSO _appStaticSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AppStaticSettingsSO*& GlobalNamespace::PlayerStatisticsViewController::dyn__appStaticSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::dyn__appStaticSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appStaticSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AppStaticSettingsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerStatisticsViewController/StatsScopeData[] _statsScopeDatas
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PlayerStatisticsViewController::StatsScopeData>& GlobalNamespace::PlayerStatisticsViewController::dyn__statsScopeDatas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::dyn__statsScopeDatas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_statsScopeDatas"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PlayerStatisticsViewController::StatsScopeData>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerStatisticsViewController.UpdateView
void GlobalNamespace::PlayerStatisticsViewController::UpdateView(::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* playerOverallStatsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::UpdateView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerOverallStatsData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerOverallStatsData);
}
// Autogenerated method: PlayerStatisticsViewController.HandleStatsScopeSegmentedControlDidSelectCell
void GlobalNamespace::PlayerStatisticsViewController::HandleStatsScopeSegmentedControlDidSelectCell(::HMUI::SegmentedControl* segmentedControl, int cellIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::HandleStatsScopeSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStatsScopeSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellIdx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, segmentedControl, cellIdx);
}
// Autogenerated method: PlayerStatisticsViewController.<DidActivate>b__15_1
::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerStatisticsViewController::$DidActivate$b__15_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::<DidActivate>b__15_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__15_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerStatisticsViewController.<DidActivate>b__15_2
::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerStatisticsViewController::$DidActivate$b__15_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::<DidActivate>b__15_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__15_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerStatisticsViewController.<DidActivate>b__15_3
::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerStatisticsViewController::$DidActivate$b__15_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::<DidActivate>b__15_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__15_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerStatisticsViewController.<DidActivate>b__15_4
::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerStatisticsViewController::$DidActivate$b__15_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::<DidActivate>b__15_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__15_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerStatisticsViewController.<DidActivate>b__15_0
::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerStatisticsViewController::$DidActivate$b__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::<DidActivate>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerStatisticsViewController.DidActivate
void GlobalNamespace::PlayerStatisticsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: PlayerStatisticsViewController.DidDeactivate
void GlobalNamespace::PlayerStatisticsViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerStatisticsViewController/StatsScopeData
#include "GlobalNamespace/PlayerStatisticsViewController.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: PlayerAllOverallStatsData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData_PlayerOverallStatsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <text>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::dyn_$text$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::dyn_$text$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<text>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<PlayerAllOverallStatsData/PlayerOverallStatsData> <playerOverallStatsDataFunc>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_1<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>*& GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::dyn_$playerOverallStatsDataFunc$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::dyn_$playerOverallStatsDataFunc$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerOverallStatsDataFunc>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_1<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerStatisticsViewController/StatsScopeData.get_text
::StringW GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayerStatisticsViewController/StatsScopeData.set_text
void GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::set_text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerStatisticsViewController/StatsScopeData.get_playerOverallStatsDataFunc
::System::Func_1<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>* GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::get_playerOverallStatsDataFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::get_playerOverallStatsDataFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_playerOverallStatsDataFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerStatisticsViewController/StatsScopeData.set_playerOverallStatsDataFunc
void GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::set_playerOverallStatsDataFunc(::System::Func_1<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::set_playerOverallStatsDataFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_playerOverallStatsDataFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerStatisticsViewController/StatsScopeData..ctor
// ABORTED elsewhere.  GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::StatsScopeData(::StringW text, ::System::Func_1<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>* playerOverallStatsDataFunc)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PracticeViewController
#include "GlobalNamespace/PracticeViewController.hpp"
// Including type: HMUI.TimeSlider
#include "HMUI/TimeSlider.hpp"
// Including type: HMUI.PercentSlider
#include "HMUI/PercentSlider.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: PerceivedLoudnessPerLevelModel
#include "GlobalNamespace/PerceivedLoudnessPerLevelModel.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: HMUI.RangeValuesTextSlider
#include "HMUI/RangeValuesTextSlider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kWaitBeforePlayPreviewAfterPreviewStartValueChanged
float GlobalNamespace::PracticeViewController::_get_kWaitBeforePlayPreviewAfterPreviewStartValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::_get_kWaitBeforePlayPreviewAfterPreviewStartValueChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PracticeViewController", "kWaitBeforePlayPreviewAfterPreviewStartValueChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kWaitBeforePlayPreviewAfterPreviewStartValueChanged
void GlobalNamespace::PracticeViewController::_set_kWaitBeforePlayPreviewAfterPreviewStartValueChanged(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::_set_kWaitBeforePlayPreviewAfterPreviewStartValueChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PracticeViewController", "kWaitBeforePlayPreviewAfterPreviewStartValueChanged", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kMinValueChangeToInstantPlayPreview
float GlobalNamespace::PracticeViewController::_get_kMinValueChangeToInstantPlayPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::_get_kMinValueChangeToInstantPlayPreview");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PracticeViewController", "kMinValueChangeToInstantPlayPreview"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMinValueChangeToInstantPlayPreview
void GlobalNamespace::PracticeViewController::_set_kMinValueChangeToInstantPlayPreview(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::_set_kMinValueChangeToInstantPlayPreview");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PracticeViewController", "kMinValueChangeToInstantPlayPreview", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TimeSlider _songStartSlider
[[deprecated("Use field access instead!")]] ::HMUI::TimeSlider*& GlobalNamespace::PracticeViewController::dyn__songStartSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::dyn__songStartSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songStartSlider"))->offset;
  return *reinterpret_cast<::HMUI::TimeSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.PercentSlider _speedSlider
[[deprecated("Use field access instead!")]] ::HMUI::PercentSlider*& GlobalNamespace::PracticeViewController::dyn__speedSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::dyn__speedSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speedSlider"))->offset;
  return *reinterpret_cast<::HMUI::PercentSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelBar _levelBar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelBar*& GlobalNamespace::PracticeViewController::dyn__levelBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::dyn__levelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _playButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::PracticeViewController::dyn__playButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::dyn__playButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::PracticeViewController::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPreviewPlayer _songPreviewPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPreviewPlayer*& GlobalNamespace::PracticeViewController::dyn__songPreviewPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::dyn__songPreviewPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPreviewPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPreviewPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PerceivedLoudnessPerLevelModel _perceivedLoudnessPerLevelModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PerceivedLoudnessPerLevelModel*& GlobalNamespace::PracticeViewController::dyn__perceivedLoudnessPerLevelModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::dyn__perceivedLoudnessPerLevelModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_perceivedLoudnessPerLevelModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PerceivedLoudnessPerLevelModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didPressPlayButtonEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::PracticeViewController::dyn_didPressPlayButtonEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::dyn_didPressPlayButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressPlayButtonEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PracticeSettings _practiceSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PracticeSettings*& GlobalNamespace::PracticeViewController::dyn__practiceSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::dyn__practiceSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_practiceSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PracticeSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentPlayingStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PracticeViewController::dyn__currentPlayingStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::dyn__currentPlayingStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPlayingStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxStartSongTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PracticeViewController::dyn__maxStartSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::dyn__maxStartSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxStartSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevel _level
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevel*& GlobalNamespace::PracticeViewController::dyn__level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::dyn__level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_level"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::PracticeViewController::dyn__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::dyn__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty _beatmapDifficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::PracticeViewController::dyn__beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::dyn__beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PracticeViewController.get_practiceSettings
::GlobalNamespace::PracticeSettings* GlobalNamespace::PracticeViewController::get_practiceSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::get_practiceSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_practiceSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PracticeSettings*, false>(this, ___internal__method);
}
// Autogenerated method: PracticeViewController.add_didPressPlayButtonEvent
void GlobalNamespace::PracticeViewController::add_didPressPlayButtonEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::add_didPressPlayButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressPlayButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PracticeViewController.remove_didPressPlayButtonEvent
void GlobalNamespace::PracticeViewController::remove_didPressPlayButtonEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::remove_didPressPlayButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressPlayButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PracticeViewController.Init
void GlobalNamespace::PracticeViewController::Init(::GlobalNamespace::IBeatmapLevel* level, ::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, ::GlobalNamespace::BeatmapDifficulty beatmapDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(beatmapDifficulty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, beatmapCharacteristic, beatmapDifficulty);
}
// Autogenerated method: PracticeViewController.PlayPreview
void GlobalNamespace::PracticeViewController::PlayPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::PlayPreview");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayPreview", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PracticeViewController.RefreshUI
void GlobalNamespace::PracticeViewController::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PracticeViewController.HandleSpeedSliderValueDidChange
void GlobalNamespace::PracticeViewController::HandleSpeedSliderValueDidChange(::HMUI::RangeValuesTextSlider* slider, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::HandleSpeedSliderValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSpeedSliderValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slider, value);
}
// Autogenerated method: PracticeViewController.HandleSongStartSliderValueDidChange
void GlobalNamespace::PracticeViewController::HandleSongStartSliderValueDidChange(::HMUI::RangeValuesTextSlider* slider, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::HandleSongStartSliderValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSongStartSliderValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slider, value);
}
// Autogenerated method: PracticeViewController.PlayButtonPressed
void GlobalNamespace::PracticeViewController::PlayButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::PlayButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PracticeViewController.DidActivate
void GlobalNamespace::PracticeViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: PracticeViewController.DidDeactivate
void GlobalNamespace::PracticeViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PrivacyPolicyDisplayViewController
#include "GlobalNamespace/PrivacyPolicyDisplayViewController.hpp"
// Including type: HMUI.TextPageScrollView
#include "HMUI/TextPageScrollView.hpp"
// Including type: LocalizedTextAsset
#include "GlobalNamespace/LocalizedTextAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.TextPageScrollView _textPageScrollView
[[deprecated("Use field access instead!")]] ::HMUI::TextPageScrollView*& GlobalNamespace::PrivacyPolicyDisplayViewController::dyn__textPageScrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyDisplayViewController::dyn__textPageScrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textPageScrollView"))->offset;
  return *reinterpret_cast<::HMUI::TextPageScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalizedTextAsset _localizedTextAsset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalizedTextAsset*& GlobalNamespace::PrivacyPolicyDisplayViewController::dyn__localizedTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyDisplayViewController::dyn__localizedTextAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localizedTextAsset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalizedTextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PrivacyPolicyDisplayViewController.DidActivate
void GlobalNamespace::PrivacyPolicyDisplayViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyDisplayViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PrivacyPolicyViewController
#include "GlobalNamespace/PrivacyPolicyViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.TextPageScrollView
#include "HMUI/TextPageScrollView.hpp"
// Including type: LocalizedTextAsset
#include "GlobalNamespace/LocalizedTextAsset.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _okButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::PrivacyPolicyViewController::dyn__okButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::dyn__okButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_okButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _continueButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::PrivacyPolicyViewController::dyn__continueButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::dyn__continueButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_continueButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TextPageScrollView _textPageScrollView
[[deprecated("Use field access instead!")]] ::HMUI::TextPageScrollView*& GlobalNamespace::PrivacyPolicyViewController::dyn__textPageScrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::dyn__textPageScrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textPageScrollView"))->offset;
  return *reinterpret_cast<::HMUI::TextPageScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalizedTextAsset _privacyPolicyLocalizedTextAsset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalizedTextAsset*& GlobalNamespace::PrivacyPolicyViewController::dyn__privacyPolicyLocalizedTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::dyn__privacyPolicyLocalizedTextAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_privacyPolicyLocalizedTextAsset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalizedTextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _defaultPrivacyPolicyHeaderLocalizationKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PrivacyPolicyViewController::dyn__defaultPrivacyPolicyHeaderLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::dyn__defaultPrivacyPolicyHeaderLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultPrivacyPolicyHeaderLocalizationKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _updateNoticeLocalizationKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PrivacyPolicyViewController::dyn__updateNoticeLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::dyn__updateNoticeLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateNoticeLocalizationKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<PrivacyPolicyViewController/ButtonType> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::PrivacyPolicyViewController::ButtonType>*& GlobalNamespace::PrivacyPolicyViewController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::PrivacyPolicyViewController::ButtonType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showUpdate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PrivacyPolicyViewController::dyn__showUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::dyn__showUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showOnlyContinueButton
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PrivacyPolicyViewController::dyn__showOnlyContinueButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::dyn__showOnlyContinueButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showOnlyContinueButton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PrivacyPolicyViewController.add_didFinishEvent
void GlobalNamespace::PrivacyPolicyViewController::add_didFinishEvent(::System::Action_1<::GlobalNamespace::PrivacyPolicyViewController::ButtonType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PrivacyPolicyViewController.remove_didFinishEvent
void GlobalNamespace::PrivacyPolicyViewController::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::PrivacyPolicyViewController::ButtonType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PrivacyPolicyViewController.Init
void GlobalNamespace::PrivacyPolicyViewController::Init(bool showUpdate, bool showOnlyContinueButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showUpdate), ::il2cpp_utils::ExtractType(showOnlyContinueButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showUpdate, showOnlyContinueButton);
}
// Autogenerated method: PrivacyPolicyViewController.<DidActivate>b__12_0
void GlobalNamespace::PrivacyPolicyViewController::$DidActivate$b__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::<DidActivate>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PrivacyPolicyViewController.<DidActivate>b__12_1
void GlobalNamespace::PrivacyPolicyViewController::$DidActivate$b__12_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::<DidActivate>b__12_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__12_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PrivacyPolicyViewController.DidActivate
void GlobalNamespace::PrivacyPolicyViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PrivacyPolicyViewController/ButtonType
#include "GlobalNamespace/PrivacyPolicyViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PrivacyPolicyViewController/ButtonType Ok
::GlobalNamespace::PrivacyPolicyViewController::ButtonType GlobalNamespace::PrivacyPolicyViewController::ButtonType::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::ButtonType::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PrivacyPolicyViewController::ButtonType>("", "PrivacyPolicyViewController/ButtonType", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public PrivacyPolicyViewController/ButtonType Ok
void GlobalNamespace::PrivacyPolicyViewController::ButtonType::_set_Ok(::GlobalNamespace::PrivacyPolicyViewController::ButtonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::ButtonType::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PrivacyPolicyViewController/ButtonType", "Ok", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PrivacyPolicyViewController::ButtonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrivacyPolicyViewController::ButtonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PromoViewController
#include "GlobalNamespace/PromoViewController.hpp"
// Including type: PromoViewController/ButtonPromoTypePair
#include "GlobalNamespace/PromoViewController_ButtonPromoTypePair.hpp"
// Including type: PromoViewController/<>c__DisplayClass5_0
#include "GlobalNamespace/PromoViewController_--c__DisplayClass5_0.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PromoViewController/ButtonPromoTypePair[] _elements
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PromoViewController::ButtonPromoTypePair*>& GlobalNamespace::PromoViewController::dyn__elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PromoViewController::dyn__elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elements"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PromoViewController::ButtonPromoTypePair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<PromoViewController,IAnnotatedBeatmapLevelCollection,IPreviewBeatmapLevel> promoButtonWasPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action_3<::GlobalNamespace::PromoViewController*, ::GlobalNamespace::IAnnotatedBeatmapLevelCollection*, ::GlobalNamespace::IPreviewBeatmapLevel*>*& GlobalNamespace::PromoViewController::dyn_promoButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PromoViewController::dyn_promoButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "promoButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action_3<::GlobalNamespace::PromoViewController*, ::GlobalNamespace::IAnnotatedBeatmapLevelCollection*, ::GlobalNamespace::IPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PromoViewController.add_promoButtonWasPressedEvent
void GlobalNamespace::PromoViewController::add_promoButtonWasPressedEvent(::System::Action_3<::GlobalNamespace::PromoViewController*, ::GlobalNamespace::IAnnotatedBeatmapLevelCollection*, ::GlobalNamespace::IPreviewBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PromoViewController::add_promoButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_promoButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PromoViewController.remove_promoButtonWasPressedEvent
void GlobalNamespace::PromoViewController::remove_promoButtonWasPressedEvent(::System::Action_3<::GlobalNamespace::PromoViewController*, ::GlobalNamespace::IAnnotatedBeatmapLevelCollection*, ::GlobalNamespace::IPreviewBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PromoViewController::remove_promoButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_promoButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PromoViewController.DidActivate
void GlobalNamespace::PromoViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PromoViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PromoViewController/ButtonPromoTypePair
#include "GlobalNamespace/PromoViewController_ButtonPromoTypePair.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Button button
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::PromoViewController::ButtonPromoTypePair::dyn_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PromoViewController::ButtonPromoTypePair::dyn_button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "button"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PreviewBeatmapLevelPackSO previewLevelPack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PreviewBeatmapLevelPackSO*& GlobalNamespace::PromoViewController::ButtonPromoTypePair::dyn_previewLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PromoViewController::ButtonPromoTypePair::dyn_previewLevelPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewLevelPack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PreviewBeatmapLevelPackSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelPackSO levelPack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackSO*& GlobalNamespace::PromoViewController::ButtonPromoTypePair::dyn_levelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PromoViewController::ButtonPromoTypePair::dyn_levelPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelPack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSO beatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSO*& GlobalNamespace::PromoViewController::ButtonPromoTypePair::dyn_beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PromoViewController::ButtonPromoTypePair::dyn_beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IAnnotatedBeatmapLevelCollection _annotatedBeatmapLevelCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAnnotatedBeatmapLevelCollection*& GlobalNamespace::PromoViewController::ButtonPromoTypePair::dyn__annotatedBeatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PromoViewController::ButtonPromoTypePair::dyn__annotatedBeatmapLevelCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_annotatedBeatmapLevelCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnnotatedBeatmapLevelCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PromoViewController/ButtonPromoTypePair.get_annotatedBeatmapLevelCollection
::GlobalNamespace::IAnnotatedBeatmapLevelCollection* GlobalNamespace::PromoViewController::ButtonPromoTypePair::get_annotatedBeatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PromoViewController::ButtonPromoTypePair::get_annotatedBeatmapLevelCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_annotatedBeatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IAnnotatedBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PromoViewController/<>c__DisplayClass5_0
#include "GlobalNamespace/PromoViewController_--c__DisplayClass5_0.hpp"
// Including type: PromoViewController/ButtonPromoTypePair
#include "GlobalNamespace/PromoViewController_ButtonPromoTypePair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PromoViewController/ButtonPromoTypePair item
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PromoViewController::ButtonPromoTypePair*& GlobalNamespace::PromoViewController::$$c__DisplayClass5_0::dyn_item() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PromoViewController::$$c__DisplayClass5_0::dyn_item");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "item"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PromoViewController::ButtonPromoTypePair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PromoViewController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PromoViewController*& GlobalNamespace::PromoViewController::$$c__DisplayClass5_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PromoViewController::$$c__DisplayClass5_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PromoViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PromoViewController/<>c__DisplayClass5_0.<DidActivate>b__0
void GlobalNamespace::PromoViewController::$$c__DisplayClass5_0::$DidActivate$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PromoViewController::$$c__DisplayClass5_0::<DidActivate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolConfigViewController
#include "GlobalNamespace/RecordingToolConfigViewController.hpp"
// Including type: HMUI.TextPageScrollView
#include "HMUI/TextPageScrollView.hpp"
// Including type: RecordingToolManager
#include "GlobalNamespace/RecordingToolManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.TextPageScrollView _textPageScrollView
[[deprecated("Use field access instead!")]] ::HMUI::TextPageScrollView*& GlobalNamespace::RecordingToolConfigViewController::dyn__textPageScrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigViewController::dyn__textPageScrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textPageScrollView"))->offset;
  return *reinterpret_cast<::HMUI::TextPageScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RecordingToolManager _recordingToolManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolManager*& GlobalNamespace::RecordingToolConfigViewController::dyn__recordingToolManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigViewController::dyn__recordingToolManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingToolManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecordingToolConfigViewController.DidActivate
void GlobalNamespace::RecordingToolConfigViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolLoggingViewController
#include "GlobalNamespace/RecordingToolLoggingViewController.hpp"
// Including type: HMUI.TextPageScrollView
#include "HMUI/TextPageScrollView.hpp"
// Including type: RecordingToolManager
#include "GlobalNamespace/RecordingToolManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.TextPageScrollView _textPageScrollView
[[deprecated("Use field access instead!")]] ::HMUI::TextPageScrollView*& GlobalNamespace::RecordingToolLoggingViewController::dyn__textPageScrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolLoggingViewController::dyn__textPageScrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textPageScrollView"))->offset;
  return *reinterpret_cast<::HMUI::TextPageScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RecordingToolManager _recordingToolManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolManager*& GlobalNamespace::RecordingToolLoggingViewController::dyn__recordingToolManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolLoggingViewController::dyn__recordingToolManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingToolManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecordingToolLoggingViewController.DidActivate
void GlobalNamespace::RecordingToolLoggingViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolLoggingViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolSettingsViewController
#include "GlobalNamespace/RecordingToolSettingsViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.TextPageScrollView
#include "HMUI/TextPageScrollView.hpp"
// Including type: RecordingToolManager
#include "GlobalNamespace/RecordingToolManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _continueButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::RecordingToolSettingsViewController::dyn__continueButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsViewController::dyn__continueButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_continueButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TextPageScrollView _textPageScrollView
[[deprecated("Use field access instead!")]] ::HMUI::TextPageScrollView*& GlobalNamespace::RecordingToolSettingsViewController::dyn__textPageScrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsViewController::dyn__textPageScrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textPageScrollView"))->offset;
  return *reinterpret_cast<::HMUI::TextPageScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RecordingToolManager _recordingToolManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolManager*& GlobalNamespace::RecordingToolSettingsViewController::dyn__recordingToolManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsViewController::dyn__recordingToolManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingToolManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::RecordingToolSettingsViewController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsViewController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecordingToolSettingsViewController.add_didFinishEvent
void GlobalNamespace::RecordingToolSettingsViewController::add_didFinishEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RecordingToolSettingsViewController.remove_didFinishEvent
void GlobalNamespace::RecordingToolSettingsViewController::remove_didFinishEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RecordingToolSettingsViewController.<DidActivate>b__6_0
void GlobalNamespace::RecordingToolSettingsViewController::$DidActivate$b__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsViewController::<DidActivate>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolSettingsViewController.DidActivate
void GlobalNamespace::RecordingToolSettingsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ReleaseInfoViewController
#include "GlobalNamespace/ReleaseInfoViewController.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: HMUI.TextPageScrollView
#include "HMUI/TextPageScrollView.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::ReleaseInfoViewController::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReleaseInfoViewController::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TextPageScrollView _textPageScrollView
[[deprecated("Use field access instead!")]] ::HMUI::TextPageScrollView*& GlobalNamespace::ReleaseInfoViewController::dyn__textPageScrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReleaseInfoViewController::dyn__textPageScrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textPageScrollView"))->offset;
  return *reinterpret_cast<::HMUI::TextPageScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextAsset _releaseNotesTextAsset
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& GlobalNamespace::ReleaseInfoViewController::dyn__releaseNotesTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReleaseInfoViewController::dyn__releaseNotesTextAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_releaseNotesTextAsset"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextAsset _firstTextAsset
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& GlobalNamespace::ReleaseInfoViewController::dyn__firstTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReleaseInfoViewController::dyn__firstTextAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstTextAsset"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ReleaseInfoViewController.DidActivate
void GlobalNamespace::ReleaseInfoViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReleaseInfoViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
// Including type: ResultsViewController/<StartFireworksAfterDelay>d__32
#include "GlobalNamespace/ResultsViewController_-StartFireworksAfterDelay-d__32.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: FireworksController
#include "GlobalNamespace/FireworksController.hpp"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: ResultsEnvironmentManager
#include "GlobalNamespace/ResultsEnvironmentManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _restartButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::ResultsViewController::dyn__restartButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__restartButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_restartButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _continueButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::ResultsViewController::dyn__continueButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__continueButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_continueButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _clearedPanel
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::ResultsViewController::dyn__clearedPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__clearedPanel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedPanel"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _scoreText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultsViewController::dyn__scoreText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__scoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _newHighScoreText
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::ResultsViewController::dyn__newHighScoreText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__newHighScoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newHighScoreText"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _rankText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultsViewController::dyn__rankText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__rankText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rankText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _goodCutsPercentageText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultsViewController::dyn__goodCutsPercentageText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__goodCutsPercentageText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_goodCutsPercentageText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _comboText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultsViewController::dyn__comboText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__comboText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comboText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _clearedBannerGo
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::ResultsViewController::dyn__clearedBannerGo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__clearedBannerGo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedBannerGo"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _failedBannerGo
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::ResultsViewController::dyn__failedBannerGo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__failedBannerGo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failedBannerGo"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelBar _levelBar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelBar*& GlobalNamespace::ResultsViewController::dyn__levelBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__levelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _levelClearedAudioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::ResultsViewController::dyn__levelClearedAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__levelClearedAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelClearedAudioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly FireworksController _fireworksController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FireworksController*& GlobalNamespace::ResultsViewController::dyn__fireworksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__fireworksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fireworksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FireworksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPreviewPlayer _songPreviewPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPreviewPlayer*& GlobalNamespace::ResultsViewController::dyn__songPreviewPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__songPreviewPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPreviewPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPreviewPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ResultsEnvironmentManager _resultsEnvironmentManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ResultsEnvironmentManager*& GlobalNamespace::ResultsViewController::dyn__resultsEnvironmentManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__resultsEnvironmentManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsEnvironmentManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ResultsEnvironmentManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ResultsViewController> continueButtonPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::ResultsViewController*>*& GlobalNamespace::ResultsViewController::dyn_continueButtonPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn_continueButtonPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "continueButtonPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ResultsViewController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ResultsViewController> restartButtonPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::ResultsViewController*>*& GlobalNamespace::ResultsViewController::dyn_restartButtonPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn_restartButtonPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "restartButtonPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ResultsViewController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelCompletionResults _levelCompletionResults
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelCompletionResults*& GlobalNamespace::ResultsViewController::dyn__levelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__levelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelCompletionResults"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap _difficultyBeatmap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::ResultsViewController::dyn__difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__difficultyBeatmap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IReadonlyBeatmapData _transformedBeatmapData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IReadonlyBeatmapData*& GlobalNamespace::ResultsViewController::dyn__transformedBeatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__transformedBeatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformedBeatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IReadonlyBeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _startFireworksAfterDelayCoroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GlobalNamespace::ResultsViewController::dyn__startFireworksAfterDelayCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__startFireworksAfterDelayCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startFireworksAfterDelayCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _newHighScore
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ResultsViewController::dyn__newHighScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__newHighScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newHighScore"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _practice
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ResultsViewController::dyn__practice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::dyn__practice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_practice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResultsViewController.get_practice
bool GlobalNamespace::ResultsViewController::get_practice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::get_practice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_practice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController.add_continueButtonPressedEvent
void GlobalNamespace::ResultsViewController::add_continueButtonPressedEvent(::System::Action_1<::GlobalNamespace::ResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::add_continueButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_continueButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultsViewController.remove_continueButtonPressedEvent
void GlobalNamespace::ResultsViewController::remove_continueButtonPressedEvent(::System::Action_1<::GlobalNamespace::ResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::remove_continueButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_continueButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultsViewController.add_restartButtonPressedEvent
void GlobalNamespace::ResultsViewController::add_restartButtonPressedEvent(::System::Action_1<::GlobalNamespace::ResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::add_restartButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_restartButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultsViewController.remove_restartButtonPressedEvent
void GlobalNamespace::ResultsViewController::remove_restartButtonPressedEvent(::System::Action_1<::GlobalNamespace::ResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::remove_restartButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_restartButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultsViewController.Init
void GlobalNamespace::ResultsViewController::Init(::GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::GlobalNamespace::IReadonlyBeatmapData* transformedBeatmapData, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, bool practice, bool newHighScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(transformedBeatmapData), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(practice), ::il2cpp_utils::ExtractType(newHighScore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelCompletionResults, transformedBeatmapData, difficultyBeatmap, practice, newHighScore);
}
// Autogenerated method: ResultsViewController.StartFireworksAfterDelay
::System::Collections::IEnumerator* GlobalNamespace::ResultsViewController::StartFireworksAfterDelay(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::StartFireworksAfterDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartFireworksAfterDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: ResultsViewController.SetDataToUI
void GlobalNamespace::ResultsViewController::SetDataToUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::SetDataToUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataToUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController.EnableResultsEnvironmentController
void GlobalNamespace::ResultsViewController::EnableResultsEnvironmentController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::EnableResultsEnvironmentController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableResultsEnvironmentController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController.DisableResultEnvironmentController
void GlobalNamespace::ResultsViewController::DisableResultEnvironmentController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::DisableResultEnvironmentController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableResultEnvironmentController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController.ContinueButtonPressed
void GlobalNamespace::ResultsViewController::ContinueButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::ContinueButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContinueButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController.RestartButtonPressed
void GlobalNamespace::ResultsViewController::RestartButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::RestartButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestartButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController.DidActivate
void GlobalNamespace::ResultsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: ResultsViewController.DidDeactivate
void GlobalNamespace::ResultsViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ResultsViewController/<StartFireworksAfterDelay>d__32
#include "GlobalNamespace/ResultsViewController_-StartFireworksAfterDelay-d__32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ResultsViewController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ResultsViewController*& GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResultsViewController/<StartFireworksAfterDelay>d__32.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController/<StartFireworksAfterDelay>d__32.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController/<StartFireworksAfterDelay>d__32.System.IDisposable.Dispose
void GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController/<StartFireworksAfterDelay>d__32.MoveNext
bool GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController/<StartFireworksAfterDelay>d__32.System.Collections.IEnumerator.Reset
void GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__32::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RoomAdjustSettingsViewController
#include "GlobalNamespace/RoomAdjustSettingsViewController.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: StepValuePicker
#include "GlobalNamespace/StepValuePicker.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kHorizontalMoveStep
float GlobalNamespace::RoomAdjustSettingsViewController::_get_kHorizontalMoveStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::_get_kHorizontalMoveStep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "RoomAdjustSettingsViewController", "kHorizontalMoveStep"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kHorizontalMoveStep
void GlobalNamespace::RoomAdjustSettingsViewController::_set_kHorizontalMoveStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::_set_kHorizontalMoveStep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomAdjustSettingsViewController", "kHorizontalMoveStep", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kVerticalMoveStep
float GlobalNamespace::RoomAdjustSettingsViewController::_get_kVerticalMoveStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::_get_kVerticalMoveStep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "RoomAdjustSettingsViewController", "kVerticalMoveStep"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kVerticalMoveStep
void GlobalNamespace::RoomAdjustSettingsViewController::_set_kVerticalMoveStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::_set_kVerticalMoveStep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomAdjustSettingsViewController", "kVerticalMoveStep", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kRotationStep
float GlobalNamespace::RoomAdjustSettingsViewController::_get_kRotationStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::_get_kRotationStep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "RoomAdjustSettingsViewController", "kRotationStep"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kRotationStep
void GlobalNamespace::RoomAdjustSettingsViewController::_set_kRotationStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::_set_kRotationStep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomAdjustSettingsViewController", "kRotationStep", value));
}
// Autogenerated instance field getter
// Get instance field: private Vector3SO _roomCenter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3SO*& GlobalNamespace::RoomAdjustSettingsViewController::dyn__roomCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::dyn__roomCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomCenter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FloatSO _roomRotation
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FloatSO*& GlobalNamespace::RoomAdjustSettingsViewController::dyn__roomRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::dyn__roomRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomRotation"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private StepValuePicker _xStepValuePicker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StepValuePicker*& GlobalNamespace::RoomAdjustSettingsViewController::dyn__xStepValuePicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::dyn__xStepValuePicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xStepValuePicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StepValuePicker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private StepValuePicker _yStepValuePicker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StepValuePicker*& GlobalNamespace::RoomAdjustSettingsViewController::dyn__yStepValuePicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::dyn__yStepValuePicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yStepValuePicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StepValuePicker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private StepValuePicker _zStepValuePicker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StepValuePicker*& GlobalNamespace::RoomAdjustSettingsViewController::dyn__zStepValuePicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::dyn__zStepValuePicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zStepValuePicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StepValuePicker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private StepValuePicker _rotStepValuePicker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StepValuePicker*& GlobalNamespace::RoomAdjustSettingsViewController::dyn__rotStepValuePicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::dyn__rotStepValuePicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotStepValuePicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StepValuePicker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _resetButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::RoomAdjustSettingsViewController::dyn__resetButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::dyn__resetButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resetButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RoomAdjustSettingsViewController.Move
void GlobalNamespace::RoomAdjustSettingsViewController::Move(::UnityEngine::Vector3 move) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::Move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(move)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, move);
}
// Autogenerated method: RoomAdjustSettingsViewController.Rotate
void GlobalNamespace::RoomAdjustSettingsViewController::Rotate(float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotation);
}
// Autogenerated method: RoomAdjustSettingsViewController.ResetRoom
void GlobalNamespace::RoomAdjustSettingsViewController::ResetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::ResetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.RefreshTexts
void GlobalNamespace::RoomAdjustSettingsViewController::RefreshTexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::RefreshTexts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshTexts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_0
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_1
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_2
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_3
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_4
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_5
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_6
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_7
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_8
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.DidActivate
void GlobalNamespace::RoomAdjustSettingsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RoomAdjustSettingsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectLanguageViewController
#include "GlobalNamespace/SelectLanguageViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: LanguageSettingsController
#include "GlobalNamespace/LanguageSettingsController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _continueButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::SelectLanguageViewController::dyn__continueButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLanguageViewController::dyn__continueButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_continueButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LanguageSettingsController _languageSettingsController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LanguageSettingsController*& GlobalNamespace::SelectLanguageViewController::dyn__languageSettingsController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLanguageViewController::dyn__languageSettingsController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_languageSettingsController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LanguageSettingsController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didChangeLanguageEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::SelectLanguageViewController::dyn_didChangeLanguageEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLanguageViewController::dyn_didChangeLanguageEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didChangeLanguageEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didPressContinueButtonEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::SelectLanguageViewController::dyn_didPressContinueButtonEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLanguageViewController::dyn_didPressContinueButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressContinueButtonEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SelectLanguageViewController.add_didChangeLanguageEvent
void GlobalNamespace::SelectLanguageViewController::add_didChangeLanguageEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLanguageViewController::add_didChangeLanguageEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeLanguageEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SelectLanguageViewController.remove_didChangeLanguageEvent
void GlobalNamespace::SelectLanguageViewController::remove_didChangeLanguageEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLanguageViewController::remove_didChangeLanguageEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeLanguageEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SelectLanguageViewController.add_didPressContinueButtonEvent
void GlobalNamespace::SelectLanguageViewController::add_didPressContinueButtonEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLanguageViewController::add_didPressContinueButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressContinueButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SelectLanguageViewController.remove_didPressContinueButtonEvent
void GlobalNamespace::SelectLanguageViewController::remove_didPressContinueButtonEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLanguageViewController::remove_didPressContinueButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressContinueButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SelectLanguageViewController.HandleLanguageSettingsControllerOndropDownValueDidChange
void GlobalNamespace::SelectLanguageViewController::HandleLanguageSettingsControllerOndropDownValueDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLanguageViewController::HandleLanguageSettingsControllerOndropDownValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLanguageSettingsControllerOndropDownValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SelectLanguageViewController.<DidActivate>b__8_0
void GlobalNamespace::SelectLanguageViewController::$DidActivate$b__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLanguageViewController::<DidActivate>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SelectLanguageViewController.DidActivate
void GlobalNamespace::SelectLanguageViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLanguageViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: SelectLanguageViewController.OnDestroy
void GlobalNamespace::SelectLanguageViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLanguageViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SettingsNavigationController
#include "GlobalNamespace/SettingsNavigationController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _okButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::SettingsNavigationController::dyn__okButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::dyn__okButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_okButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _applyButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::SettingsNavigationController::dyn__applyButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::dyn__applyButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applyButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _cancelButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::SettingsNavigationController::dyn__cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::dyn__cancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<SettingsNavigationController/FinishAction> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::SettingsNavigationController::FinishAction>*& GlobalNamespace::SettingsNavigationController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::SettingsNavigationController::FinishAction>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SettingsNavigationController.add_didFinishEvent
void GlobalNamespace::SettingsNavigationController::add_didFinishEvent(::System::Action_1<::GlobalNamespace::SettingsNavigationController::FinishAction>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SettingsNavigationController.remove_didFinishEvent
void GlobalNamespace::SettingsNavigationController::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::SettingsNavigationController::FinishAction>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SettingsNavigationController.HandleFinishButton
void GlobalNamespace::SettingsNavigationController::HandleFinishButton(::GlobalNamespace::SettingsNavigationController::FinishAction finishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::HandleFinishButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFinishButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishAction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finishAction);
}
// Autogenerated method: SettingsNavigationController.<DidActivate>b__7_0
void GlobalNamespace::SettingsNavigationController::$DidActivate$b__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::<DidActivate>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SettingsNavigationController.<DidActivate>b__7_1
void GlobalNamespace::SettingsNavigationController::$DidActivate$b__7_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::<DidActivate>b__7_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__7_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SettingsNavigationController.<DidActivate>b__7_2
void GlobalNamespace::SettingsNavigationController::$DidActivate$b__7_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::<DidActivate>b__7_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__7_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SettingsNavigationController.DidActivate
void GlobalNamespace::SettingsNavigationController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SettingsNavigationController/FinishAction
#include "GlobalNamespace/SettingsNavigationController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SettingsNavigationController/FinishAction Ok
::GlobalNamespace::SettingsNavigationController::FinishAction GlobalNamespace::SettingsNavigationController::FinishAction::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::FinishAction::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SettingsNavigationController::FinishAction>("", "SettingsNavigationController/FinishAction", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public SettingsNavigationController/FinishAction Ok
void GlobalNamespace::SettingsNavigationController::FinishAction::_set_Ok(::GlobalNamespace::SettingsNavigationController::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::FinishAction::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsNavigationController/FinishAction", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public SettingsNavigationController/FinishAction Cancel
::GlobalNamespace::SettingsNavigationController::FinishAction GlobalNamespace::SettingsNavigationController::FinishAction::_get_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::FinishAction::_get_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SettingsNavigationController::FinishAction>("", "SettingsNavigationController/FinishAction", "Cancel"));
}
// Autogenerated static field setter
// Set static field: static public SettingsNavigationController/FinishAction Cancel
void GlobalNamespace::SettingsNavigationController::FinishAction::_set_Cancel(::GlobalNamespace::SettingsNavigationController::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::FinishAction::_set_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsNavigationController/FinishAction", "Cancel", value));
}
// Autogenerated static field getter
// Get static field: static public SettingsNavigationController/FinishAction Apply
::GlobalNamespace::SettingsNavigationController::FinishAction GlobalNamespace::SettingsNavigationController::FinishAction::_get_Apply() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::FinishAction::_get_Apply");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SettingsNavigationController::FinishAction>("", "SettingsNavigationController/FinishAction", "Apply"));
}
// Autogenerated static field setter
// Set static field: static public SettingsNavigationController/FinishAction Apply
void GlobalNamespace::SettingsNavigationController::FinishAction::_set_Apply(::GlobalNamespace::SettingsNavigationController::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::FinishAction::_set_Apply");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsNavigationController/FinishAction", "Apply", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SettingsNavigationController::FinishAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::FinishAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
// Including type: SimpleDialogPromptViewController/<>c__DisplayClass5_0
#include "GlobalNamespace/SimpleDialogPromptViewController_--c__DisplayClass5_0.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _titleText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::SimpleDialogPromptViewController::dyn__titleText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::dyn__titleText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _messageText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::SimpleDialogPromptViewController::dyn__messageText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::dyn__messageText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_messageText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button[] _buttons
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::Button*>& GlobalNamespace::SimpleDialogPromptViewController::dyn__buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::dyn__buttons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttons"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::Button*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI[] _buttonTexts
[[deprecated("Use field access instead!")]] ::ArrayW<::TMPro::TextMeshProUGUI*>& GlobalNamespace::SimpleDialogPromptViewController::dyn__buttonTexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::dyn__buttonTexts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonTexts"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TextMeshProUGUI*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> _didFinishAction
[[deprecated("Use field access instead!")]] ::System::Action_1<int>*& GlobalNamespace::SimpleDialogPromptViewController::dyn__didFinishAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::dyn__didFinishAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinishAction"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleDialogPromptViewController.Init
void GlobalNamespace::SimpleDialogPromptViewController::Init(::StringW title, ::StringW message, ::StringW buttonText, ::System::Action_1<int>* didFinishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(buttonText), ::il2cpp_utils::ExtractType(didFinishAction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, title, message, buttonText, didFinishAction);
}
// Autogenerated method: SimpleDialogPromptViewController.Init
void GlobalNamespace::SimpleDialogPromptViewController::Init(::StringW title, ::StringW message, ::StringW firstButtonText, ::StringW secondButtonText, ::System::Action_1<int>* didFinishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(firstButtonText), ::il2cpp_utils::ExtractType(secondButtonText), ::il2cpp_utils::ExtractType(didFinishAction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, title, message, firstButtonText, secondButtonText, didFinishAction);
}
// Autogenerated method: SimpleDialogPromptViewController.Init
void GlobalNamespace::SimpleDialogPromptViewController::Init(::StringW title, ::StringW message, ::StringW firstButtonText, ::StringW secondButtonText, ::StringW thirdButtonText, ::System::Action_1<int>* didFinishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(firstButtonText), ::il2cpp_utils::ExtractType(secondButtonText), ::il2cpp_utils::ExtractType(thirdButtonText), ::il2cpp_utils::ExtractType(didFinishAction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, title, message, firstButtonText, secondButtonText, thirdButtonText, didFinishAction);
}
// Autogenerated method: SimpleDialogPromptViewController.DidActivate
void GlobalNamespace::SimpleDialogPromptViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: SimpleDialogPromptViewController.DidDeactivate
void GlobalNamespace::SimpleDialogPromptViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleDialogPromptViewController/<>c__DisplayClass5_0
#include "GlobalNamespace/SimpleDialogPromptViewController_--c__DisplayClass5_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 buttonNum
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SimpleDialogPromptViewController::$$c__DisplayClass5_0::dyn_buttonNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::$$c__DisplayClass5_0::dyn_buttonNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SimpleDialogPromptViewController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleDialogPromptViewController*& GlobalNamespace::SimpleDialogPromptViewController::$$c__DisplayClass5_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::$$c__DisplayClass5_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleDialogPromptViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleDialogPromptViewController/<>c__DisplayClass5_0.<DidActivate>b__0
void GlobalNamespace::SimpleDialogPromptViewController::$$c__DisplayClass5_0::$DidActivate$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::$$c__DisplayClass5_0::<DidActivate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SoloModeSelectionViewController
#include "GlobalNamespace/SoloModeSelectionViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _freePlayModeButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::SoloModeSelectionViewController::dyn__freePlayModeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::dyn__freePlayModeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_freePlayModeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _oneSaberModeButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::SoloModeSelectionViewController::dyn__oneSaberModeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::dyn__oneSaberModeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oneSaberModeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _noArrowsModeButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::SoloModeSelectionViewController::dyn__noArrowsModeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::dyn__noArrowsModeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noArrowsModeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _dismissButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::SoloModeSelectionViewController::dyn__dismissButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::dyn__dismissButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dismissButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<SoloModeSelectionViewController,SoloModeSelectionViewController/MenuType> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::SoloModeSelectionViewController*, ::GlobalNamespace::SoloModeSelectionViewController::MenuType>*& GlobalNamespace::SoloModeSelectionViewController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::SoloModeSelectionViewController*, ::GlobalNamespace::SoloModeSelectionViewController::MenuType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SoloModeSelectionViewController.add_didFinishEvent
void GlobalNamespace::SoloModeSelectionViewController::add_didFinishEvent(::System::Action_2<::GlobalNamespace::SoloModeSelectionViewController*, ::GlobalNamespace::SoloModeSelectionViewController::MenuType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SoloModeSelectionViewController.remove_didFinishEvent
void GlobalNamespace::SoloModeSelectionViewController::remove_didFinishEvent(::System::Action_2<::GlobalNamespace::SoloModeSelectionViewController*, ::GlobalNamespace::SoloModeSelectionViewController::MenuType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SoloModeSelectionViewController.HandleMenuButton
void GlobalNamespace::SoloModeSelectionViewController::HandleMenuButton(::GlobalNamespace::SoloModeSelectionViewController::MenuType subMenuType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::HandleMenuButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subMenuType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, subMenuType);
}
// Autogenerated method: SoloModeSelectionViewController.<DidActivate>b__8_0
void GlobalNamespace::SoloModeSelectionViewController::$DidActivate$b__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::<DidActivate>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SoloModeSelectionViewController.<DidActivate>b__8_1
void GlobalNamespace::SoloModeSelectionViewController::$DidActivate$b__8_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::<DidActivate>b__8_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SoloModeSelectionViewController.<DidActivate>b__8_2
void GlobalNamespace::SoloModeSelectionViewController::$DidActivate$b__8_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::<DidActivate>b__8_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SoloModeSelectionViewController.<DidActivate>b__8_3
void GlobalNamespace::SoloModeSelectionViewController::$DidActivate$b__8_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::<DidActivate>b__8_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SoloModeSelectionViewController.DidActivate
void GlobalNamespace::SoloModeSelectionViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SoloModeSelectionViewController/MenuType
#include "GlobalNamespace/SoloModeSelectionViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SoloModeSelectionViewController/MenuType FreePlayMode
::GlobalNamespace::SoloModeSelectionViewController::MenuType GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_FreePlayMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_FreePlayMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SoloModeSelectionViewController::MenuType>("", "SoloModeSelectionViewController/MenuType", "FreePlayMode"));
}
// Autogenerated static field setter
// Set static field: static public SoloModeSelectionViewController/MenuType FreePlayMode
void GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_FreePlayMode(::GlobalNamespace::SoloModeSelectionViewController::MenuType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_FreePlayMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SoloModeSelectionViewController/MenuType", "FreePlayMode", value));
}
// Autogenerated static field getter
// Get static field: static public SoloModeSelectionViewController/MenuType NoArrowsMode
::GlobalNamespace::SoloModeSelectionViewController::MenuType GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_NoArrowsMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_NoArrowsMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SoloModeSelectionViewController::MenuType>("", "SoloModeSelectionViewController/MenuType", "NoArrowsMode"));
}
// Autogenerated static field setter
// Set static field: static public SoloModeSelectionViewController/MenuType NoArrowsMode
void GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_NoArrowsMode(::GlobalNamespace::SoloModeSelectionViewController::MenuType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_NoArrowsMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SoloModeSelectionViewController/MenuType", "NoArrowsMode", value));
}
// Autogenerated static field getter
// Get static field: static public SoloModeSelectionViewController/MenuType OneSaberMode
::GlobalNamespace::SoloModeSelectionViewController::MenuType GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_OneSaberMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_OneSaberMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SoloModeSelectionViewController::MenuType>("", "SoloModeSelectionViewController/MenuType", "OneSaberMode"));
}
// Autogenerated static field setter
// Set static field: static public SoloModeSelectionViewController/MenuType OneSaberMode
void GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_OneSaberMode(::GlobalNamespace::SoloModeSelectionViewController::MenuType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_OneSaberMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SoloModeSelectionViewController/MenuType", "OneSaberMode", value));
}
// Autogenerated static field getter
// Get static field: static public SoloModeSelectionViewController/MenuType Back
::GlobalNamespace::SoloModeSelectionViewController::MenuType GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SoloModeSelectionViewController::MenuType>("", "SoloModeSelectionViewController/MenuType", "Back"));
}
// Autogenerated static field setter
// Set static field: static public SoloModeSelectionViewController/MenuType Back
void GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_Back(::GlobalNamespace::SoloModeSelectionViewController::MenuType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SoloModeSelectionViewController/MenuType", "Back", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SoloModeSelectionViewController::MenuType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TabBarViewController
#include "GlobalNamespace/TabBarViewController.hpp"
// Including type: TabBarViewController/TabBarItem
#include "GlobalNamespace/TabBarViewController_TabBarItem.hpp"
// Including type: HMUI.TextSegmentedControl
#include "HMUI/TextSegmentedControl.hpp"
// Including type: UnityEngine.UI.ContentSizeFitter
#include "UnityEngine/UI/ContentSizeFitter.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.TextSegmentedControl _segmentedControll
[[deprecated("Use field access instead!")]] ::HMUI::TextSegmentedControl*& GlobalNamespace::TabBarViewController::dyn__segmentedControll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::dyn__segmentedControll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_segmentedControll"))->offset;
  return *reinterpret_cast<::HMUI::TextSegmentedControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.ContentSizeFitter _contentSizeFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ContentSizeFitter*& GlobalNamespace::TabBarViewController::dyn__contentSizeFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::dyn__contentSizeFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentSizeFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ContentSizeFitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _labels
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::TabBarViewController::dyn__labels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::dyn__labels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_labels"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TabBarViewController/TabBarItem[] _items
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::TabBarViewController::TabBarItem*>& GlobalNamespace::TabBarViewController::dyn__items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::dyn__items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_items"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TabBarViewController::TabBarItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _shouldReloadData
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TabBarViewController::dyn__shouldReloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::dyn__shouldReloadData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shouldReloadData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TabBarViewController.get_sizeToFit
bool GlobalNamespace::TabBarViewController::get_sizeToFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::get_sizeToFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sizeToFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TabBarViewController.set_sizeToFit
void GlobalNamespace::TabBarViewController::set_sizeToFit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::set_sizeToFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sizeToFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TabBarViewController.get_selectedCellNumber
int GlobalNamespace::TabBarViewController::get_selectedCellNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::get_selectedCellNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedCellNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TabBarViewController.Setup
void GlobalNamespace::TabBarViewController::Setup(::ArrayW<::GlobalNamespace::TabBarViewController::TabBarItem*> items) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(items)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, items);
}
// Autogenerated method: TabBarViewController.SelectItem
void GlobalNamespace::TabBarViewController::SelectItem(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::SelectItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: TabBarViewController.Clear
void GlobalNamespace::TabBarViewController::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TabBarViewController.HandleDidSelectCell
void GlobalNamespace::TabBarViewController::HandleDidSelectCell(::HMUI::SegmentedControl* segmentedControl, int cellNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::HandleDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, segmentedControl, cellNumber);
}
// Autogenerated method: TabBarViewController.DidActivate
void GlobalNamespace::TabBarViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: TabBarViewController.OnDestroy
void GlobalNamespace::TabBarViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TabBarViewController/TabBarItem
#include "GlobalNamespace/TabBarViewController_TabBarItem.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String title
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::TabBarViewController::TabBarItem::dyn_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::TabBarItem::dyn_title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "title"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Action action
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TabBarViewController::TabBarItem::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::TabBarItem::dyn_action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AnnotatedBeatmapLevelCollectionsGridView
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionsGridView.hpp"
// Including type: GridView
#include "GlobalNamespace/GridView.hpp"
// Including type: PageControl
#include "GlobalNamespace/PageControl.hpp"
// Including type: AnnotatedBeatmapLevelCollectionsGridViewAnimator
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionsGridViewAnimator.hpp"
// Including type: AnnotatedBeatmapLevelCollectionCell
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionCell.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: HMUI.SelectableCell/HMUI.TransitionType
#include "HMUI/SelectableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GridView _gridView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GridView*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__gridView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__gridView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gridView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GridView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PageControl _pageControl
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PageControl*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__pageControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__pageControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pageControl"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PageControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AnnotatedBeatmapLevelCollectionsGridViewAnimator _animator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AnnotatedBeatmapLevelCollectionCell _cellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellWidth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__cellWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__cellWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__cellHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__cellHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _promoPackIDStrings
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__promoPackIDStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__promoPackIDStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_promoPackIDStrings"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AdditionalContentModel _additionalContentModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__additionalContentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_additionalContentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IVRPlatformHelper _vrPlatformHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didOpenAnnotatedBeatmapLevelCollectionEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn_didOpenAnnotatedBeatmapLevelCollectionEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn_didOpenAnnotatedBeatmapLevelCollectionEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didOpenAnnotatedBeatmapLevelCollectionEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didCloseAnnotatedBeatmapLevelCollectionEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn_didCloseAnnotatedBeatmapLevelCollectionEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn_didCloseAnnotatedBeatmapLevelCollectionEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didCloseAnnotatedBeatmapLevelCollectionEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IAnnotatedBeatmapLevelCollection> didSelectAnnotatedBeatmapLevelCollectionEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IAnnotatedBeatmapLevelCollection*>*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn_didSelectAnnotatedBeatmapLevelCollectionEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn_didSelectAnnotatedBeatmapLevelCollectionEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectAnnotatedBeatmapLevelCollectionEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IAnnotatedBeatmapLevelCollection*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isHovering
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__isHovering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__isHovering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isHovering"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _promoPackIDs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__promoPackIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__promoPackIDs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_promoPackIDs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<IAnnotatedBeatmapLevelCollection> _annotatedBeatmapLevelCollections
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IAnnotatedBeatmapLevelCollection*>*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__annotatedBeatmapLevelCollections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__annotatedBeatmapLevelCollections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_annotatedBeatmapLevelCollections"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IAnnotatedBeatmapLevelCollection*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _selectedCellIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__selectedCellIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__selectedCellIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedCellIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.add_didOpenAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::add_didOpenAnnotatedBeatmapLevelCollectionEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::add_didOpenAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didOpenAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.remove_didOpenAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::remove_didOpenAnnotatedBeatmapLevelCollectionEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::remove_didOpenAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didOpenAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.add_didCloseAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::add_didCloseAnnotatedBeatmapLevelCollectionEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::add_didCloseAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didCloseAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.remove_didCloseAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::remove_didCloseAnnotatedBeatmapLevelCollectionEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::remove_didCloseAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didCloseAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.add_didSelectAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::add_didSelectAnnotatedBeatmapLevelCollectionEvent(::System::Action_1<::GlobalNamespace::IAnnotatedBeatmapLevelCollection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::add_didSelectAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.remove_didSelectAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::remove_didSelectAnnotatedBeatmapLevelCollectionEvent(::System::Action_1<::GlobalNamespace::IAnnotatedBeatmapLevelCollection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::remove_didSelectAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.SetData
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::SetData(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IAnnotatedBeatmapLevelCollection*>* annotatedBeatmapLevelCollections) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(annotatedBeatmapLevelCollections)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, annotatedBeatmapLevelCollections);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.Init
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.OnEnable
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.OnDisable
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.Show
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.Hide
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.CancelAsyncOperations
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::CancelAsyncOperations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::CancelAsyncOperations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAsyncOperations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.RefreshAvailability
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::RefreshAvailability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::RefreshAvailability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAvailability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.SelectAndScrollToCellWithIdx
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::SelectAndScrollToCellWithIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::SelectAndScrollToCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAndScrollToCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.OnPointerEnter
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.OnPointerExit
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::OnPointerExit(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.HandleAdditionalContentModelDidInvalidateData
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::HandleAdditionalContentModelDidInvalidateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::HandleAdditionalContentModelDidInvalidateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.HandleVRPlatformHelperInputFocusCaptured
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::HandleVRPlatformHelperInputFocusCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::HandleVRPlatformHelperInputFocusCaptured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleVRPlatformHelperInputFocusCaptured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.HandleCellSelectionDidChange
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::HandleCellSelectionDidChange(::HMUI::SelectableCell* selectableCell, ::HMUI::SelectableCell::TransitionType transition, ::Il2CppObject* changeOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::HandleCellSelectionDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCellSelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectableCell), ::il2cpp_utils::ExtractType(transition), ::il2cpp_utils::ExtractType(changeOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectableCell, transition, changeOwner);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.GetNumberOfCells
int GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::GetNumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::GetNumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.GetCellWidth
float GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::GetCellWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::GetCellWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCellWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.GetCellHeight
float GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::GetCellHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::GetCellHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCellHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.CellForIdx
::UnityEngine::MonoBehaviour* GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::CellForIdx(::GlobalNamespace::GridView* gridView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gridView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MonoBehaviour*, false>(this, ___internal__method, gridView, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AnnotatedBeatmapLevelCollectionsGridViewAnimator
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionsGridViewAnimator.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
// Including type: Tweening.Vector2Tween
#include "Tweening/Vector2Tween.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _viewportTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__viewportTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__viewportTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewportTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _contentTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__contentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__contentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _transitionDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__transitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__transitionDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EaseType _easeType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EaseType& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_easeType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.TimeTweeningManager _tweeningManager
[[deprecated("Use field access instead!")]] ::Tweening::TimeTweeningManager*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::TimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rowHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__rowHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__rowHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _rowCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__rowCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__rowCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _selectedRow
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__selectedRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__selectedRow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedRow"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Vector2Tween _viewportSizeTween
[[deprecated("Use field access instead!")]] ::Tweening::Vector2Tween*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__viewportSizeTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__viewportSizeTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewportSizeTween"))->offset;
  return *reinterpret_cast<::Tweening::Vector2Tween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Vector2Tween _contentPositionTween
[[deprecated("Use field access instead!")]] ::Tweening::Vector2Tween*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__contentPositionTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__contentPositionTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentPositionTween"))->offset;
  return *reinterpret_cast<::Tweening::Vector2Tween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.Init
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::Init(float rowHeight, int rowCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rowHeight), ::il2cpp_utils::ExtractType(rowCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rowHeight, rowCount);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.OnDestroy
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.ScrollToRowIdxInstant
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::ScrollToRowIdxInstant(int selectedRow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::ScrollToRowIdxInstant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollToRowIdxInstant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectedRow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectedRow);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.AnimateOpen
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::AnimateOpen(bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::AnimateOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animated);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.AnimateClose
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::AnimateClose(int selectedRow, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::AnimateClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectedRow), ::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectedRow, animated);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.DespawnAllActiveTweens
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::DespawnAllActiveTweens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::DespawnAllActiveTweens");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnAllActiveTweens", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.GetContentYOffset
float GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::GetContentYOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::GetContentYOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContentYOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.<AnimateOpen>b__13_0
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::$AnimateOpen$b__13_0(::UnityEngine::Vector2 size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::<AnimateOpen>b__13_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnimateOpen>b__13_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.<AnimateOpen>b__13_1
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::$AnimateOpen$b__13_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::<AnimateOpen>b__13_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnimateOpen>b__13_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.<AnimateOpen>b__13_2
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::$AnimateOpen$b__13_2(::UnityEngine::Vector2 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::<AnimateOpen>b__13_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnimateOpen>b__13_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.<AnimateOpen>b__13_3
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::$AnimateOpen$b__13_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::<AnimateOpen>b__13_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnimateOpen>b__13_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.<AnimateClose>b__14_0
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::$AnimateClose$b__14_0(::UnityEngine::Vector2 size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::<AnimateClose>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnimateClose>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.<AnimateClose>b__14_1
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::$AnimateClose$b__14_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::<AnimateClose>b__14_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnimateClose>b__14_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.<AnimateClose>b__14_2
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::$AnimateClose$b__14_2(::UnityEngine::Vector2 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::<AnimateClose>b__14_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnimateClose>b__14_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.<AnimateClose>b__14_3
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::$AnimateClose$b__14_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::<AnimateClose>b__14_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnimateClose>b__14_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BasicLevelParamsPanel
#include "GlobalNamespace/BasicLevelParamsPanel.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _durationText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::BasicLevelParamsPanel::dyn__durationText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicLevelParamsPanel::dyn__durationText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_durationText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _bpmText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::BasicLevelParamsPanel::dyn__bpmText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicLevelParamsPanel::dyn__bpmText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bpmText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BasicLevelParamsPanel.set_duration
void GlobalNamespace::BasicLevelParamsPanel::set_duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicLevelParamsPanel::set_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BasicLevelParamsPanel.set_bpm
void GlobalNamespace::BasicLevelParamsPanel::set_bpm(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicLevelParamsPanel::set_bpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicsTableView
#include "GlobalNamespace/BeatmapCharacteristicsTableView.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: BeatmapCharacteristicTableCell
#include "GlobalNamespace/BeatmapCharacteristicTableCell.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& GlobalNamespace::BeatmapCharacteristicsTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicTableCell _cellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicTableCell*& GlobalNamespace::BeatmapCharacteristicsTableView::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _cellReuseIdentifier
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapCharacteristicsTableView::dyn__cellReuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::dyn__cellReuseIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellReuseIdentifier"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellWidth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapCharacteristicsTableView::dyn__cellWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::dyn__cellWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<BeatmapCharacteristicSO> didSelectCharacteristic
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::BeatmapCharacteristicSO*>*& GlobalNamespace::BeatmapCharacteristicsTableView::dyn_didSelectCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::dyn_didSelectCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectCharacteristic"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::BeatmapCharacteristicSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::BeatmapCharacteristicsTableView::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapCharacteristicsTableView::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _selectedColumn
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapCharacteristicsTableView::dyn__selectedColumn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::dyn__selectedColumn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedColumn"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapCharacteristicsTableView.add_didSelectCharacteristic
void GlobalNamespace::BeatmapCharacteristicsTableView::add_didSelectCharacteristic(::System::Action_1<::GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::add_didSelectCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicsTableView.remove_didSelectCharacteristic
void GlobalNamespace::BeatmapCharacteristicsTableView::remove_didSelectCharacteristic(::System::Action_1<::GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::remove_didSelectCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicsTableView.Init
void GlobalNamespace::BeatmapCharacteristicsTableView::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsTableView.SetData
void GlobalNamespace::BeatmapCharacteristicsTableView::SetData(::GlobalNamespace::BeatmapCharacteristicCollectionSO* beatmapCharacteristicCollection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristicCollection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapCharacteristicCollection);
}
// Autogenerated method: BeatmapCharacteristicsTableView.OnDestroy
void GlobalNamespace::BeatmapCharacteristicsTableView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsTableView.CellSize
float GlobalNamespace::BeatmapCharacteristicsTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsTableView.NumberOfCells
int GlobalNamespace::BeatmapCharacteristicsTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsTableView.CellForIdx
::HMUI::TableCell* GlobalNamespace::BeatmapCharacteristicsTableView::CellForIdx(::HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: BeatmapCharacteristicsTableView.HandleDidSelectColumnEvent
void GlobalNamespace::BeatmapCharacteristicsTableView::HandleDidSelectColumnEvent(::HMUI::TableView* tableView, int column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::HandleDidSelectColumnEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectColumnEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(column)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableView, column);
}
// Autogenerated method: BeatmapCharacteristicsTableView.HandleAdditionalContentModelDidInvalidateData
void GlobalNamespace::BeatmapCharacteristicsTableView::HandleAdditionalContentModelDidInvalidateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::HandleAdditionalContentModelDidInvalidateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsTableView.SelectCellWithIdx
void GlobalNamespace::BeatmapCharacteristicsTableView::SelectCellWithIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::SelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSelectionView
#include "GlobalNamespace/BeatmapSelectionView.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LevelBar _levelBar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelBar*& GlobalNamespace::BeatmapSelectionView::dyn__levelBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapSelectionView::dyn__levelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _noLevelText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::BeatmapSelectionView::dyn__noLevelText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapSelectionView::dyn__noLevelText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noLevelText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSelectionView.SetBeatmap
void GlobalNamespace::BeatmapSelectionView::SetBeatmap(::GlobalNamespace::PreviewDifficultyBeatmap* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapSelectionView::SetBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BetaBuildInfoText
#include "GlobalNamespace/BetaBuildInfoText.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::BetaBuildInfoText::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaBuildInfoText::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BetaBuildInfoText.Start
void GlobalNamespace::BetaBuildInfoText::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaBuildInfoText::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BlurredCoverImageView
#include "GlobalNamespace/BlurredCoverImageView.hpp"
// Including type: BlurredCoverImageView/<SetTextureAsync>d__6
#include "GlobalNamespace/BlurredCoverImageView_-SetTextureAsync-d__6.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: KawaseBlurRendererSO
#include "GlobalNamespace/KawaseBlurRendererSO.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _coverImage
[[deprecated("Use field access instead!")]] ::HMUI::ImageView*& GlobalNamespace::BlurredCoverImageView::dyn__coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::dyn__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private KawaseBlurRendererSO _kawaseBlurRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::KawaseBlurRendererSO*& GlobalNamespace::BlurredCoverImageView::dyn__kawaseBlurRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::dyn__kawaseBlurRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kawaseBlurRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::KawaseBlurRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _settingTextureForLevelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BlurredCoverImageView::dyn__settingTextureForLevelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::dyn__settingTextureForLevelId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingTextureForLevelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _cancellationTokenSource
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& GlobalNamespace::BlurredCoverImageView::dyn__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::dyn__cancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _blurredCoverTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BlurredCoverImageView::dyn__blurredCoverTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::dyn__blurredCoverTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blurredCoverTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BlurredCoverImageView.OnDestroy
void GlobalNamespace::BlurredCoverImageView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BlurredCoverImageView.SetTextureAsync
void GlobalNamespace::BlurredCoverImageView::SetTextureAsync(::GlobalNamespace::IPreviewBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::SetTextureAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BlurredCoverImageView/<SetTextureAsync>d__6
#include "GlobalNamespace/BlurredCoverImageView_-SetTextureAsync-d__6.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BlurredCoverImageView <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BlurredCoverImageView*& GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BlurredCoverImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IPreviewBeatmapLevel level
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_level");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "level"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>& GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BlurredCoverImageView/<SetTextureAsync>d__6.MoveNext
void GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BlurredCoverImageView/<SetTextureAsync>d__6.SetStateMachine
void GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DifficultyTableView
#include "GlobalNamespace/DifficultyTableView.hpp"
// Including type: DifficultyTableCell
#include "GlobalNamespace/DifficultyTableCell.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::StringW GlobalNamespace::DifficultyTableView::_get_kCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::_get_kCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DifficultyTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::DifficultyTableView::_set_kCellIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::_set_kCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DifficultyTableView", "kCellIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNonSelectableCellIdentifier
::StringW GlobalNamespace::DifficultyTableView::_get_kNonSelectableCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::_get_kNonSelectableCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DifficultyTableView", "kNonSelectableCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNonSelectableCellIdentifier
void GlobalNamespace::DifficultyTableView::_set_kNonSelectableCellIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::_set_kNonSelectableCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DifficultyTableView", "kNonSelectableCellIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& GlobalNamespace::DifficultyTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DifficultyTableCell _cellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DifficultyTableCell*& GlobalNamespace::DifficultyTableView::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DifficultyTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DifficultyTableCell _nonSelectableCellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DifficultyTableCell*& GlobalNamespace::DifficultyTableView::dyn__nonSelectableCellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::dyn__nonSelectableCellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nonSelectableCellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DifficultyTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DifficultyTableView::dyn__cellHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::dyn__cellHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<DifficultyTableView,System.Int32> didSelectRow
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::DifficultyTableView*, int>*& GlobalNamespace::DifficultyTableView::dyn_didSelectRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::dyn_didSelectRow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectRow"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::DifficultyTableView*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap[] _difficultyBeatmaps
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::IDifficultyBeatmap*>& GlobalNamespace::DifficultyTableView::dyn__difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::dyn__difficultyBeatmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmaps"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::IDifficultyBeatmap*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DifficultyTableView.add_didSelectRow
void GlobalNamespace::DifficultyTableView::add_didSelectRow(::System::Action_2<::GlobalNamespace::DifficultyTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::add_didSelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DifficultyTableView.remove_didSelectRow
void GlobalNamespace::DifficultyTableView::remove_didSelectRow(::System::Action_2<::GlobalNamespace::DifficultyTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::remove_didSelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DifficultyTableView.Init
void GlobalNamespace::DifficultyTableView::Init(::ArrayW<::GlobalNamespace::IDifficultyBeatmap*> difficultyBeatmaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmaps)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, difficultyBeatmaps);
}
// Autogenerated method: DifficultyTableView.SetDifficultyBeatmaps
void GlobalNamespace::DifficultyTableView::SetDifficultyBeatmaps(::ArrayW<::GlobalNamespace::IDifficultyBeatmap*> difficultyBeatmaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::SetDifficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDifficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmaps)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, difficultyBeatmaps);
}
// Autogenerated method: DifficultyTableView.CellSize
float GlobalNamespace::DifficultyTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: DifficultyTableView.NumberOfCells
int GlobalNamespace::DifficultyTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: DifficultyTableView.CellForIdx
::HMUI::TableCell* GlobalNamespace::DifficultyTableView::CellForIdx(::HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: DifficultyTableView.HandleDidSelectRowEvent
void GlobalNamespace::DifficultyTableView::HandleDidSelectRowEvent(::HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::HandleDidSelectRowEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectRowEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: DifficultyTableView.SelectRow
void GlobalNamespace::DifficultyTableView::SelectRow(int row, bool callbackTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::SelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(callbackTable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, callbackTable);
}
// Autogenerated method: DifficultyTableView.SelectRow
void GlobalNamespace::DifficultyTableView::SelectRow(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, bool callbackTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::SelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(callbackTable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, difficultyBeatmap, callbackTable);
}
// Autogenerated method: DifficultyTableView.ClearSelection
void GlobalNamespace::DifficultyTableView::ClearSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisconnectPromptView
#include "GlobalNamespace/DisconnectPromptView.hpp"
// Including type: DisconnectPromptView/<>c__DisplayClass12_0
#include "GlobalNamespace/DisconnectPromptView_--c__DisplayClass12_0.hpp"
// Including type: HMUI.PanelAnimationSO
#include "HMUI/PanelAnimationSO.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.PanelAnimationSO _presentPanelAnimation
[[deprecated("Use field access instead!")]] ::HMUI::PanelAnimationSO*& GlobalNamespace::DisconnectPromptView::dyn__presentPanelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::dyn__presentPanelAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presentPanelAnimation"))->offset;
  return *reinterpret_cast<::HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.PanelAnimationSO _dismissPanelAnimation
[[deprecated("Use field access instead!")]] ::HMUI::PanelAnimationSO*& GlobalNamespace::DisconnectPromptView::dyn__dismissPanelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::dyn__dismissPanelAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dismissPanelAnimation"))->offset;
  return *reinterpret_cast<::HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _promptGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::DisconnectPromptView::dyn__promptGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::dyn__promptGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_promptGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _okButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::DisconnectPromptView::dyn__okButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::dyn__okButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_okButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _cancelButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::DisconnectPromptView::dyn__cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::dyn__cancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> didViewFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& GlobalNamespace::DisconnectPromptView::dyn_didViewFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::dyn_didViewFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didViewFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ButtonBinder _buttonBinder
[[deprecated("Use field access instead!")]] ::HMUI::ButtonBinder*& GlobalNamespace::DisconnectPromptView::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DisconnectPromptView.add_didViewFinishEvent
void GlobalNamespace::DisconnectPromptView::add_didViewFinishEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::add_didViewFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didViewFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DisconnectPromptView.remove_didViewFinishEvent
void GlobalNamespace::DisconnectPromptView::remove_didViewFinishEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::remove_didViewFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didViewFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DisconnectPromptView.OnEnable
void GlobalNamespace::DisconnectPromptView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectPromptView.OnDisable
void GlobalNamespace::DisconnectPromptView::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectPromptView.Show
void GlobalNamespace::DisconnectPromptView::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectPromptView.Hide
void GlobalNamespace::DisconnectPromptView::Hide(::System::Action* finishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishedCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finishedCallback);
}
// Autogenerated method: DisconnectPromptView.<OnEnable>b__9_0
void GlobalNamespace::DisconnectPromptView::$OnEnable$b__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::<OnEnable>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectPromptView.<OnEnable>b__9_1
void GlobalNamespace::DisconnectPromptView::$OnEnable$b__9_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::<OnEnable>b__9_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__9_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisconnectPromptView/<>c__DisplayClass12_0
#include "GlobalNamespace/DisconnectPromptView_--c__DisplayClass12_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action finishedCallback
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::DisconnectPromptView::$$c__DisplayClass12_0::dyn_finishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::$$c__DisplayClass12_0::dyn_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DisconnectPromptView <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DisconnectPromptView*& GlobalNamespace::DisconnectPromptView::$$c__DisplayClass12_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::$$c__DisplayClass12_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DisconnectPromptView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DisconnectPromptView/<>c__DisplayClass12_0.<Hide>b__0
void GlobalNamespace::DisconnectPromptView::$$c__DisplayClass12_0::$Hide$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::$$c__DisplayClass12_0::<Hide>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Hide>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditableBeatmapSelectionView
#include "GlobalNamespace/EditableBeatmapSelectionView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _editButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EditableBeatmapSelectionView::dyn__editButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::dyn__editButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _clearButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EditableBeatmapSelectionView::dyn__clearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::dyn__clearButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _levelBarCanvasGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::CanvasGroup*& GlobalNamespace::EditableBeatmapSelectionView::dyn__levelBarCanvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::dyn__levelBarCanvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBarCanvasGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _interactable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EditableBeatmapSelectionView::dyn__interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::dyn__interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <showClearButton>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EditableBeatmapSelectionView::dyn_$showClearButton$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::dyn_$showClearButton$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<showClearButton>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EditableBeatmapSelectionView.get_editButton
::UnityEngine::UI::Button* GlobalNamespace::EditableBeatmapSelectionView::get_editButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::get_editButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_editButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: EditableBeatmapSelectionView.get_clearButton
::UnityEngine::UI::Button* GlobalNamespace::EditableBeatmapSelectionView::get_clearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::get_clearButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clearButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: EditableBeatmapSelectionView.get_interactable
bool GlobalNamespace::EditableBeatmapSelectionView::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EditableBeatmapSelectionView.set_interactable
void GlobalNamespace::EditableBeatmapSelectionView::set_interactable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::set_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditableBeatmapSelectionView.get_showClearButton
bool GlobalNamespace::EditableBeatmapSelectionView::get_showClearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::get_showClearButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showClearButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EditableBeatmapSelectionView.set_showClearButton
void GlobalNamespace::EditableBeatmapSelectionView::set_showClearButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::set_showClearButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showClearButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditableBeatmapSelectionView.SetVisibility
void GlobalNamespace::EditableBeatmapSelectionView::SetVisibility(bool visible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::SetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, visible);
}
// Autogenerated method: EditableBeatmapSelectionView.Setup
void GlobalNamespace::EditableBeatmapSelectionView::Setup(bool showClearButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showClearButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showClearButton);
}
// Autogenerated method: EditableBeatmapSelectionView.SetBeatmap
void GlobalNamespace::EditableBeatmapSelectionView::SetBeatmap(::GlobalNamespace::PreviewDifficultyBeatmap* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::SetBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditableModifiersSelectionView
#include "GlobalNamespace/EditableModifiersSelectionView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _editButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EditableModifiersSelectionView::dyn__editButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::dyn__editButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _clearButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EditableModifiersSelectionView::dyn__clearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::dyn__clearButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _modifiersListCanvasGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::CanvasGroup*& GlobalNamespace::EditableModifiersSelectionView::dyn__modifiersListCanvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::dyn__modifiersListCanvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modifiersListCanvasGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _interactable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EditableModifiersSelectionView::dyn__interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::dyn__interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <showClearButton>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EditableModifiersSelectionView::dyn_$showClearButton$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::dyn_$showClearButton$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<showClearButton>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EditableModifiersSelectionView.get_editButton
::UnityEngine::UI::Button* GlobalNamespace::EditableModifiersSelectionView::get_editButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::get_editButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_editButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: EditableModifiersSelectionView.get_clearButton
::UnityEngine::UI::Button* GlobalNamespace::EditableModifiersSelectionView::get_clearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::get_clearButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clearButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: EditableModifiersSelectionView.get_interactable
bool GlobalNamespace::EditableModifiersSelectionView::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EditableModifiersSelectionView.set_interactable
void GlobalNamespace::EditableModifiersSelectionView::set_interactable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::set_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditableModifiersSelectionView.get_showClearButton
bool GlobalNamespace::EditableModifiersSelectionView::get_showClearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::get_showClearButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showClearButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EditableModifiersSelectionView.set_showClearButton
void GlobalNamespace::EditableModifiersSelectionView::set_showClearButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::set_showClearButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showClearButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditableModifiersSelectionView.SetVisibility
void GlobalNamespace::EditableModifiersSelectionView::SetVisibility(bool visible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::SetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, visible);
}
// Autogenerated method: EditableModifiersSelectionView.Setup
void GlobalNamespace::EditableModifiersSelectionView::Setup(bool showClearButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showClearButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showClearButton);
}
// Autogenerated method: EditableModifiersSelectionView.SetGameplayModifiers
void GlobalNamespace::EditableModifiersSelectionView::SetGameplayModifiers(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::SetGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayersTableView
#include "GlobalNamespace/GameServerPlayersTableView.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: GameServerPlayerTableCell
#include "GlobalNamespace/GameServerPlayerTableCell.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellId
::StringW GlobalNamespace::GameServerPlayersTableView::_get_kCellId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::_get_kCellId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GameServerPlayersTableView", "kCellId"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellId
void GlobalNamespace::GameServerPlayersTableView::_set_kCellId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::_set_kCellId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServerPlayersTableView", "kCellId", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNoSongsCellId
::StringW GlobalNamespace::GameServerPlayersTableView::_get_kNoSongsCellId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::_get_kNoSongsCellId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GameServerPlayersTableView", "kNoSongsCellId"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNoSongsCellId
void GlobalNamespace::GameServerPlayersTableView::_set_kNoSongsCellId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::_set_kNoSongsCellId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServerPlayersTableView", "kNoSongsCellId", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNoModifiersCellId
::StringW GlobalNamespace::GameServerPlayersTableView::_get_kNoModifiersCellId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::_get_kNoModifiersCellId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GameServerPlayersTableView", "kNoModifiersCellId"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNoModifiersCellId
void GlobalNamespace::GameServerPlayersTableView::_set_kNoModifiersCellId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::_set_kNoModifiersCellId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServerPlayersTableView", "kNoModifiersCellId", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& GlobalNamespace::GameServerPlayersTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameServerPlayerTableCell _gameServerPlayerCellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerPlayerTableCell*& GlobalNamespace::GameServerPlayersTableView::dyn__gameServerPlayerCellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__gameServerPlayerCellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerPlayerCellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerPlayerTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameServerPlayerTableCell _gameServerPlayerCellWithoutSongsPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerPlayerTableCell*& GlobalNamespace::GameServerPlayersTableView::dyn__gameServerPlayerCellWithoutSongsPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__gameServerPlayerCellWithoutSongsPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerPlayerCellWithoutSongsPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerPlayerTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameServerPlayerTableCell _gameServerPlayerCellWithoutModifiersPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerPlayerTableCell*& GlobalNamespace::GameServerPlayersTableView::dyn__gameServerPlayerCellWithoutModifiersPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__gameServerPlayerCellWithoutModifiersPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerPlayerCellWithoutModifiersPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerPlayerTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _tableHeaderSongGo
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GameServerPlayersTableView::dyn__tableHeaderSongGo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__tableHeaderSongGo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableHeaderSongGo"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _tableHeaderModifiersGo
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GameServerPlayersTableView::dyn__tableHeaderModifiersGo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__tableHeaderModifiersGo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableHeaderModifiersGo"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.DiContainer _container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& GlobalNamespace::GameServerPlayersTableView::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AdditionalContentModel _additionalContentModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::GameServerPlayersTableView::dyn__additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__additionalContentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_additionalContentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<PreviewDifficultyBeatmap> selectSuggestedLevelEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::PreviewDifficultyBeatmap*>*& GlobalNamespace::GameServerPlayersTableView::dyn_selectSuggestedLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn_selectSuggestedLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectSuggestedLevelEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::PreviewDifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<GameplayModifiers> selectSuggestedGameplayModifiersEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::GameplayModifiers*>*& GlobalNamespace::GameServerPlayersTableView::dyn_selectSuggestedGameplayModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn_selectSuggestedGameplayModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectSuggestedGameplayModifiersEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::GameplayModifiers*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> kickPlayerEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::GameServerPlayersTableView::dyn_kickPlayerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn_kickPlayerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kickPlayerEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServerPlayersTableView::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasKickPermissions
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServerPlayersTableView::dyn__hasKickPermissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__hasKickPermissions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasKickPermissions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowSelection
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServerPlayersTableView::dyn__allowSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__allowSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showSongSelection
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServerPlayersTableView::dyn__showSongSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__showSongSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showSongSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showModifierSelection
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServerPlayersTableView::dyn__showModifierSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__showModifierSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showModifierSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IConnectedPlayer _selectedPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::GameServerPlayersTableView::dyn__selectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__selectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<IConnectedPlayer> _sortedConnectedPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::GameServerPlayersTableView::dyn__sortedConnectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__sortedConnectedPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sortedConnectedPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ILobbyPlayersDataModel _lobbyPlayersDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyPlayersDataModel*& GlobalNamespace::GameServerPlayersTableView::dyn__lobbyPlayersDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__lobbyPlayersDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayersDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyPlayersDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerPlayersTableView.get_currentCellId
::StringW GlobalNamespace::GameServerPlayersTableView::get_currentCellId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::get_currentCellId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentCellId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayersTableView.add_selectSuggestedLevelEvent
void GlobalNamespace::GameServerPlayersTableView::add_selectSuggestedLevelEvent(::System::Action_1<::GlobalNamespace::PreviewDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::add_selectSuggestedLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectSuggestedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.remove_selectSuggestedLevelEvent
void GlobalNamespace::GameServerPlayersTableView::remove_selectSuggestedLevelEvent(::System::Action_1<::GlobalNamespace::PreviewDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::remove_selectSuggestedLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectSuggestedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.add_selectSuggestedGameplayModifiersEvent
void GlobalNamespace::GameServerPlayersTableView::add_selectSuggestedGameplayModifiersEvent(::System::Action_1<::GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::add_selectSuggestedGameplayModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectSuggestedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.remove_selectSuggestedGameplayModifiersEvent
void GlobalNamespace::GameServerPlayersTableView::remove_selectSuggestedGameplayModifiersEvent(::System::Action_1<::GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::remove_selectSuggestedGameplayModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectSuggestedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.add_kickPlayerEvent
void GlobalNamespace::GameServerPlayersTableView::add_kickPlayerEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::add_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.remove_kickPlayerEvent
void GlobalNamespace::GameServerPlayersTableView::remove_kickPlayerEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::remove_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.CellSize
float GlobalNamespace::GameServerPlayersTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayersTableView.NumberOfCells
int GlobalNamespace::GameServerPlayersTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayersTableView.GetCurrentPrefab
::GlobalNamespace::GameServerPlayerTableCell* GlobalNamespace::GameServerPlayersTableView::GetCurrentPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::GetCurrentPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameServerPlayerTableCell*, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayersTableView.CellForIdx
::HMUI::TableCell* GlobalNamespace::GameServerPlayersTableView::CellForIdx(::HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: GameServerPlayersTableView.TryGetLobbyPlayerData
bool GlobalNamespace::GameServerPlayersTableView::TryGetLobbyPlayerData(int idx, ByRef<::GlobalNamespace::IConnectedPlayer*> player, ByRef<::GlobalNamespace::ILobbyPlayerData*> playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::TryGetLobbyPlayerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetLobbyPlayerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::IConnectedPlayer*&>(), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::ILobbyPlayerData*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, idx, byref(player), byref(playerData));
}
// Autogenerated method: GameServerPlayersTableView.HandleCellUseBeatmap
void GlobalNamespace::GameServerPlayersTableView::HandleCellUseBeatmap(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::HandleCellUseBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCellUseBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: GameServerPlayersTableView.HandleCellUseModifiers
void GlobalNamespace::GameServerPlayersTableView::HandleCellUseModifiers(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::HandleCellUseModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCellUseModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: GameServerPlayersTableView.HandleCellKickPlayer
void GlobalNamespace::GameServerPlayersTableView::HandleCellKickPlayer(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::HandleCellKickPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCellKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: GameServerPlayersTableView.SetData
void GlobalNamespace::GameServerPlayersTableView::SetData(::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>* sortedPlayers, ::GlobalNamespace::ILobbyPlayersDataModel* lobbyPlayersDataModel, bool hasKickPermissions, bool allowSelection, bool showSongSelection, bool showModifierSelection, bool clearSelection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sortedPlayers), ::il2cpp_utils::ExtractType(lobbyPlayersDataModel), ::il2cpp_utils::ExtractType(hasKickPermissions), ::il2cpp_utils::ExtractType(allowSelection), ::il2cpp_utils::ExtractType(showSongSelection), ::il2cpp_utils::ExtractType(showModifierSelection), ::il2cpp_utils::ExtractType(clearSelection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sortedPlayers, lobbyPlayersDataModel, hasKickPermissions, allowSelection, showSongSelection, showModifierSelection, clearSelection);
}
// Autogenerated method: GameServerPlayersTableView.Init
void GlobalNamespace::GameServerPlayersTableView::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServersFilterText
#include "GlobalNamespace/GameServersFilterText.hpp"
// Including type: HMUI.CurvedTextMeshPro
#include "HMUI/CurvedTextMeshPro.hpp"
// Including type: SongPackMasksModel
#include "GlobalNamespace/SongPackMasksModel.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: GameServersFilter
#include "GlobalNamespace/GameServersFilter.hpp"
// Including type: BeatmapDifficultyMask
#include "GlobalNamespace/BeatmapDifficultyMask.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _text
[[deprecated("Use field access instead!")]] ::HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServersFilterText::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterText::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPackMasksModel _songPackMasksModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMasksModel*& GlobalNamespace::GameServersFilterText::dyn__songPackMasksModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterText::dyn__songPackMasksModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMasksModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMasksModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Text.StringBuilder _stringBuilder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& GlobalNamespace::GameServersFilterText::dyn__stringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterText::dyn__stringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringBuilder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServersFilterText.Setup
void GlobalNamespace::GameServersFilterText::Setup(::GlobalNamespace::GameServersFilter* filter, bool visible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterText::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(visible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, filter, visible);
}
// Autogenerated method: GameServersFilterText.Setup
void GlobalNamespace::GameServersFilterText::Setup(::GlobalNamespace::BeatmapDifficultyMask beatmapDifficultyMask, ::GlobalNamespace::SongPackMask songPackMask, bool visible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterText::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDifficultyMask), ::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractType(visible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapDifficultyMask, songPackMask, visible);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServersListTableView
#include "GlobalNamespace/GameServersListTableView.hpp"
// Including type: TableViewWithDetailCell
#include "GlobalNamespace/TableViewWithDetailCell.hpp"
// Including type: GameServerListTableCell
#include "GlobalNamespace/GameServerListTableCell.hpp"
// Including type: GameServerListDetailTableCell
#include "GlobalNamespace/GameServerListDetailTableCell.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellReuseIdentifier
::StringW GlobalNamespace::GameServersListTableView::_get_kCellReuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::_get_kCellReuseIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GameServersListTableView", "kCellReuseIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellReuseIdentifier
void GlobalNamespace::GameServersListTableView::_set_kCellReuseIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::_set_kCellReuseIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServersListTableView", "kCellReuseIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDetailCellReuseIdentifier
::StringW GlobalNamespace::GameServersListTableView::_get_kDetailCellReuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::_get_kDetailCellReuseIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GameServersListTableView", "kDetailCellReuseIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDetailCellReuseIdentifier
void GlobalNamespace::GameServersListTableView::_set_kDetailCellReuseIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::_set_kDetailCellReuseIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServersListTableView", "kDetailCellReuseIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private TableViewWithDetailCell _tableView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TableViewWithDetailCell*& GlobalNamespace::GameServersListTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TableViewWithDetailCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameServerListTableCell _gameServerListCellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerListTableCell*& GlobalNamespace::GameServersListTableView::dyn__gameServerListCellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::dyn__gameServerListCellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerListCellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerListTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameServerListDetailTableCell _gameServerDetailCellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerListDetailTableCell*& GlobalNamespace::GameServersListTableView::dyn__gameServerDetailCellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::dyn__gameServerDetailCellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerDetailCellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerListDetailTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.DiContainer _container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& GlobalNamespace::GameServersListTableView::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayer> joinButtonPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayer*>*& GlobalNamespace::GameServersListTableView::dyn_joinButtonPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::dyn_joinButtonPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinButtonPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServersListTableView::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayer[] _gamesList
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::INetworkPlayer*>& GlobalNamespace::GameServersListTableView::dyn__gamesList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::dyn__gamesList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gamesList"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::INetworkPlayer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayer _selectedServer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkPlayer*& GlobalNamespace::GameServersListTableView::dyn__selectedServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::dyn__selectedServer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedServer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServersListTableView.add_joinButtonPressedEvent
void GlobalNamespace::GameServersListTableView::add_joinButtonPressedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::add_joinButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServersListTableView.remove_joinButtonPressedEvent
void GlobalNamespace::GameServersListTableView::remove_joinButtonPressedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::remove_joinButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServersListTableView.CellSize
float GlobalNamespace::GameServersListTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GameServersListTableView.NumberOfCells
int GlobalNamespace::GameServersListTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GameServersListTableView.Init
void GlobalNamespace::GameServersListTableView::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServersListTableView.CellForContent
::HMUI::TableCell* GlobalNamespace::GameServersListTableView::CellForContent(::GlobalNamespace::TableViewWithDetailCell* tableView, int idx, bool detailOpened) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::CellForContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(detailOpened)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, idx, detailOpened);
}
// Autogenerated method: GameServersListTableView.CellForDetail
::HMUI::TableCell* GlobalNamespace::GameServersListTableView::CellForDetail(::GlobalNamespace::TableViewWithDetailCell* tableView, int contentIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::CellForDetail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForDetail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(contentIdx)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, contentIdx);
}
// Autogenerated method: GameServersListTableView.SetData
void GlobalNamespace::GameServersListTableView::SetData(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* servers, bool clearSelection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(servers), ::il2cpp_utils::ExtractType(clearSelection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, servers, clearSelection);
}
// Autogenerated method: GameServersListTableView.HandleGameServerListDetailTableCellJoinServerButtonWasPressed
void GlobalNamespace::GameServersListTableView::HandleGameServerListDetailTableCellJoinServerButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::HandleGameServerListDetailTableCellJoinServerButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerListDetailTableCellJoinServerButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServersListTableView.HandleTableViewDidSelectCellWithIdx
void GlobalNamespace::GameServersListTableView::HandleTableViewDidSelectCellWithIdx(::HMUI::TableView* tableView, int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::HandleTableViewDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTableViewDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableView, id);
}
// Autogenerated method: GameServersListTableView.HandleTableViewDidDeselectCellWithIdx
void GlobalNamespace::GameServersListTableView::HandleTableViewDidDeselectCellWithIdx(::GlobalNamespace::TableViewWithDetailCell* arg1, int arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::HandleTableViewDidDeselectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTableViewDidDeselectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg1, arg2);
}
// Autogenerated method: GameServersListTableView.OnDestroy
void GlobalNamespace::GameServersListTableView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GridView
#include "GlobalNamespace/GridView.hpp"
// Including type: GridView/IDataSource
#include "GlobalNamespace/GridView_IDataSource.hpp"
// Including type: GridView/GridViewCellsEnumerator
#include "GlobalNamespace/GridView_GridViewCellsEnumerator.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _contentTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::GridView::dyn__contentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::dyn__contentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GridView/GridViewCellsEnumerator <cellsEnumerator>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GridView::GridViewCellsEnumerator*& GlobalNamespace::GridView::dyn_$cellsEnumerator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::dyn_$cellsEnumerator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cellsEnumerator>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GridView::GridViewCellsEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GridView/IDataSource _dataSource
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GridView::IDataSource*& GlobalNamespace::GridView::dyn__dataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::dyn__dataSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GridView::IDataSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _columnCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GridView::dyn__columnCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::dyn__columnCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_columnCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _rowCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GridView::dyn__rowCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::dyn__rowCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.MonoBehaviour,System.Collections.Generic.Queue`1<UnityEngine.MonoBehaviour>> _availableCellsPerPrefabDictionary
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::MonoBehaviour*, ::System::Collections::Generic::Queue_1<::UnityEngine::MonoBehaviour*>*>*& GlobalNamespace::GridView::dyn__availableCellsPerPrefabDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::dyn__availableCellsPerPrefabDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_availableCellsPerPrefabDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::MonoBehaviour*, ::System::Collections::Generic::Queue_1<::UnityEngine::MonoBehaviour*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.MonoBehaviour,System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>> _spawnedCellsPerPrefabDictionary
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::MonoBehaviour*, ::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>*>*& GlobalNamespace::GridView::dyn__spawnedCellsPerPrefabDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::dyn__spawnedCellsPerPrefabDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnedCellsPerPrefabDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::MonoBehaviour*, ::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GridView.get_dataSource
::GlobalNamespace::GridView::IDataSource* GlobalNamespace::GridView::get_dataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::get_dataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GridView::IDataSource*, false>(this, ___internal__method);
}
// Autogenerated method: GridView.get_cellsEnumerator
::GlobalNamespace::GridView::GridViewCellsEnumerator* GlobalNamespace::GridView::get_cellsEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::get_cellsEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cellsEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GridView::GridViewCellsEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GridView.set_cellsEnumerator
void GlobalNamespace::GridView::set_cellsEnumerator(::GlobalNamespace::GridView::GridViewCellsEnumerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::set_cellsEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cellsEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GridView.get_rowCount
int GlobalNamespace::GridView::get_rowCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::get_rowCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rowCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GridView.get_columnCount
int GlobalNamespace::GridView::get_columnCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::get_columnCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_columnCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GridView.SetDataSource
void GlobalNamespace::GridView::SetDataSource(::GlobalNamespace::GridView::IDataSource* newDataSource, bool reloadData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::SetDataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newDataSource), ::il2cpp_utils::ExtractType(reloadData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newDataSource, reloadData);
}
// Autogenerated method: GridView.ReloadData
void GlobalNamespace::GridView::ReloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::ReloadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GridView.GetActiveCellsForIdentifier
::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>* GlobalNamespace::GridView::GetActiveCellsForIdentifier(::UnityEngine::MonoBehaviour* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GetActiveCellsForIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActiveCellsForIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>*, false>(this, ___internal__method, prefab);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GridView/IDataSource
#include "GlobalNamespace/GridView_IDataSource.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GridView/IDataSource.GetNumberOfCells
int GlobalNamespace::GridView::IDataSource::GetNumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::IDataSource::GetNumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GridView/IDataSource.GetCellWidth
float GlobalNamespace::GridView::IDataSource::GetCellWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::IDataSource::GetCellWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCellWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GridView/IDataSource.GetCellHeight
float GlobalNamespace::GridView::IDataSource::GetCellHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::IDataSource::GetCellHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCellHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GridView/IDataSource.CellForIdx
::UnityEngine::MonoBehaviour* GlobalNamespace::GridView::IDataSource::CellForIdx(::GlobalNamespace::GridView* gridView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::IDataSource::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gridView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MonoBehaviour*, false>(this, ___internal__method, gridView, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GridView/GridViewCellsEnumerator
#include "GlobalNamespace/GridView_GridViewCellsEnumerator.hpp"
// Including type: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1
#include "GlobalNamespace/GridView_GridViewCellsEnumerator_-GetEnumerator-d__1.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly GridView _gridView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GridView*& GlobalNamespace::GridView::GridViewCellsEnumerator::dyn__gridView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::dyn__gridView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gridView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GridView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GridView/GridViewCellsEnumerator.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::UnityEngine::MonoBehaviour*>* GlobalNamespace::GridView::GridViewCellsEnumerator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::UnityEngine::MonoBehaviour*>*, false>(this, ___internal__method);
}
// Autogenerated method: GridView/GridViewCellsEnumerator.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* GlobalNamespace::GridView::GridViewCellsEnumerator::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1
#include "GlobalNamespace/GridView_GridViewCellsEnumerator_-GetEnumerator-d__1.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MonoBehaviour <>2__current
[[deprecated("Use field access instead!")]] ::UnityEngine::MonoBehaviour*& GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::UnityEngine::MonoBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GridView/GridViewCellsEnumerator <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GridView::GridViewCellsEnumerator*& GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GridView::GridViewCellsEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.KeyCollection/System.Collections.Generic.Enumerator<UnityEngine.MonoBehaviour,System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>> <>7__wrap1
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::Dictionary_2<::UnityEngine::MonoBehaviour*, ::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>*>::KeyCollection::Enumerator& GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<::UnityEngine::MonoBehaviour*, ::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>*>::KeyCollection::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<UnityEngine.MonoBehaviour> <>7__wrap2
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>::Enumerator& GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1.System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current
::UnityEngine::MonoBehaviour* GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::System_Collections_Generic_IEnumerator$UnityEngine_MonoBehaviour$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MonoBehaviour*, false>(this, ___internal__method);
}
// Autogenerated method: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1.System.IDisposable.Dispose
void GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1.MoveNext
bool GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1.<>m__Finally1
void GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1.<>m__Finally2
void GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1.System.Collections.IEnumerator.Reset
void GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardTableView
#include "GlobalNamespace/LeaderboardTableView.hpp"
// Including type: LeaderboardTableView/ScoreData
#include "GlobalNamespace/LeaderboardTableView_ScoreData.hpp"
// Including type: LeaderboardTableCell
#include "GlobalNamespace/LeaderboardTableCell.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::StringW GlobalNamespace::LeaderboardTableView::_get_kCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::_get_kCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "LeaderboardTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::LeaderboardTableView::_set_kCellIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::_set_kCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LeaderboardTableView", "kCellIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& GlobalNamespace::LeaderboardTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LeaderboardTableCell _cellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardTableCell*& GlobalNamespace::LeaderboardTableView::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rowHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LeaderboardTableView::dyn__rowHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::dyn__rowHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<LeaderboardTableView/ScoreData> _scores
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardTableView::ScoreData*>*& GlobalNamespace::LeaderboardTableView::dyn__scores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::dyn__scores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scores"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardTableView::ScoreData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _specialScorePos
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardTableView::dyn__specialScorePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::dyn__specialScorePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_specialScorePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardTableView.CellSize
float GlobalNamespace::LeaderboardTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView.NumberOfCells
int GlobalNamespace::LeaderboardTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView.CellForIdx
::HMUI::TableCell* GlobalNamespace::LeaderboardTableView::CellForIdx(::HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: LeaderboardTableView.SetScores
void GlobalNamespace::LeaderboardTableView::SetScores(::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardTableView::ScoreData*>* scores, int specialScorePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::SetScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scores), ::il2cpp_utils::ExtractType(specialScorePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scores, specialScorePos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardTableView/ScoreData
#include "GlobalNamespace/LeaderboardTableView_ScoreData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <score>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardTableView::ScoreData::dyn_$score$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::dyn_$score$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<score>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <playerName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardTableView::ScoreData::dyn_$playerName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::dyn_$playerName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <rank>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardTableView::ScoreData::dyn_$rank$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::dyn_$rank$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rank>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <fullCombo>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LeaderboardTableView::ScoreData::dyn_$fullCombo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::dyn_$fullCombo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<fullCombo>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardTableView/ScoreData.get_score
int GlobalNamespace::LeaderboardTableView::ScoreData::get_score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::get_score");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_score", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView/ScoreData.set_score
void GlobalNamespace::LeaderboardTableView::ScoreData::set_score(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::set_score");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_score", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableView/ScoreData.get_playerName
::StringW GlobalNamespace::LeaderboardTableView::ScoreData::get_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::get_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView/ScoreData.set_playerName
void GlobalNamespace::LeaderboardTableView::ScoreData::set_playerName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::set_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableView/ScoreData.get_rank
int GlobalNamespace::LeaderboardTableView::ScoreData::get_rank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::get_rank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView/ScoreData.set_rank
void GlobalNamespace::LeaderboardTableView::ScoreData::set_rank(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::set_rank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableView/ScoreData.get_fullCombo
bool GlobalNamespace::LeaderboardTableView::ScoreData::get_fullCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::get_fullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView/ScoreData.set_fullCombo
void GlobalNamespace::LeaderboardTableView::ScoreData::set_fullCombo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::set_fullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: LevelBar/<Setup>d__17
#include "GlobalNamespace/LevelBar_-Setup-d__17.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _songArtworkImageView
[[deprecated("Use field access instead!")]] ::HMUI::ImageView*& GlobalNamespace::LevelBar::dyn__songArtworkImageView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__songArtworkImageView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songArtworkImageView"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _songNameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelBar::dyn__songNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__songNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songNameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _authorNameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelBar::dyn__authorNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__authorNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authorNameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showSongSubName
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LevelBar::dyn__showSongSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__showSongSubName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showSongSubName"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _singleLineSongInfoContainer
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::LevelBar::dyn__singleLineSongInfoContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__singleLineSongInfoContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_singleLineSongInfoContainer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _multiLineSongInfoContainer
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::LevelBar::dyn__multiLineSongInfoContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__multiLineSongInfoContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiLineSongInfoContainer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _multiLineSongNameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelBar::dyn__multiLineSongNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__multiLineSongNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiLineSongNameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _multiLineAuthorNameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelBar::dyn__multiLineAuthorNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__multiLineAuthorNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiLineAuthorNameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showDifficultyAndCharacteristic
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LevelBar::dyn__showDifficultyAndCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__showDifficultyAndCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showDifficultyAndCharacteristic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _difficultyText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelBar::dyn__difficultyText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__difficultyText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _characteristicIconImageView
[[deprecated("Use field access instead!")]] ::HMUI::ImageView*& GlobalNamespace::LevelBar::dyn__characteristicIconImageView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__characteristicIconImageView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characteristicIconImageView"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useArtworkBackground
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LevelBar::dyn__useArtworkBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__useArtworkBackground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useArtworkBackground"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _artworkBackgroundImage
[[deprecated("Use field access instead!")]] ::HMUI::ImageView*& GlobalNamespace::LevelBar::dyn__artworkBackgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__artworkBackgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_artworkBackgroundImage"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _cancellationTokenSource
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& GlobalNamespace::LevelBar::dyn__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__cancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelBar.set_hide
void GlobalNamespace::LevelBar::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::set_hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelBar.Setup
void GlobalNamespace::LevelBar::Setup(::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previewBeatmapLevel);
}
// Autogenerated method: LevelBar.Setup
void GlobalNamespace::LevelBar::Setup(::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, ::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, ::GlobalNamespace::BeatmapDifficulty beatmapDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(beatmapDifficulty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previewBeatmapLevel, beatmapCharacteristic, beatmapDifficulty);
}
// Autogenerated method: LevelBar.OnDestroy
void GlobalNamespace::LevelBar::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelBar/<Setup>d__17
#include "GlobalNamespace/LevelBar_-Setup-d__17.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelBar::$Setup$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::LevelBar::$Setup$d__17::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LevelBar <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelBar*& GlobalNamespace::LevelBar::$Setup$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IPreviewBeatmapLevel previewBeatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::LevelBar::$Setup$d__17::dyn_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::dyn_previewBeatmapLevel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDifficulty beatmapDifficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::LevelBar::$Setup$d__17::dyn_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::dyn_beatmapDifficulty");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapCharacteristicSO beatmapCharacteristic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::LevelBar::$Setup$d__17::dyn_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::dyn_beatmapCharacteristic");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::LevelBar::$Setup$d__17::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>& GlobalNamespace::LevelBar::$Setup$d__17::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelBar/<Setup>d__17.MoveNext
void GlobalNamespace::LevelBar::$Setup$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelBar/<Setup>d__17.SetStateMachine
void GlobalNamespace::LevelBar::$Setup$d__17::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelCollectionTableView
#include "GlobalNamespace/LevelCollectionTableView.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: HMUI.AlphabetScrollbar
#include "HMUI/AlphabetScrollbar.hpp"
// Including type: LevelListTableCell
#include "GlobalNamespace/LevelListTableCell.hpp"
// Including type: LevelPackHeaderTableCell
#include "GlobalNamespace/LevelPackHeaderTableCell.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& GlobalNamespace::LevelCollectionTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.AlphabetScrollbar _alphabetScrollbar
[[deprecated("Use field access instead!")]] ::HMUI::AlphabetScrollbar*& GlobalNamespace::LevelCollectionTableView::dyn__alphabetScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__alphabetScrollbar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alphabetScrollbar"))->offset;
  return *reinterpret_cast<::HMUI::AlphabetScrollbar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelListTableCell _levelCellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelListTableCell*& GlobalNamespace::LevelCollectionTableView::dyn__levelCellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__levelCellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelCellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelListTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _levelCellsReuseIdentifier
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LevelCollectionTableView::dyn__levelCellsReuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__levelCellsReuseIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelCellsReuseIdentifier"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelPackHeaderTableCell _packCellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelPackHeaderTableCell*& GlobalNamespace::LevelCollectionTableView::dyn__packCellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__packCellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packCellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelPackHeaderTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _packCellsReuseIdentifier
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LevelCollectionTableView::dyn__packCellsReuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__packCellsReuseIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packCellsReuseIdentifier"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LevelCollectionTableView::dyn__cellHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__cellHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _showAlphabetScrollbarLevelCountThreshold
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCollectionTableView::dyn__showAlphabetScrollbarLevelCountThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__showAlphabetScrollbarLevelCountThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showAlphabetScrollbarLevelCountThreshold"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AdditionalContentModel _additionalContentModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::LevelCollectionTableView::dyn__additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__additionalContentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_additionalContentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<LevelCollectionTableView,IPreviewBeatmapLevel> didSelectLevelEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::LevelCollectionTableView*, ::GlobalNamespace::IPreviewBeatmapLevel*>*& GlobalNamespace::LevelCollectionTableView::dyn_didSelectLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn_didSelectLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectLevelEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::LevelCollectionTableView*, ::GlobalNamespace::IPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<LevelCollectionTableView> didSelectHeaderEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::LevelCollectionTableView*>*& GlobalNamespace::LevelCollectionTableView::dyn_didSelectHeaderEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn_didSelectHeaderEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectHeaderEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::LevelCollectionTableView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LevelCollectionTableView::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<IPreviewBeatmapLevel> _previewBeatmapLevels
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IPreviewBeatmapLevel*>*& GlobalNamespace::LevelCollectionTableView::dyn__previewBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__previewBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewBeatmapLevels"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _headerSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::LevelCollectionTableView::dyn__headerSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__headerSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headerSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _headerText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LevelCollectionTableView::dyn__headerText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__headerText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headerText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showLevelPackHeader
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LevelCollectionTableView::dyn__showLevelPackHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__showLevelPackHeader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showLevelPackHeader"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _favoriteLevelIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::LevelCollectionTableView::dyn__favoriteLevelIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__favoriteLevelIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_favoriteLevelIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _selectedRow
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCollectionTableView::dyn__selectedRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__selectedRow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedRow"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IPreviewBeatmapLevel _selectedPreviewBeatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::LevelCollectionTableView::dyn__selectedPreviewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__selectedPreviewBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedPreviewBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelCollectionTableView.add_didSelectLevelEvent
void GlobalNamespace::LevelCollectionTableView::add_didSelectLevelEvent(::System::Action_2<::GlobalNamespace::LevelCollectionTableView*, ::GlobalNamespace::IPreviewBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::add_didSelectLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionTableView.remove_didSelectLevelEvent
void GlobalNamespace::LevelCollectionTableView::remove_didSelectLevelEvent(::System::Action_2<::GlobalNamespace::LevelCollectionTableView*, ::GlobalNamespace::IPreviewBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::remove_didSelectLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionTableView.add_didSelectHeaderEvent
void GlobalNamespace::LevelCollectionTableView::add_didSelectHeaderEvent(::System::Action_1<::GlobalNamespace::LevelCollectionTableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::add_didSelectHeaderEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectHeaderEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionTableView.remove_didSelectHeaderEvent
void GlobalNamespace::LevelCollectionTableView::remove_didSelectHeaderEvent(::System::Action_1<::GlobalNamespace::LevelCollectionTableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::remove_didSelectHeaderEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectHeaderEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionTableView.Init
void GlobalNamespace::LevelCollectionTableView::Init(::StringW headerText, ::UnityEngine::Sprite* headerSprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headerText), ::il2cpp_utils::ExtractType(headerSprite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headerText, headerSprite);
}
// Autogenerated method: LevelCollectionTableView.Init
void GlobalNamespace::LevelCollectionTableView::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.SetData
void GlobalNamespace::LevelCollectionTableView::SetData(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IPreviewBeatmapLevel*>* previewBeatmapLevels, ::System::Collections::Generic::HashSet_1<::StringW>* favoriteLevelIds, bool beatmapLevelsAreSorted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevels), ::il2cpp_utils::ExtractType(favoriteLevelIds), ::il2cpp_utils::ExtractType(beatmapLevelsAreSorted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previewBeatmapLevels, favoriteLevelIds, beatmapLevelsAreSorted);
}
// Autogenerated method: LevelCollectionTableView.RefreshFavorites
void GlobalNamespace::LevelCollectionTableView::RefreshFavorites(::System::Collections::Generic::HashSet_1<::StringW>* favoriteLevelIds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::RefreshFavorites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshFavorites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(favoriteLevelIds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, favoriteLevelIds);
}
// Autogenerated method: LevelCollectionTableView.OnEnable
void GlobalNamespace::LevelCollectionTableView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.OnDisable
void GlobalNamespace::LevelCollectionTableView::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.OnDestroy
void GlobalNamespace::LevelCollectionTableView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.CellSize
float GlobalNamespace::LevelCollectionTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.NumberOfCells
int GlobalNamespace::LevelCollectionTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.CellForIdx
::HMUI::TableCell* GlobalNamespace::LevelCollectionTableView::CellForIdx(::HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: LevelCollectionTableView.HandleDidSelectRowEvent
void GlobalNamespace::LevelCollectionTableView::HandleDidSelectRowEvent(::HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::HandleDidSelectRowEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectRowEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: LevelCollectionTableView.HandleAdditionalContentModelDidInvalidateData
void GlobalNamespace::LevelCollectionTableView::HandleAdditionalContentModelDidInvalidateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::HandleAdditionalContentModelDidInvalidateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.CancelAsyncOperations
void GlobalNamespace::LevelCollectionTableView::CancelAsyncOperations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::CancelAsyncOperations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAsyncOperations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.RefreshLevelsAvailability
void GlobalNamespace::LevelCollectionTableView::RefreshLevelsAvailability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::RefreshLevelsAvailability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshLevelsAvailability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.SelectLevelPackHeaderCell
void GlobalNamespace::LevelCollectionTableView::SelectLevelPackHeaderCell() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::SelectLevelPackHeaderCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectLevelPackHeaderCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.ClearSelection
void GlobalNamespace::LevelCollectionTableView::ClearSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.SelectLevel
void GlobalNamespace::LevelCollectionTableView::SelectLevel(::GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::SelectLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelParamsPanel
#include "GlobalNamespace/LevelParamsPanel.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _notesPerSecondText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelParamsPanel::dyn__notesPerSecondText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelParamsPanel::dyn__notesPerSecondText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notesPerSecondText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _notesCountText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelParamsPanel::dyn__notesCountText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelParamsPanel::dyn__notesCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notesCountText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _obstaclesCountText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelParamsPanel::dyn__obstaclesCountText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelParamsPanel::dyn__obstaclesCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstaclesCountText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _bombsCountText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelParamsPanel::dyn__bombsCountText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelParamsPanel::dyn__bombsCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombsCountText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelParamsPanel.set_notesPerSecond
void GlobalNamespace::LevelParamsPanel::set_notesPerSecond(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelParamsPanel::set_notesPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_notesPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelParamsPanel.set_notesCount
void GlobalNamespace::LevelParamsPanel::set_notesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelParamsPanel::set_notesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_notesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelParamsPanel.set_obstaclesCount
void GlobalNamespace::LevelParamsPanel::set_obstaclesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelParamsPanel::set_obstaclesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_obstaclesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelParamsPanel.set_bombsCount
void GlobalNamespace::LevelParamsPanel::set_bombsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelParamsPanel::set_bombsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bombsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelStatsView
#include "GlobalNamespace/LevelStatsView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PlayerData
#include "GlobalNamespace/PlayerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _highScoreText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelStatsView::dyn__highScoreText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelStatsView::dyn__highScoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highScoreText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _maxComboText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelStatsView::dyn__maxComboText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelStatsView::dyn__maxComboText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxComboText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _maxRankText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelStatsView::dyn__maxRankText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelStatsView::dyn__maxRankText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxRankText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelStatsView.Hide
void GlobalNamespace::LevelStatsView::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelStatsView::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelStatsView.ShowStats
void GlobalNamespace::LevelStatsView::ShowStats(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::PlayerData* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelStatsView::ShowStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, difficultyBeatmap, playerData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardTableView
#include "GlobalNamespace/LocalLeaderboardTableView.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LocalLeaderboardsModel/ScoreData
#include "GlobalNamespace/LocalLeaderboardsModel_ScoreData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalLeaderboardTableView.SetScores
void GlobalNamespace::LocalLeaderboardTableView::SetScores(::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::ScoreData*>* scores, int specialScorePos, int maxNumberOfCells) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardTableView::SetScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scores), ::il2cpp_utils::ExtractType(specialScorePos), ::il2cpp_utils::ExtractType(maxNumberOfCells)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scores, specialScorePos, maxNumberOfCells);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ModifiersSelectionView
#include "GlobalNamespace/ModifiersSelectionView.hpp"
// Including type: ModifiersSelectionView/<>c__DisplayClass3_0
#include "GlobalNamespace/ModifiersSelectionView_--c__DisplayClass3_0.hpp"
// Including type: GameplayModifierInfoListItemsList
#include "GlobalNamespace/GameplayModifierInfoListItemsList.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameplayModifierInfoListItemsList _modifierInfoList
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierInfoListItemsList*& GlobalNamespace::ModifiersSelectionView::dyn__modifierInfoList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModifiersSelectionView::dyn__modifierInfoList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modifierInfoList"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierInfoListItemsList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _noModifiersText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ModifiersSelectionView::dyn__noModifiersText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModifiersSelectionView::dyn__noModifiersText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noModifiersText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiersModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::ModifiersSelectionView::dyn__gameplayModifiersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModifiersSelectionView::dyn__gameplayModifiersModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ModifiersSelectionView.SetGameplayModifiers
void GlobalNamespace::ModifiersSelectionView::SetGameplayModifiers(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModifiersSelectionView::SetGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ModifiersSelectionView/<>c__DisplayClass3_0
#include "GlobalNamespace/ModifiersSelectionView_--c__DisplayClass3_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GameplayModifierParamsSO> modifierParams
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>*& GlobalNamespace::ModifiersSelectionView::$$c__DisplayClass3_0::dyn_modifierParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModifiersSelectionView::$$c__DisplayClass3_0::dyn_modifierParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifierParams"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ModifiersSelectionView/<>c__DisplayClass3_0.<SetGameplayModifiers>b__0
void GlobalNamespace::ModifiersSelectionView::$$c__DisplayClass3_0::$SetGameplayModifiers$b__0(int idx, ::GlobalNamespace::GameplayModifierInfoListItem* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModifiersSelectionView::$$c__DisplayClass3_0::<SetGameplayModifiers>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetGameplayModifiers>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, item);
}
