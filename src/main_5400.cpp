// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ObjectDisposedException
#include "System/ObjectDisposedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String objectName
[[deprecated("Use field access instead!")]] ::StringW& System::ObjectDisposedException::dyn_objectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ObjectDisposedException::dyn_objectName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ObjectDisposedException.get_ObjectName
::StringW System::ObjectDisposedException::get_ObjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ObjectDisposedException::get_ObjectName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ObjectDisposedException.get_Message
::StringW System::ObjectDisposedException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ObjectDisposedException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ObjectDisposedException.GetObjectData
void System::ObjectDisposedException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ObjectDisposedException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ObsoleteAttribute
#include "System/ObsoleteAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _message
[[deprecated("Use field access instead!")]] ::StringW& System::ObsoleteAttribute::dyn__message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ObsoleteAttribute::dyn__message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _error
[[deprecated("Use field access instead!")]] bool& System::ObsoleteAttribute::dyn__error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ObsoleteAttribute::dyn__error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_error"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ObsoleteAttribute.get_Message
::StringW System::ObsoleteAttribute::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ObsoleteAttribute::get_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.OperationCanceledException
#include "System/OperationCanceledException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken _cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::OperationCanceledException::dyn__cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OperationCanceledException::dyn__cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.OperationCanceledException.get_CancellationToken
::System::Threading::CancellationToken System::OperationCanceledException::get_CancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OperationCanceledException::get_CancellationToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CancellationToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationToken, false>(this, ___internal__method);
}
// Autogenerated method: System.OperationCanceledException.set_CancellationToken
void System::OperationCanceledException::set_CancellationToken(::System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OperationCanceledException::set_CancellationToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CancellationToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.OutOfMemoryException
#include "System/OutOfMemoryException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.OverflowException
#include "System/OverflowException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ParamArrayAttribute
#include "System/ParamArrayAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ParamsArray
#include "System/ParamsArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] oneArgArray
::ArrayW<::Il2CppObject*> System::ParamsArray::_get_oneArgArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::_get_oneArgArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System", "ParamsArray", "oneArgArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] oneArgArray
void System::ParamsArray::_set_oneArgArray(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::_set_oneArgArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParamsArray", "oneArgArray", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] twoArgArray
::ArrayW<::Il2CppObject*> System::ParamsArray::_get_twoArgArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::_get_twoArgArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System", "ParamsArray", "twoArgArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] twoArgArray
void System::ParamsArray::_set_twoArgArray(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::_set_twoArgArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParamsArray", "twoArgArray", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] threeArgArray
::ArrayW<::Il2CppObject*> System::ParamsArray::_get_threeArgArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::_get_threeArgArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System", "ParamsArray", "threeArgArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] threeArgArray
void System::ParamsArray::_set_threeArgArray(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::_set_threeArgArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParamsArray", "threeArgArray", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object arg0
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ParamsArray::dyn_arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::dyn_arg0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object arg1
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ParamsArray::dyn_arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::dyn_arg1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arg1"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object arg2
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ParamsArray::dyn_arg2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::dyn_arg2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arg2"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object[] args
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::ParamsArray::dyn_args() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::dyn_args");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "args"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ParamsArray.get_Length
int System::ParamsArray::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ParamsArray.get_Item
::Il2CppObject* System::ParamsArray::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ParamsArray..ctor
System::ParamsArray::ParamsArray(::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg0);
}
// Autogenerated method: System.ParamsArray..ctor
System::ParamsArray::ParamsArray(::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg0, arg1);
}
// Autogenerated method: System.ParamsArray..ctor
System::ParamsArray::ParamsArray(::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg0, arg1, arg2);
}
// Autogenerated method: System.ParamsArray..ctor
System::ParamsArray::ParamsArray(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: System.ParamsArray..cctor
void System::ParamsArray::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParamsArray", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ParamsArray.GetAtSlow
::Il2CppObject* System::ParamsArray::GetAtSlow(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParamsArray::GetAtSlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetAtSlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.PlatformNotSupportedException
#include "System/PlatformNotSupportedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Random
#include "System/Random.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MBIG
int System::Random::_get_MBIG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::_get_MBIG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Random", "MBIG"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MBIG
void System::Random::_set_MBIG(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::_set_MBIG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Random", "MBIG", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MSEED
int System::Random::_get_MSEED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::_get_MSEED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Random", "MSEED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MSEED
void System::Random::_set_MSEED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::_set_MSEED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Random", "MSEED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MZ
int System::Random::_get_MZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::_get_MZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Random", "MZ"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MZ
void System::Random::_set_MZ(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::_set_MZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Random", "MZ", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 inext
[[deprecated("Use field access instead!")]] int& System::Random::dyn_inext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::dyn_inext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inext"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 inextp
[[deprecated("Use field access instead!")]] int& System::Random::dyn_inextp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::dyn_inextp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inextp"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] SeedArray
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Random::dyn_SeedArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::dyn_SeedArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SeedArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Random.Sample
double System::Random::Sample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::Sample");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.InternalSample
int System::Random::InternalSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::InternalSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.Next
int System::Random::Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::Next");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.GetSampleForLargeRange
double System::Random::GetSampleForLargeRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::GetSampleForLargeRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSampleForLargeRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.Next
int System::Random::Next(int minValue, int maxValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::Next");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minValue), ::il2cpp_utils::ExtractType(maxValue)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, minValue, maxValue);
}
// Autogenerated method: System.Random.Next
int System::Random::Next(int maxValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::Next");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxValue)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, maxValue);
}
// Autogenerated method: System.Random.NextDouble
double System::Random::NextDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::NextDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.NextBytes
void System::Random::NextBytes(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Random::NextBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.RankException
#include "System/RankException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TypeNameFormatFlags
#include "System/TypeNameFormatFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatBasic
::System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatBasic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_get_FormatBasic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatBasic"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatBasic
void System::TypeNameFormatFlags::_set_FormatBasic(::System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_set_FormatBasic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatBasic", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatNamespace
::System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_get_FormatNamespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatNamespace"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatNamespace
void System::TypeNameFormatFlags::_set_FormatNamespace(::System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_set_FormatNamespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatNamespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatFullInst
::System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatFullInst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_get_FormatFullInst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatFullInst"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatFullInst
void System::TypeNameFormatFlags::_set_FormatFullInst(::System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_set_FormatFullInst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatFullInst", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatAssembly
::System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_get_FormatAssembly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatAssembly"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatAssembly
void System::TypeNameFormatFlags::_set_FormatAssembly(::System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_set_FormatAssembly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatAssembly", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatSignature
::System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_get_FormatSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatSignature"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatSignature
void System::TypeNameFormatFlags::_set_FormatSignature(::System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_set_FormatSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatSignature", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatNoVersion
::System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatNoVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_get_FormatNoVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatNoVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatNoVersion
void System::TypeNameFormatFlags::_set_FormatNoVersion(::System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_set_FormatNoVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatNoVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatAngleBrackets
::System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatAngleBrackets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_get_FormatAngleBrackets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatAngleBrackets"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatAngleBrackets
void System::TypeNameFormatFlags::_set_FormatAngleBrackets(::System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_set_FormatAngleBrackets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatAngleBrackets", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatStubInfo
::System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatStubInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_get_FormatStubInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatStubInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatStubInfo
void System::TypeNameFormatFlags::_set_FormatStubInfo(::System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_set_FormatStubInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatStubInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatGenericParam
::System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatGenericParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_get_FormatGenericParam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatGenericParam"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatGenericParam
void System::TypeNameFormatFlags::_set_FormatGenericParam(::System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_set_FormatGenericParam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatGenericParam", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatSerialization
::System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatSerialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_get_FormatSerialization");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatSerialization"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatSerialization
void System::TypeNameFormatFlags::_set_FormatSerialization(::System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::_set_FormatSerialization");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatSerialization", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::TypeNameFormatFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameFormatFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TypeNameKind
#include "System/TypeNameKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.TypeNameKind Name
::System::TypeNameKind System::TypeNameKind::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameKind::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TypeNameKind>("System", "TypeNameKind", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameKind Name
void System::TypeNameKind::_set_Name(::System::TypeNameKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameKind::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameKind", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameKind ToString
::System::TypeNameKind System::TypeNameKind::_get_ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameKind::_get_ToString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TypeNameKind>("System", "TypeNameKind", "ToString"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameKind ToString
void System::TypeNameKind::_set_ToString(::System::TypeNameKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameKind::_set_ToString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameKind", "ToString", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameKind SerializationName
::System::TypeNameKind System::TypeNameKind::_get_SerializationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameKind::_get_SerializationName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TypeNameKind>("System", "TypeNameKind", "SerializationName"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameKind SerializationName
void System::TypeNameKind::_set_SerializationName(::System::TypeNameKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameKind::_set_SerializationName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameKind", "SerializationName", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameKind FullName
::System::TypeNameKind System::TypeNameKind::_get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameKind::_get_FullName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TypeNameKind>("System", "TypeNameKind", "FullName"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameKind FullName
void System::TypeNameKind::_set_FullName(::System::TypeNameKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameKind::_set_FullName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameKind", "FullName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::TypeNameKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.RuntimeType/System.MemberListType
#include "System/RuntimeType_MemberListType.hpp"
// Including type: System.RuntimeType/System.ListBuilder`1
#include "System/RuntimeType_ListBuilder_1.hpp"
// Including type: System.MonoTypeInfo
#include "System/MonoTypeInfo.hpp"
// Including type: System.Reflection.RuntimeConstructorInfo
#include "System/Reflection/RuntimeConstructorInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Reflection.RuntimeMethodInfo
#include "System/Reflection/RuntimeMethodInfo.hpp"
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.RuntimeModule
#include "System/Reflection/RuntimeModule.hpp"
// Including type: System.Reflection.RuntimeAssembly
#include "System/Reflection/RuntimeAssembly.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
// Including type: System.Reflection.MonoCMethod
#include "System/Reflection/MonoCMethod.hpp"
// Including type: System.TypeNameKind
#include "System/TypeNameKind.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Reflection.RuntimePropertyInfo
#include "System/Reflection/RuntimePropertyInfo.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Reflection.GenericParameterAttributes
#include "System/Reflection/GenericParameterAttributes.hpp"
// Including type: System.Reflection.RuntimeFieldInfo
#include "System/Reflection/RuntimeFieldInfo.hpp"
// Including type: System.Reflection.RuntimeEventInfo
#include "System/Reflection/RuntimeEventInfo.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.RuntimeTypeHandle
#include "System/RuntimeTypeHandle.hpp"
// Including type: System.Reflection.MemberTypes
#include "System/Reflection/MemberTypes.hpp"
// Including type: System.Reflection.TypeAttributes
#include "System/Reflection/TypeAttributes.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Reflection.CustomAttributeData
#include "System/Reflection/CustomAttributeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.RuntimeType ValueType
::System::RuntimeType* System::RuntimeType::_get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_get_ValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::RuntimeType*>("System", "RuntimeType", "ValueType"));
}
// Autogenerated static field setter
// Set static field: static readonly System.RuntimeType ValueType
void System::RuntimeType::_set_ValueType(::System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_set_ValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "ValueType", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.RuntimeType EnumType
::System::RuntimeType* System::RuntimeType::_get_EnumType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_get_EnumType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::RuntimeType*>("System", "RuntimeType", "EnumType"));
}
// Autogenerated static field setter
// Set static field: static readonly System.RuntimeType EnumType
void System::RuntimeType::_set_EnumType(::System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_set_EnumType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "EnumType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.RuntimeType ObjectType
::System::RuntimeType* System::RuntimeType::_get_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_get_ObjectType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::RuntimeType*>("System", "RuntimeType", "ObjectType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.RuntimeType ObjectType
void System::RuntimeType::_set_ObjectType(::System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_set_ObjectType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "ObjectType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.RuntimeType StringType
::System::RuntimeType* System::RuntimeType::_get_StringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_get_StringType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::RuntimeType*>("System", "RuntimeType", "StringType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.RuntimeType StringType
void System::RuntimeType::_set_StringType(::System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_set_StringType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "StringType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.RuntimeType DelegateType
::System::RuntimeType* System::RuntimeType::_get_DelegateType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_get_DelegateType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::RuntimeType*>("System", "RuntimeType", "DelegateType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.RuntimeType DelegateType
void System::RuntimeType::_set_DelegateType(::System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_set_DelegateType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "DelegateType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type[] s_SICtorParamTypes
::ArrayW<::System::Type*> System::RuntimeType::_get_s_SICtorParamTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_get_s_SICtorParamTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("System", "RuntimeType", "s_SICtorParamTypes"));
}
// Autogenerated static field setter
// Set static field: static private System.Type[] s_SICtorParamTypes
void System::RuntimeType::_set_s_SICtorParamTypes(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_set_s_SICtorParamTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "s_SICtorParamTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags MemberBindingMask
::System::Reflection::BindingFlags System::RuntimeType::_get_MemberBindingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_get_MemberBindingMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::BindingFlags>("System", "RuntimeType", "MemberBindingMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags MemberBindingMask
void System::RuntimeType::_set_MemberBindingMask(::System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_set_MemberBindingMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "MemberBindingMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags InvocationMask
::System::Reflection::BindingFlags System::RuntimeType::_get_InvocationMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_get_InvocationMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::BindingFlags>("System", "RuntimeType", "InvocationMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags InvocationMask
void System::RuntimeType::_set_InvocationMask(::System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_set_InvocationMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "InvocationMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderNonCreateInstance
::System::Reflection::BindingFlags System::RuntimeType::_get_BinderNonCreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_get_BinderNonCreateInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::BindingFlags>("System", "RuntimeType", "BinderNonCreateInstance"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderNonCreateInstance
void System::RuntimeType::_set_BinderNonCreateInstance(::System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_set_BinderNonCreateInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderNonCreateInstance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderGetSetProperty
::System::Reflection::BindingFlags System::RuntimeType::_get_BinderGetSetProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_get_BinderGetSetProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::BindingFlags>("System", "RuntimeType", "BinderGetSetProperty"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderGetSetProperty
void System::RuntimeType::_set_BinderGetSetProperty(::System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_set_BinderGetSetProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderGetSetProperty", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderSetInvokeProperty
::System::Reflection::BindingFlags System::RuntimeType::_get_BinderSetInvokeProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_get_BinderSetInvokeProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::BindingFlags>("System", "RuntimeType", "BinderSetInvokeProperty"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderSetInvokeProperty
void System::RuntimeType::_set_BinderSetInvokeProperty(::System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_set_BinderSetInvokeProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderSetInvokeProperty", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderGetSetField
::System::Reflection::BindingFlags System::RuntimeType::_get_BinderGetSetField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_get_BinderGetSetField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::BindingFlags>("System", "RuntimeType", "BinderGetSetField"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderGetSetField
void System::RuntimeType::_set_BinderGetSetField(::System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_set_BinderGetSetField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderGetSetField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderSetInvokeField
::System::Reflection::BindingFlags System::RuntimeType::_get_BinderSetInvokeField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_get_BinderSetInvokeField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::BindingFlags>("System", "RuntimeType", "BinderSetInvokeField"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderSetInvokeField
void System::RuntimeType::_set_BinderSetInvokeField(::System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_set_BinderSetInvokeField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderSetInvokeField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderNonFieldGetSet
::System::Reflection::BindingFlags System::RuntimeType::_get_BinderNonFieldGetSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_get_BinderNonFieldGetSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::BindingFlags>("System", "RuntimeType", "BinderNonFieldGetSet"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderNonFieldGetSet
void System::RuntimeType::_set_BinderNonFieldGetSet(::System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_set_BinderNonFieldGetSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderNonFieldGetSet", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags ClassicBindingMask
::System::Reflection::BindingFlags System::RuntimeType::_get_ClassicBindingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_get_ClassicBindingMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::BindingFlags>("System", "RuntimeType", "ClassicBindingMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags ClassicBindingMask
void System::RuntimeType::_set_ClassicBindingMask(::System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_set_ClassicBindingMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "ClassicBindingMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.RuntimeType s_typedRef
::System::RuntimeType* System::RuntimeType::_get_s_typedRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_get_s_typedRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::RuntimeType*>("System", "RuntimeType", "s_typedRef"));
}
// Autogenerated static field setter
// Set static field: static private System.RuntimeType s_typedRef
void System::RuntimeType::_set_s_typedRef(::System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::_set_s_typedRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "s_typedRef", value));
}
// Autogenerated instance field getter
// Get instance field: private System.MonoTypeInfo type_info
[[deprecated("Use field access instead!")]] ::System::MonoTypeInfo*& System::RuntimeType::dyn_type_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::dyn_type_info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type_info"))->offset;
  return *reinterpret_cast<::System::MonoTypeInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object GenericCache
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::RuntimeType::dyn_GenericCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::dyn_GenericCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GenericCache"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.RuntimeConstructorInfo m_serializationCtor
[[deprecated("Use field access instead!")]] ::System::Reflection::RuntimeConstructorInfo*& System::RuntimeType::dyn_m_serializationCtor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::dyn_m_serializationCtor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_serializationCtor"))->offset;
  return *reinterpret_cast<::System::Reflection::RuntimeConstructorInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.RuntimeType.ThrowIfTypeNeverValidGenericArgument
void System::RuntimeType::ThrowIfTypeNeverValidGenericArgument(::System::RuntimeType* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::ThrowIfTypeNeverValidGenericArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "ThrowIfTypeNeverValidGenericArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.SanityCheckGenericArguments
void System::RuntimeType::SanityCheckGenericArguments(::ArrayW<::System::RuntimeType*> genericArguments, ::ArrayW<::System::RuntimeType*> genericParamters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::SanityCheckGenericArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "SanityCheckGenericArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(genericArguments), ::il2cpp_utils::ExtractType(genericParamters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, genericArguments, genericParamters);
}
// Autogenerated method: System.RuntimeType.SplitName
void System::RuntimeType::SplitName(::StringW fullname, ByRef<::StringW> name, ByRef<::StringW> ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::SplitName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "SplitName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullname), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fullname, byref(name), byref(ns));
}
// Autogenerated method: System.RuntimeType.FilterHelper
void System::RuntimeType::FilterHelper(::System::Reflection::BindingFlags bindingFlags, ByRef<::StringW> name, bool allowPrefixLookup, ByRef<bool> prefixLookup, ByRef<bool> ignoreCase, ByRef<::System::RuntimeType::MemberListType> listType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::FilterHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingFlags), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(allowPrefixLookup), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<::System::RuntimeType::MemberListType&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bindingFlags, byref(name), allowPrefixLookup, byref(prefixLookup), byref(ignoreCase), byref(listType));
}
// Autogenerated method: System.RuntimeType.FilterHelper
void System::RuntimeType::FilterHelper(::System::Reflection::BindingFlags bindingFlags, ByRef<::StringW> name, ByRef<bool> ignoreCase, ByRef<::System::RuntimeType::MemberListType> listType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::FilterHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingFlags), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<::System::RuntimeType::MemberListType&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bindingFlags, byref(name), byref(ignoreCase), byref(listType));
}
// Autogenerated method: System.RuntimeType.FilterApplyPrefixLookup
bool System::RuntimeType::FilterApplyPrefixLookup(::System::Reflection::MemberInfo* memberInfo, ::StringW name, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::FilterApplyPrefixLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyPrefixLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberInfo), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, memberInfo, name, ignoreCase);
}
// Autogenerated method: System.RuntimeType.FilterApplyBase
bool System::RuntimeType::FilterApplyBase(::System::Reflection::MemberInfo* memberInfo, ::System::Reflection::BindingFlags bindingFlags, bool isPublic, bool isNonProtectedInternal, bool isStatic, ::StringW name, bool prefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::FilterApplyBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberInfo), ::il2cpp_utils::ExtractType(bindingFlags), ::il2cpp_utils::ExtractType(isPublic), ::il2cpp_utils::ExtractType(isNonProtectedInternal), ::il2cpp_utils::ExtractType(isStatic), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(prefixLookup)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, memberInfo, bindingFlags, isPublic, isNonProtectedInternal, isStatic, name, prefixLookup);
}
// Autogenerated method: System.RuntimeType.FilterApplyType
bool System::RuntimeType::FilterApplyType(::System::Type* type, ::System::Reflection::BindingFlags bindingFlags, ::StringW name, bool prefixLookup, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::FilterApplyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(bindingFlags), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(prefixLookup), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, bindingFlags, name, prefixLookup, ns);
}
// Autogenerated method: System.RuntimeType.FilterApplyMethodInfo
bool System::RuntimeType::FilterApplyMethodInfo(::System::Reflection::RuntimeMethodInfo* method, ::System::Reflection::BindingFlags bindingFlags, ::System::Reflection::CallingConventions callConv, ::ArrayW<::System::Type*> argumentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::FilterApplyMethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyMethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(bindingFlags), ::il2cpp_utils::ExtractType(callConv), ::il2cpp_utils::ExtractType(argumentTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, bindingFlags, callConv, argumentTypes);
}
// Autogenerated method: System.RuntimeType.FilterApplyConstructorInfo
bool System::RuntimeType::FilterApplyConstructorInfo(::System::Reflection::RuntimeConstructorInfo* constructor, ::System::Reflection::BindingFlags bindingFlags, ::System::Reflection::CallingConventions callConv, ::ArrayW<::System::Type*> argumentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::FilterApplyConstructorInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyConstructorInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constructor), ::il2cpp_utils::ExtractType(bindingFlags), ::il2cpp_utils::ExtractType(callConv), ::il2cpp_utils::ExtractType(argumentTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, constructor, bindingFlags, callConv, argumentTypes);
}
// Autogenerated method: System.RuntimeType.FilterApplyMethodBase
bool System::RuntimeType::FilterApplyMethodBase(::System::Reflection::MethodBase* methodBase, ::System::Reflection::BindingFlags methodFlags, ::System::Reflection::BindingFlags bindingFlags, ::System::Reflection::CallingConventions callConv, ::ArrayW<::System::Type*> argumentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::FilterApplyMethodBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyMethodBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodBase), ::il2cpp_utils::ExtractType(methodFlags), ::il2cpp_utils::ExtractType(bindingFlags), ::il2cpp_utils::ExtractType(callConv), ::il2cpp_utils::ExtractType(argumentTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, methodBase, methodFlags, bindingFlags, callConv, argumentTypes);
}
// Autogenerated method: System.RuntimeType.IsSpecialSerializableType
bool System::RuntimeType::IsSpecialSerializableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::IsSpecialSerializableType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSpecialSerializableType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetMethodCandidates
::System::RuntimeType::ListBuilder_1<::System::Reflection::MethodInfo*> System::RuntimeType::GetMethodCandidates(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::CallingConventions callConv, ::ArrayW<::System::Type*> types, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetMethodCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(callConv), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(allowPrefixLookup)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeType::ListBuilder_1<::System::Reflection::MethodInfo*>, false>(this, ___internal__method, name, bindingAttr, callConv, types, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetConstructorCandidates
::System::RuntimeType::ListBuilder_1<::System::Reflection::ConstructorInfo*> System::RuntimeType::GetConstructorCandidates(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::CallingConventions callConv, ::ArrayW<::System::Type*> types, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetConstructorCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructorCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(callConv), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(allowPrefixLookup)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeType::ListBuilder_1<::System::Reflection::ConstructorInfo*>, false>(this, ___internal__method, name, bindingAttr, callConv, types, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetPropertyCandidates
::System::RuntimeType::ListBuilder_1<::System::Reflection::PropertyInfo*> System::RuntimeType::GetPropertyCandidates(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::ArrayW<::System::Type*> types, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetPropertyCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(allowPrefixLookup)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeType::ListBuilder_1<::System::Reflection::PropertyInfo*>, false>(this, ___internal__method, name, bindingAttr, types, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetEventCandidates
::System::RuntimeType::ListBuilder_1<::System::Reflection::EventInfo*> System::RuntimeType::GetEventCandidates(::StringW name, ::System::Reflection::BindingFlags bindingAttr, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetEventCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEventCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(allowPrefixLookup)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeType::ListBuilder_1<::System::Reflection::EventInfo*>, false>(this, ___internal__method, name, bindingAttr, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetFieldCandidates
::System::RuntimeType::ListBuilder_1<::System::Reflection::FieldInfo*> System::RuntimeType::GetFieldCandidates(::StringW name, ::System::Reflection::BindingFlags bindingAttr, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetFieldCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFieldCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(allowPrefixLookup)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeType::ListBuilder_1<::System::Reflection::FieldInfo*>, false>(this, ___internal__method, name, bindingAttr, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetNestedTypeCandidates
::System::RuntimeType::ListBuilder_1<::System::Type*> System::RuntimeType::GetNestedTypeCandidates(::StringW fullname, ::System::Reflection::BindingFlags bindingAttr, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetNestedTypeCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedTypeCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullname), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(allowPrefixLookup)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeType::ListBuilder_1<::System::Type*>, false>(this, ___internal__method, fullname, bindingAttr, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetRuntimeModule
::System::Reflection::RuntimeModule* System::RuntimeType::GetRuntimeModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetRuntimeModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRuntimeModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::RuntimeModule*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetRuntimeAssembly
::System::Reflection::RuntimeAssembly* System::RuntimeType::GetRuntimeAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetRuntimeAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRuntimeAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::RuntimeAssembly*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetBaseType
::System::RuntimeType* System::RuntimeType::GetBaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetBaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeType*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetGenericArgumentsInternal
::ArrayW<::System::RuntimeType*> System::RuntimeType::GetGenericArgumentsInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetGenericArgumentsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericArgumentsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::RuntimeType*>, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.Clone
::Il2CppObject* System::RuntimeType::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetObjectData
void System::RuntimeType::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.RuntimeType.CreateInstanceCheckThis
void System::RuntimeType::CreateInstanceCheckThis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::CreateInstanceCheckThis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstanceCheckThis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.CreateInstanceImpl
::Il2CppObject* System::RuntimeType::CreateInstanceImpl(::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> args, ::System::Globalization::CultureInfo* culture, ::ArrayW<::Il2CppObject*> activationAttributes, ByRef<::System::Threading::StackCrawlMark> stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::CreateInstanceImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstanceImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(activationAttributes), ::il2cpp_utils::ExtractType(stackMark)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, bindingAttr, binder, args, culture, activationAttributes, byref(stackMark));
}
// Autogenerated method: System.RuntimeType.CreateInstanceDefaultCtor
::Il2CppObject* System::RuntimeType::CreateInstanceDefaultCtor(bool publicOnly, bool skipCheckThis, bool fillCache, ByRef<::System::Threading::StackCrawlMark> stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::CreateInstanceDefaultCtor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstanceDefaultCtor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(publicOnly), ::il2cpp_utils::ExtractType(skipCheckThis), ::il2cpp_utils::ExtractType(fillCache), ::il2cpp_utils::ExtractType(stackMark)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, publicOnly, skipCheckThis, fillCache, byref(stackMark));
}
// Autogenerated method: System.RuntimeType.GetDefaultConstructor
::System::Reflection::MonoCMethod* System::RuntimeType::GetDefaultConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetDefaultConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MonoCMethod*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetDefaultMemberName
::StringW System::RuntimeType::GetDefaultMemberName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetDefaultMemberName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultMemberName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetSerializationCtor
::System::Reflection::RuntimeConstructorInfo* System::RuntimeType::GetSerializationCtor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetSerializationCtor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSerializationCtor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::RuntimeConstructorInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.CreateInstanceSlow
::Il2CppObject* System::RuntimeType::CreateInstanceSlow(bool publicOnly, bool skipCheckThis, bool fillCache, ByRef<::System::Threading::StackCrawlMark> stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::CreateInstanceSlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstanceSlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(publicOnly), ::il2cpp_utils::ExtractType(skipCheckThis), ::il2cpp_utils::ExtractType(fillCache), ::il2cpp_utils::ExtractType(stackMark)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, publicOnly, skipCheckThis, fillCache, byref(stackMark));
}
// Autogenerated method: System.RuntimeType.CreateInstanceMono
::Il2CppObject* System::RuntimeType::CreateInstanceMono(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::CreateInstanceMono");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstanceMono", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.RuntimeType.CheckValue
::Il2CppObject* System::RuntimeType::CheckValue(::Il2CppObject* value, ::System::Reflection::Binder* binder, ::System::Globalization::CultureInfo* culture, ::System::Reflection::BindingFlags invokeAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::CheckValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(invokeAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, binder, culture, invokeAttr);
}
// Autogenerated method: System.RuntimeType.TryConvertToType
::Il2CppObject* System::RuntimeType::TryConvertToType(::Il2CppObject* value, ByRef<bool> failed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::TryConvertToType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryConvertToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(failed)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, byref(failed));
}
// Autogenerated method: System.RuntimeType.IsConvertibleToPrimitiveType
::Il2CppObject* System::RuntimeType::IsConvertibleToPrimitiveType(::Il2CppObject* value, ::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::IsConvertibleToPrimitiveType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "IsConvertibleToPrimitiveType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, targetType);
}
// Autogenerated method: System.RuntimeType.GetCachedName
::StringW System::RuntimeType::GetCachedName(::System::TypeNameKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetCachedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCachedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kind)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, kind);
}
// Autogenerated method: System.RuntimeType.make_array_type
::System::Type* System::RuntimeType::make_array_type(int rank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::make_array_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "make_array_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rank)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, rank);
}
// Autogenerated method: System.RuntimeType.make_byref_type
::System::Type* System::RuntimeType::make_byref_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::make_byref_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "make_byref_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakePointerType
::System::Type* System::RuntimeType::MakePointerType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::MakePointerType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "MakePointerType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.CreateInstanceForAnotherGenericParameter
::Il2CppObject* System::RuntimeType::CreateInstanceForAnotherGenericParameter(::System::Type* genericType, ::System::RuntimeType* genericArgument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::CreateInstanceForAnotherGenericParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "CreateInstanceForAnotherGenericParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(genericType), ::il2cpp_utils::ExtractType(genericArgument)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, genericType, genericArgument);
}
// Autogenerated method: System.RuntimeType.MakeGenericType
::System::Type* System::RuntimeType::MakeGenericType(::System::Type* gt, ::ArrayW<::System::Type*> types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::MakeGenericType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "MakeGenericType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gt), ::il2cpp_utils::ExtractType(types)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gt, types);
}
// Autogenerated method: System.RuntimeType.GetMethodsByName_native
::System::IntPtr System::RuntimeType::GetMethodsByName_native(::System::IntPtr namePtr, ::System::Reflection::BindingFlags bindingAttr, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetMethodsByName_native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodsByName_native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namePtr), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, namePtr, bindingAttr, ignoreCase);
}
// Autogenerated method: System.RuntimeType.GetMethodsByName
::ArrayW<::System::Reflection::RuntimeMethodInfo*> System::RuntimeType::GetMethodsByName(::StringW name, ::System::Reflection::BindingFlags bindingAttr, bool ignoreCase, ::System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetMethodsByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodsByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(ignoreCase), ::il2cpp_utils::ExtractType(reflectedType)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::RuntimeMethodInfo*>, false>(this, ___internal__method, name, bindingAttr, ignoreCase, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetPropertiesByName_native
::System::IntPtr System::RuntimeType::GetPropertiesByName_native(::System::IntPtr name, ::System::Reflection::BindingFlags bindingAttr, bool icase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetPropertiesByName_native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertiesByName_native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(icase)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, name, bindingAttr, icase);
}
// Autogenerated method: System.RuntimeType.GetConstructors_native
::System::IntPtr System::RuntimeType::GetConstructors_native(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetConstructors_native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructors_native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetConstructors_internal
::ArrayW<::System::Reflection::RuntimeConstructorInfo*> System::RuntimeType::GetConstructors_internal(::System::Reflection::BindingFlags bindingAttr, ::System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetConstructors_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructors_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(reflectedType)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::RuntimeConstructorInfo*>, false>(this, ___internal__method, bindingAttr, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetPropertiesByName
::ArrayW<::System::Reflection::RuntimePropertyInfo*> System::RuntimeType::GetPropertiesByName(::StringW name, ::System::Reflection::BindingFlags bindingAttr, bool icase, ::System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetPropertiesByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertiesByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(icase), ::il2cpp_utils::ExtractType(reflectedType)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::RuntimePropertyInfo*>, false>(this, ___internal__method, name, bindingAttr, icase, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetTypeFromCLSIDImpl
::System::Type* System::RuntimeType::GetTypeFromCLSIDImpl(::System::Guid clsid, ::StringW server, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetTypeFromCLSIDImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "GetTypeFromCLSIDImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clsid), ::il2cpp_utils::ExtractType(server), ::il2cpp_utils::ExtractType(throwOnError)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clsid, server, throwOnError);
}
// Autogenerated method: System.RuntimeType.GetTypeCodeImplInternal
::System::TypeCode System::RuntimeType::GetTypeCodeImplInternal(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetTypeCodeImplInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "GetTypeCodeImplInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.IsGenericCOMObjectImpl
bool System::RuntimeType::IsGenericCOMObjectImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::IsGenericCOMObjectImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsGenericCOMObjectImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.CreateInstanceInternal
::Il2CppObject* System::RuntimeType::CreateInstanceInternal(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::CreateInstanceInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "CreateInstanceInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.getFullName
::StringW System::RuntimeType::getFullName(bool full_name, bool assembly_qualified) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::getFullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getFullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(full_name), ::il2cpp_utils::ExtractType(assembly_qualified)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, full_name, assembly_qualified);
}
// Autogenerated method: System.RuntimeType.GetGenericArgumentsInternal
::ArrayW<::System::Type*> System::RuntimeType::GetGenericArgumentsInternal(bool runtimeArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetGenericArgumentsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericArgumentsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runtimeArray)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method, runtimeArray);
}
// Autogenerated method: System.RuntimeType.GetGenericParameterAttributes
::System::Reflection::GenericParameterAttributes System::RuntimeType::GetGenericParameterAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetGenericParameterAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericParameterAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::GenericParameterAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetGenericParameterPosition
int System::RuntimeType::GetGenericParameterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetGenericParameterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericParameterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetEvents_native
::System::IntPtr System::RuntimeType::GetEvents_native(::System::IntPtr name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetEvents_native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvents_native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetFields_native
::System::IntPtr System::RuntimeType::GetFields_native(::System::IntPtr name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetFields_native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFields_native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetFields_internal
::ArrayW<::System::Reflection::RuntimeFieldInfo*> System::RuntimeType::GetFields_internal(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetFields_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFields_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(reflectedType)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::RuntimeFieldInfo*>, false>(this, ___internal__method, name, bindingAttr, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetEvents_internal
::ArrayW<::System::Reflection::RuntimeEventInfo*> System::RuntimeType::GetEvents_internal(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetEvents_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvents_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(reflectedType)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::RuntimeEventInfo*>, false>(this, ___internal__method, name, bindingAttr, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetNestedTypes_native
::System::IntPtr System::RuntimeType::GetNestedTypes_native(::System::IntPtr name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetNestedTypes_native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedTypes_native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetNestedTypes_internal
::ArrayW<::System::RuntimeType*> System::RuntimeType::GetNestedTypes_internal(::StringW displayName, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetNestedTypes_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedTypes_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(displayName), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::RuntimeType*>, false>(this, ___internal__method, displayName, bindingAttr);
}
// Autogenerated method: System.RuntimeType.get_Module
::System::Reflection::Module* System::RuntimeType::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_Module");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Module*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_Assembly
::System::Reflection::Assembly* System::RuntimeType::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_Assembly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Assembly*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_TypeHandle
::System::RuntimeTypeHandle System::RuntimeType::get_TypeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_TypeHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeTypeHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_BaseType
::System::Type* System::RuntimeType::get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_BaseType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_UnderlyingSystemType
::System::Type* System::RuntimeType::get_UnderlyingSystemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_UnderlyingSystemType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingSystemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsEnum
bool System::RuntimeType::get_IsEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_IsEnum");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_GenericParameterAttributes
::System::Reflection::GenericParameterAttributes System::RuntimeType::get_GenericParameterAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_GenericParameterAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GenericParameterAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::GenericParameterAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsSzArray
bool System::RuntimeType::get_IsSzArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_IsSzArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSzArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsGenericTypeDefinition
bool System::RuntimeType::get_IsGenericTypeDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_IsGenericTypeDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericTypeDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsGenericParameter
bool System::RuntimeType::get_IsGenericParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_IsGenericParameter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_GenericParameterPosition
int System::RuntimeType::get_GenericParameterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_GenericParameterPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GenericParameterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsGenericType
bool System::RuntimeType::get_IsGenericType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_IsGenericType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_MemberType
::System::Reflection::MemberTypes System::RuntimeType::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_MemberType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MemberTypes, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_ReflectedType
::System::Type* System::RuntimeType::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_MetadataToken
int System::RuntimeType::get_MetadataToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_MetadataToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MetadataToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_ContainsGenericParameters
bool System::RuntimeType::get_ContainsGenericParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_ContainsGenericParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_GUID
::System::Guid System::RuntimeType::get_GUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_GUID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GUID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_DeclaringMethod
::System::Reflection::MethodBase* System::RuntimeType::get_DeclaringMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_DeclaringMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_AssemblyQualifiedName
::StringW System::RuntimeType::get_AssemblyQualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_AssemblyQualifiedName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssemblyQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_DeclaringType
::System::Type* System::RuntimeType::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_Name
::StringW System::RuntimeType::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_Namespace
::StringW System::RuntimeType::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_Namespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_FullName
::StringW System::RuntimeType::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::get_FullName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType..cctor
void System::RuntimeType::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetMethods
::ArrayW<::System::Reflection::MethodInfo*> System::RuntimeType::GetMethods(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetMethods");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::MethodInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetConstructors
::ArrayW<::System::Reflection::ConstructorInfo*> System::RuntimeType::GetConstructors(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetConstructors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ConstructorInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetProperties
::ArrayW<::System::Reflection::PropertyInfo*> System::RuntimeType::GetProperties(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::PropertyInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetFields
::ArrayW<::System::Reflection::FieldInfo*> System::RuntimeType::GetFields(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetFields");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::FieldInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetMethodImpl
::System::Reflection::MethodInfo* System::RuntimeType::GetMethodImpl(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Reflection::CallingConventions callConv, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetMethodImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConv), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, name, bindingAttr, binder, callConv, types, modifiers);
}
// Autogenerated method: System.RuntimeType.GetConstructorImpl
::System::Reflection::ConstructorInfo* System::RuntimeType::GetConstructorImpl(::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Reflection::CallingConventions callConvention, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetConstructorImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructorImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(this, ___internal__method, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.RuntimeType.GetPropertyImpl
::System::Reflection::PropertyInfo* System::RuntimeType::GetPropertyImpl(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Type* returnType, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetPropertyImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(returnType), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyInfo*, false>(this, ___internal__method, name, bindingAttr, binder, returnType, types, modifiers);
}
// Autogenerated method: System.RuntimeType.GetEvent
::System::Reflection::EventInfo* System::RuntimeType::GetEvent(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::EventInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetField
::System::Reflection::FieldInfo* System::RuntimeType::GetField(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetField");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::FieldInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetNestedType
::System::Type* System::RuntimeType::GetNestedType(::StringW fullname, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetNestedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullname), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, fullname, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetMember
::ArrayW<::System::Reflection::MemberInfo*> System::RuntimeType::GetMember(::StringW name, ::System::Reflection::MemberTypes type, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::MemberInfo*>, false>(this, ___internal__method, name, type, bindingAttr);
}
// Autogenerated method: System.RuntimeType.IsInstanceOfType
bool System::RuntimeType::IsInstanceOfType(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::IsInstanceOfType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInstanceOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.RuntimeType.IsSubclassOf
bool System::RuntimeType::IsSubclassOf(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::IsSubclassOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSubclassOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.IsAssignableFrom
bool System::RuntimeType::IsAssignableFrom(::System::Type* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::IsAssignableFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAssignableFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: System.RuntimeType.IsEquivalentTo
bool System::RuntimeType::IsEquivalentTo(::System::Type* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::IsEquivalentTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEquivalentTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.RuntimeType.GetAttributeFlagsImpl
::System::Reflection::TypeAttributes System::RuntimeType::GetAttributeFlagsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetAttributeFlagsImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeFlagsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::TypeAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsContextfulImpl
bool System::RuntimeType::IsContextfulImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::IsContextfulImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsContextfulImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsByRefImpl
bool System::RuntimeType::IsByRefImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::IsByRefImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsByRefImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsPrimitiveImpl
bool System::RuntimeType::IsPrimitiveImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::IsPrimitiveImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrimitiveImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsPointerImpl
bool System::RuntimeType::IsPointerImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::IsPointerImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointerImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsCOMObjectImpl
bool System::RuntimeType::IsCOMObjectImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::IsCOMObjectImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCOMObjectImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsValueTypeImpl
bool System::RuntimeType::IsValueTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::IsValueTypeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValueTypeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.HasElementTypeImpl
bool System::RuntimeType::HasElementTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::HasElementTypeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasElementTypeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsArrayImpl
bool System::RuntimeType::IsArrayImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::IsArrayImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetArrayRank
int System::RuntimeType::GetArrayRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetArrayRank");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArrayRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetElementType
::System::Type* System::RuntimeType::GetElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetElementType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetEnumNames
::ArrayW<::StringW> System::RuntimeType::GetEnumNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetEnumNames");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetEnumValues
::System::Array* System::RuntimeType::GetEnumValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetEnumValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetEnumUnderlyingType
::System::Type* System::RuntimeType::GetEnumUnderlyingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetEnumUnderlyingType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumUnderlyingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsEnumDefined
bool System::RuntimeType::IsEnumDefined(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::IsEnumDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnumDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.RuntimeType.GetEnumName
::StringW System::RuntimeType::GetEnumName(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetEnumName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.RuntimeType.GetGenericArguments
::ArrayW<::System::Type*> System::RuntimeType::GetGenericArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetGenericArguments");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakeGenericType
::System::Type* System::RuntimeType::MakeGenericType(::ArrayW<::System::Type*> instantiation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::MakeGenericType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeGenericType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instantiation)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, instantiation);
}
// Autogenerated method: System.RuntimeType.GetGenericTypeDefinition
::System::Type* System::RuntimeType::GetGenericTypeDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetGenericTypeDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericTypeDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.InvokeMember
::Il2CppObject* System::RuntimeType::InvokeMember(::StringW name, ::System::Reflection::BindingFlags bindingFlags, ::System::Reflection::Binder* binder, ::Il2CppObject* target, ::ArrayW<::Il2CppObject*> providedArgs, ::ArrayW<::System::Reflection::ParameterModifier> modifiers, ::System::Globalization::CultureInfo* culture, ::ArrayW<::StringW> namedParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::InvokeMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingFlags), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(providedArgs), ::il2cpp_utils::ExtractType(modifiers), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(namedParams)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, bindingFlags, binder, target, providedArgs, modifiers, culture, namedParams);
}
// Autogenerated method: System.RuntimeType.Equals
bool System::RuntimeType::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.RuntimeType.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::RuntimeType::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.RuntimeType.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::RuntimeType::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.RuntimeType.IsDefined
bool System::RuntimeType::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.RuntimeType.GetCustomAttributesData
::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeData*>* System::RuntimeType::GetCustomAttributesData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetCustomAttributesData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributesData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeData*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.FormatTypeName
::StringW System::RuntimeType::FormatTypeName(bool serialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::FormatTypeName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serialization)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, serialization);
}
// Autogenerated method: System.RuntimeType.MakeArrayType
::System::Type* System::RuntimeType::MakeArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::MakeArrayType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeArrayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakeArrayType
::System::Type* System::RuntimeType::MakeArrayType(int rank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::MakeArrayType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeArrayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rank)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, rank);
}
// Autogenerated method: System.RuntimeType.MakeByRefType
::System::Type* System::RuntimeType::MakeByRefType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::MakeByRefType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeByRefType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakePointerType
::System::Type* System::RuntimeType::MakePointerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::MakePointerType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakePointerType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetGenericParameterConstraints
::ArrayW<::System::Type*> System::RuntimeType::GetGenericParameterConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetGenericParameterConstraints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericParameterConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetTypeCodeImpl
::System::TypeCode System::RuntimeType::GetTypeCodeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetTypeCodeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeCodeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.ToString
::StringW System::RuntimeType::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetInterfaces
::ArrayW<::System::Type*> System::RuntimeType::GetInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetHashCode
int System::RuntimeType::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.op_Equality
bool System::operator ==(::System::RuntimeType* left, ::System::RuntimeType& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.RuntimeType.op_Inequality
bool System::operator !=(::System::RuntimeType* left, ::System::RuntimeType& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "RuntimeType", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.RuntimeType/System.MemberListType
#include "System/RuntimeType_MemberListType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.RuntimeType/System.MemberListType All
::System::RuntimeType::MemberListType System::RuntimeType::MemberListType::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::MemberListType::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::RuntimeType::MemberListType>("System", "RuntimeType/MemberListType", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.RuntimeType/System.MemberListType All
void System::RuntimeType::MemberListType::_set_All(::System::RuntimeType::MemberListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::MemberListType::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType/MemberListType", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.RuntimeType/System.MemberListType CaseSensitive
::System::RuntimeType::MemberListType System::RuntimeType::MemberListType::_get_CaseSensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::MemberListType::_get_CaseSensitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::RuntimeType::MemberListType>("System", "RuntimeType/MemberListType", "CaseSensitive"));
}
// Autogenerated static field setter
// Set static field: static public System.RuntimeType/System.MemberListType CaseSensitive
void System::RuntimeType::MemberListType::_set_CaseSensitive(::System::RuntimeType::MemberListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::MemberListType::_set_CaseSensitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType/MemberListType", "CaseSensitive", value));
}
// Autogenerated static field getter
// Get static field: static public System.RuntimeType/System.MemberListType CaseInsensitive
::System::RuntimeType::MemberListType System::RuntimeType::MemberListType::_get_CaseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::MemberListType::_get_CaseInsensitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::RuntimeType::MemberListType>("System", "RuntimeType/MemberListType", "CaseInsensitive"));
}
// Autogenerated static field setter
// Set static field: static public System.RuntimeType/System.MemberListType CaseInsensitive
void System::RuntimeType::MemberListType::_set_CaseInsensitive(::System::RuntimeType::MemberListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::MemberListType::_set_CaseInsensitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType/MemberListType", "CaseInsensitive", value));
}
// Autogenerated static field getter
// Get static field: static public System.RuntimeType/System.MemberListType HandleToInfo
::System::RuntimeType::MemberListType System::RuntimeType::MemberListType::_get_HandleToInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::MemberListType::_get_HandleToInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::RuntimeType::MemberListType>("System", "RuntimeType/MemberListType", "HandleToInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.RuntimeType/System.MemberListType HandleToInfo
void System::RuntimeType::MemberListType::_set_HandleToInfo(::System::RuntimeType::MemberListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::MemberListType::_set_HandleToInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType/MemberListType", "HandleToInfo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::RuntimeType::MemberListType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::RuntimeType::MemberListType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ReflectionOnlyType
#include "System/ReflectionOnlyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ReflectionOnlyType.get_TypeHandle
::System::RuntimeTypeHandle System::ReflectionOnlyType::get_TypeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ReflectionOnlyType::get_TypeHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeTypeHandle, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.SByte
#include "System/SByte.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.SByte MaxValue
int8_t System::SByte::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int8_t>("System", "SByte", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.SByte MaxValue
void System::SByte::_set_MaxValue(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "SByte", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.SByte MinValue
int8_t System::SByte::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int8_t>("System", "SByte", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.SByte MinValue
void System::SByte::_set_MinValue(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "SByte", "MinValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.SByte m_value
[[deprecated("Use field access instead!")]] int8_t& System::SByte::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.SByte.CompareTo
int System::SByte::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.SByte.CompareTo
int System::SByte::CompareTo(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.SByte.Equals
bool System::SByte::Equals(int8_t obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.SByte.ToString
::StringW System::SByte::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.ToString
::StringW System::SByte::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.SByte.ToString
::StringW System::SByte::ToString(::StringW format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, info);
}
// Autogenerated method: System.SByte.Parse
int8_t System::SByte::Parse(::StringW s, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SByte", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.SByte.Parse
int8_t System::SByte::Parse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SByte", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.SByte.Parse
int8_t System::SByte::Parse(::StringW s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SByte", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, info);
}
// Autogenerated method: System.SByte.TryParse
bool System::SByte::TryParse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider, ByRef<int8_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SByte", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<int8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider, byref(result));
}
// Autogenerated method: System.SByte.TryParse
bool System::SByte::TryParse(::StringW s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info, ByRef<int8_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SByte", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<int8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, info, byref(result));
}
// Autogenerated method: System.SByte.GetTypeCode
::System::TypeCode System::SByte::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.SByte.System.IConvertible.ToBoolean
bool System::SByte::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToChar
::Il2CppChar System::SByte::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToSByte
int8_t System::SByte::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToByte
uint8_t System::SByte::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToInt16
int16_t System::SByte::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToUInt16
uint16_t System::SByte::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToInt32
int System::SByte::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToUInt32
uint System::SByte::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToInt64
int64_t System::SByte::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToUInt64
uint64_t System::SByte::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToSingle
float System::SByte::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToDouble
double System::SByte::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToDecimal
::System::Decimal System::SByte::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToDateTime
::System::DateTime System::SByte::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToType
::Il2CppObject* System::SByte::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.SByte.Equals
bool System::SByte::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.SByte.GetHashCode
int System::SByte::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.SByte.ToString
::StringW System::SByte::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SByte::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.SerializableAttribute
#include "System/SerializableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.SharedStatics
#include "System/SharedStatics.hpp"
// Including type: System.Security.Util.Tokenizer/System.Security.Util.StringMaker
#include "System/Security/Util/Tokenizer_StringMaker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.SharedStatics _sharedStatics
::System::SharedStatics* System::SharedStatics::_get__sharedStatics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SharedStatics::_get__sharedStatics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::SharedStatics*>("System", "SharedStatics", "_sharedStatics"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.SharedStatics _sharedStatics
void System::SharedStatics::_set__sharedStatics(::System::SharedStatics* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SharedStatics::_set__sharedStatics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "SharedStatics", "_sharedStatics", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.Tokenizer/System.Security.Util.StringMaker _maker
[[deprecated("Use field access instead!")]] ::System::Security::Util::Tokenizer::StringMaker*& System::SharedStatics::dyn__maker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SharedStatics::dyn__maker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maker"))->offset;
  return *reinterpret_cast<::System::Security::Util::Tokenizer::StringMaker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.SharedStatics..cctor
void System::SharedStatics::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SharedStatics::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SharedStatics", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.SharedStatics.GetSharedStringMaker
::System::Security::Util::Tokenizer::StringMaker* System::SharedStatics::GetSharedStringMaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SharedStatics::GetSharedStringMaker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SharedStatics", "GetSharedStringMaker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Util::Tokenizer::StringMaker*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.SharedStatics.ReleaseSharedStringMaker
void System::SharedStatics::ReleaseSharedStringMaker(ByRef<::System::Security::Util::Tokenizer::StringMaker*> maker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SharedStatics::ReleaseSharedStringMaker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SharedStatics", "ReleaseSharedStringMaker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maker)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(maker));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Single
#include "System/Single.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single MinValue
float System::Single::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MinValue
void System::Single::_set_MinValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single Epsilon
float System::Single::_get_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_get_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "Epsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Single Epsilon
void System::Single::_set_Epsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_set_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "Epsilon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single MaxValue
float System::Single::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MaxValue
void System::Single::_set_MaxValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single PositiveInfinity
float System::Single::_get_PositiveInfinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_get_PositiveInfinity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "PositiveInfinity"));
}
// Autogenerated static field setter
// Set static field: static public System.Single PositiveInfinity
void System::Single::_set_PositiveInfinity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_set_PositiveInfinity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "PositiveInfinity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single NegativeInfinity
float System::Single::_get_NegativeInfinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_get_NegativeInfinity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "NegativeInfinity"));
}
// Autogenerated static field setter
// Set static field: static public System.Single NegativeInfinity
void System::Single::_set_NegativeInfinity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_set_NegativeInfinity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "NegativeInfinity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single NaN
float System::Single::_get_NaN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_get_NaN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "NaN"));
}
// Autogenerated static field setter
// Set static field: static public System.Single NaN
void System::Single::_set_NaN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::_set_NaN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "NaN", value));
}
// Autogenerated instance field getter
// Get instance field: System.Single m_value
[[deprecated("Use field access instead!")]] float& System::Single::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Single.IsInfinity
bool System::Single::IsInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::IsInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "IsInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.IsPositiveInfinity
bool System::Single::IsPositiveInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::IsPositiveInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "IsPositiveInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.IsNegativeInfinity
bool System::Single::IsNegativeInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::IsNegativeInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "IsNegativeInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.IsNaN
bool System::Single::IsNaN(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::IsNaN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "IsNaN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.CompareTo
int System::Single::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Single.CompareTo
int System::Single::CompareTo(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Single.Equals
bool System::Single::Equals(float obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Single.ToString
::StringW System::Single::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.ToString
::StringW System::Single::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: System.Single.ToString
::StringW System::Single::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::StringW s, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::StringW s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, info);
}
// Autogenerated method: System.Single.TryParse
bool System::Single::TryParse(::StringW s, ByRef<float> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Single.TryParse
bool System::Single::TryParse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider, ByRef<float> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider, byref(result));
}
// Autogenerated method: System.Single.TryParse
bool System::Single::TryParse(::StringW s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info, ByRef<float> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Single", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, info, byref(result));
}
// Autogenerated method: System.Single.GetTypeCode
::System::TypeCode System::Single::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Single.System.IConvertible.ToBoolean
bool System::Single::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToChar
::Il2CppChar System::Single::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToSByte
int8_t System::Single::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToByte
uint8_t System::Single::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToInt16
int16_t System::Single::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToUInt16
uint16_t System::Single::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToInt32
int System::Single::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToUInt32
uint System::Single::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToInt64
int64_t System::Single::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToUInt64
uint64_t System::Single::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToSingle
float System::Single::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToDouble
double System::Single::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToDecimal
::System::Decimal System::Single::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToDateTime
::System::DateTime System::Single::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToType
::Il2CppObject* System::Single::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.Single.Equals
bool System::Single::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Single.GetHashCode
int System::Single::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Single.ToString
::StringW System::Single::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Single::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.StackOverflowException
#include "System/StackOverflowException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.StringComparison
#include "System/StringComparison.hpp"
// Including type: System.StringSplitOptions
#include "System/StringSplitOptions.hpp"
// Including type: System.Text.NormalizationForm
#include "System/Text/NormalizationForm.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.CompareOptions
#include "System/Globalization/CompareOptions.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.ParamsArray
#include "System/ParamsArray.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 TrimHead
int System::String::_get_TrimHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_get_TrimHead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "TrimHead"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TrimHead
void System::String::_set_TrimHead(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_set_TrimHead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "TrimHead", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TrimTail
int System::String::_get_TrimTail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_get_TrimTail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "TrimTail"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TrimTail
void System::String::_set_TrimTail(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_set_TrimTail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "TrimTail", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TrimBoth
int System::String::_get_TrimBoth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_get_TrimBoth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "TrimBoth"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TrimBoth
void System::String::_set_TrimBoth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_set_TrimBoth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "TrimBoth", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String Empty
::StringW System::String::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "String", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String Empty
void System::String::_set_Empty(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 charPtrAlignConst
int System::String::_get_charPtrAlignConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_get_charPtrAlignConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "charPtrAlignConst"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 charPtrAlignConst
void System::String::_set_charPtrAlignConst(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_set_charPtrAlignConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "charPtrAlignConst", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 alignConst
int System::String::_get_alignConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_get_alignConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "alignConst"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 alignConst
void System::String::_set_alignConst(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::_set_alignConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "alignConst", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_stringLength
[[deprecated("Use field access instead!")]] int& System::String::dyn_m_stringLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::dyn_m_stringLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_stringLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char m_firstChar
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::String::dyn_m_firstChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::dyn_m_firstChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_firstChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.String.get_Chars
::Il2CppChar System::String::get_Chars(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::get_Chars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Chars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, index);
}
// Autogenerated method: System.String.get_Length
int System::String::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.String.Join
::StringW System::String::Join(::StringW separator, ::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, separator, value);
}
// Autogenerated method: System.String.Join
::StringW System::String::Join(::StringW separator, ::System::Collections::Generic::IEnumerable_1<::StringW>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, separator, values);
}
// Autogenerated method: System.String.Join
::StringW System::String::Join(::StringW separator, ::ArrayW<::StringW> value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, separator, value, startIndex, count);
}
// Autogenerated method: System.String.CompareOrdinalIgnoreCaseHelper
int System::String::CompareOrdinalIgnoreCaseHelper(::StringW strA, ::StringW strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CompareOrdinalIgnoreCaseHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CompareOrdinalIgnoreCaseHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.EqualsHelper
bool System::String::EqualsHelper(::StringW strA, ::StringW strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::EqualsHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "EqualsHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.CompareOrdinalHelper
int System::String::CompareOrdinalHelper(::StringW strA, ::StringW strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CompareOrdinalHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CompareOrdinalHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::StringW value, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::StringW a, ::StringW b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::StringW a, ::StringW b, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, comparisonType);
}
// Autogenerated method: System.String.CopyTo
void System::String::CopyTo(int sourceIndex, ::ArrayW<::Il2CppChar> destination, int destinationIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceIndex), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(destinationIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceIndex, destination, destinationIndex, count);
}
// Autogenerated method: System.String.ToCharArray
::ArrayW<::Il2CppChar> System::String::ToCharArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.String.IsNullOrEmpty
bool System::String::IsNullOrEmpty(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IsNullOrEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "IsNullOrEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.String.IsNullOrWhiteSpace
bool System::String::IsNullOrWhiteSpace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IsNullOrWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "IsNullOrWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.String.GetLegacyNonRandomizedHashCode
int System::String::GetLegacyNonRandomizedHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::GetLegacyNonRandomizedHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLegacyNonRandomizedHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.String.Split
::ArrayW<::StringW> System::String::Split(::ArrayW<::Il2CppChar> separator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, separator);
}
// Autogenerated method: System.String.Split
::ArrayW<::StringW> System::String::Split(::ArrayW<::Il2CppChar> separator, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, separator, count);
}
// Autogenerated method: System.String.Split
::ArrayW<::StringW> System::String::Split(::ArrayW<::Il2CppChar> separator, ::System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, separator, options);
}
// Autogenerated method: System.String.Split
::ArrayW<::StringW> System::String::Split(::ArrayW<::Il2CppChar> separator, int count, ::System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, separator, count, options);
}
// Autogenerated method: System.String.SplitInternal
::ArrayW<::StringW> System::String::SplitInternal(::ArrayW<::Il2CppChar> separator, int count, ::System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::SplitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SplitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, separator, count, options);
}
// Autogenerated method: System.String.Split
::ArrayW<::StringW> System::String::Split(::ArrayW<::StringW> separator, ::System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, separator, options);
}
// Autogenerated method: System.String.Split
::ArrayW<::StringW> System::String::Split(::ArrayW<::StringW> separator, int count, ::System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Split");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, separator, count, options);
}
// Autogenerated method: System.String.InternalSplitKeepEmptyEntries
::ArrayW<::StringW> System::String::InternalSplitKeepEmptyEntries(::ArrayW<int> sepList, ::ArrayW<int> lengthList, int numReplaces, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::InternalSplitKeepEmptyEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSplitKeepEmptyEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sepList), ::il2cpp_utils::ExtractType(lengthList), ::il2cpp_utils::ExtractType(numReplaces), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, sepList, lengthList, numReplaces, count);
}
// Autogenerated method: System.String.InternalSplitOmitEmptyEntries
::ArrayW<::StringW> System::String::InternalSplitOmitEmptyEntries(::ArrayW<int> sepList, ::ArrayW<int> lengthList, int numReplaces, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::InternalSplitOmitEmptyEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSplitOmitEmptyEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sepList), ::il2cpp_utils::ExtractType(lengthList), ::il2cpp_utils::ExtractType(numReplaces), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, sepList, lengthList, numReplaces, count);
}
// Autogenerated method: System.String.MakeSeparatorList
int System::String::MakeSeparatorList(::ArrayW<::Il2CppChar> separator, ByRef<::ArrayW<int>> sepList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::MakeSeparatorList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeSeparatorList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(sepList)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, separator, byref(sepList));
}
// Autogenerated method: System.String.MakeSeparatorList
int System::String::MakeSeparatorList(::ArrayW<::StringW> separators, ByRef<::ArrayW<int>> sepList, ByRef<::ArrayW<int>> lengthList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::MakeSeparatorList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeSeparatorList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(separators), ::il2cpp_utils::ExtractType(sepList), ::il2cpp_utils::ExtractType(lengthList)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, separators, byref(sepList), byref(lengthList));
}
// Autogenerated method: System.String.Substring
::StringW System::String::Substring(int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Substring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Substring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, startIndex);
}
// Autogenerated method: System.String.Substring
::StringW System::String::Substring(int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Substring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Substring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, startIndex, length);
}
// Autogenerated method: System.String.InternalSubString
::StringW System::String::InternalSubString(int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::InternalSubString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSubString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, startIndex, length);
}
// Autogenerated method: System.String.Trim
::StringW System::String::Trim(::ArrayW<::Il2CppChar> trimChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Trim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, trimChars);
}
// Autogenerated method: System.String.TrimStart
::StringW System::String::TrimStart(::ArrayW<::Il2CppChar> trimChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, trimChars);
}
// Autogenerated method: System.String.TrimEnd
::StringW System::String::TrimEnd(::ArrayW<::Il2CppChar> trimChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, trimChars);
}
// Autogenerated method: System.String.CreateStringFromEncoding
::StringW System::String::CreateStringFromEncoding(uint8_t* bytes, int byteLength, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateStringFromEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CreateStringFromEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteLength), ::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, byteLength, encoding);
}
// Autogenerated method: System.String.Normalize
::StringW System::String::Normalize(::System::Text::NormalizationForm normalizationForm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normalizationForm)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, normalizationForm);
}
// Autogenerated method: System.String.FastAllocateString
::StringW System::String::FastAllocateString(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::FastAllocateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "FastAllocateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: System.String.FillStringChecked
void System::String::FillStringChecked(::StringW dest, int destPos, ::StringW src) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::FillStringChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "FillStringChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destPos), ::il2cpp_utils::ExtractType(src)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, destPos, src);
}
// Autogenerated method: System.String.wstrcpy
void System::String::wstrcpy(::Il2CppChar* dmem, ::Il2CppChar* smem, int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::wstrcpy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "wstrcpy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dmem), ::il2cpp_utils::ExtractType(smem), ::il2cpp_utils::ExtractType(charCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dmem, smem, charCount);
}
// Autogenerated method: System.String.CtorCharArray
::StringW System::String::CtorCharArray(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CtorCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CtorCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.CtorCharArrayStartLength
::StringW System::String::CtorCharArrayStartLength(::ArrayW<::Il2CppChar> value, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CtorCharArrayStartLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CtorCharArrayStartLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, startIndex, length);
}
// Autogenerated method: System.String.wcslen
int System::String::wcslen(::Il2CppChar* ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::wcslen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "wcslen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: System.String.CtorCharPtr
::StringW System::String::CtorCharPtr(::Il2CppChar* ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CtorCharPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CtorCharPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ptr);
}
// Autogenerated method: System.String.CtorCharPtrStartLength
::StringW System::String::CtorCharPtrStartLength(::Il2CppChar* ptr, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CtorCharPtrStartLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CtorCharPtrStartLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ptr, startIndex, length);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::StringW strA, ::StringW strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::StringW strA, ::StringW strB, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB, ignoreCase);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::StringW strA, ::StringW strB, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB, comparisonType);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::StringW strA, ::StringW strB, bool ignoreCase, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(ignoreCase), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB, ignoreCase, culture);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::StringW strA, int indexA, ::StringW strB, int indexB, int length, ::System::Globalization::CultureInfo* culture, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, indexA, strB, indexB, length, culture, options);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::StringW strA, int indexA, ::StringW strB, int indexB, int length, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, indexA, strB, indexB, length, comparisonType);
}
// Autogenerated method: System.String.CompareTo
int System::String::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.CompareTo
int System::String::CompareTo(::StringW strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, strB);
}
// Autogenerated method: System.String.CompareOrdinal
int System::String::CompareOrdinal(::StringW strA, ::StringW strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CompareOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CompareOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.CompareOrdinal
int System::String::CompareOrdinal(::StringW strA, int indexA, ::StringW strB, int indexB, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CompareOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CompareOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, indexA, strB, indexB, length);
}
// Autogenerated method: System.String.Contains
bool System::String::Contains(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.EndsWith
bool System::String::EndsWith(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.EndsWith
bool System::String::EndsWith(::StringW value, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.EndsWith
bool System::String::EndsWith(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::EndsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppChar value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex);
}
// Autogenerated method: System.String.IndexOfAny
int System::String::IndexOfAny(::ArrayW<::Il2CppChar> anyOf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anyOf);
}
// Autogenerated method: System.String.IndexOfAny
int System::String::IndexOfAny(::ArrayW<::Il2CppChar> anyOf, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anyOf, startIndex);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::StringW value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::StringW value, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::StringW value, int startIndex, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, comparisonType);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::StringW value, int startIndex, int count, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, count, comparisonType);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppChar value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex);
}
// Autogenerated method: System.String.LastIndexOfAny
int System::String::LastIndexOfAny(::ArrayW<::Il2CppChar> anyOf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anyOf);
}
// Autogenerated method: System.String.LastIndexOfAny
int System::String::LastIndexOfAny(::ArrayW<::Il2CppChar> anyOf, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anyOf, startIndex);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::StringW value, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::StringW value, int startIndex, int count, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, count, comparisonType);
}
// Autogenerated method: System.String.PadLeft
::StringW System::String::PadLeft(int totalWidth, ::Il2CppChar paddingChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::PadLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PadLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalWidth), ::il2cpp_utils::ExtractType(paddingChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, totalWidth, paddingChar);
}
// Autogenerated method: System.String.PadRight
::StringW System::String::PadRight(int totalWidth, ::Il2CppChar paddingChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::PadRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PadRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalWidth), ::il2cpp_utils::ExtractType(paddingChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, totalWidth, paddingChar);
}
// Autogenerated method: System.String.StartsWith
bool System::String::StartsWith(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.StartsWith
bool System::String::StartsWith(::StringW value, ::System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.ToLower
::StringW System::String::ToLower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToLower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToLower
::StringW System::String::ToLower(::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToLower");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLower", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.String.ToLowerInvariant
::StringW System::String::ToLowerInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToLowerInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLowerInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToUpper
::StringW System::String::ToUpper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToUpper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToUpper
::StringW System::String::ToUpper(::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToUpper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUpper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.String.ToUpperInvariant
::StringW System::String::ToUpperInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToUpperInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToUpperInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToString
::StringW System::String::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.Clone
::Il2CppObject* System::String::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.IsBOMWhitespace
bool System::String::IsBOMWhitespace(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IsBOMWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "IsBOMWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.String.Trim
::StringW System::String::Trim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Trim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.String.TrimHelper
::StringW System::String::TrimHelper(int trimType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, trimType);
}
// Autogenerated method: System.String.TrimHelper
::StringW System::String::TrimHelper(::ArrayW<::Il2CppChar> trimChars, int trimType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::TrimHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trimChars), ::il2cpp_utils::ExtractType(trimType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, trimChars, trimType);
}
// Autogenerated method: System.String.CreateTrimmedString
::StringW System::String::CreateTrimmedString(int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateTrimmedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrimmedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, start, end);
}
// Autogenerated method: System.String.Insert
::StringW System::String::Insert(int startIndex, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, startIndex, value);
}
// Autogenerated method: System.String.Replace
::StringW System::String::Replace(::Il2CppChar oldChar, ::Il2CppChar newChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldChar), ::il2cpp_utils::ExtractType(newChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, oldChar, newChar);
}
// Autogenerated method: System.String.Replace
::StringW System::String::Replace(::StringW oldValue, ::StringW newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: System.String.Remove
::StringW System::String::Remove(int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, startIndex, count);
}
// Autogenerated method: System.String.Remove
::StringW System::String::Remove(int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, startIndex);
}
// Autogenerated method: System.String.Format
::StringW System::String::Format(::StringW format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, arg0);
}
// Autogenerated method: System.String.Format
::StringW System::String::Format(::StringW format, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, arg0, arg1);
}
// Autogenerated method: System.String.Format
::StringW System::String::Format(::StringW format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, arg0, arg1, arg2);
}
// Autogenerated method: System.String.Format
::StringW System::String::Format(::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, args);
}
// Autogenerated method: System.String.Format
::StringW System::String::Format(::System::IFormatProvider* provider, ::StringW format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, format, arg0);
}
// Autogenerated method: System.String.Format
::StringW System::String::Format(::System::IFormatProvider* provider, ::StringW format, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, format, arg0, arg1);
}
// Autogenerated method: System.String.Format
::StringW System::String::Format(::System::IFormatProvider* provider, ::StringW format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, format, arg0, arg1, arg2);
}
// Autogenerated method: System.String.Format
::StringW System::String::Format(::System::IFormatProvider* provider, ::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, format, args);
}
// Autogenerated method: System.String.FormatHelper
::StringW System::String::FormatHelper(::System::IFormatProvider* provider, ::StringW format, ::System::ParamsArray args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::FormatHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "FormatHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, format, args);
}
// Autogenerated method: System.String.Copy
::StringW System::String::Copy(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.String.Concat
::StringW System::String::Concat(::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg0);
}
// Autogenerated method: System.String.Concat
::StringW System::String::Concat(::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg0, arg1);
}
// Autogenerated method: System.String.Concat
::StringW System::String::Concat(::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg0, arg1, arg2);
}
// Autogenerated method: System.String.Concat
::StringW System::String::Concat(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, args);
}
// Autogenerated method: System.String.Concat
::StringW System::String::Concat(::StringW str0, ::StringW str1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str0), ::il2cpp_utils::ExtractType(str1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str0, str1);
}
// Autogenerated method: System.String.Concat
::StringW System::String::Concat(::StringW str0, ::StringW str1, ::StringW str2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str0), ::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(str2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str0, str1, str2);
}
// Autogenerated method: System.String.Concat
::StringW System::String::Concat(::StringW str0, ::StringW str1, ::StringW str2, ::StringW str3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str0), ::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(str3)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str0, str1, str2, str3);
}
// Autogenerated method: System.String.ConcatArray
::StringW System::String::ConcatArray(::ArrayW<::StringW> values, int totalLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ConcatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "ConcatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(totalLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, values, totalLength);
}
// Autogenerated method: System.String.Concat
::StringW System::String::Concat(::ArrayW<::StringW> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, values);
}
// Autogenerated method: System.String.IsInterned
::StringW System::String::IsInterned(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IsInterned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "IsInterned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.String.GetTypeCode
::System::TypeCode System::String::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.String.System.IConvertible.ToBoolean
bool System::String::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToChar
::Il2CppChar System::String::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToSByte
int8_t System::String::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToByte
uint8_t System::String::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToInt16
int16_t System::String::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToUInt16
uint16_t System::String::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToInt32
int System::String::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToUInt32
uint System::String::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToInt64
int64_t System::String::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToUInt64
uint64_t System::String::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToSingle
float System::String::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToDouble
double System::String::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToDecimal
::System::Decimal System::String::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToDateTime
::System::DateTime System::String::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToType
::Il2CppObject* System::String::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.String.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Il2CppChar>* System::String::System_Collections_Generic_IEnumerable$System_Char$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Il2CppChar>*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::String::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.CompareOrdinalUnchecked
int System::String::CompareOrdinalUnchecked(::StringW strA, int indexA, int lenA, ::StringW strB, int indexB, int lenB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CompareOrdinalUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CompareOrdinalUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(lenA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(lenB)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, indexA, lenA, strB, indexB, lenB);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppChar value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.IndexOfUnchecked
int System::String::IndexOfUnchecked(::Il2CppChar value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOfUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.IndexOfUnchecked
int System::String::IndexOfUnchecked(::StringW value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOfUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.IndexOfAny
int System::String::IndexOfAny(::ArrayW<::Il2CppChar> anyOf, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anyOf, startIndex, count);
}
// Autogenerated method: System.String.IndexOfAnyUnchecked
int System::String::IndexOfAnyUnchecked(::ArrayW<::Il2CppChar> anyOf, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IndexOfAnyUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfAnyUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anyOf, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppChar value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOfUnchecked
int System::String::LastIndexOfUnchecked(::Il2CppChar value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOfUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOfAny
int System::String::LastIndexOfAny(::ArrayW<::Il2CppChar> anyOf, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOfAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anyOf, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOfAnyUnchecked
int System::String::LastIndexOfAnyUnchecked(::ArrayW<::Il2CppChar> anyOf, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::LastIndexOfAnyUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfAnyUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyOf), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, anyOf, startIndex, count);
}
// Autogenerated method: System.String.nativeCompareOrdinalEx
int System::String::nativeCompareOrdinalEx(::StringW strA, int indexA, ::StringW strB, int indexB, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::nativeCompareOrdinalEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "nativeCompareOrdinalEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(indexA), ::il2cpp_utils::ExtractType(strB), ::il2cpp_utils::ExtractType(indexB), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, indexA, strB, indexB, count);
}
// Autogenerated method: System.String.ReplaceInternal
::StringW System::String::ReplaceInternal(::Il2CppChar oldChar, ::Il2CppChar newChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ReplaceInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldChar), ::il2cpp_utils::ExtractType(newChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, oldChar, newChar);
}
// Autogenerated method: System.String.ReplaceInternal
::StringW System::String::ReplaceInternal(::StringW oldValue, ::StringW newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ReplaceInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: System.String.ReplaceUnchecked
::StringW System::String::ReplaceUnchecked(::StringW oldValue, ::StringW newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ReplaceUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: System.String.ReplaceFallback
::StringW System::String::ReplaceFallback(::StringW oldValue, ::StringW newValue, int testedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ReplaceFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue), ::il2cpp_utils::ExtractType(testedCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, oldValue, newValue, testedCount);
}
// Autogenerated method: System.String.PadHelper
::StringW System::String::PadHelper(int totalWidth, ::Il2CppChar paddingChar, bool isRightPadded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::PadHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PadHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(totalWidth), ::il2cpp_utils::ExtractType(paddingChar), ::il2cpp_utils::ExtractType(isRightPadded)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, totalWidth, paddingChar, isRightPadded);
}
// Autogenerated method: System.String.StartsWithOrdinalUnchecked
bool System::String::StartsWithOrdinalUnchecked(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::StartsWithOrdinalUnchecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartsWithOrdinalUnchecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.IsAscii
bool System::String::IsAscii() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::IsAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.String.InternalIsInterned
::StringW System::String::InternalIsInterned(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::InternalIsInterned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "InternalIsInterned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.String.CharCopy
void System::String::CharCopy(::Il2CppChar* dest, ::Il2CppChar* src, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CharCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "CharCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, src, count);
}
// Autogenerated method: System.String.memset
void System::String::memset(uint8_t* dest, int val, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::memset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, val, len);
}
// Autogenerated method: System.String.memcpy
void System::String::memcpy(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::memcpy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memcpy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.bzero
void System::String::bzero_(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::bzero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "bzero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.bzero_aligned_1
void System::String::bzero_aligned_1(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::bzero_aligned_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "bzero_aligned_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.bzero_aligned_2
void System::String::bzero_aligned_2(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::bzero_aligned_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "bzero_aligned_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.bzero_aligned_4
void System::String::bzero_aligned_4(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::bzero_aligned_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "bzero_aligned_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.bzero_aligned_8
void System::String::bzero_aligned_8(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::bzero_aligned_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "bzero_aligned_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.memcpy_aligned_1
void System::String::memcpy_aligned_1(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::memcpy_aligned_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memcpy_aligned_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.memcpy_aligned_2
void System::String::memcpy_aligned_2(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::memcpy_aligned_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memcpy_aligned_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.memcpy_aligned_4
void System::String::memcpy_aligned_4(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::memcpy_aligned_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memcpy_aligned_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.memcpy_aligned_8
void System::String::memcpy_aligned_8(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::memcpy_aligned_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "memcpy_aligned_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.CreateString
::StringW System::String::CreateString(int8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.CreateString
::StringW System::String::CreateString(int8_t* value, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, startIndex, length);
}
// Autogenerated method: System.String.CreateString
::StringW System::String::CreateString(::Il2CppChar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.CreateString
::StringW System::String::CreateString(::Il2CppChar* value, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, startIndex, length);
}
// Autogenerated method: System.String.CreateString
::StringW System::String::CreateString(::ArrayW<::Il2CppChar> val, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, val, startIndex, length);
}
// Autogenerated method: System.String.CreateString
::StringW System::String::CreateString(::ArrayW<::Il2CppChar> val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, val);
}
// Autogenerated method: System.String.CreateString
::StringW System::String::CreateString(::Il2CppChar c, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, c, count);
}
// Autogenerated method: System.String.CreateString
::StringW System::String::CreateString(int8_t* value, int startIndex, int length, ::System::Text::Encoding* enc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(enc)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, startIndex, length, enc);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.String.GetHashCode
int System::String::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToString
::StringW System::String::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.String.op_Equality
bool System::operator ==(const ::StringW& a, const ::StringW& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: System.String.op_Inequality
bool System::operator !=(const ::StringW& a, const ::StringW& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::String::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "String", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.StringSplitOptions
#include "System/StringSplitOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.StringSplitOptions None
::System::StringSplitOptions System::StringSplitOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringSplitOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::StringSplitOptions>("System", "StringSplitOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.StringSplitOptions None
void System::StringSplitOptions::_set_None(::System::StringSplitOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringSplitOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringSplitOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.StringSplitOptions RemoveEmptyEntries
::System::StringSplitOptions System::StringSplitOptions::_get_RemoveEmptyEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringSplitOptions::_get_RemoveEmptyEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::StringSplitOptions>("System", "StringSplitOptions", "RemoveEmptyEntries"));
}
// Autogenerated static field setter
// Set static field: static public System.StringSplitOptions RemoveEmptyEntries
void System::StringSplitOptions::_set_RemoveEmptyEntries(::System::StringSplitOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringSplitOptions::_set_RemoveEmptyEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringSplitOptions", "RemoveEmptyEntries", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::StringSplitOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringSplitOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.StringComparer
#include "System/StringComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.StringComparer _invariantCulture
::System::StringComparer* System::StringComparer::_get__invariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::_get__invariantCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::StringComparer*>("System", "StringComparer", "_invariantCulture"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.StringComparer _invariantCulture
void System::StringComparer::_set__invariantCulture(::System::StringComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::_set__invariantCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringComparer", "_invariantCulture", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.StringComparer _invariantCultureIgnoreCase
::System::StringComparer* System::StringComparer::_get__invariantCultureIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::_get__invariantCultureIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::StringComparer*>("System", "StringComparer", "_invariantCultureIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.StringComparer _invariantCultureIgnoreCase
void System::StringComparer::_set__invariantCultureIgnoreCase(::System::StringComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::_set__invariantCultureIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringComparer", "_invariantCultureIgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.StringComparer _ordinal
::System::StringComparer* System::StringComparer::_get__ordinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::_get__ordinal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::StringComparer*>("System", "StringComparer", "_ordinal"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.StringComparer _ordinal
void System::StringComparer::_set__ordinal(::System::StringComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::_set__ordinal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringComparer", "_ordinal", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.StringComparer _ordinalIgnoreCase
::System::StringComparer* System::StringComparer::_get__ordinalIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::_get__ordinalIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::StringComparer*>("System", "StringComparer", "_ordinalIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.StringComparer _ordinalIgnoreCase
void System::StringComparer::_set__ordinalIgnoreCase(::System::StringComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::_set__ordinalIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringComparer", "_ordinalIgnoreCase", value));
}
// Autogenerated method: System.StringComparer.get_InvariantCultureIgnoreCase
::System::StringComparer* System::StringComparer::get_InvariantCultureIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::get_InvariantCultureIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringComparer", "get_InvariantCultureIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::StringComparer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer.get_CurrentCultureIgnoreCase
::System::StringComparer* System::StringComparer::get_CurrentCultureIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::get_CurrentCultureIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringComparer", "get_CurrentCultureIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::StringComparer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer.get_Ordinal
::System::StringComparer* System::StringComparer::get_Ordinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::get_Ordinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringComparer", "get_Ordinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::StringComparer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer.get_OrdinalIgnoreCase
::System::StringComparer* System::StringComparer::get_OrdinalIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::get_OrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringComparer", "get_OrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::StringComparer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer..cctor
void System::StringComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "StringComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer.Compare
int System::StringComparer::Compare(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.StringComparer.Equals
bool System::StringComparer::Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.StringComparer.GetHashCode
int System::StringComparer::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.StringComparer.Compare
int System::StringComparer::Compare(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.StringComparer.Equals
bool System::StringComparer::Equals(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.StringComparer.GetHashCode
int System::StringComparer::GetHashCode(::StringW obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::StringComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.CultureAwareComparer
#include "System/CultureAwareComparer.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo _compareInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareInfo*& System::CultureAwareComparer::dyn__compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::dyn__compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _ignoreCase
[[deprecated("Use field access instead!")]] bool& System::CultureAwareComparer::dyn__ignoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::dyn__ignoreCase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreCase"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareOptions _options
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareOptions& System::CultureAwareComparer::dyn__options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::dyn__options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_options"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.CultureAwareComparer.Compare
int System::CultureAwareComparer::Compare(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.CultureAwareComparer.Equals
bool System::CultureAwareComparer::Equals(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.CultureAwareComparer.GetHashCode
int System::CultureAwareComparer::GetHashCode(::StringW obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.CultureAwareComparer.Equals
bool System::CultureAwareComparer::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.CultureAwareComparer.GetHashCode
int System::CultureAwareComparer::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CultureAwareComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.OrdinalComparer
#include "System/OrdinalComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _ignoreCase
[[deprecated("Use field access instead!")]] bool& System::OrdinalComparer::dyn__ignoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalComparer::dyn__ignoreCase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreCase"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.OrdinalComparer.Compare
int System::OrdinalComparer::Compare(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.OrdinalComparer.Equals
bool System::OrdinalComparer::Equals(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.OrdinalComparer.GetHashCode
int System::OrdinalComparer::GetHashCode(::StringW obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.OrdinalComparer.Equals
bool System::OrdinalComparer::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.OrdinalComparer.GetHashCode
int System::OrdinalComparer::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::OrdinalComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.SystemException
#include "System/SystemException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.STAThreadAttribute
#include "System/STAThreadAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ThreadStaticAttribute
#include "System/ThreadStaticAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ExceptionArgument
#include "System/ExceptionArgument.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument obj
::System::ExceptionArgument System::ExceptionArgument::_get_obj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_obj");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "obj"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument obj
void System::ExceptionArgument::_set_obj(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_obj");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "obj", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument dictionary
::System::ExceptionArgument System::ExceptionArgument::_get_dictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_dictionary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "dictionary"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument dictionary
void System::ExceptionArgument::_set_dictionary(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_dictionary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "dictionary", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument dictionaryCreationThreshold
::System::ExceptionArgument System::ExceptionArgument::_get_dictionaryCreationThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_dictionaryCreationThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "dictionaryCreationThreshold"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument dictionaryCreationThreshold
void System::ExceptionArgument::_set_dictionaryCreationThreshold(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_dictionaryCreationThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "dictionaryCreationThreshold", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument array
::System::ExceptionArgument System::ExceptionArgument::_get_array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "array"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument array
void System::ExceptionArgument::_set_array(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "array", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument info
::System::ExceptionArgument System::ExceptionArgument::_get_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "info"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument info
void System::ExceptionArgument::_set_info(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "info", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument key
::System::ExceptionArgument System::ExceptionArgument::_get_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_key");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "key"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument key
void System::ExceptionArgument::_set_key(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_key");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "key", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument collection
::System::ExceptionArgument System::ExceptionArgument::_get_collection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_collection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "collection"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument collection
void System::ExceptionArgument::_set_collection(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_collection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "collection", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument list
::System::ExceptionArgument System::ExceptionArgument::_get_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_list");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "list"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument list
void System::ExceptionArgument::_set_list(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_list");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "list", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument match
::System::ExceptionArgument System::ExceptionArgument::_get_match() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_match");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "match"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument match
void System::ExceptionArgument::_set_match(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_match");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "match", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument converter
::System::ExceptionArgument System::ExceptionArgument::_get_converter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_converter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "converter"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument converter
void System::ExceptionArgument::_set_converter(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_converter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "converter", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument queue
::System::ExceptionArgument System::ExceptionArgument::_get_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_queue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "queue"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument queue
void System::ExceptionArgument::_set_queue(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_queue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "queue", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument stack
::System::ExceptionArgument System::ExceptionArgument::_get_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_stack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "stack"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument stack
void System::ExceptionArgument::_set_stack(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_stack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "stack", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument capacity
::System::ExceptionArgument System::ExceptionArgument::_get_capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_capacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "capacity"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument capacity
void System::ExceptionArgument::_set_capacity(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_capacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "capacity", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument index
::System::ExceptionArgument System::ExceptionArgument::_get_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "index"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument index
void System::ExceptionArgument::_set_index(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "index", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument startIndex
::System::ExceptionArgument System::ExceptionArgument::_get_startIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_startIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "startIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument startIndex
void System::ExceptionArgument::_set_startIndex(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_startIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "startIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument value
::System::ExceptionArgument System::ExceptionArgument::_get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "value"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument value
void System::ExceptionArgument::_set_value(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "value", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument count
::System::ExceptionArgument System::ExceptionArgument::_get_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "count"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument count
void System::ExceptionArgument::_set_count(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "count", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument arrayIndex
::System::ExceptionArgument System::ExceptionArgument::_get_arrayIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_arrayIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "arrayIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument arrayIndex
void System::ExceptionArgument::_set_arrayIndex(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_arrayIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "arrayIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument name
::System::ExceptionArgument System::ExceptionArgument::_get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "name"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument name
void System::ExceptionArgument::_set_name(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "name", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument mode
::System::ExceptionArgument System::ExceptionArgument::_get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_mode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "mode"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument mode
void System::ExceptionArgument::_set_mode(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_mode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "mode", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument item
::System::ExceptionArgument System::ExceptionArgument::_get_item() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_item");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "item"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument item
void System::ExceptionArgument::_set_item(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_item");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "item", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument options
::System::ExceptionArgument System::ExceptionArgument::_get_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_options");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "options"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument options
void System::ExceptionArgument::_set_options(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_options");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "options", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument view
::System::ExceptionArgument System::ExceptionArgument::_get_view() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_view");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "view"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument view
void System::ExceptionArgument::_set_view(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_view");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "view", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument sourceBytesToCopy
::System::ExceptionArgument System::ExceptionArgument::_get_sourceBytesToCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_sourceBytesToCopy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "sourceBytesToCopy"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument sourceBytesToCopy
void System::ExceptionArgument::_set_sourceBytesToCopy(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_sourceBytesToCopy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "sourceBytesToCopy", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument start
::System::ExceptionArgument System::ExceptionArgument::_get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "start"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument start
void System::ExceptionArgument::_set_start(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "start", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument pointer
::System::ExceptionArgument System::ExceptionArgument::_get_pointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_pointer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "pointer"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument pointer
void System::ExceptionArgument::_set_pointer(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_pointer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "pointer", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument ownedMemory
::System::ExceptionArgument System::ExceptionArgument::_get_ownedMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_ownedMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "ownedMemory"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument ownedMemory
void System::ExceptionArgument::_set_ownedMemory(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_ownedMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "ownedMemory", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument text
::System::ExceptionArgument System::ExceptionArgument::_get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_get_text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionArgument>("System", "ExceptionArgument", "text"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument text
void System::ExceptionArgument::_set_text(::System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::_set_text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "text", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ExceptionArgument::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionArgument::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ExceptionResource
#include "System/ExceptionResource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_ImplementIComparable
::System::ExceptionResource System::ExceptionResource::_get_Argument_ImplementIComparable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Argument_ImplementIComparable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Argument_ImplementIComparable"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_ImplementIComparable
void System::ExceptionResource::_set_Argument_ImplementIComparable(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Argument_ImplementIComparable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_ImplementIComparable", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidType
::System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Argument_InvalidType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidType"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidType
void System::ExceptionResource::_set_Argument_InvalidType(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Argument_InvalidType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidType", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidArgumentForComparison
::System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidArgumentForComparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Argument_InvalidArgumentForComparison");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidArgumentForComparison"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidArgumentForComparison
void System::ExceptionResource::_set_Argument_InvalidArgumentForComparison(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Argument_InvalidArgumentForComparison");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidArgumentForComparison", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidRegistryKeyPermissionCheck
::System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidRegistryKeyPermissionCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Argument_InvalidRegistryKeyPermissionCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidRegistryKeyPermissionCheck"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidRegistryKeyPermissionCheck
void System::ExceptionResource::_set_Argument_InvalidRegistryKeyPermissionCheck(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Argument_InvalidRegistryKeyPermissionCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidRegistryKeyPermissionCheck", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_NeedNonNegNum
::System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_NeedNonNegNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_ArgumentOutOfRange_NeedNonNegNum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_NeedNonNegNum"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_NeedNonNegNum
void System::ExceptionResource::_set_ArgumentOutOfRange_NeedNonNegNum(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_ArgumentOutOfRange_NeedNonNegNum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_NeedNonNegNum", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_ArrayPlusOffTooSmall
::System::ExceptionResource System::ExceptionResource::_get_Arg_ArrayPlusOffTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Arg_ArrayPlusOffTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Arg_ArrayPlusOffTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_ArrayPlusOffTooSmall
void System::ExceptionResource::_set_Arg_ArrayPlusOffTooSmall(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Arg_ArrayPlusOffTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_ArrayPlusOffTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_NonZeroLowerBound
::System::ExceptionResource System::ExceptionResource::_get_Arg_NonZeroLowerBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Arg_NonZeroLowerBound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Arg_NonZeroLowerBound"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_NonZeroLowerBound
void System::ExceptionResource::_set_Arg_NonZeroLowerBound(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Arg_NonZeroLowerBound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_NonZeroLowerBound", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RankMultiDimNotSupported
::System::ExceptionResource System::ExceptionResource::_get_Arg_RankMultiDimNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Arg_RankMultiDimNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Arg_RankMultiDimNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RankMultiDimNotSupported
void System::ExceptionResource::_set_Arg_RankMultiDimNotSupported(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Arg_RankMultiDimNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RankMultiDimNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegKeyDelHive
::System::ExceptionResource System::ExceptionResource::_get_Arg_RegKeyDelHive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Arg_RegKeyDelHive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Arg_RegKeyDelHive"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegKeyDelHive
void System::ExceptionResource::_set_Arg_RegKeyDelHive(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Arg_RegKeyDelHive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegKeyDelHive", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegKeyStrLenBug
::System::ExceptionResource System::ExceptionResource::_get_Arg_RegKeyStrLenBug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Arg_RegKeyStrLenBug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Arg_RegKeyStrLenBug"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegKeyStrLenBug
void System::ExceptionResource::_set_Arg_RegKeyStrLenBug(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Arg_RegKeyStrLenBug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegKeyStrLenBug", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegSetStrArrNull
::System::ExceptionResource System::ExceptionResource::_get_Arg_RegSetStrArrNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Arg_RegSetStrArrNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Arg_RegSetStrArrNull"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegSetStrArrNull
void System::ExceptionResource::_set_Arg_RegSetStrArrNull(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Arg_RegSetStrArrNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegSetStrArrNull", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegSetMismatchedKind
::System::ExceptionResource System::ExceptionResource::_get_Arg_RegSetMismatchedKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Arg_RegSetMismatchedKind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Arg_RegSetMismatchedKind"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegSetMismatchedKind
void System::ExceptionResource::_set_Arg_RegSetMismatchedKind(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Arg_RegSetMismatchedKind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegSetMismatchedKind", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegSubKeyAbsent
::System::ExceptionResource System::ExceptionResource::_get_Arg_RegSubKeyAbsent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Arg_RegSubKeyAbsent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Arg_RegSubKeyAbsent"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegSubKeyAbsent
void System::ExceptionResource::_set_Arg_RegSubKeyAbsent(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Arg_RegSubKeyAbsent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegSubKeyAbsent", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegSubKeyValueAbsent
::System::ExceptionResource System::ExceptionResource::_get_Arg_RegSubKeyValueAbsent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Arg_RegSubKeyValueAbsent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Arg_RegSubKeyValueAbsent"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegSubKeyValueAbsent
void System::ExceptionResource::_set_Arg_RegSubKeyValueAbsent(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Arg_RegSubKeyValueAbsent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegSubKeyValueAbsent", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_AddingDuplicate
::System::ExceptionResource System::ExceptionResource::_get_Argument_AddingDuplicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Argument_AddingDuplicate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Argument_AddingDuplicate"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_AddingDuplicate
void System::ExceptionResource::_set_Argument_AddingDuplicate(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Argument_AddingDuplicate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_AddingDuplicate", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Serialization_InvalidOnDeser
::System::ExceptionResource System::ExceptionResource::_get_Serialization_InvalidOnDeser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Serialization_InvalidOnDeser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Serialization_InvalidOnDeser"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Serialization_InvalidOnDeser
void System::ExceptionResource::_set_Serialization_InvalidOnDeser(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Serialization_InvalidOnDeser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Serialization_InvalidOnDeser", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Serialization_MissingKeys
::System::ExceptionResource System::ExceptionResource::_get_Serialization_MissingKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Serialization_MissingKeys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Serialization_MissingKeys"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Serialization_MissingKeys
void System::ExceptionResource::_set_Serialization_MissingKeys(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Serialization_MissingKeys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Serialization_MissingKeys", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Serialization_NullKey
::System::ExceptionResource System::ExceptionResource::_get_Serialization_NullKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Serialization_NullKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Serialization_NullKey"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Serialization_NullKey
void System::ExceptionResource::_set_Serialization_NullKey(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Serialization_NullKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Serialization_NullKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidArrayType
::System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Argument_InvalidArrayType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidArrayType"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidArrayType
void System::ExceptionResource::_set_Argument_InvalidArrayType(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Argument_InvalidArrayType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidArrayType", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource NotSupported_KeyCollectionSet
::System::ExceptionResource System::ExceptionResource::_get_NotSupported_KeyCollectionSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_NotSupported_KeyCollectionSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "NotSupported_KeyCollectionSet"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource NotSupported_KeyCollectionSet
void System::ExceptionResource::_set_NotSupported_KeyCollectionSet(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_NotSupported_KeyCollectionSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "NotSupported_KeyCollectionSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource NotSupported_ValueCollectionSet
::System::ExceptionResource System::ExceptionResource::_get_NotSupported_ValueCollectionSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_NotSupported_ValueCollectionSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "NotSupported_ValueCollectionSet"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource NotSupported_ValueCollectionSet
void System::ExceptionResource::_set_NotSupported_ValueCollectionSet(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_NotSupported_ValueCollectionSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "NotSupported_ValueCollectionSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_SmallCapacity
::System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_SmallCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_ArgumentOutOfRange_SmallCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_SmallCapacity"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_SmallCapacity
void System::ExceptionResource::_set_ArgumentOutOfRange_SmallCapacity(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_ArgumentOutOfRange_SmallCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_SmallCapacity", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_Index
::System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_ArgumentOutOfRange_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_Index"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_Index
void System::ExceptionResource::_set_ArgumentOutOfRange_Index(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_ArgumentOutOfRange_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_Index", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidOffLen
::System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidOffLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Argument_InvalidOffLen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidOffLen"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidOffLen
void System::ExceptionResource::_set_Argument_InvalidOffLen(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Argument_InvalidOffLen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidOffLen", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_ItemNotExist
::System::ExceptionResource System::ExceptionResource::_get_Argument_ItemNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Argument_ItemNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Argument_ItemNotExist"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_ItemNotExist
void System::ExceptionResource::_set_Argument_ItemNotExist(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Argument_ItemNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_ItemNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_Count
::System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_ArgumentOutOfRange_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_Count"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_Count
void System::ExceptionResource::_set_ArgumentOutOfRange_Count(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_ArgumentOutOfRange_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_Count", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_InvalidThreshold
::System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_InvalidThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_ArgumentOutOfRange_InvalidThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_InvalidThreshold"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_InvalidThreshold
void System::ExceptionResource::_set_ArgumentOutOfRange_InvalidThreshold(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_ArgumentOutOfRange_InvalidThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_InvalidThreshold", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_ListInsert
::System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_ListInsert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_ArgumentOutOfRange_ListInsert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_ListInsert"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_ListInsert
void System::ExceptionResource::_set_ArgumentOutOfRange_ListInsert(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_ArgumentOutOfRange_ListInsert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_ListInsert", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource NotSupported_ReadOnlyCollection
::System::ExceptionResource System::ExceptionResource::_get_NotSupported_ReadOnlyCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_NotSupported_ReadOnlyCollection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "NotSupported_ReadOnlyCollection"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource NotSupported_ReadOnlyCollection
void System::ExceptionResource::_set_NotSupported_ReadOnlyCollection(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_NotSupported_ReadOnlyCollection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "NotSupported_ReadOnlyCollection", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_CannotRemoveFromStackOrQueue
::System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_CannotRemoveFromStackOrQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_InvalidOperation_CannotRemoveFromStackOrQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_CannotRemoveFromStackOrQueue"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_CannotRemoveFromStackOrQueue
void System::ExceptionResource::_set_InvalidOperation_CannotRemoveFromStackOrQueue(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_InvalidOperation_CannotRemoveFromStackOrQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_CannotRemoveFromStackOrQueue", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EmptyQueue
::System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EmptyQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_InvalidOperation_EmptyQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EmptyQueue"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EmptyQueue
void System::ExceptionResource::_set_InvalidOperation_EmptyQueue(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_InvalidOperation_EmptyQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EmptyQueue", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EnumOpCantHappen
::System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EnumOpCantHappen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_InvalidOperation_EnumOpCantHappen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EnumOpCantHappen"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EnumOpCantHappen
void System::ExceptionResource::_set_InvalidOperation_EnumOpCantHappen(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_InvalidOperation_EnumOpCantHappen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EnumOpCantHappen", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EnumFailedVersion
::System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EnumFailedVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_InvalidOperation_EnumFailedVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EnumFailedVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EnumFailedVersion
void System::ExceptionResource::_set_InvalidOperation_EnumFailedVersion(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_InvalidOperation_EnumFailedVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EnumFailedVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EmptyStack
::System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EmptyStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_InvalidOperation_EmptyStack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EmptyStack"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EmptyStack
void System::ExceptionResource::_set_InvalidOperation_EmptyStack(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_InvalidOperation_EmptyStack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EmptyStack", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_BiggerThanCollection
::System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_BiggerThanCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_ArgumentOutOfRange_BiggerThanCollection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_BiggerThanCollection"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_BiggerThanCollection
void System::ExceptionResource::_set_ArgumentOutOfRange_BiggerThanCollection(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_ArgumentOutOfRange_BiggerThanCollection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_BiggerThanCollection", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EnumNotStarted
::System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EnumNotStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_InvalidOperation_EnumNotStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EnumNotStarted"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EnumNotStarted
void System::ExceptionResource::_set_InvalidOperation_EnumNotStarted(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_InvalidOperation_EnumNotStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EnumNotStarted", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EnumEnded
::System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EnumEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_InvalidOperation_EnumEnded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EnumEnded"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EnumEnded
void System::ExceptionResource::_set_InvalidOperation_EnumEnded(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_InvalidOperation_EnumEnded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EnumEnded", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource NotSupported_SortedListNestedWrite
::System::ExceptionResource System::ExceptionResource::_get_NotSupported_SortedListNestedWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_NotSupported_SortedListNestedWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "NotSupported_SortedListNestedWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource NotSupported_SortedListNestedWrite
void System::ExceptionResource::_set_NotSupported_SortedListNestedWrite(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_NotSupported_SortedListNestedWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "NotSupported_SortedListNestedWrite", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_NoValue
::System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_NoValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_InvalidOperation_NoValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_NoValue"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_NoValue
void System::ExceptionResource::_set_InvalidOperation_NoValue(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_InvalidOperation_NoValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_NoValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_RegRemoveSubKey
::System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_RegRemoveSubKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_InvalidOperation_RegRemoveSubKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_RegRemoveSubKey"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_RegRemoveSubKey
void System::ExceptionResource::_set_InvalidOperation_RegRemoveSubKey(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_InvalidOperation_RegRemoveSubKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_RegRemoveSubKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Security_RegistryPermission
::System::ExceptionResource System::ExceptionResource::_get_Security_RegistryPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Security_RegistryPermission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Security_RegistryPermission"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Security_RegistryPermission
void System::ExceptionResource::_set_Security_RegistryPermission(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Security_RegistryPermission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Security_RegistryPermission", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource UnauthorizedAccess_RegistryNoWrite
::System::ExceptionResource System::ExceptionResource::_get_UnauthorizedAccess_RegistryNoWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_UnauthorizedAccess_RegistryNoWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "UnauthorizedAccess_RegistryNoWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource UnauthorizedAccess_RegistryNoWrite
void System::ExceptionResource::_set_UnauthorizedAccess_RegistryNoWrite(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_UnauthorizedAccess_RegistryNoWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "UnauthorizedAccess_RegistryNoWrite", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ObjectDisposed_RegKeyClosed
::System::ExceptionResource System::ExceptionResource::_get_ObjectDisposed_RegKeyClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_ObjectDisposed_RegKeyClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "ObjectDisposed_RegKeyClosed"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ObjectDisposed_RegKeyClosed
void System::ExceptionResource::_set_ObjectDisposed_RegKeyClosed(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_ObjectDisposed_RegKeyClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ObjectDisposed_RegKeyClosed", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource NotSupported_InComparableType
::System::ExceptionResource System::ExceptionResource::_get_NotSupported_InComparableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_NotSupported_InComparableType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "NotSupported_InComparableType"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource NotSupported_InComparableType
void System::ExceptionResource::_set_NotSupported_InComparableType(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_NotSupported_InComparableType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "NotSupported_InComparableType", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidRegistryOptionsCheck
::System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidRegistryOptionsCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Argument_InvalidRegistryOptionsCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidRegistryOptionsCheck"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidRegistryOptionsCheck
void System::ExceptionResource::_set_Argument_InvalidRegistryOptionsCheck(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Argument_InvalidRegistryOptionsCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidRegistryOptionsCheck", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidRegistryViewCheck
::System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidRegistryViewCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_get_Argument_InvalidRegistryViewCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidRegistryViewCheck"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidRegistryViewCheck
void System::ExceptionResource::_set_Argument_InvalidRegistryViewCheck(::System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::_set_Argument_InvalidRegistryViewCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidRegistryViewCheck", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ExceptionResource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ExceptionResource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TimeoutException
#include "System/TimeoutException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.TimeSpan Zero
::System::TimeSpan System::TimeSpan::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System", "TimeSpan", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.TimeSpan Zero
void System::TimeSpan::_set_Zero(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeSpan", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.TimeSpan MaxValue
::System::TimeSpan System::TimeSpan::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System", "TimeSpan", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.TimeSpan MaxValue
void System::TimeSpan::_set_MaxValue(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeSpan", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.TimeSpan MinValue
::System::TimeSpan System::TimeSpan::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System", "TimeSpan", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.TimeSpan MinValue
void System::TimeSpan::_set_MinValue(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeSpan", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _legacyConfigChecked
bool System::TimeSpan::_get__legacyConfigChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::_get__legacyConfigChecked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "TimeSpan", "_legacyConfigChecked"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _legacyConfigChecked
void System::TimeSpan::_set__legacyConfigChecked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::_set__legacyConfigChecked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeSpan", "_legacyConfigChecked", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _legacyMode
bool System::TimeSpan::_get__legacyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::_get__legacyMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "TimeSpan", "_legacyMode"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _legacyMode
void System::TimeSpan::_set__legacyMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::_set__legacyMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeSpan", "_legacyMode", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int64 _ticks
[[deprecated("Use field access instead!")]] int64_t& System::TimeSpan::dyn__ticks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::dyn__ticks");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ticks"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.TimeSpan.get_Ticks
int64_t System::TimeSpan::get_Ticks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::get_Ticks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Ticks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.get_Hours
int System::TimeSpan::get_Hours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::get_Hours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Hours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.get_Minutes
int System::TimeSpan::get_Minutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::get_Minutes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Minutes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.get_Seconds
int System::TimeSpan::get_Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::get_Seconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Seconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.get_TotalHours
double System::TimeSpan::get_TotalHours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::get_TotalHours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_TotalHours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.get_TotalMilliseconds
double System::TimeSpan::get_TotalMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::get_TotalMilliseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_TotalMilliseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.get_TotalMinutes
double System::TimeSpan::get_TotalMinutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::get_TotalMinutes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_TotalMinutes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.get_TotalSeconds
double System::TimeSpan::get_TotalSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::get_TotalSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_TotalSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.get_LegacyMode
bool System::TimeSpan::get_LegacyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::get_LegacyMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "get_LegacyMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeSpan..ctor
// ABORTED elsewhere.  System::TimeSpan::TimeSpan(int64_t ticks)
// Autogenerated method: System.TimeSpan..ctor
System::TimeSpan::TimeSpan(int hours, int minutes, int seconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hours), ::il2cpp_utils::ExtractType(minutes), ::il2cpp_utils::ExtractType(seconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hours, minutes, seconds);
}
// Autogenerated method: System.TimeSpan..ctor
System::TimeSpan::TimeSpan(int days, int hours, int minutes, int seconds, int milliseconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(days), ::il2cpp_utils::ExtractType(hours), ::il2cpp_utils::ExtractType(minutes), ::il2cpp_utils::ExtractType(seconds), ::il2cpp_utils::ExtractType(milliseconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, days, hours, minutes, seconds, milliseconds);
}
// Autogenerated method: System.TimeSpan..cctor
void System::TimeSpan::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeSpan.Add
::System::TimeSpan System::TimeSpan::Add(::System::TimeSpan ts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ts)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method, ts);
}
// Autogenerated method: System.TimeSpan.Compare
int System::TimeSpan::Compare(::System::TimeSpan t1, ::System::TimeSpan t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.TimeSpan.CompareTo
int System::TimeSpan::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.CompareTo
int System::TimeSpan::CompareTo(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.FromDays
::System::TimeSpan System::TimeSpan::FromDays(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::FromDays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "FromDays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.Duration
::System::TimeSpan System::TimeSpan::Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::Duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.Equals
bool System::TimeSpan::Equals(::System::TimeSpan obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.TimeSpan.FromHours
::System::TimeSpan System::TimeSpan::FromHours(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::FromHours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "FromHours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.Interval
::System::TimeSpan System::TimeSpan::Interval(double value, int scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::Interval");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "Interval", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, scale);
}
// Autogenerated method: System.TimeSpan.FromMilliseconds
::System::TimeSpan System::TimeSpan::FromMilliseconds(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::FromMilliseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "FromMilliseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.FromMinutes
::System::TimeSpan System::TimeSpan::FromMinutes(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::FromMinutes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "FromMinutes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.Negate
::System::TimeSpan System::TimeSpan::Negate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::Negate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Negate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.FromSeconds
::System::TimeSpan System::TimeSpan::FromSeconds(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::FromSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "FromSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.Subtract
::System::TimeSpan System::TimeSpan::Subtract(::System::TimeSpan ts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ts)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method, ts);
}
// Autogenerated method: System.TimeSpan.FromTicks
::System::TimeSpan System::TimeSpan::FromTicks(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::FromTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "FromTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.TimeToTicks
int64_t System::TimeSpan::TimeToTicks(int hour, int minute, int second) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::TimeToTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "TimeToTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hour, minute, second);
}
// Autogenerated method: System.TimeSpan.Parse
::System::TimeSpan System::TimeSpan::Parse(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.TimeSpan.Parse
::System::TimeSpan System::TimeSpan::Parse(::StringW input, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, formatProvider);
}
// Autogenerated method: System.TimeSpan.ToString
::StringW System::TimeSpan::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: System.TimeSpan.ToString
::StringW System::TimeSpan::ToString(::StringW format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, formatProvider);
}
// Autogenerated method: System.TimeSpan.GetLegacyFormatMode
bool System::TimeSpan::GetLegacyFormatMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::GetLegacyFormatMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "GetLegacyFormatMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeSpan.Equals
bool System::TimeSpan::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.GetHashCode
int System::TimeSpan::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.ToString
::StringW System::TimeSpan::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.op_Subtraction
::System::TimeSpan System::operator-(const ::System::TimeSpan& t1, const ::System::TimeSpan& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.TimeSpan.op_Addition
::System::TimeSpan System::operator+(const ::System::TimeSpan& t1, const ::System::TimeSpan& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.TimeSpan.op_Equality
bool System::operator ==(const ::System::TimeSpan& t1, const ::System::TimeSpan& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.TimeSpan.op_Inequality
bool System::operator !=(const ::System::TimeSpan& t1, const ::System::TimeSpan& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.TimeSpan.op_LessThan
bool System::operator <(const ::System::TimeSpan& t1, const ::System::TimeSpan& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.TimeSpan.op_LessThanOrEqual
bool System::operator <=(const ::System::TimeSpan& t1, const ::System::TimeSpan& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.TimeSpan.op_GreaterThan
bool System::operator >(const ::System::TimeSpan& t1, const ::System::TimeSpan& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.TimeSpan.op_GreaterThanOrEqual
bool System::operator >=(const ::System::TimeSpan& t1, const ::System::TimeSpan& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeSpan::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeSpan", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TimeZoneInfoOptions
#include "System/TimeZoneInfoOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.TimeZoneInfoOptions None
::System::TimeZoneInfoOptions System::TimeZoneInfoOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfoOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeZoneInfoOptions>("System", "TimeZoneInfoOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.TimeZoneInfoOptions None
void System::TimeZoneInfoOptions::_set_None(::System::TimeZoneInfoOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfoOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfoOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.TimeZoneInfoOptions NoThrowOnInvalidTime
::System::TimeZoneInfoOptions System::TimeZoneInfoOptions::_get_NoThrowOnInvalidTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfoOptions::_get_NoThrowOnInvalidTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeZoneInfoOptions>("System", "TimeZoneInfoOptions", "NoThrowOnInvalidTime"));
}
// Autogenerated static field setter
// Set static field: static public System.TimeZoneInfoOptions NoThrowOnInvalidTime
void System::TimeZoneInfoOptions::_set_NoThrowOnInvalidTime(::System::TimeZoneInfoOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfoOptions::_set_NoThrowOnInvalidTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfoOptions", "NoThrowOnInvalidTime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::TimeZoneInfoOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfoOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeZoneInfo
#include "System/TimeZoneInfo.hpp"
// Including type: System.TimeZoneInfo/System.AdjustmentRule
#include "System/TimeZoneInfo_AdjustmentRule.hpp"
// Including type: System.TimeZoneInfo/System.TransitionTime
#include "System/TimeZoneInfo_TransitionTime.hpp"
// Including type: System.TimeZoneInfo/System.SYSTEMTIME
#include "System/TimeZoneInfo_SYSTEMTIME.hpp"
// Including type: System.TimeZoneInfo/System.TIME_ZONE_INFORMATION
#include "System/TimeZoneInfo_TIME_ZONE_INFORMATION.hpp"
// Including type: System.TimeZoneInfo/System.DYNAMIC_TIME_ZONE_INFORMATION
#include "System/TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION.hpp"
// Including type: System.TimeZoneInfo/System.<>c
#include "System/TimeZoneInfo_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.TimeType
#include "System/TimeType.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.DateTimeKind
#include "System/DateTimeKind.hpp"
// Including type: System.TimeZoneInfoOptions
#include "System/TimeZoneInfoOptions.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.TimeZoneInfo local
::System::TimeZoneInfo* System::TimeZoneInfo::_get_local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_get_local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeZoneInfo*>("System", "TimeZoneInfo", "local"));
}
// Autogenerated static field setter
// Set static field: static private System.TimeZoneInfo local
void System::TimeZoneInfo::_set_local(::System::TimeZoneInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_set_local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "local", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean readlinkNotFound
bool System::TimeZoneInfo::_get_readlinkNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_get_readlinkNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "TimeZoneInfo", "readlinkNotFound"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean readlinkNotFound
void System::TimeZoneInfo::_set_readlinkNotFound(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_set_readlinkNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "readlinkNotFound", value));
}
// Autogenerated static field getter
// Get static field: static private System.TimeZoneInfo utc
::System::TimeZoneInfo* System::TimeZoneInfo::_get_utc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_get_utc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeZoneInfo*>("System", "TimeZoneInfo", "utc"));
}
// Autogenerated static field setter
// Set static field: static private System.TimeZoneInfo utc
void System::TimeZoneInfo::_set_utc(::System::TimeZoneInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_set_utc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "utc", value));
}
// Autogenerated static field getter
// Get static field: static private System.String timeZoneDirectory
::StringW System::TimeZoneInfo::_get_timeZoneDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_get_timeZoneDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "TimeZoneInfo", "timeZoneDirectory"));
}
// Autogenerated static field setter
// Set static field: static private System.String timeZoneDirectory
void System::TimeZoneInfo::_set_timeZoneDirectory(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_set_timeZoneDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "timeZoneDirectory", value));
}
// Autogenerated static field getter
// Get static field: static private Microsoft.Win32.RegistryKey timeZoneKey
::Microsoft::Win32::RegistryKey* System::TimeZoneInfo::_get_timeZoneKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_get_timeZoneKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryKey*>("System", "TimeZoneInfo", "timeZoneKey"));
}
// Autogenerated static field setter
// Set static field: static private Microsoft.Win32.RegistryKey timeZoneKey
void System::TimeZoneInfo::_set_timeZoneKey(::Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_set_timeZoneKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "timeZoneKey", value));
}
// Autogenerated static field getter
// Get static field: static private Microsoft.Win32.RegistryKey localZoneKey
::Microsoft::Win32::RegistryKey* System::TimeZoneInfo::_get_localZoneKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_get_localZoneKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryKey*>("System", "TimeZoneInfo", "localZoneKey"));
}
// Autogenerated static field setter
// Set static field: static private Microsoft.Win32.RegistryKey localZoneKey
void System::TimeZoneInfo::_set_localZoneKey(::Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_set_localZoneKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "localZoneKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.ObjectModel.ReadOnlyCollection`1<System.TimeZoneInfo> systemTimeZones
::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::TimeZoneInfo*>* System::TimeZoneInfo::_get_systemTimeZones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_get_systemTimeZones");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::TimeZoneInfo*>*>("System", "TimeZoneInfo", "systemTimeZones"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.ObjectModel.ReadOnlyCollection`1<System.TimeZoneInfo> systemTimeZones
void System::TimeZoneInfo::_set_systemTimeZones(::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::TimeZoneInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::_set_systemTimeZones");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "systemTimeZones", value));
}
// Autogenerated instance field getter
// Get instance field: private System.TimeSpan baseUtcOffset
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::TimeZoneInfo::dyn_baseUtcOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::dyn_baseUtcOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseUtcOffset"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String daylightDisplayName
[[deprecated("Use field access instead!")]] ::StringW& System::TimeZoneInfo::dyn_daylightDisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::dyn_daylightDisplayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "daylightDisplayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String displayName
[[deprecated("Use field access instead!")]] ::StringW& System::TimeZoneInfo::dyn_displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::dyn_displayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "displayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String id
[[deprecated("Use field access instead!")]] ::StringW& System::TimeZoneInfo::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Collections.Generic.KeyValuePair`2<System.DateTime,System.TimeType>> transitions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::System::DateTime, ::System::TimeType*>>*& System::TimeZoneInfo::dyn_transitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::dyn_transitions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transitions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::System::DateTime, ::System::TimeType*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String standardDisplayName
[[deprecated("Use field access instead!")]] ::StringW& System::TimeZoneInfo::dyn_standardDisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::dyn_standardDisplayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardDisplayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean supportsDaylightSavingTime
[[deprecated("Use field access instead!")]] bool& System::TimeZoneInfo::dyn_supportsDaylightSavingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::dyn_supportsDaylightSavingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportsDaylightSavingTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TimeZoneInfo/System.AdjustmentRule[] adjustmentRules
[[deprecated("Use field access instead!")]] ::ArrayW<::System::TimeZoneInfo::AdjustmentRule*>& System::TimeZoneInfo::dyn_adjustmentRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::dyn_adjustmentRules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "adjustmentRules"))->offset;
  return *reinterpret_cast<::ArrayW<::System::TimeZoneInfo::AdjustmentRule*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.TimeZoneInfo.get_BaseUtcOffset
::System::TimeSpan System::TimeZoneInfo::get_BaseUtcOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::get_BaseUtcOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseUtcOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_DisplayName
::StringW System::TimeZoneInfo::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::get_DisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_Id
::StringW System::TimeZoneInfo::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_Local
::System::TimeZoneInfo* System::TimeZoneInfo::get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::get_Local");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "get_Local", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_SupportsDaylightSavingTime
bool System::TimeZoneInfo::get_SupportsDaylightSavingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::get_SupportsDaylightSavingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsDaylightSavingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_Utc
::System::TimeZoneInfo* System::TimeZoneInfo::get_Utc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::get_Utc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "get_Utc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_TimeZoneDirectory
::StringW System::TimeZoneInfo::get_TimeZoneDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::get_TimeZoneDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "get_TimeZoneDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_IsWindows
bool System::TimeZoneInfo::get_IsWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::get_IsWindows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "get_IsWindows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_TimeZoneKey
::Microsoft::Win32::RegistryKey* System::TimeZoneInfo::get_TimeZoneKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::get_TimeZoneKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "get_TimeZoneKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::RegistryKey*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_LocalZoneKey
::Microsoft::Win32::RegistryKey* System::TimeZoneInfo::get_LocalZoneKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::get_LocalZoneKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "get_LocalZoneKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::RegistryKey*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.UtcOffsetOutOfRange
bool System::TimeZoneInfo::UtcOffsetOutOfRange(::System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::UtcOffsetOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "UtcOffsetOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, offset);
}
// Autogenerated method: System.TimeZoneInfo.CreateAdjustmentRule
::System::Collections::Generic::List_1<::System::TimeZoneInfo::AdjustmentRule*>* System::TimeZoneInfo::CreateAdjustmentRule(int year, ByRef<::ArrayW<int64_t>> data, ByRef<::ArrayW<::StringW>> names, ::StringW standardNameCurrentYear, ::StringW daylightNameCurrentYear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CreateAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateAdjustmentRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractIndependentType<::ArrayW<int64_t>&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::StringW>&>(), ::il2cpp_utils::ExtractType(standardNameCurrentYear), ::il2cpp_utils::ExtractType(daylightNameCurrentYear)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::TimeZoneInfo::AdjustmentRule*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, year, byref(data), byref(names), standardNameCurrentYear, daylightNameCurrentYear);
}
// Autogenerated method: System.TimeZoneInfo.CreateLocalUnity
::System::TimeZoneInfo* System::TimeZoneInfo::CreateLocalUnity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CreateLocalUnity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateLocalUnity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.EnumDynamicTimeZoneInformation
uint System::TimeZoneInfo::EnumDynamicTimeZoneInformation(uint dwIndex, ByRef<::System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION> lpTimeZoneInformation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::EnumDynamicTimeZoneInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "EnumDynamicTimeZoneInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dwIndex), ::il2cpp_utils::ExtractIndependentType<::System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dwIndex, byref(lpTimeZoneInformation));
}
// Autogenerated method: System.TimeZoneInfo.GetDynamicTimeZoneInformation
uint System::TimeZoneInfo::GetDynamicTimeZoneInformation(ByRef<::System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION> pTimeZoneInformation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetDynamicTimeZoneInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetDynamicTimeZoneInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pTimeZoneInformation));
}
// Autogenerated method: System.TimeZoneInfo.GetDynamicTimeZoneInformationWin32
uint System::TimeZoneInfo::GetDynamicTimeZoneInformationWin32(ByRef<::System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION> pTimeZoneInformation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetDynamicTimeZoneInformationWin32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetDynamicTimeZoneInformationWin32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pTimeZoneInformation));
}
// Autogenerated method: System.TimeZoneInfo.GetDynamicTimeZoneInformationEffectiveYears
uint System::TimeZoneInfo::GetDynamicTimeZoneInformationEffectiveYears(ByRef<::System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION> lpTimeZoneInformation, ByRef<uint> FirstYear, ByRef<uint> LastYear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetDynamicTimeZoneInformationEffectiveYears");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetDynamicTimeZoneInformationEffectiveYears", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lpTimeZoneInformation), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(lpTimeZoneInformation), byref(FirstYear), byref(LastYear));
}
// Autogenerated method: System.TimeZoneInfo.GetTimeZoneInformationForYear
bool System::TimeZoneInfo::GetTimeZoneInformationForYear(uint16_t wYear, ByRef<::System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION> pdtzi, ByRef<::System::TimeZoneInfo::TIME_ZONE_INFORMATION> ptzi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetTimeZoneInformationForYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetTimeZoneInformationForYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wYear), ::il2cpp_utils::ExtractType(pdtzi), ::il2cpp_utils::ExtractIndependentType<::System::TimeZoneInfo::TIME_ZONE_INFORMATION&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, wYear, byref(pdtzi), byref(ptzi));
}
// Autogenerated method: System.TimeZoneInfo.CreateAdjustmentRuleFromTimeZoneInformation
::System::TimeZoneInfo::AdjustmentRule* System::TimeZoneInfo::CreateAdjustmentRuleFromTimeZoneInformation(ByRef<::System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION> timeZoneInformation, ::System::DateTime startDate, ::System::DateTime endDate, int defaultBaseUtcOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CreateAdjustmentRuleFromTimeZoneInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateAdjustmentRuleFromTimeZoneInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeZoneInformation), ::il2cpp_utils::ExtractType(startDate), ::il2cpp_utils::ExtractType(endDate), ::il2cpp_utils::ExtractType(defaultBaseUtcOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::AdjustmentRule*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(timeZoneInformation), startDate, endDate, defaultBaseUtcOffset);
}
// Autogenerated method: System.TimeZoneInfo.TransitionTimeFromTimeZoneInformation
bool System::TimeZoneInfo::TransitionTimeFromTimeZoneInformation(::System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION timeZoneInformation, ByRef<::System::TimeZoneInfo::TransitionTime> transitionTime, bool readStartDate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTimeFromTimeZoneInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TransitionTimeFromTimeZoneInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeZoneInformation), ::il2cpp_utils::ExtractIndependentType<::System::TimeZoneInfo::TransitionTime&>(), ::il2cpp_utils::ExtractType(readStartDate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeZoneInformation, byref(transitionTime), readStartDate);
}
// Autogenerated method: System.TimeZoneInfo.TryCreateTimeZone
::System::TimeZoneInfo* System::TimeZoneInfo::TryCreateTimeZone(::System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION timeZoneInformation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TryCreateTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TryCreateTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeZoneInformation)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeZoneInformation);
}
// Autogenerated method: System.TimeZoneInfo.GetLocalTimeZoneInfoWinRTFallback
::System::TimeZoneInfo* System::TimeZoneInfo::GetLocalTimeZoneInfoWinRTFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetLocalTimeZoneInfoWinRTFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetLocalTimeZoneInfoWinRTFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.GetLocalTimeZoneKeyNameWin32Fallback
::StringW System::TimeZoneInfo::GetLocalTimeZoneKeyNameWin32Fallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetLocalTimeZoneKeyNameWin32Fallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetLocalTimeZoneKeyNameWin32Fallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.FindSystemTimeZoneByIdWinRTFallback
::System::TimeZoneInfo* System::TimeZoneInfo::FindSystemTimeZoneByIdWinRTFallback(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::FindSystemTimeZoneByIdWinRTFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "FindSystemTimeZoneByIdWinRTFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: System.TimeZoneInfo.GetSystemTimeZonesWinRTFallback
::System::Collections::Generic::List_1<::System::TimeZoneInfo*>* System::TimeZoneInfo::GetSystemTimeZonesWinRTFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetSystemTimeZonesWinRTFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetSystemTimeZonesWinRTFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::TimeZoneInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.readlink
int System::TimeZoneInfo::readlink(::StringW path, ::ArrayW<uint8_t> buffer, int buflen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::readlink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "readlink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(buflen)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, buffer, buflen);
}
// Autogenerated method: System.TimeZoneInfo.readlink
::StringW System::TimeZoneInfo::readlink(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::readlink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "readlink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.TimeZoneInfo.TryGetNameFromPath
bool System::TimeZoneInfo::TryGetNameFromPath(::StringW path, ByRef<::StringW> name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TryGetNameFromPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TryGetNameFromPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, byref(name));
}
// Autogenerated method: System.TimeZoneInfo.CreateLocal
::System::TimeZoneInfo* System::TimeZoneInfo::CreateLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CreateLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.FindSystemTimeZoneByIdCore
::System::TimeZoneInfo* System::TimeZoneInfo::FindSystemTimeZoneByIdCore(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::FindSystemTimeZoneByIdCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "FindSystemTimeZoneByIdCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: System.TimeZoneInfo.GetSystemTimeZonesCore
void System::TimeZoneInfo::GetSystemTimeZonesCore(::System::Collections::Generic::List_1<::System::TimeZoneInfo*>* systemTimeZones) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetSystemTimeZonesCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetSystemTimeZonesCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(systemTimeZones)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, systemTimeZones);
}
// Autogenerated method: System.TimeZoneInfo.TrimSpecial
::StringW System::TimeZoneInfo::TrimSpecial(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TrimSpecial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TrimSpecial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.TimeZoneInfo.TryAddTicks
bool System::TimeZoneInfo::TryAddTicks(::System::DateTime date, int64_t ticks, ByRef<::System::DateTime> result, ::System::DateTimeKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TryAddTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TryAddTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(date), ::il2cpp_utils::ExtractType(ticks), ::il2cpp_utils::ExtractIndependentType<::System::DateTime&>(), ::il2cpp_utils::ExtractType(kind)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, date, ticks, byref(result), kind);
}
// Autogenerated method: System.TimeZoneInfo.ConvertTime
::System::DateTime System::TimeZoneInfo::ConvertTime(::System::DateTime dateTime, ::System::TimeZoneInfo* sourceTimeZone, ::System::TimeZoneInfo* destinationTimeZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ConvertTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ConvertTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(sourceTimeZone), ::il2cpp_utils::ExtractType(destinationTimeZone)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, sourceTimeZone, destinationTimeZone);
}
// Autogenerated method: System.TimeZoneInfo.ConvertTimeFromUtc
::System::DateTime System::TimeZoneInfo::ConvertTimeFromUtc(::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ConvertTimeFromUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTimeFromUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, dateTime);
}
// Autogenerated method: System.TimeZoneInfo.ConvertTimeFromUtc
::System::DateTime System::TimeZoneInfo::ConvertTimeFromUtc(::System::DateTime dateTime, ::System::TimeZoneInfo* destinationTimeZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ConvertTimeFromUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ConvertTimeFromUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(destinationTimeZone)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, destinationTimeZone);
}
// Autogenerated method: System.TimeZoneInfo.ConvertTimeToUtc
::System::DateTime System::TimeZoneInfo::ConvertTimeToUtc(::System::DateTime dateTime, ::System::TimeZoneInfoOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ConvertTimeToUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ConvertTimeToUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, flags);
}
// Autogenerated method: System.TimeZoneInfo.ConvertTimeToUtc
::System::DateTime System::TimeZoneInfo::ConvertTimeToUtc(::System::DateTime dateTime, ::System::TimeZoneInfo* sourceTimeZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ConvertTimeToUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ConvertTimeToUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(sourceTimeZone)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, sourceTimeZone);
}
// Autogenerated method: System.TimeZoneInfo.ConvertTimeToUtc
::System::DateTime System::TimeZoneInfo::ConvertTimeToUtc(::System::DateTime dateTime, ::System::TimeZoneInfo* sourceTimeZone, ::System::TimeZoneInfoOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ConvertTimeToUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ConvertTimeToUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(sourceTimeZone), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, sourceTimeZone, flags);
}
// Autogenerated method: System.TimeZoneInfo.GetDateTimeNowUtcOffsetFromUtc
::System::TimeSpan System::TimeZoneInfo::GetDateTimeNowUtcOffsetFromUtc(::System::DateTime time, ByRef<bool> isAmbiguousLocalDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetDateTimeNowUtcOffsetFromUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetDateTimeNowUtcOffsetFromUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, byref(isAmbiguousLocalDst));
}
// Autogenerated method: System.TimeZoneInfo.CreateCustomTimeZone
::System::TimeZoneInfo* System::TimeZoneInfo::CreateCustomTimeZone(::StringW id, ::System::TimeSpan baseUtcOffset, ::StringW displayName, ::StringW standardDisplayName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CreateCustomTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateCustomTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(baseUtcOffset), ::il2cpp_utils::ExtractType(displayName), ::il2cpp_utils::ExtractType(standardDisplayName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id, baseUtcOffset, displayName, standardDisplayName);
}
// Autogenerated method: System.TimeZoneInfo.CreateCustomTimeZone
::System::TimeZoneInfo* System::TimeZoneInfo::CreateCustomTimeZone(::StringW id, ::System::TimeSpan baseUtcOffset, ::StringW displayName, ::StringW standardDisplayName, ::StringW daylightDisplayName, ::ArrayW<::System::TimeZoneInfo::AdjustmentRule*> adjustmentRules) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CreateCustomTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateCustomTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(baseUtcOffset), ::il2cpp_utils::ExtractType(displayName), ::il2cpp_utils::ExtractType(standardDisplayName), ::il2cpp_utils::ExtractType(daylightDisplayName), ::il2cpp_utils::ExtractType(adjustmentRules)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id, baseUtcOffset, displayName, standardDisplayName, daylightDisplayName, adjustmentRules);
}
// Autogenerated method: System.TimeZoneInfo.CreateCustomTimeZone
::System::TimeZoneInfo* System::TimeZoneInfo::CreateCustomTimeZone(::StringW id, ::System::TimeSpan baseUtcOffset, ::StringW displayName, ::StringW standardDisplayName, ::StringW daylightDisplayName, ::ArrayW<::System::TimeZoneInfo::AdjustmentRule*> adjustmentRules, bool disableDaylightSavingTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::CreateCustomTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateCustomTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(baseUtcOffset), ::il2cpp_utils::ExtractType(displayName), ::il2cpp_utils::ExtractType(standardDisplayName), ::il2cpp_utils::ExtractType(daylightDisplayName), ::il2cpp_utils::ExtractType(adjustmentRules), ::il2cpp_utils::ExtractType(disableDaylightSavingTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id, baseUtcOffset, displayName, standardDisplayName, daylightDisplayName, adjustmentRules, disableDaylightSavingTime);
}
// Autogenerated method: System.TimeZoneInfo.Equals
bool System::TimeZoneInfo::Equals(::System::TimeZoneInfo* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.TimeZoneInfo.FindSystemTimeZoneById
::System::TimeZoneInfo* System::TimeZoneInfo::FindSystemTimeZoneById(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::FindSystemTimeZoneById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "FindSystemTimeZoneById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: System.TimeZoneInfo.FindSystemTimeZoneByFileName
::System::TimeZoneInfo* System::TimeZoneInfo::FindSystemTimeZoneByFileName(::StringW id, ::StringW filepath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::FindSystemTimeZoneByFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "FindSystemTimeZoneByFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(filepath)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id, filepath);
}
// Autogenerated method: System.TimeZoneInfo.FromRegistryKey
::System::TimeZoneInfo* System::TimeZoneInfo::FromRegistryKey(::StringW id, ::Microsoft::Win32::RegistryKey* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::FromRegistryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "FromRegistryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id, key);
}
// Autogenerated method: System.TimeZoneInfo.ParseRegTzi
void System::TimeZoneInfo::ParseRegTzi(::System::Collections::Generic::List_1<::System::TimeZoneInfo::AdjustmentRule*>* adjustmentRules, int start_year, int end_year, ::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ParseRegTzi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ParseRegTzi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(adjustmentRules), ::il2cpp_utils::ExtractType(start_year), ::il2cpp_utils::ExtractType(end_year), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, adjustmentRules, start_year, end_year, buffer);
}
// Autogenerated method: System.TimeZoneInfo.GetAdjustmentRules
::ArrayW<::System::TimeZoneInfo::AdjustmentRule*> System::TimeZoneInfo::GetAdjustmentRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetAdjustmentRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAdjustmentRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::TimeZoneInfo::AdjustmentRule*>, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.System.Runtime.Serialization.ISerializable.GetObjectData
void System::TimeZoneInfo::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.TimeZoneInfo.GetSystemTimeZones
::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::TimeZoneInfo*>* System::TimeZoneInfo::GetSystemTimeZones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetSystemTimeZones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetSystemTimeZones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::TimeZoneInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffset
::System::TimeSpan System::TimeZoneInfo::GetUtcOffset(::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetUtcOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUtcOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method, dateTime);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffset
::System::TimeSpan System::TimeZoneInfo::GetUtcOffset(::System::DateTime dateTime, ByRef<bool> isDST, bool forOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetUtcOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUtcOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractType(forOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method, dateTime, byref(isDST), forOffset);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffsetHelper
::System::TimeSpan System::TimeZoneInfo::GetUtcOffsetHelper(::System::DateTime dateTime, ::System::TimeZoneInfo* tz, ByRef<bool> isDST, bool forOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetUtcOffsetHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetUtcOffsetHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(tz), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractType(forOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, tz, byref(isDST), forOffset);
}
// Autogenerated method: System.TimeZoneInfo.HasSameRules
bool System::TimeZoneInfo::HasSameRules(::System::TimeZoneInfo* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::HasSameRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasSameRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.TimeZoneInfo.IsAmbiguousTime
bool System::TimeZoneInfo::IsAmbiguousTime(::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::IsAmbiguousTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAmbiguousTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dateTime);
}
// Autogenerated method: System.TimeZoneInfo.IsAmbiguousLocalDstFromUtc
bool System::TimeZoneInfo::IsAmbiguousLocalDstFromUtc(::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::IsAmbiguousLocalDstFromUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAmbiguousLocalDstFromUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dateTime);
}
// Autogenerated method: System.TimeZoneInfo.IsInDST
bool System::TimeZoneInfo::IsInDST(::System::TimeZoneInfo::AdjustmentRule* rule, ::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::IsInDST");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInDST", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rule), ::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rule, dateTime);
}
// Autogenerated method: System.TimeZoneInfo.IsInDSTForYear
bool System::TimeZoneInfo::IsInDSTForYear(::System::TimeZoneInfo::AdjustmentRule* rule, ::System::DateTime dateTime, int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::IsInDSTForYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInDSTForYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rule), ::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(year)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rule, dateTime, year);
}
// Autogenerated method: System.TimeZoneInfo.IsInvalidTime
bool System::TimeZoneInfo::IsInvalidTime(::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::IsInvalidTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInvalidTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dateTime);
}
// Autogenerated method: System.TimeZoneInfo.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::TimeZoneInfo::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.TimeZoneInfo.Validate
void System::TimeZoneInfo::Validate(::StringW id, ::System::TimeSpan baseUtcOffset, ::ArrayW<::System::TimeZoneInfo::AdjustmentRule*> adjustmentRules) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(baseUtcOffset), ::il2cpp_utils::ExtractType(adjustmentRules)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id, baseUtcOffset, adjustmentRules);
}
// Autogenerated method: System.TimeZoneInfo.GetApplicableRule
::System::TimeZoneInfo::AdjustmentRule* System::TimeZoneInfo::GetApplicableRule(::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetApplicableRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicableRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::AdjustmentRule*, false>(this, ___internal__method, dateTime);
}
// Autogenerated method: System.TimeZoneInfo.TryGetTransitionOffset
bool System::TimeZoneInfo::TryGetTransitionOffset(::System::DateTime dateTime, ByRef<::System::TimeSpan> offset, ByRef<bool> isDst, bool forOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TryGetTransitionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTransitionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractType(forOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dateTime, byref(offset), byref(isDst), forOffset);
}
// Autogenerated method: System.TimeZoneInfo.TransitionPoint
::System::DateTime System::TimeZoneInfo::TransitionPoint(::System::TimeZoneInfo::TransitionTime transition, int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TransitionPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transition), ::il2cpp_utils::ExtractType(year)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transition, year);
}
// Autogenerated method: System.TimeZoneInfo.ValidateRules
::ArrayW<::System::TimeZoneInfo::AdjustmentRule*> System::TimeZoneInfo::ValidateRules(::System::Collections::Generic::List_1<::System::TimeZoneInfo::AdjustmentRule*>* adjustmentRules) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ValidateRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ValidateRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(adjustmentRules)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::TimeZoneInfo::AdjustmentRule*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, adjustmentRules);
}
// Autogenerated method: System.TimeZoneInfo.BuildFromStream
::System::TimeZoneInfo* System::TimeZoneInfo::BuildFromStream(::StringW id, ::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::BuildFromStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "BuildFromStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id, stream);
}
// Autogenerated method: System.TimeZoneInfo.ValidTZFile
bool System::TimeZoneInfo::ValidTZFile(::ArrayW<uint8_t> buffer, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ValidTZFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ValidTZFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, length);
}
// Autogenerated method: System.TimeZoneInfo.SwapInt32
int System::TimeZoneInfo::SwapInt32(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::SwapInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "SwapInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: System.TimeZoneInfo.ReadBigEndianInt32
int System::TimeZoneInfo::ReadBigEndianInt32(::ArrayW<uint8_t> buffer, int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ReadBigEndianInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ReadBigEndianInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, start);
}
// Autogenerated method: System.TimeZoneInfo.ParseTZBuffer
::System::TimeZoneInfo* System::TimeZoneInfo::ParseTZBuffer(::StringW id, ::ArrayW<uint8_t> buffer, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ParseTZBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ParseTZBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id, buffer, length);
}
// Autogenerated method: System.TimeZoneInfo.ParseAbbreviations
::System::Collections::Generic::Dictionary_2<int, ::StringW>* System::TimeZoneInfo::ParseAbbreviations(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ParseAbbreviations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ParseAbbreviations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<int, ::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, index, count);
}
// Autogenerated method: System.TimeZoneInfo.ParseTimesTypes
::System::Collections::Generic::Dictionary_2<int, ::System::TimeType*>* System::TimeZoneInfo::ParseTimesTypes(::ArrayW<uint8_t> buffer, int index, int count, ::System::Collections::Generic::Dictionary_2<int, ::StringW>* abbreviations) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ParseTimesTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ParseTimesTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(abbreviations)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<int, ::System::TimeType*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, index, count, abbreviations);
}
// Autogenerated method: System.TimeZoneInfo.ParseTransitions
::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::System::DateTime, ::System::TimeType*>>* System::TimeZoneInfo::ParseTransitions(::ArrayW<uint8_t> buffer, int index, int count, ::System::Collections::Generic::Dictionary_2<int, ::System::TimeType*>* time_types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ParseTransitions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ParseTransitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(time_types)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Collections::Generic::KeyValuePair_2<::System::DateTime, ::System::TimeType*>>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, index, count, time_types);
}
// Autogenerated method: System.TimeZoneInfo.DateTimeFromUnixTime
::System::DateTime System::TimeZoneInfo::DateTimeFromUnixTime(int64_t unix_time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::DateTimeFromUnixTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "DateTimeFromUnixTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unix_time)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unix_time);
}
// Autogenerated method: System.TimeZoneInfo.GetLocalUtcOffset
::System::TimeSpan System::TimeZoneInfo::GetLocalUtcOffset(::System::DateTime dateTime, ::System::TimeZoneInfoOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetLocalUtcOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetLocalUtcOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime, flags);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffset
::System::TimeSpan System::TimeZoneInfo::GetUtcOffset(::System::DateTime dateTime, ::System::TimeZoneInfoOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetUtcOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUtcOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method, dateTime, flags);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffsetFromUtc
::System::TimeSpan System::TimeZoneInfo::GetUtcOffsetFromUtc(::System::DateTime time, ::System::TimeZoneInfo* zone, ByRef<bool> isDaylightSavings, ByRef<bool> isAmbiguousLocalDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetUtcOffsetFromUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetUtcOffsetFromUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(zone), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, zone, byref(isDaylightSavings), byref(isAmbiguousLocalDst));
}
// Autogenerated method: System.TimeZoneInfo.Equals
bool System::TimeZoneInfo::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.TimeZoneInfo.GetHashCode
int System::TimeZoneInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.ToString
::StringW System::TimeZoneInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeZoneInfo/System.AdjustmentRule
#include "System/TimeZoneInfo_AdjustmentRule.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.DateTime m_dateStart
[[deprecated("Use field access instead!")]] ::System::DateTime& System::TimeZoneInfo::AdjustmentRule::dyn_m_dateStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::dyn_m_dateStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dateStart"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime m_dateEnd
[[deprecated("Use field access instead!")]] ::System::DateTime& System::TimeZoneInfo::AdjustmentRule::dyn_m_dateEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::dyn_m_dateEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dateEnd"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TimeSpan m_daylightDelta
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::TimeZoneInfo::AdjustmentRule::dyn_m_daylightDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::dyn_m_daylightDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_daylightDelta"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TimeZoneInfo/System.TransitionTime m_daylightTransitionStart
[[deprecated("Use field access instead!")]] ::System::TimeZoneInfo::TransitionTime& System::TimeZoneInfo::AdjustmentRule::dyn_m_daylightTransitionStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::dyn_m_daylightTransitionStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_daylightTransitionStart"))->offset;
  return *reinterpret_cast<::System::TimeZoneInfo::TransitionTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TimeZoneInfo/System.TransitionTime m_daylightTransitionEnd
[[deprecated("Use field access instead!")]] ::System::TimeZoneInfo::TransitionTime& System::TimeZoneInfo::AdjustmentRule::dyn_m_daylightTransitionEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::dyn_m_daylightTransitionEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_daylightTransitionEnd"))->offset;
  return *reinterpret_cast<::System::TimeZoneInfo::TransitionTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TimeSpan m_baseUtcOffsetDelta
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::TimeZoneInfo::AdjustmentRule::dyn_m_baseUtcOffsetDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::dyn_m_baseUtcOffsetDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_baseUtcOffsetDelta"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.TimeZoneInfo/System.AdjustmentRule.get_DateStart
::System::DateTime System::TimeZoneInfo::AdjustmentRule::get_DateStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::get_DateStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/System.AdjustmentRule.get_DateEnd
::System::DateTime System::TimeZoneInfo::AdjustmentRule::get_DateEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::get_DateEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/System.AdjustmentRule.get_DaylightDelta
::System::TimeSpan System::TimeZoneInfo::AdjustmentRule::get_DaylightDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::get_DaylightDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DaylightDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/System.AdjustmentRule.get_DaylightTransitionStart
::System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::AdjustmentRule::get_DaylightTransitionStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::get_DaylightTransitionStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DaylightTransitionStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::TransitionTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/System.AdjustmentRule.get_DaylightTransitionEnd
::System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::AdjustmentRule::get_DaylightTransitionEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::get_DaylightTransitionEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DaylightTransitionEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::TransitionTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/System.AdjustmentRule.Equals
bool System::TimeZoneInfo::AdjustmentRule::Equals(::System::TimeZoneInfo::AdjustmentRule* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.TimeZoneInfo/System.AdjustmentRule.CreateAdjustmentRule
::System::TimeZoneInfo::AdjustmentRule* System::TimeZoneInfo::AdjustmentRule::CreateAdjustmentRule(::System::DateTime dateStart, ::System::DateTime dateEnd, ::System::TimeSpan daylightDelta, ::System::TimeZoneInfo::TransitionTime daylightTransitionStart, ::System::TimeZoneInfo::TransitionTime daylightTransitionEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::CreateAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/AdjustmentRule", "CreateAdjustmentRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateStart), ::il2cpp_utils::ExtractType(dateEnd), ::il2cpp_utils::ExtractType(daylightDelta), ::il2cpp_utils::ExtractType(daylightTransitionStart), ::il2cpp_utils::ExtractType(daylightTransitionEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::AdjustmentRule*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd);
}
// Autogenerated method: System.TimeZoneInfo/System.AdjustmentRule.CreateAdjustmentRule
::System::TimeZoneInfo::AdjustmentRule* System::TimeZoneInfo::AdjustmentRule::CreateAdjustmentRule(::System::DateTime dateStart, ::System::DateTime dateEnd, ::System::TimeSpan daylightDelta, ::System::TimeZoneInfo::TransitionTime daylightTransitionStart, ::System::TimeZoneInfo::TransitionTime daylightTransitionEnd, ::System::TimeSpan baseUtcOffsetDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::CreateAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/AdjustmentRule", "CreateAdjustmentRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateStart), ::il2cpp_utils::ExtractType(dateEnd), ::il2cpp_utils::ExtractType(daylightDelta), ::il2cpp_utils::ExtractType(daylightTransitionStart), ::il2cpp_utils::ExtractType(daylightTransitionEnd), ::il2cpp_utils::ExtractType(baseUtcOffsetDelta)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::AdjustmentRule*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd, baseUtcOffsetDelta);
}
// Autogenerated method: System.TimeZoneInfo/System.AdjustmentRule.ValidateAdjustmentRule
void System::TimeZoneInfo::AdjustmentRule::ValidateAdjustmentRule(::System::DateTime dateStart, ::System::DateTime dateEnd, ::System::TimeSpan daylightDelta, ::System::TimeZoneInfo::TransitionTime daylightTransitionStart, ::System::TimeZoneInfo::TransitionTime daylightTransitionEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::ValidateAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/AdjustmentRule", "ValidateAdjustmentRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateStart), ::il2cpp_utils::ExtractType(dateEnd), ::il2cpp_utils::ExtractType(daylightDelta), ::il2cpp_utils::ExtractType(daylightTransitionStart), ::il2cpp_utils::ExtractType(daylightTransitionEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd);
}
// Autogenerated method: System.TimeZoneInfo/System.AdjustmentRule.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::TimeZoneInfo::AdjustmentRule::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.TimeZoneInfo/System.AdjustmentRule.System.Runtime.Serialization.ISerializable.GetObjectData
void System::TimeZoneInfo::AdjustmentRule::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.TimeZoneInfo/System.AdjustmentRule.GetHashCode
int System::TimeZoneInfo::AdjustmentRule::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::AdjustmentRule::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeZoneInfo/System.TransitionTime
#include "System/TimeZoneInfo_TransitionTime.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.DateTime m_timeOfDay
[[deprecated("Use field access instead!")]] ::System::DateTime& System::TimeZoneInfo::TransitionTime::dyn_m_timeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::dyn_m_timeOfDay");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timeOfDay"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_month
[[deprecated("Use field access instead!")]] uint8_t& System::TimeZoneInfo::TransitionTime::dyn_m_month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::dyn_m_month");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_month"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_week
[[deprecated("Use field access instead!")]] uint8_t& System::TimeZoneInfo::TransitionTime::dyn_m_week() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::dyn_m_week");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_week"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_day
[[deprecated("Use field access instead!")]] uint8_t& System::TimeZoneInfo::TransitionTime::dyn_m_day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::dyn_m_day");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_day"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DayOfWeek m_dayOfWeek
[[deprecated("Use field access instead!")]] ::System::DayOfWeek& System::TimeZoneInfo::TransitionTime::dyn_m_dayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::dyn_m_dayOfWeek");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dayOfWeek"))->offset;
  return *reinterpret_cast<::System::DayOfWeek*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isFixedDateRule
[[deprecated("Use field access instead!")]] bool& System::TimeZoneInfo::TransitionTime::dyn_m_isFixedDateRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::dyn_m_isFixedDateRule");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isFixedDateRule"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime.get_TimeOfDay
::System::DateTime System::TimeZoneInfo::TransitionTime::get_TimeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::get_TimeOfDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_TimeOfDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime.get_Month
int System::TimeZoneInfo::TransitionTime::get_Month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::get_Month");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Month", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime.get_Week
int System::TimeZoneInfo::TransitionTime::get_Week() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::get_Week");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Week", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime.get_Day
int System::TimeZoneInfo::TransitionTime::get_Day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::get_Day");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Day", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime.get_DayOfWeek
::System::DayOfWeek System::TimeZoneInfo::TransitionTime::get_DayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::get_DayOfWeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DayOfWeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DayOfWeek, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime.get_IsFixedDateRule
bool System::TimeZoneInfo::TransitionTime::get_IsFixedDateRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::get_IsFixedDateRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsFixedDateRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime..ctor
System::TimeZoneInfo::TransitionTime::TransitionTime(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime.Equals
bool System::TimeZoneInfo::TransitionTime::Equals(::System::TimeZoneInfo::TransitionTime other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime.CreateFixedDateRule
::System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::TransitionTime::CreateFixedDateRule(::System::DateTime timeOfDay, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::CreateFixedDateRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", "CreateFixedDateRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeOfDay), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::TransitionTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeOfDay, month, day);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime.CreateFloatingDateRule
::System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::TransitionTime::CreateFloatingDateRule(::System::DateTime timeOfDay, int month, int week, ::System::DayOfWeek dayOfWeek) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::CreateFloatingDateRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", "CreateFloatingDateRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeOfDay), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(week), ::il2cpp_utils::ExtractType(dayOfWeek)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::TransitionTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeOfDay, month, week, dayOfWeek);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime.CreateTransitionTime
::System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::TransitionTime::CreateTransitionTime(::System::DateTime timeOfDay, int month, int week, int day, ::System::DayOfWeek dayOfWeek, bool isFixedDateRule) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::CreateTransitionTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", "CreateTransitionTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeOfDay), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(week), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(dayOfWeek), ::il2cpp_utils::ExtractType(isFixedDateRule)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeZoneInfo::TransitionTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeOfDay, month, week, day, dayOfWeek, isFixedDateRule);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime.ValidateTransitionTime
void System::TimeZoneInfo::TransitionTime::ValidateTransitionTime(::System::DateTime timeOfDay, int month, int week, int day, ::System::DayOfWeek dayOfWeek) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::ValidateTransitionTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", "ValidateTransitionTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeOfDay), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(week), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(dayOfWeek)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeOfDay, month, week, day, dayOfWeek);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::TimeZoneInfo::TransitionTime::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime.System.Runtime.Serialization.ISerializable.GetObjectData
void System::TimeZoneInfo::TransitionTime::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime.Equals
bool System::TimeZoneInfo::TransitionTime::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime.GetHashCode
int System::TimeZoneInfo::TransitionTime::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/System.TransitionTime.op_Inequality
bool System::operator !=(const ::System::TimeZoneInfo::TransitionTime& t1, const ::System::TimeZoneInfo::TransitionTime& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::TransitionTime::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TimeZoneInfo/System.<>c
#include "System/TimeZoneInfo_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: System.TimeZoneInfo/System.AdjustmentRule
#include "System/TimeZoneInfo_AdjustmentRule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.TimeZoneInfo/System.<>c <>9
::System::TimeZoneInfo::$$c* System::TimeZoneInfo::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::TimeZoneInfo::$$c*>("System", "TimeZoneInfo/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.TimeZoneInfo/System.<>c <>9
void System::TimeZoneInfo::$$c::_set_$$9(::System::TimeZoneInfo::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System", "TimeZoneInfo/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<System.TimeZoneInfo/System.AdjustmentRule> <>9__19_0
::System::Comparison_1<::System::TimeZoneInfo::AdjustmentRule*>* System::TimeZoneInfo::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::System::TimeZoneInfo::AdjustmentRule*>*>("System", "TimeZoneInfo/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<System.TimeZoneInfo/System.AdjustmentRule> <>9__19_0
void System::TimeZoneInfo::$$c::_set_$$9__19_0(::System::Comparison_1<::System::TimeZoneInfo::AdjustmentRule*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System", "TimeZoneInfo/<>c", "<>9__19_0", value)));
}
// Autogenerated method: System.TimeZoneInfo/System.<>c..cctor
void System::TimeZoneInfo::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/System.<>c.<CreateLocalUnity>b__19_0
int System::TimeZoneInfo::$$c::$CreateLocalUnity$b__19_0(::System::TimeZoneInfo::AdjustmentRule* rule1, ::System::TimeZoneInfo::AdjustmentRule* rule2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TimeZoneInfo::$$c::<CreateLocalUnity>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateLocalUnity>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rule1), ::il2cpp_utils::ExtractType(rule2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, rule1, rule2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TimeZoneNotFoundException
#include "System/TimeZoneNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MemberFilter
#include "System/Reflection/MemberFilter.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Reflection.TypeAttributes
#include "System/Reflection/TypeAttributes.hpp"
// Including type: System.Reflection.GenericParameterAttributes
#include "System/Reflection/GenericParameterAttributes.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.AssemblyName
#include "System/Reflection/AssemblyName.hpp"
// Including type: System.Func`4
#include "System/Func_4.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.MemberTypes
#include "System/Reflection/MemberTypes.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Reflection.MemberFilter FilterAttribute
::System::Reflection::MemberFilter* System::Type::_get_FilterAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_get_FilterAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MemberFilter*>("System", "Type", "FilterAttribute"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Reflection.MemberFilter FilterAttribute
void System::Type::_set_FilterAttribute(::System::Reflection::MemberFilter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_set_FilterAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "FilterAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Reflection.MemberFilter FilterName
::System::Reflection::MemberFilter* System::Type::_get_FilterName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_get_FilterName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MemberFilter*>("System", "Type", "FilterName"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Reflection.MemberFilter FilterName
void System::Type::_set_FilterName(::System::Reflection::MemberFilter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_set_FilterName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "FilterName", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Reflection.MemberFilter FilterNameIgnoreCase
::System::Reflection::MemberFilter* System::Type::_get_FilterNameIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_get_FilterNameIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MemberFilter*>("System", "Type", "FilterNameIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Reflection.MemberFilter FilterNameIgnoreCase
void System::Type::_set_FilterNameIgnoreCase(::System::Reflection::MemberFilter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_set_FilterNameIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "FilterNameIgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object Missing
::Il2CppObject* System::Type::_get_Missing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_get_Missing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System", "Type", "Missing"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object Missing
void System::Type::_set_Missing(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_set_Missing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "Missing", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char Delimiter
::Il2CppChar System::Type::_get_Delimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_get_Delimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System", "Type", "Delimiter"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char Delimiter
void System::Type::_set_Delimiter(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_set_Delimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "Delimiter", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Type[] EmptyTypes
::ArrayW<::System::Type*> System::Type::_get_EmptyTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_get_EmptyTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("System", "Type", "EmptyTypes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Type[] EmptyTypes
void System::Type::_set_EmptyTypes(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_set_EmptyTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "EmptyTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.Binder defaultBinder
::System::Reflection::Binder* System::Type::_get_defaultBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_get_defaultBinder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::Binder*>("System", "Type", "defaultBinder"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.Binder defaultBinder
void System::Type::_set_defaultBinder(::System::Reflection::Binder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_set_defaultBinder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "defaultBinder", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags DefaultLookup
::System::Reflection::BindingFlags System::Type::_get_DefaultLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_get_DefaultLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::BindingFlags>("System", "Type", "DefaultLookup"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags DefaultLookup
void System::Type::_set_DefaultLookup(::System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_set_DefaultLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "DefaultLookup", value));
}
// Autogenerated static field getter
// Get static field: static System.Reflection.BindingFlags DeclaredOnlyLookup
::System::Reflection::BindingFlags System::Type::_get_DeclaredOnlyLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_get_DeclaredOnlyLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::BindingFlags>("System", "Type", "DeclaredOnlyLookup"));
}
// Autogenerated static field setter
// Set static field: static System.Reflection.BindingFlags DeclaredOnlyLookup
void System::Type::_set_DeclaredOnlyLookup(::System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::_set_DeclaredOnlyLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "DeclaredOnlyLookup", value));
}
// Autogenerated instance field getter
// Get instance field: System.RuntimeTypeHandle _impl
[[deprecated("Use field access instead!")]] ::System::RuntimeTypeHandle& System::Type::dyn__impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::dyn__impl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_impl"))->offset;
  return *reinterpret_cast<::System::RuntimeTypeHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Type.get_DeclaringMethod
::System::Reflection::MethodBase* System::Type::get_DeclaringMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_DeclaringMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_GUID
::System::Guid System::Type::get_GUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_GUID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GUID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_DefaultBinder
::System::Reflection::Binder* System::Type::get_DefaultBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_DefaultBinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", "get_DefaultBinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Binder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Type.get_Assembly
::System::Reflection::Assembly* System::Type::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_Assembly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Assembly*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_TypeHandle
::System::RuntimeTypeHandle System::Type::get_TypeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_TypeHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeTypeHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_FullName
::StringW System::Type::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_FullName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_Namespace
::StringW System::Type::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_Namespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_AssemblyQualifiedName
::StringW System::Type::get_AssemblyQualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_AssemblyQualifiedName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssemblyQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_BaseType
::System::Type* System::Type::get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_BaseType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsNested
bool System::Type::get_IsNested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsNested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_Attributes
::System::Reflection::TypeAttributes System::Type::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::TypeAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_GenericParameterAttributes
::System::Reflection::GenericParameterAttributes System::Type::get_GenericParameterAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_GenericParameterAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GenericParameterAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::GenericParameterAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsVisible
bool System::Type::get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsNotPublic
bool System::Type::get_IsNotPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsNotPublic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNotPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsPublic
bool System::Type::get_IsPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsPublic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsNestedPublic
bool System::Type::get_IsNestedPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsNestedPublic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNestedPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsNestedAssembly
bool System::Type::get_IsNestedAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsNestedAssembly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNestedAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsExplicitLayout
bool System::Type::get_IsExplicitLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsExplicitLayout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsExplicitLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsClass
bool System::Type::get_IsClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsClass");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsInterface
bool System::Type::get_IsInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsInterface");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsValueType
bool System::Type::get_IsValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsAbstract
bool System::Type::get_IsAbstract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsAbstract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsSealed
bool System::Type::get_IsSealed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsSealed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSealed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsEnum
bool System::Type::get_IsEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsEnum");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsSerializable
bool System::Type::get_IsSerializable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsSerializable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsArray
bool System::Type::get_IsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsSzArray
bool System::Type::get_IsSzArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsSzArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSzArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsGenericType
bool System::Type::get_IsGenericType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsGenericType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsGenericTypeDefinition
bool System::Type::get_IsGenericTypeDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsGenericTypeDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericTypeDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsGenericParameter
bool System::Type::get_IsGenericParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsGenericParameter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_GenericParameterPosition
int System::Type::get_GenericParameterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_GenericParameterPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GenericParameterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_ContainsGenericParameters
bool System::Type::get_ContainsGenericParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_ContainsGenericParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsByRef
bool System::Type::get_IsByRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsByRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsByRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsPointer
bool System::Type::get_IsPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsPointer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsPrimitive
bool System::Type::get_IsPrimitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsPrimitive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPrimitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsCOMObject
bool System::Type::get_IsCOMObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsCOMObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCOMObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_HasElementType
bool System::Type::get_HasElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_HasElementType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsContextful
bool System::Type::get_IsContextful() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsContextful");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsContextful", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsMarshalByRef
bool System::Type::get_IsMarshalByRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_IsMarshalByRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMarshalByRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_UnderlyingSystemType
::System::Type* System::Type::get_UnderlyingSystemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_UnderlyingSystemType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingSystemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type..cctor
void System::Type::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Type.GetType
::System::Type* System::Type::GetType(::StringW typeName, ::System::Func_2<::System::Reflection::AssemblyName*, ::System::Reflection::Assembly*>* assemblyResolver, ::System::Func_4<::System::Reflection::Assembly*, ::StringW, bool, ::System::Type*>* typeResolver, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", "GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName), ::il2cpp_utils::ExtractType(assemblyResolver), ::il2cpp_utils::ExtractType(typeResolver), ::il2cpp_utils::ExtractType(throwOnError)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeName, assemblyResolver, typeResolver, throwOnError);
}
// Autogenerated method: System.Type.MakePointerType
::System::Type* System::Type::MakePointerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::MakePointerType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakePointerType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.MakeByRefType
::System::Type* System::Type::MakeByRefType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::MakeByRefType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeByRefType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.MakeArrayType
::System::Type* System::Type::MakeArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::MakeArrayType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeArrayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.MakeArrayType
::System::Type* System::Type::MakeArrayType(int rank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::MakeArrayType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeArrayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rank)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, rank);
}
// Autogenerated method: System.Type.GetTypeFromCLSID
::System::Type* System::Type::GetTypeFromCLSID(::System::Guid clsid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetTypeFromCLSID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", "GetTypeFromCLSID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clsid)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clsid);
}
// Autogenerated method: System.Type.GetTypeCode
::System::TypeCode System::Type::GetTypeCode(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetTypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Type.GetTypeCodeImpl
::System::TypeCode System::Type::GetTypeCodeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetTypeCodeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeCodeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.CreateBinder
void System::Type::CreateBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::CreateBinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", "CreateBinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Type.InvokeMember
::Il2CppObject* System::Type::InvokeMember(::StringW name, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::Il2CppObject* target, ::ArrayW<::Il2CppObject*> args, ::ArrayW<::System::Reflection::ParameterModifier> modifiers, ::System::Globalization::CultureInfo* culture, ::ArrayW<::StringW> namedParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::InvokeMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(modifiers), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(namedParameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, invokeAttr, binder, target, args, modifiers, culture, namedParameters);
}
// Autogenerated method: System.Type.GetTypeHandle
::System::RuntimeTypeHandle System::Type::GetTypeHandle(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetTypeHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", "GetTypeHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeTypeHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o);
}
// Autogenerated method: System.Type.GetArrayRank
int System::Type::GetArrayRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetArrayRank");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArrayRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetConstructor
::System::Reflection::ConstructorInfo* System::Type::GetConstructor(::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Reflection::CallingConventions callConvention, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetConstructor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(this, ___internal__method, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Type.GetConstructor
::System::Reflection::ConstructorInfo* System::Type::GetConstructor(::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetConstructor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(this, ___internal__method, bindingAttr, binder, types, modifiers);
}
// Autogenerated method: System.Type.GetConstructor
::System::Reflection::ConstructorInfo* System::Type::GetConstructor(::ArrayW<::System::Type*> types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetConstructor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(this, ___internal__method, types);
}
// Autogenerated method: System.Type.GetConstructorImpl
::System::Reflection::ConstructorInfo* System::Type::GetConstructorImpl(::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Reflection::CallingConventions callConvention, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetConstructorImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructorImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ConstructorInfo*, false>(this, ___internal__method, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Type.GetConstructors
::ArrayW<::System::Reflection::ConstructorInfo*> System::Type::GetConstructors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetConstructors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ConstructorInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetConstructors
::ArrayW<::System::Reflection::ConstructorInfo*> System::Type::GetConstructors(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetConstructors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ConstructorInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Type.GetMethod
::System::Reflection::MethodInfo* System::Type::GetMethod(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, name, bindingAttr, binder, types, modifiers);
}
// Autogenerated method: System.Type.GetMethod
::System::Reflection::MethodInfo* System::Type::GetMethod(::StringW name, ::ArrayW<::System::Type*> types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(types)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, name, types);
}
// Autogenerated method: System.Type.GetMethod
::System::Reflection::MethodInfo* System::Type::GetMethod(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Type.GetMethod
::System::Reflection::MethodInfo* System::Type::GetMethod(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Type.GetMethodImpl
::System::Reflection::MethodInfo* System::Type::GetMethodImpl(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Reflection::CallingConventions callConvention, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetMethodImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, name, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Type.GetMethods
::ArrayW<::System::Reflection::MethodInfo*> System::Type::GetMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetMethods");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::MethodInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetMethods
::ArrayW<::System::Reflection::MethodInfo*> System::Type::GetMethods(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetMethods");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::MethodInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Type.GetField
::System::Reflection::FieldInfo* System::Type::GetField(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetField");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::FieldInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Type.GetField
::System::Reflection::FieldInfo* System::Type::GetField(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetField");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::FieldInfo*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Type.GetFields
::ArrayW<::System::Reflection::FieldInfo*> System::Type::GetFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetFields");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::FieldInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetFields
::ArrayW<::System::Reflection::FieldInfo*> System::Type::GetFields(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetFields");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::FieldInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Type.GetInterfaces
::ArrayW<::System::Type*> System::Type::GetInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetEvent
::System::Reflection::EventInfo* System::Type::GetEvent(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::EventInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Type.GetProperty
::System::Reflection::PropertyInfo* System::Type::GetProperty(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Type* returnType, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetProperty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(returnType), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyInfo*, false>(this, ___internal__method, name, bindingAttr, binder, returnType, types, modifiers);
}
// Autogenerated method: System.Type.GetProperty
::System::Reflection::PropertyInfo* System::Type::GetProperty(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetProperty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Type.GetProperty
::System::Reflection::PropertyInfo* System::Type::GetProperty(::StringW name, ::System::Type* returnType, ::ArrayW<::System::Type*> types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetProperty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(returnType), ::il2cpp_utils::ExtractType(types)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyInfo*, false>(this, ___internal__method, name, returnType, types);
}
// Autogenerated method: System.Type.GetProperty
::System::Reflection::PropertyInfo* System::Type::GetProperty(::StringW name, ::System::Type* returnType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetProperty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(returnType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyInfo*, false>(this, ___internal__method, name, returnType);
}
// Autogenerated method: System.Type.GetProperty
::System::Reflection::PropertyInfo* System::Type::GetProperty(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetProperty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyInfo*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Type.GetPropertyImpl
::System::Reflection::PropertyInfo* System::Type::GetPropertyImpl(::StringW name, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::System::Type* returnType, ::ArrayW<::System::Type*> types, ::ArrayW<::System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetPropertyImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(returnType), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyInfo*, false>(this, ___internal__method, name, bindingAttr, binder, returnType, types, modifiers);
}
// Autogenerated method: System.Type.GetProperties
::ArrayW<::System::Reflection::PropertyInfo*> System::Type::GetProperties(::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::PropertyInfo*>, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Type.GetNestedType
::System::Type* System::Type::GetNestedType(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetNestedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Type.GetMember
::ArrayW<::System::Reflection::MemberInfo*> System::Type::GetMember(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::MemberInfo*>, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Type.GetMember
::ArrayW<::System::Reflection::MemberInfo*> System::Type::GetMember(::StringW name, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::MemberInfo*>, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Type.GetMember
::ArrayW<::System::Reflection::MemberInfo*> System::Type::GetMember(::StringW name, ::System::Reflection::MemberTypes type, ::System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(bindingAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::MemberInfo*>, false>(this, ___internal__method, name, type, bindingAttr);
}
// Autogenerated method: System.Type.GetGenericParameterConstraints
::ArrayW<::System::Type*> System::Type::GetGenericParameterConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetGenericParameterConstraints");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericParameterConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsValueTypeImpl
bool System::Type::IsValueTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::IsValueTypeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValueTypeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetAttributeFlagsImpl
::System::Reflection::TypeAttributes System::Type::GetAttributeFlagsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetAttributeFlagsImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeFlagsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::TypeAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsArrayImpl
bool System::Type::IsArrayImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::IsArrayImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsByRefImpl
bool System::Type::IsByRefImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::IsByRefImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsByRefImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsPointerImpl
bool System::Type::IsPointerImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::IsPointerImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointerImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsPrimitiveImpl
bool System::Type::IsPrimitiveImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::IsPrimitiveImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrimitiveImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsCOMObjectImpl
bool System::Type::IsCOMObjectImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::IsCOMObjectImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCOMObjectImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.MakeGenericType
::System::Type* System::Type::MakeGenericType(::ArrayW<::System::Type*> typeArguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::MakeGenericType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeGenericType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeArguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, typeArguments);
}
// Autogenerated method: System.Type.IsContextfulImpl
bool System::Type::IsContextfulImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::IsContextfulImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsContextfulImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsMarshalByRefImpl
bool System::Type::IsMarshalByRefImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::IsMarshalByRefImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMarshalByRefImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetElementType
::System::Type* System::Type::GetElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetElementType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetGenericArguments
::ArrayW<::System::Type*> System::Type::GetGenericArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetGenericArguments");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetGenericTypeDefinition
::System::Type* System::Type::GetGenericTypeDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetGenericTypeDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericTypeDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.HasElementTypeImpl
bool System::Type::HasElementTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::HasElementTypeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasElementTypeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetRootElementType
::System::Type* System::Type::GetRootElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetRootElementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetEnumNames
::ArrayW<::StringW> System::Type::GetEnumNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetEnumNames");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetEnumValues
::System::Array* System::Type::GetEnumValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetEnumValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetEnumRawConstantValues
::System::Array* System::Type::GetEnumRawConstantValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetEnumRawConstantValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumRawConstantValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetEnumData
void System::Type::GetEnumData(ByRef<::ArrayW<::StringW>> enumNames, ByRef<::System::Array*> enumValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetEnumData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::StringW>&>(), ::il2cpp_utils::ExtractIndependentType<::System::Array*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(enumNames), byref(enumValues));
}
// Autogenerated method: System.Type.GetEnumUnderlyingType
::System::Type* System::Type::GetEnumUnderlyingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetEnumUnderlyingType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumUnderlyingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsEnumDefined
bool System::Type::IsEnumDefined(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::IsEnumDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnumDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Type.GetEnumName
::StringW System::Type::GetEnumName(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetEnumName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Type.BinarySearch
int System::Type::BinarySearch(::System::Array* array, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::BinarySearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", "BinarySearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, value);
}
// Autogenerated method: System.Type.IsIntegerType
bool System::Type::IsIntegerType(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::IsIntegerType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", "IsIntegerType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: System.Type.IsSubclassOf
bool System::Type::IsSubclassOf(::System::Type* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::IsSubclassOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSubclassOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Type.IsInstanceOfType
bool System::Type::IsInstanceOfType(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::IsInstanceOfType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInstanceOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Type.IsAssignableFrom
bool System::Type::IsAssignableFrom(::System::Type* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::IsAssignableFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAssignableFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Type.IsEquivalentTo
bool System::Type::IsEquivalentTo(::System::Type* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::IsEquivalentTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEquivalentTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Type.ImplementInterface
bool System::Type::ImplementInterface(::System::Type* ifaceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::ImplementInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplementInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ifaceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ifaceType);
}
// Autogenerated method: System.Type.FormatTypeName
::StringW System::Type::FormatTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::FormatTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.FormatTypeName
::StringW System::Type::FormatTypeName(bool serialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::FormatTypeName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serialization)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, serialization);
}
// Autogenerated method: System.Type.Equals
bool System::Type::Equals(::System::Type* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Type.GetType
::System::Type* System::Type::GetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.internal_from_name
::System::Type* System::Type::internal_from_name(::StringW name, bool throwOnError, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::internal_from_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", "internal_from_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(throwOnError), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, throwOnError, ignoreCase);
}
// Autogenerated method: System.Type.GetType
::System::Type* System::Type::GetType(::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", "GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeName);
}
// Autogenerated method: System.Type.GetType
::System::Type* System::Type::GetType(::StringW typeName, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", "GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName), ::il2cpp_utils::ExtractType(throwOnError)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeName, throwOnError);
}
// Autogenerated method: System.Type.GetType
::System::Type* System::Type::GetType(::StringW typeName, bool throwOnError, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", "GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName), ::il2cpp_utils::ExtractType(throwOnError), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeName, throwOnError, ignoreCase);
}
// Autogenerated method: System.Type.GetTypeFromHandle
::System::Type* System::Type::GetTypeFromHandle(::System::RuntimeTypeHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetTypeFromHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", "GetTypeFromHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Type.internal_from_handle
::System::Type* System::Type::internal_from_handle(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::internal_from_handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", "internal_from_handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Type.get_MemberType
::System::Reflection::MemberTypes System::Type::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_MemberType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MemberTypes, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_DeclaringType
::System::Type* System::Type::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_ReflectedType
::System::Type* System::Type::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_Module
::System::Reflection::Module* System::Type::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::get_Module");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Module*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.ToString
::StringW System::Type::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.Equals
bool System::Type::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Type.GetHashCode
int System::Type::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.op_Equality
bool System::operator ==(::System::Type* left, ::System::Type& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Type.op_Inequality
bool System::operator !=(::System::Type* left, ::System::Type& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Type::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Type", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TypedReference
#include "System/TypedReference.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.RuntimeTypeHandle type
[[deprecated("Use field access instead!")]] ::System::RuntimeTypeHandle& System::TypedReference::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypedReference::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::RuntimeTypeHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Value
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::TypedReference::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypedReference::dyn_Value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Type
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::TypedReference::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypedReference::dyn_Type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.TypedReference.get_IsNull
bool System::TypedReference::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypedReference::get_IsNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.TypedReference.MakeTypedReference
::System::TypedReference System::TypedReference::MakeTypedReference(::Il2CppObject* target, ::ArrayW<::System::Reflection::FieldInfo*> flds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypedReference::MakeTypedReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TypedReference", "MakeTypedReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(flds)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypedReference, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, flds);
}
// Autogenerated method: System.TypedReference.MakeTypedReferenceInternal
::System::TypedReference System::TypedReference::MakeTypedReferenceInternal(::Il2CppObject* target, ::ArrayW<::System::Reflection::FieldInfo*> fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypedReference::MakeTypedReferenceInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TypedReference", "MakeTypedReferenceInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypedReference, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, fields);
}
// Autogenerated method: System.TypedReference.SetTypedReference
void System::TypedReference::SetTypedReference(::System::TypedReference target, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypedReference::SetTypedReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TypedReference", "SetTypedReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, value);
}
// Autogenerated method: System.TypedReference.GetHashCode
int System::TypedReference::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypedReference::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TypedReference.Equals
bool System::TypedReference::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypedReference::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TypeInitializationException
#include "System/TypeInitializationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _typeName
[[deprecated("Use field access instead!")]] ::StringW& System::TypeInitializationException::dyn__typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeInitializationException::dyn__typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.TypeInitializationException.get_TypeName
::StringW System::TypeInitializationException::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeInitializationException::get_TypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.TypeInitializationException.GetObjectData
void System::TypeInitializationException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeInitializationException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TypeLoadException
#include "System/TypeLoadException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String ClassName
[[deprecated("Use field access instead!")]] ::StringW& System::TypeLoadException::dyn_ClassName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeLoadException::dyn_ClassName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClassName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String AssemblyName
[[deprecated("Use field access instead!")]] ::StringW& System::TypeLoadException::dyn_AssemblyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeLoadException::dyn_AssemblyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssemblyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String MessageArg
[[deprecated("Use field access instead!")]] ::StringW& System::TypeLoadException::dyn_MessageArg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeLoadException::dyn_MessageArg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MessageArg"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 ResourceId
[[deprecated("Use field access instead!")]] int& System::TypeLoadException::dyn_ResourceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeLoadException::dyn_ResourceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ResourceId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.TypeLoadException.SetMessageField
void System::TypeLoadException::SetMessageField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeLoadException::SetMessageField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMessageField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.TypeLoadException.get_Message
::StringW System::TypeLoadException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeLoadException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.TypeLoadException.GetObjectData
void System::TypeLoadException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeLoadException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UInt16
#include "System/UInt16.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt16 MaxValue
uint16_t System::UInt16::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint16_t>("System", "UInt16", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt16 MaxValue
void System::UInt16::_set_MaxValue(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UInt16", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt16 MinValue
uint16_t System::UInt16::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint16_t>("System", "UInt16", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt16 MinValue
void System::UInt16::_set_MinValue(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UInt16", "MinValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 m_value
[[deprecated("Use field access instead!")]] uint16_t& System::UInt16::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.UInt16.CompareTo
int System::UInt16::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UInt16.CompareTo
int System::UInt16::CompareTo(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UInt16.Equals
bool System::UInt16::Equals(uint16_t obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.UInt16.ToString
::StringW System::UInt16::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.ToString
::StringW System::UInt16::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: System.UInt16.ToString
::StringW System::UInt16::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.UInt16.Parse
uint16_t System::UInt16::Parse(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UInt16", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.UInt16.Parse
uint16_t System::UInt16::Parse(::StringW s, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UInt16", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.UInt16.Parse
uint16_t System::UInt16::Parse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UInt16", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.UInt16.Parse
uint16_t System::UInt16::Parse(::StringW s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UInt16", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, info);
}
// Autogenerated method: System.UInt16.TryParse
bool System::UInt16::TryParse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider, ByRef<uint16_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UInt16", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<uint16_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider, byref(result));
}
// Autogenerated method: System.UInt16.TryParse
bool System::UInt16::TryParse(::StringW s, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info, ByRef<uint16_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UInt16", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<uint16_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, info, byref(result));
}
// Autogenerated method: System.UInt16.GetTypeCode
::System::TypeCode System::UInt16::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToBoolean
bool System::UInt16::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToChar
::Il2CppChar System::UInt16::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToSByte
int8_t System::UInt16::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToByte
uint8_t System::UInt16::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToInt16
int16_t System::UInt16::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToUInt16
uint16_t System::UInt16::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToInt32
int System::UInt16::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToUInt32
uint System::UInt16::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToInt64
int64_t System::UInt16::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToUInt64
uint64_t System::UInt16::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToSingle
float System::UInt16::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToDouble
double System::UInt16::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToDecimal
::System::Decimal System::UInt16::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToDateTime
::System::DateTime System::UInt16::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToType
::Il2CppObject* System::UInt16::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.UInt16.Equals
bool System::UInt16::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.UInt16.GetHashCode
int System::UInt16::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.UInt16.ToString
::StringW System::UInt16::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt16::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UInt32
#include "System/UInt32.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 MaxValue
uint System::UInt32::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System", "UInt32", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 MaxValue
void System::UInt32::_set_MaxValue(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UInt32", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 MinValue
uint System::UInt32::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System", "UInt32", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 MinValue
void System::UInt32::_set_MinValue(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UInt32", "MinValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_value
[[deprecated("Use field access instead!")]] uint& System::UInt32::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.UInt32.CompareTo
int System::UInt32::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UInt32.CompareTo
int System::UInt32::CompareTo(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UInt32.Equals
bool System::UInt32::Equals(uint obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.UInt32.ToString
::StringW System::UInt32::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.ToString
::StringW System::UInt32::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.UInt32.Parse
uint System::UInt32::Parse(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UInt32", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.UInt32.Parse
uint System::UInt32::Parse(::StringW s, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UInt32", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.UInt32.Parse
uint System::UInt32::Parse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UInt32", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.UInt32.TryParse
bool System::UInt32::TryParse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider, ByRef<uint> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UInt32", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider, byref(result));
}
// Autogenerated method: System.UInt32.GetTypeCode
::System::TypeCode System::UInt32::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToBoolean
bool System::UInt32::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToChar
::Il2CppChar System::UInt32::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToSByte
int8_t System::UInt32::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToByte
uint8_t System::UInt32::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToInt16
int16_t System::UInt32::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToUInt16
uint16_t System::UInt32::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToInt32
int System::UInt32::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToUInt32
uint System::UInt32::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToInt64
int64_t System::UInt32::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToUInt64
uint64_t System::UInt32::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToSingle
float System::UInt32::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToDouble
double System::UInt32::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToDecimal
::System::Decimal System::UInt32::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToDateTime
::System::DateTime System::UInt32::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToType
::Il2CppObject* System::UInt32::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.UInt32.Equals
bool System::UInt32::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.UInt32.GetHashCode
int System::UInt32::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.UInt32.ToString
::StringW System::UInt32::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt32::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UInt64
#include "System/UInt64.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt64 MaxValue
uint64_t System::UInt64::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "UInt64", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 MaxValue
void System::UInt64::_set_MaxValue(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UInt64", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 MinValue
uint64_t System::UInt64::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "UInt64", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 MinValue
void System::UInt64::_set_MinValue(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UInt64", "MinValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 m_value
[[deprecated("Use field access instead!")]] uint64_t& System::UInt64::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.UInt64.CompareTo
int System::UInt64::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UInt64.CompareTo
int System::UInt64::CompareTo(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UInt64.Equals
bool System::UInt64::Equals(uint64_t obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.UInt64.ToString
::StringW System::UInt64::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.ToString
::StringW System::UInt64::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: System.UInt64.ToString
::StringW System::UInt64::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.UInt64.Parse
uint64_t System::UInt64::Parse(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UInt64", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.UInt64.Parse
uint64_t System::UInt64::Parse(::StringW s, ::System::Globalization::NumberStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UInt64", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style);
}
// Autogenerated method: System.UInt64.Parse
uint64_t System::UInt64::Parse(::StringW s, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UInt64", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.UInt64.Parse
uint64_t System::UInt64::Parse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UInt64", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.UInt64.TryParse
bool System::UInt64::TryParse(::StringW s, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider, ByRef<uint64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UInt64", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, style, provider, byref(result));
}
// Autogenerated method: System.UInt64.GetTypeCode
::System::TypeCode System::UInt64::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::GetTypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToBoolean
bool System::UInt64::System_IConvertible_ToBoolean(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::System.IConvertible.ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToChar
::Il2CppChar System::UInt64::System_IConvertible_ToChar(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::System.IConvertible.ToChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToSByte
int8_t System::UInt64::System_IConvertible_ToSByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::System.IConvertible.ToSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToByte
uint8_t System::UInt64::System_IConvertible_ToByte(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::System.IConvertible.ToByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToInt16
int16_t System::UInt64::System_IConvertible_ToInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::System.IConvertible.ToInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToUInt16
uint16_t System::UInt64::System_IConvertible_ToUInt16(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::System.IConvertible.ToUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToInt32
int System::UInt64::System_IConvertible_ToInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::System.IConvertible.ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToUInt32
uint System::UInt64::System_IConvertible_ToUInt32(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::System.IConvertible.ToUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToInt64
int64_t System::UInt64::System_IConvertible_ToInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::System.IConvertible.ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToUInt64
uint64_t System::UInt64::System_IConvertible_ToUInt64(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::System.IConvertible.ToUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToSingle
float System::UInt64::System_IConvertible_ToSingle(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::System.IConvertible.ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToDouble
double System::UInt64::System_IConvertible_ToDouble(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::System.IConvertible.ToDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToDecimal
::System::Decimal System::UInt64::System_IConvertible_ToDecimal(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::System.IConvertible.ToDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToDateTime
::System::DateTime System::UInt64::System_IConvertible_ToDateTime(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::System.IConvertible.ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToType
::Il2CppObject* System::UInt64::System_IConvertible_ToType(::System::Type* type, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::System.IConvertible.ToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.UInt64.Equals
bool System::UInt64::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.UInt64.GetHashCode
int System::UInt64::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.UInt64.ToString
::StringW System::UInt64::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UInt64::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UnauthorizedAccessException
#include "System/UnauthorizedAccessException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UnhandledExceptionEventArgs
#include "System/UnhandledExceptionEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _Exception
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::UnhandledExceptionEventArgs::dyn__Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnhandledExceptionEventArgs::dyn__Exception");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Exception"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _IsTerminating
[[deprecated("Use field access instead!")]] bool& System::UnhandledExceptionEventArgs::dyn__IsTerminating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnhandledExceptionEventArgs::dyn__IsTerminating");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_IsTerminating"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.UnhandledExceptionEventArgs.get_ExceptionObject
::Il2CppObject* System::UnhandledExceptionEventArgs::get_ExceptionObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnhandledExceptionEventArgs::get_ExceptionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExceptionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.UnhandledExceptionEventArgs.get_IsTerminating
bool System::UnhandledExceptionEventArgs::get_IsTerminating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnhandledExceptionEventArgs::get_IsTerminating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsTerminating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UnhandledExceptionEventHandler
#include "System/UnhandledExceptionEventHandler.hpp"
// Including type: System.UnhandledExceptionEventArgs
#include "System/UnhandledExceptionEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UnhandledExceptionEventHandler.Invoke
void System::UnhandledExceptionEventHandler::Invoke(::Il2CppObject* sender, ::System::UnhandledExceptionEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnhandledExceptionEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.UnhandledExceptionEventHandler.BeginInvoke
::System::IAsyncResult* System::UnhandledExceptionEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::UnhandledExceptionEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnhandledExceptionEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.UnhandledExceptionEventHandler.EndInvoke
void System::UnhandledExceptionEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnhandledExceptionEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UnitySerializationHolder
#include "System/UnitySerializationHolder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Reflection.Missing
#include "System/Reflection/Missing.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.Reflection.RuntimeAssembly
#include "System/Reflection/RuntimeAssembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type[] m_instantiation
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& System::UnitySerializationHolder::dyn_m_instantiation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnitySerializationHolder::dyn_m_instantiation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_instantiation"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_elementTypes
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::UnitySerializationHolder::dyn_m_elementTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnitySerializationHolder::dyn_m_elementTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_elementTypes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_genericParameterPosition
[[deprecated("Use field access instead!")]] int& System::UnitySerializationHolder::dyn_m_genericParameterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnitySerializationHolder::dyn_m_genericParameterPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_genericParameterPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type m_declaringType
[[deprecated("Use field access instead!")]] ::System::Type*& System::UnitySerializationHolder::dyn_m_declaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnitySerializationHolder::dyn_m_declaringType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_declaringType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodBase m_declaringMethod
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodBase*& System::UnitySerializationHolder::dyn_m_declaringMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnitySerializationHolder::dyn_m_declaringMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_declaringMethod"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_data
[[deprecated("Use field access instead!")]] ::StringW& System::UnitySerializationHolder::dyn_m_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnitySerializationHolder::dyn_m_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_data"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_assemblyName
[[deprecated("Use field access instead!")]] ::StringW& System::UnitySerializationHolder::dyn_m_assemblyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnitySerializationHolder::dyn_m_assemblyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_assemblyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_unityType
[[deprecated("Use field access instead!")]] int& System::UnitySerializationHolder::dyn_m_unityType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnitySerializationHolder::dyn_m_unityType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_unityType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.UnitySerializationHolder.GetUnitySerializationInfo
void System::UnitySerializationHolder::GetUnitySerializationInfo(::System::Runtime::Serialization::SerializationInfo* info, ::System::Reflection::Missing* missing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnitySerializationHolder::GetUnitySerializationInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UnitySerializationHolder", "GetUnitySerializationInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(missing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, info, missing);
}
// Autogenerated method: System.UnitySerializationHolder.AddElementTypes
::System::RuntimeType* System::UnitySerializationHolder::AddElementTypes(::System::Runtime::Serialization::SerializationInfo* info, ::System::RuntimeType* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnitySerializationHolder::AddElementTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UnitySerializationHolder", "AddElementTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, info, type);
}
// Autogenerated method: System.UnitySerializationHolder.MakeElementTypes
::System::Type* System::UnitySerializationHolder::MakeElementTypes(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnitySerializationHolder::MakeElementTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeElementTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.UnitySerializationHolder.GetUnitySerializationInfo
void System::UnitySerializationHolder::GetUnitySerializationInfo(::System::Runtime::Serialization::SerializationInfo* info, ::System::RuntimeType* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnitySerializationHolder::GetUnitySerializationInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UnitySerializationHolder", "GetUnitySerializationInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, info, type);
}
// Autogenerated method: System.UnitySerializationHolder.GetUnitySerializationInfo
void System::UnitySerializationHolder::GetUnitySerializationInfo(::System::Runtime::Serialization::SerializationInfo* info, int unityType, ::StringW data, ::System::Reflection::RuntimeAssembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnitySerializationHolder::GetUnitySerializationInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UnitySerializationHolder", "GetUnitySerializationInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(unityType), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(assembly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, info, unityType, data, assembly);
}
// Autogenerated method: System.UnitySerializationHolder.ThrowInsufficientInformation
void System::UnitySerializationHolder::ThrowInsufficientInformation(::StringW field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnitySerializationHolder::ThrowInsufficientInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowInsufficientInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(field)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, field);
}
// Autogenerated method: System.UnitySerializationHolder.GetObjectData
void System::UnitySerializationHolder::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnitySerializationHolder::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.UnitySerializationHolder.GetRealObject
::Il2CppObject* System::UnitySerializationHolder::GetRealObject(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnitySerializationHolder::GetRealObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRealObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UnSafeCharBuffer
#include "System/UnSafeCharBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Char* m_buffer
[[deprecated("Use field access instead!")]] ::Il2CppChar*& System::UnSafeCharBuffer::dyn_m_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnSafeCharBuffer::dyn_m_buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_buffer"))->offset;
  return *reinterpret_cast<::Il2CppChar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_totalSize
[[deprecated("Use field access instead!")]] int& System::UnSafeCharBuffer::dyn_m_totalSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnSafeCharBuffer::dyn_m_totalSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_totalSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_length
[[deprecated("Use field access instead!")]] int& System::UnSafeCharBuffer::dyn_m_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnSafeCharBuffer::dyn_m_length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.UnSafeCharBuffer..ctor
System::UnSafeCharBuffer::UnSafeCharBuffer(::Il2CppChar* buffer, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnSafeCharBuffer::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, bufferSize);
}
// Autogenerated method: System.UnSafeCharBuffer.AppendString
void System::UnSafeCharBuffer::AppendString(::StringW stringToAppend) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnSafeCharBuffer::AppendString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AppendString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringToAppend)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stringToAppend);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Version/System.ParseFailureKind
#include "System/Version_ParseFailureKind.hpp"
// Including type: System.Version/System.VersionResult
#include "System/Version_VersionResult.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] SeparatorsArray
::ArrayW<::Il2CppChar> System::Version::_get_SeparatorsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::_get_SeparatorsArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System", "Version", "SeparatorsArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] SeparatorsArray
void System::Version::_set_SeparatorsArray(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::_set_SeparatorsArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Version", "SeparatorsArray", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ZERO_CHAR_VALUE
int System::Version::_get_ZERO_CHAR_VALUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::_get_ZERO_CHAR_VALUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Version", "ZERO_CHAR_VALUE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ZERO_CHAR_VALUE
void System::Version::_set_ZERO_CHAR_VALUE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::_set_ZERO_CHAR_VALUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Version", "ZERO_CHAR_VALUE", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _Major
[[deprecated("Use field access instead!")]] int& System::Version::dyn__Major() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::dyn__Major");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Major"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _Minor
[[deprecated("Use field access instead!")]] int& System::Version::dyn__Minor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::dyn__Minor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Minor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _Build
[[deprecated("Use field access instead!")]] int& System::Version::dyn__Build() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::dyn__Build");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Build"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _Revision
[[deprecated("Use field access instead!")]] int& System::Version::dyn__Revision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::dyn__Revision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Revision"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Version.get_Major
int System::Version::get_Major() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::get_Major");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Major", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.get_Minor
int System::Version::get_Minor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::get_Minor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Minor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.get_Build
int System::Version::get_Build() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::get_Build");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.get_Revision
int System::Version::get_Revision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::get_Revision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Revision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Version..cctor
void System::Version::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Version", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Version.Clone
::Il2CppObject* System::Version::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.CompareTo
int System::Version::CompareTo(::Il2CppObject* version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, version);
}
// Autogenerated method: System.Version.CompareTo
int System::Version::CompareTo(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Version.Equals
bool System::Version::Equals(::System::Version* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Version.ToString
::StringW System::Version::ToString(int fieldCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, fieldCount);
}
// Autogenerated method: System.Version.AppendPositiveNumber
void System::Version::AppendPositiveNumber(int num, ::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::AppendPositiveNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Version", "AppendPositiveNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(num), ::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, num, sb);
}
// Autogenerated method: System.Version.Parse
::System::Version* System::Version::Parse(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Version", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Version.TryParseVersion
bool System::Version::TryParseVersion(::StringW version, ByRef<::System::Version::VersionResult> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::TryParseVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Version", "TryParseVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, version, byref(result));
}
// Autogenerated method: System.Version.TryParseComponent
bool System::Version::TryParseComponent(::StringW component, ::StringW componentName, ByRef<::System::Version::VersionResult> result, ByRef<int> parsedComponent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::TryParseComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Version", "TryParseComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(componentName), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component, componentName, byref(result), byref(parsedComponent));
}
// Autogenerated method: System.Version.Equals
bool System::Version::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Version.GetHashCode
int System::Version::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.ToString
::StringW System::Version::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.op_Equality
bool System::operator ==(::System::Version* v1, ::System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Version", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(&v2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated method: System.Version.op_Inequality
bool System::operator !=(::System::Version* v1, ::System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Version", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(&v2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated method: System.Version.op_LessThan
bool System::operator <(::System::Version* v1, ::System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Version", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(&v2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated method: System.Version.op_LessThanOrEqual
bool System::operator <=(::System::Version* v1, ::System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Version", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(&v2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated method: System.Version.op_GreaterThan
bool System::operator >(::System::Version* v1, ::System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Version", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(&v2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated method: System.Version.op_GreaterThanOrEqual
bool System::operator >=(::System::Version* v1, ::System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Version", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(&v2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Version/System.ParseFailureKind
#include "System/Version_ParseFailureKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Version/System.ParseFailureKind ArgumentNullException
::System::Version::ParseFailureKind System::Version::ParseFailureKind::_get_ArgumentNullException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::ParseFailureKind::_get_ArgumentNullException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version::ParseFailureKind>("System", "Version/ParseFailureKind", "ArgumentNullException"));
}
// Autogenerated static field setter
// Set static field: static public System.Version/System.ParseFailureKind ArgumentNullException
void System::Version::ParseFailureKind::_set_ArgumentNullException(::System::Version::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::ParseFailureKind::_set_ArgumentNullException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Version/ParseFailureKind", "ArgumentNullException", value));
}
// Autogenerated static field getter
// Get static field: static public System.Version/System.ParseFailureKind ArgumentException
::System::Version::ParseFailureKind System::Version::ParseFailureKind::_get_ArgumentException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::ParseFailureKind::_get_ArgumentException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version::ParseFailureKind>("System", "Version/ParseFailureKind", "ArgumentException"));
}
// Autogenerated static field setter
// Set static field: static public System.Version/System.ParseFailureKind ArgumentException
void System::Version::ParseFailureKind::_set_ArgumentException(::System::Version::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::ParseFailureKind::_set_ArgumentException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Version/ParseFailureKind", "ArgumentException", value));
}
// Autogenerated static field getter
// Get static field: static public System.Version/System.ParseFailureKind ArgumentOutOfRangeException
::System::Version::ParseFailureKind System::Version::ParseFailureKind::_get_ArgumentOutOfRangeException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::ParseFailureKind::_get_ArgumentOutOfRangeException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version::ParseFailureKind>("System", "Version/ParseFailureKind", "ArgumentOutOfRangeException"));
}
// Autogenerated static field setter
// Set static field: static public System.Version/System.ParseFailureKind ArgumentOutOfRangeException
void System::Version::ParseFailureKind::_set_ArgumentOutOfRangeException(::System::Version::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::ParseFailureKind::_set_ArgumentOutOfRangeException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Version/ParseFailureKind", "ArgumentOutOfRangeException", value));
}
// Autogenerated static field getter
// Get static field: static public System.Version/System.ParseFailureKind FormatException
::System::Version::ParseFailureKind System::Version::ParseFailureKind::_get_FormatException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::ParseFailureKind::_get_FormatException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version::ParseFailureKind>("System", "Version/ParseFailureKind", "FormatException"));
}
// Autogenerated static field setter
// Set static field: static public System.Version/System.ParseFailureKind FormatException
void System::Version::ParseFailureKind::_set_FormatException(::System::Version::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::ParseFailureKind::_set_FormatException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Version/ParseFailureKind", "FormatException", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Version::ParseFailureKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::ParseFailureKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Version/System.VersionResult
#include "System/Version_VersionResult.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Version m_parsedVersion
[[deprecated("Use field access instead!")]] ::System::Version*& System::Version::VersionResult::dyn_m_parsedVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::VersionResult::dyn_m_parsedVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_parsedVersion"))->offset;
  return *reinterpret_cast<::System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Version/System.ParseFailureKind m_failure
[[deprecated("Use field access instead!")]] ::System::Version::ParseFailureKind& System::Version::VersionResult::dyn_m_failure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::VersionResult::dyn_m_failure");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_failure"))->offset;
  return *reinterpret_cast<::System::Version::ParseFailureKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_exceptionArgument
[[deprecated("Use field access instead!")]] ::StringW& System::Version::VersionResult::dyn_m_exceptionArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::VersionResult::dyn_m_exceptionArgument");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_exceptionArgument"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_argumentName
[[deprecated("Use field access instead!")]] ::StringW& System::Version::VersionResult::dyn_m_argumentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::VersionResult::dyn_m_argumentName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_argumentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_canThrow
[[deprecated("Use field access instead!")]] bool& System::Version::VersionResult::dyn_m_canThrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::VersionResult::dyn_m_canThrow");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_canThrow"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Version/System.VersionResult.Init
void System::Version::VersionResult::Init(::StringW argumentName, bool canThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::VersionResult::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argumentName), ::il2cpp_utils::ExtractType(canThrow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, argumentName, canThrow);
}
// Autogenerated method: System.Version/System.VersionResult.SetFailure
void System::Version::VersionResult::SetFailure(::System::Version::ParseFailureKind failure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::VersionResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, failure);
}
// Autogenerated method: System.Version/System.VersionResult.SetFailure
void System::Version::VersionResult::SetFailure(::System::Version::ParseFailureKind failure, ::StringW argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::VersionResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failure), ::il2cpp_utils::ExtractType(argument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, failure, argument);
}
// Autogenerated method: System.Version/System.VersionResult.GetVersionParseException
::System::Exception* System::Version::VersionResult::GetVersionParseException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Version::VersionResult::GetVersionParseException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetVersionParseException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.AppDomain
#include "System/AppDomain.hpp"
// Including type: System.AssemblyLoadEventHandler
#include "System/AssemblyLoadEventHandler.hpp"
// Including type: System.ResolveEventHandler
#include "System/ResolveEventHandler.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.UnhandledExceptionEventHandler
#include "System/UnhandledExceptionEventHandler.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs
#include "System/Runtime/ExceptionServices/FirstChanceExceptionEventArgs.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Security.Principal.IPrincipal
#include "System/Security/Principal/IPrincipal.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Security.Policy.Evidence
#include "System/Security/Policy/Evidence.hpp"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Runtime.Remoting.Messaging.CADMethodCallMessage
#include "System/Runtime/Remoting/Messaging/CADMethodCallMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.CADMethodReturnMessage
#include "System/Runtime/Remoting/Messaging/CADMethodReturnMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String _process_guid
::StringW System::AppDomain::_get__process_guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::_get__process_guid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "AppDomain", "_process_guid"));
}
// Autogenerated static field setter
// Set static field: static private System.String _process_guid
void System::AppDomain::_set__process_guid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::_set__process_guid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppDomain", "_process_guid", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Object> type_resolve_in_progress
::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* System::AppDomain::_get_type_resolve_in_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::_get_type_resolve_in_progress");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>("System", "AppDomain", "type_resolve_in_progress")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Object> type_resolve_in_progress
void System::AppDomain::_set_type_resolve_in_progress(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::_set_type_resolve_in_progress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppDomain", "type_resolve_in_progress", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Object> assembly_resolve_in_progress
::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* System::AppDomain::_get_assembly_resolve_in_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::_get_assembly_resolve_in_progress");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>("System", "AppDomain", "assembly_resolve_in_progress")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Object> assembly_resolve_in_progress
void System::AppDomain::_set_assembly_resolve_in_progress(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::_set_assembly_resolve_in_progress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppDomain", "assembly_resolve_in_progress", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Object> assembly_resolve_in_progress_refonly
::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* System::AppDomain::_get_assembly_resolve_in_progress_refonly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::_get_assembly_resolve_in_progress_refonly");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>("System", "AppDomain", "assembly_resolve_in_progress_refonly")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Object> assembly_resolve_in_progress_refonly
void System::AppDomain::_set_assembly_resolve_in_progress_refonly(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::_set_assembly_resolve_in_progress_refonly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppDomain", "assembly_resolve_in_progress_refonly", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object _principal
::Il2CppObject* System::AppDomain::_get__principal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::_get__principal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System", "AppDomain", "_principal"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _principal
void System::AppDomain::_set__principal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::_set__principal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppDomain", "_principal", value));
}
// Autogenerated static field getter
// Get static field: static private System.AppDomain default_domain
::System::AppDomain* System::AppDomain::_get_default_domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::_get_default_domain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AppDomain*>("System", "AppDomain", "default_domain"));
}
// Autogenerated static field setter
// Set static field: static private System.AppDomain default_domain
void System::AppDomain::_set_default_domain(::System::AppDomain* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::_set_default_domain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppDomain", "default_domain", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _mono_app_domain
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::AppDomain::dyn__mono_app_domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn__mono_app_domain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mono_app_domain"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _evidence
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::AppDomain::dyn__evidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn__evidence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_evidence"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _granted
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::AppDomain::dyn__granted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn__granted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_granted"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _principalPolicy
[[deprecated("Use field access instead!")]] int& System::AppDomain::dyn__principalPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn__principalPolicy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_principalPolicy"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.AssemblyLoadEventHandler AssemblyLoad
[[deprecated("Use field access instead!")]] ::System::AssemblyLoadEventHandler*& System::AppDomain::dyn_AssemblyLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn_AssemblyLoad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssemblyLoad"))->offset;
  return *reinterpret_cast<::System::AssemblyLoadEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ResolveEventHandler AssemblyResolve
[[deprecated("Use field access instead!")]] ::System::ResolveEventHandler*& System::AppDomain::dyn_AssemblyResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn_AssemblyResolve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssemblyResolve"))->offset;
  return *reinterpret_cast<::System::ResolveEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler DomainUnload
[[deprecated("Use field access instead!")]] ::System::EventHandler*& System::AppDomain::dyn_DomainUnload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn_DomainUnload");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DomainUnload"))->offset;
  return *reinterpret_cast<::System::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler ProcessExit
[[deprecated("Use field access instead!")]] ::System::EventHandler*& System::AppDomain::dyn_ProcessExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn_ProcessExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProcessExit"))->offset;
  return *reinterpret_cast<::System::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ResolveEventHandler ResourceResolve
[[deprecated("Use field access instead!")]] ::System::ResolveEventHandler*& System::AppDomain::dyn_ResourceResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn_ResourceResolve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ResourceResolve"))->offset;
  return *reinterpret_cast<::System::ResolveEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ResolveEventHandler TypeResolve
[[deprecated("Use field access instead!")]] ::System::ResolveEventHandler*& System::AppDomain::dyn_TypeResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn_TypeResolve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TypeResolve"))->offset;
  return *reinterpret_cast<::System::ResolveEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UnhandledExceptionEventHandler UnhandledException
[[deprecated("Use field access instead!")]] ::System::UnhandledExceptionEventHandler*& System::AppDomain::dyn_UnhandledException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn_UnhandledException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UnhandledException"))->offset;
  return *reinterpret_cast<::System::UnhandledExceptionEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler`1<System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs> FirstChanceException
[[deprecated("Use field access instead!")]] ::System::EventHandler_1<::System::Runtime::ExceptionServices::FirstChanceExceptionEventArgs*>*& System::AppDomain::dyn_FirstChanceException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn_FirstChanceException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirstChanceException"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::System::Runtime::ExceptionServices::FirstChanceExceptionEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _domain_manager
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::AppDomain::dyn__domain_manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn__domain_manager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_domain_manager"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ResolveEventHandler ReflectionOnlyAssemblyResolve
[[deprecated("Use field access instead!")]] ::System::ResolveEventHandler*& System::AppDomain::dyn_ReflectionOnlyAssemblyResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn_ReflectionOnlyAssemblyResolve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReflectionOnlyAssemblyResolve"))->offset;
  return *reinterpret_cast<::System::ResolveEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _activation
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::AppDomain::dyn__activation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn__activation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activation"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _applicationIdentity
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::AppDomain::dyn__applicationIdentity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn__applicationIdentity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applicationIdentity"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> compatibility_switch
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::AppDomain::dyn_compatibility_switch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::dyn_compatibility_switch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compatibility_switch"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.AppDomain.get_FriendlyName
::StringW System::AppDomain::get_FriendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::get_FriendlyName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FriendlyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.get_DefaultPrincipal
::System::Security::Principal::IPrincipal* System::AppDomain::get_DefaultPrincipal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::get_DefaultPrincipal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultPrincipal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Principal::IPrincipal*, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.get_CurrentDomain
::System::AppDomain* System::AppDomain::get_CurrentDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::get_CurrentDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "AppDomain", "get_CurrentDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::AppDomain*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.AppDomain.add_DomainUnload
void System::AppDomain::add_DomainUnload(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::add_DomainUnload");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_DomainUnload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.AppDomain.remove_DomainUnload
void System::AppDomain::remove_DomainUnload(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::remove_DomainUnload");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_DomainUnload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.AppDomain.add_UnhandledException
void System::AppDomain::add_UnhandledException(::System::UnhandledExceptionEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::add_UnhandledException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_UnhandledException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.AppDomain.remove_UnhandledException
void System::AppDomain::remove_UnhandledException(::System::UnhandledExceptionEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::remove_UnhandledException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_UnhandledException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.AppDomain.getFriendlyName
::StringW System::AppDomain::getFriendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::getFriendlyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getFriendlyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.getCurDomain
::System::AppDomain* System::AppDomain::getCurDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::getCurDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "AppDomain", "getCurDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::AppDomain*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.AppDomain.GetAssemblies
::ArrayW<::System::Reflection::Assembly*> System::AppDomain::GetAssemblies(bool refOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::GetAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(refOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::Assembly*>, false>(this, ___internal__method, refOnly);
}
// Autogenerated method: System.AppDomain.GetAssemblies
::ArrayW<::System::Reflection::Assembly*> System::AppDomain::GetAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::GetAssemblies");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::Assembly*>, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.GetData
::Il2CppObject* System::AppDomain::GetData(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::GetData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.AppDomain.LoadAssembly
::System::Reflection::Assembly* System::AppDomain::LoadAssembly(::StringW assemblyRef, ::System::Security::Policy::Evidence* securityEvidence, bool refOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::LoadAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyRef), ::il2cpp_utils::ExtractType(securityEvidence), ::il2cpp_utils::ExtractType(refOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Assembly*, false>(this, ___internal__method, assemblyRef, securityEvidence, refOnly);
}
// Autogenerated method: System.AppDomain.Load
::System::Reflection::Assembly* System::AppDomain::Load(::StringW assemblyString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::Load");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyString)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Assembly*, false>(this, ___internal__method, assemblyString);
}
// Autogenerated method: System.AppDomain.Load
::System::Reflection::Assembly* System::AppDomain::Load(::StringW assemblyString, ::System::Security::Policy::Evidence* assemblySecurity, bool refonly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyString), ::il2cpp_utils::ExtractType(assemblySecurity), ::il2cpp_utils::ExtractType(refonly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Assembly*, false>(this, ___internal__method, assemblyString, assemblySecurity, refonly);
}
// Autogenerated method: System.AppDomain.InternalSetDomainByID
::System::AppDomain* System::AppDomain::InternalSetDomainByID(int domain_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::InternalSetDomainByID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "AppDomain", "InternalSetDomainByID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(domain_id)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::AppDomain*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, domain_id);
}
// Autogenerated method: System.AppDomain.InternalSetDomain
::System::AppDomain* System::AppDomain::InternalSetDomain(::System::AppDomain* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::InternalSetDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "AppDomain", "InternalSetDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::AppDomain*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: System.AppDomain.InternalPushDomainRefByID
void System::AppDomain::InternalPushDomainRefByID(int domain_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::InternalPushDomainRefByID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "AppDomain", "InternalPushDomainRefByID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(domain_id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, domain_id);
}
// Autogenerated method: System.AppDomain.InternalPopDomainRef
void System::AppDomain::InternalPopDomainRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::InternalPopDomainRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "AppDomain", "InternalPopDomainRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.AppDomain.InternalSetContext
::System::Runtime::Remoting::Contexts::Context* System::AppDomain::InternalSetContext(::System::Runtime::Remoting::Contexts::Context* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::InternalSetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "AppDomain", "InternalSetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Contexts::Context*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: System.AppDomain.InternalGetContext
::System::Runtime::Remoting::Contexts::Context* System::AppDomain::InternalGetContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::InternalGetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "AppDomain", "InternalGetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Contexts::Context*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.AppDomain.InternalGetDefaultContext
::System::Runtime::Remoting::Contexts::Context* System::AppDomain::InternalGetDefaultContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::InternalGetDefaultContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "AppDomain", "InternalGetDefaultContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::Contexts::Context*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.AppDomain.InternalGetProcessGuid
::StringW System::AppDomain::InternalGetProcessGuid(::StringW newguid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::InternalGetProcessGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "AppDomain", "InternalGetProcessGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newguid)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newguid);
}
// Autogenerated method: System.AppDomain.InvokeInDomainByID
::Il2CppObject* System::AppDomain::InvokeInDomainByID(int domain_id, ::System::Reflection::MethodInfo* method, ::Il2CppObject* obj, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::InvokeInDomainByID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "AppDomain", "InvokeInDomainByID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(domain_id), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, domain_id, method, obj, args);
}
// Autogenerated method: System.AppDomain.GetProcessGuid
::StringW System::AppDomain::GetProcessGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::GetProcessGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "AppDomain", "GetProcessGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.AppDomain.InternalIsFinalizingForUnload
bool System::AppDomain::InternalIsFinalizingForUnload(int domain_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::InternalIsFinalizingForUnload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "AppDomain", "InternalIsFinalizingForUnload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(domain_id)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, domain_id);
}
// Autogenerated method: System.AppDomain.IsFinalizingForUnload
bool System::AppDomain::IsFinalizingForUnload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::IsFinalizingForUnload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsFinalizingForUnload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.getDomainID
int System::AppDomain::getDomainID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::getDomainID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getDomainID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.DoAssemblyLoad
void System::AppDomain::DoAssemblyLoad(::System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::DoAssemblyLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoAssemblyLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, assembly);
}
// Autogenerated method: System.AppDomain.DoAssemblyResolve
::System::Reflection::Assembly* System::AppDomain::DoAssemblyResolve(::StringW name, ::System::Reflection::Assembly* requestingAssembly, bool refonly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::DoAssemblyResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoAssemblyResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(requestingAssembly), ::il2cpp_utils::ExtractType(refonly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Assembly*, false>(this, ___internal__method, name, requestingAssembly, refonly);
}
// Autogenerated method: System.AppDomain.DoTypeResolve
::System::Reflection::Assembly* System::AppDomain::DoTypeResolve(::Il2CppObject* name_or_tb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::DoTypeResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoTypeResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name_or_tb)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Assembly*, false>(this, ___internal__method, name_or_tb);
}
// Autogenerated method: System.AppDomain.DoDomainUnload
void System::AppDomain::DoDomainUnload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::DoDomainUnload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoDomainUnload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.GetMarshalledDomainObjRef
::ArrayW<uint8_t> System::AppDomain::GetMarshalledDomainObjRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::GetMarshalledDomainObjRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMarshalledDomainObjRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.ProcessMessageInDomain
void System::AppDomain::ProcessMessageInDomain(::ArrayW<uint8_t> arrRequest, ::System::Runtime::Remoting::Messaging::CADMethodCallMessage* cadMsg, ByRef<::ArrayW<uint8_t>> arrResponse, ByRef<::System::Runtime::Remoting::Messaging::CADMethodReturnMessage*> cadMrm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::ProcessMessageInDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMessageInDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arrRequest), ::il2cpp_utils::ExtractType(cadMsg), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>(), ::il2cpp_utils::ExtractIndependentType<::System::Runtime::Remoting::Messaging::CADMethodReturnMessage*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arrRequest, cadMsg, byref(arrResponse), byref(cadMrm));
}
// Autogenerated method: System.AppDomain.InitializeLifetimeService
::Il2CppObject* System::AppDomain::InitializeLifetimeService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::InitializeLifetimeService");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeLifetimeService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.ToString
::StringW System::AppDomain::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomain::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.CLRConfig
#include "System/CLRConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.CLRConfig.CheckThrowUnobservedTaskExceptions
bool System::CLRConfig::CheckThrowUnobservedTaskExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CLRConfig::CheckThrowUnobservedTaskExceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "CLRConfig", "CheckThrowUnobservedTaskExceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.CompatibilitySwitches
#include "System/CompatibilitySwitches.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean IsAppEarlierThanSilverlight4
bool System::CompatibilitySwitches::_get_IsAppEarlierThanSilverlight4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CompatibilitySwitches::_get_IsAppEarlierThanSilverlight4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "CompatibilitySwitches", "IsAppEarlierThanSilverlight4"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean IsAppEarlierThanSilverlight4
void System::CompatibilitySwitches::_set_IsAppEarlierThanSilverlight4(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CompatibilitySwitches::_set_IsAppEarlierThanSilverlight4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "CompatibilitySwitches", "IsAppEarlierThanSilverlight4", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean IsAppEarlierThanWindowsPhone8
bool System::CompatibilitySwitches::_get_IsAppEarlierThanWindowsPhone8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CompatibilitySwitches::_get_IsAppEarlierThanWindowsPhone8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "CompatibilitySwitches", "IsAppEarlierThanWindowsPhone8"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean IsAppEarlierThanWindowsPhone8
void System::CompatibilitySwitches::_set_IsAppEarlierThanWindowsPhone8(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::CompatibilitySwitches::_set_IsAppEarlierThanWindowsPhone8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "CompatibilitySwitches", "IsAppEarlierThanWindowsPhone8", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Environment
#include "System/Environment.hpp"
// Including type: System.Environment/System.SpecialFolder
#include "System/Environment_SpecialFolder.hpp"
// Including type: System.Environment/System.SpecialFolderOption
#include "System/Environment_SpecialFolderOption.hpp"
// Including type: System.OperatingSystem
#include "System/OperatingSystem.hpp"
// Including type: System.PlatformID
#include "System/PlatformID.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.EnvironmentVariableTarget
#include "System/EnvironmentVariableTarget.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 mono_corlib_version
int System::Environment::_get_mono_corlib_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::_get_mono_corlib_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Environment", "mono_corlib_version"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 mono_corlib_version
void System::Environment::_set_mono_corlib_version(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::_set_mono_corlib_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment", "mono_corlib_version", value));
}
// Autogenerated static field getter
// Get static field: static private System.String nl
::StringW System::Environment::_get_nl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::_get_nl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Environment", "nl"));
}
// Autogenerated static field setter
// Set static field: static private System.String nl
void System::Environment::_set_nl(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::_set_nl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment", "nl", value));
}
// Autogenerated static field getter
// Get static field: static private System.OperatingSystem os
::System::OperatingSystem* System::Environment::_get_os() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::_get_os");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::OperatingSystem*>("System", "Environment", "os"));
}
// Autogenerated static field setter
// Set static field: static private System.OperatingSystem os
void System::Environment::_set_os(::System::OperatingSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::_set_os");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment", "os", value));
}
// Autogenerated method: System.Environment.get_CurrentDirectory
::StringW System::Environment::get_CurrentDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::get_CurrentDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "get_CurrentDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_CurrentManagedThreadId
int System::Environment::get_CurrentManagedThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::get_CurrentManagedThreadId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "get_CurrentManagedThreadId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_HasShutdownStarted
bool System::Environment::get_HasShutdownStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::get_HasShutdownStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "get_HasShutdownStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_MachineName
::StringW System::Environment::get_MachineName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::get_MachineName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "get_MachineName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_NewLine
::StringW System::Environment::get_NewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::get_NewLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "get_NewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_Platform
::System::PlatformID System::Environment::get_Platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::get_Platform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "get_Platform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::PlatformID, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_OSVersion
::System::OperatingSystem* System::Environment::get_OSVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::get_OSVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "get_OSVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::OperatingSystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_StackTrace
::StringW System::Environment::get_StackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::get_StackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "get_StackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_TickCount
int System::Environment::get_TickCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::get_TickCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "get_TickCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_UserDomainName
::StringW System::Environment::get_UserDomainName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::get_UserDomainName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "get_UserDomainName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_UserName
::StringW System::Environment::get_UserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::get_UserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "get_UserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_Is64BitProcess
bool System::Environment::get_Is64BitProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::get_Is64BitProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "get_Is64BitProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_ProcessorCount
int System::Environment::get_ProcessorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::get_ProcessorCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "get_ProcessorCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_IsRunningOnWindows
bool System::Environment::get_IsRunningOnWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::get_IsRunningOnWindows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "get_IsRunningOnWindows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_IsUnix
bool System::Environment::get_IsUnix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::get_IsUnix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "get_IsUnix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetResourceString
::StringW System::Environment::GetResourceString(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetResourceString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetResourceString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: System.Environment.GetResourceString
::StringW System::Environment::GetResourceString(::StringW key, ::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetResourceString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetResourceString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, values);
}
// Autogenerated method: System.Environment.GetResourceStringEncodingName
::StringW System::Environment::GetResourceStringEncodingName(int codePage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetResourceStringEncodingName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetResourceStringEncodingName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codePage)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, codePage);
}
// Autogenerated method: System.Environment.GetNewLine
::StringW System::Environment::GetNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetNewLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetOSVersionString
::StringW System::Environment::GetOSVersionString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetOSVersionString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetOSVersionString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.CreateVersionFromString
::System::Version* System::Environment::CreateVersionFromString(::StringW info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::CreateVersionFromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "CreateVersionFromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, info);
}
// Autogenerated method: System.Environment.Exit
void System::Environment::Exit(int exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::Exit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "Exit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exitCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exitCode);
}
// Autogenerated method: System.Environment.ExpandEnvironmentVariables
::StringW System::Environment::ExpandEnvironmentVariables(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::ExpandEnvironmentVariables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "ExpandEnvironmentVariables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Environment.GetCommandLineArgs
::ArrayW<::StringW> System::Environment::GetCommandLineArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetCommandLineArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetCommandLineArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.internalGetEnvironmentVariable_native
::StringW System::Environment::internalGetEnvironmentVariable_native(::System::IntPtr variable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::internalGetEnvironmentVariable_native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "internalGetEnvironmentVariable_native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variable)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, variable);
}
// Autogenerated method: System.Environment.internalGetEnvironmentVariable
::StringW System::Environment::internalGetEnvironmentVariable(::StringW variable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::internalGetEnvironmentVariable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "internalGetEnvironmentVariable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variable)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, variable);
}
// Autogenerated method: System.Environment.GetEnvironmentVariable
::StringW System::Environment::GetEnvironmentVariable(::StringW variable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetEnvironmentVariable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetEnvironmentVariable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variable)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, variable);
}
// Autogenerated method: System.Environment.GetEnvironmentVariablesNoCase
::System::Collections::Hashtable* System::Environment::GetEnvironmentVariablesNoCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetEnvironmentVariablesNoCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetEnvironmentVariablesNoCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetEnvironmentVariables
::System::Collections::IDictionary* System::Environment::GetEnvironmentVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetEnvironmentVariables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetEnvironmentVariables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionary*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetFolderPath
::StringW System::Environment::GetFolderPath(::System::Environment::SpecialFolder folder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetFolderPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetFolderPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(folder)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, folder);
}
// Autogenerated method: System.Environment.GetWindowsFolderPath
::StringW System::Environment::GetWindowsFolderPath(int folder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetWindowsFolderPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetWindowsFolderPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(folder)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, folder);
}
// Autogenerated method: System.Environment.GetFolderPath
::StringW System::Environment::GetFolderPath(::System::Environment::SpecialFolder folder, ::System::Environment::SpecialFolderOption option) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetFolderPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetFolderPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(folder), ::il2cpp_utils::ExtractType(option)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, folder, option);
}
// Autogenerated method: System.Environment.ReadXdgUserDir
::StringW System::Environment::ReadXdgUserDir(::StringW config_dir, ::StringW home_dir, ::StringW key, ::StringW fallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::ReadXdgUserDir");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "ReadXdgUserDir", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(config_dir), ::il2cpp_utils::ExtractType(home_dir), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(fallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, config_dir, home_dir, key, fallback);
}
// Autogenerated method: System.Environment.UnixGetFolderPath
::StringW System::Environment::UnixGetFolderPath(::System::Environment::SpecialFolder folder, ::System::Environment::SpecialFolderOption option) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::UnixGetFolderPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "UnixGetFolderPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(folder), ::il2cpp_utils::ExtractType(option)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, folder, option);
}
// Autogenerated method: System.Environment.GetLogicalDrives
::ArrayW<::StringW> System::Environment::GetLogicalDrives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetLogicalDrives");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetLogicalDrives", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetEnvironmentVariable
::StringW System::Environment::GetEnvironmentVariable(::StringW variable, ::System::EnvironmentVariableTarget target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetEnvironmentVariable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetEnvironmentVariable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variable), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, variable, target);
}
// Autogenerated method: System.Environment.SetEnvironmentVariable
void System::Environment::SetEnvironmentVariable(::StringW variable, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SetEnvironmentVariable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "SetEnvironmentVariable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variable), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, variable, value);
}
// Autogenerated method: System.Environment.InternalSetEnvironmentVariable
void System::Environment::InternalSetEnvironmentVariable(::StringW variable, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::InternalSetEnvironmentVariable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "InternalSetEnvironmentVariable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variable), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, variable, value);
}
// Autogenerated method: System.Environment.FailFast
void System::Environment::FailFast(::StringW message, ::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::FailFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "FailFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, exception);
}
// Autogenerated method: System.Environment.GetLogicalDrivesInternal
::ArrayW<::StringW> System::Environment::GetLogicalDrivesInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetLogicalDrivesInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetLogicalDrivesInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetEnvironmentVariableNames
::ArrayW<::StringW> System::Environment::GetEnvironmentVariableNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetEnvironmentVariableNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetEnvironmentVariableNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetMachineConfigPath
::StringW System::Environment::GetMachineConfigPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetMachineConfigPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetMachineConfigPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.internalGetHome
::StringW System::Environment::internalGetHome() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::internalGetHome");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "internalGetHome", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetPageSize
int System::Environment::GetPageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetPageSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetPageSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetStackTrace
::StringW System::Environment::GetStackTrace(::System::Exception* e, bool needFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::GetStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Environment", "GetStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(needFileInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e, needFileInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Environment/System.SpecialFolder
#include "System/Environment_SpecialFolder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder MyDocuments
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_MyDocuments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_MyDocuments");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "MyDocuments"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder MyDocuments
void System::Environment::SpecialFolder::_set_MyDocuments(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_MyDocuments");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "MyDocuments", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder Desktop
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Desktop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_Desktop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Desktop"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder Desktop
void System::Environment::SpecialFolder::_set_Desktop(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_Desktop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Desktop", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder MyComputer
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_MyComputer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_MyComputer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "MyComputer"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder MyComputer
void System::Environment::SpecialFolder::_set_MyComputer(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_MyComputer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "MyComputer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder Programs
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Programs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_Programs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Programs"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder Programs
void System::Environment::SpecialFolder::_set_Programs(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_Programs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Programs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder Personal
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Personal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_Personal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Personal"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder Personal
void System::Environment::SpecialFolder::_set_Personal(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_Personal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Personal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder Favorites
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Favorites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_Favorites");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Favorites"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder Favorites
void System::Environment::SpecialFolder::_set_Favorites(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_Favorites");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Favorites", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder Startup
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Startup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_Startup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Startup"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder Startup
void System::Environment::SpecialFolder::_set_Startup(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_Startup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Startup", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder Recent
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Recent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_Recent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Recent"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder Recent
void System::Environment::SpecialFolder::_set_Recent(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_Recent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Recent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder SendTo
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_SendTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_SendTo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "SendTo"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder SendTo
void System::Environment::SpecialFolder::_set_SendTo(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_SendTo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "SendTo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder StartMenu
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_StartMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_StartMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "StartMenu"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder StartMenu
void System::Environment::SpecialFolder::_set_StartMenu(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_StartMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "StartMenu", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder MyMusic
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_MyMusic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_MyMusic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "MyMusic"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder MyMusic
void System::Environment::SpecialFolder::_set_MyMusic(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_MyMusic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "MyMusic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder DesktopDirectory
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_DesktopDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_DesktopDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "DesktopDirectory"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder DesktopDirectory
void System::Environment::SpecialFolder::_set_DesktopDirectory(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_DesktopDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "DesktopDirectory", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder Templates
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Templates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_Templates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Templates"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder Templates
void System::Environment::SpecialFolder::_set_Templates(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_Templates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Templates", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder ApplicationData
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_ApplicationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_ApplicationData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "ApplicationData"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder ApplicationData
void System::Environment::SpecialFolder::_set_ApplicationData(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_ApplicationData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "ApplicationData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder LocalApplicationData
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_LocalApplicationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_LocalApplicationData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "LocalApplicationData"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder LocalApplicationData
void System::Environment::SpecialFolder::_set_LocalApplicationData(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_LocalApplicationData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "LocalApplicationData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder InternetCache
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_InternetCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_InternetCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "InternetCache"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder InternetCache
void System::Environment::SpecialFolder::_set_InternetCache(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_InternetCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "InternetCache", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder Cookies
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Cookies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_Cookies");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Cookies"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder Cookies
void System::Environment::SpecialFolder::_set_Cookies(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_Cookies");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Cookies", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder History
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_History() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_History");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "History"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder History
void System::Environment::SpecialFolder::_set_History(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_History");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "History", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder CommonApplicationData
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonApplicationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_CommonApplicationData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonApplicationData"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder CommonApplicationData
void System::Environment::SpecialFolder::_set_CommonApplicationData(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_CommonApplicationData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonApplicationData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder System
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_System");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "System"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder System
void System::Environment::SpecialFolder::_set_System(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_System");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "System", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder ProgramFiles
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_ProgramFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_ProgramFiles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "ProgramFiles"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder ProgramFiles
void System::Environment::SpecialFolder::_set_ProgramFiles(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_ProgramFiles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "ProgramFiles", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder MyPictures
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_MyPictures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_MyPictures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "MyPictures"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder MyPictures
void System::Environment::SpecialFolder::_set_MyPictures(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_MyPictures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "MyPictures", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder CommonProgramFiles
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonProgramFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_CommonProgramFiles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonProgramFiles"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder CommonProgramFiles
void System::Environment::SpecialFolder::_set_CommonProgramFiles(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_CommonProgramFiles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonProgramFiles", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder MyVideos
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_MyVideos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_MyVideos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "MyVideos"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder MyVideos
void System::Environment::SpecialFolder::_set_MyVideos(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_MyVideos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "MyVideos", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder NetworkShortcuts
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_NetworkShortcuts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_NetworkShortcuts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "NetworkShortcuts"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder NetworkShortcuts
void System::Environment::SpecialFolder::_set_NetworkShortcuts(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_NetworkShortcuts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "NetworkShortcuts", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder Fonts
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Fonts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_Fonts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Fonts"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder Fonts
void System::Environment::SpecialFolder::_set_Fonts(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_Fonts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Fonts", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder CommonStartMenu
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonStartMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_CommonStartMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonStartMenu"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder CommonStartMenu
void System::Environment::SpecialFolder::_set_CommonStartMenu(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_CommonStartMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonStartMenu", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder CommonPrograms
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonPrograms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_CommonPrograms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonPrograms"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder CommonPrograms
void System::Environment::SpecialFolder::_set_CommonPrograms(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_CommonPrograms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonPrograms", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder CommonStartup
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_CommonStartup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonStartup"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder CommonStartup
void System::Environment::SpecialFolder::_set_CommonStartup(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_CommonStartup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonStartup", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder CommonDesktopDirectory
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonDesktopDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_CommonDesktopDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonDesktopDirectory"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder CommonDesktopDirectory
void System::Environment::SpecialFolder::_set_CommonDesktopDirectory(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_CommonDesktopDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonDesktopDirectory", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder PrinterShortcuts
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_PrinterShortcuts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_PrinterShortcuts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "PrinterShortcuts"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder PrinterShortcuts
void System::Environment::SpecialFolder::_set_PrinterShortcuts(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_PrinterShortcuts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "PrinterShortcuts", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder Windows
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Windows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_Windows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Windows"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder Windows
void System::Environment::SpecialFolder::_set_Windows(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_Windows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Windows", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder UserProfile
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_UserProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_UserProfile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "UserProfile"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder UserProfile
void System::Environment::SpecialFolder::_set_UserProfile(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_UserProfile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "UserProfile", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder SystemX86
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_SystemX86() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_SystemX86");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "SystemX86"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder SystemX86
void System::Environment::SpecialFolder::_set_SystemX86(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_SystemX86");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "SystemX86", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder ProgramFilesX86
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_ProgramFilesX86() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_ProgramFilesX86");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "ProgramFilesX86"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder ProgramFilesX86
void System::Environment::SpecialFolder::_set_ProgramFilesX86(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_ProgramFilesX86");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "ProgramFilesX86", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder CommonProgramFilesX86
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonProgramFilesX86() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_CommonProgramFilesX86");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonProgramFilesX86"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder CommonProgramFilesX86
void System::Environment::SpecialFolder::_set_CommonProgramFilesX86(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_CommonProgramFilesX86");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonProgramFilesX86", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder CommonTemplates
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonTemplates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_CommonTemplates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonTemplates"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder CommonTemplates
void System::Environment::SpecialFolder::_set_CommonTemplates(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_CommonTemplates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonTemplates", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder CommonDocuments
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonDocuments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_CommonDocuments");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonDocuments"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder CommonDocuments
void System::Environment::SpecialFolder::_set_CommonDocuments(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_CommonDocuments");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonDocuments", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder CommonAdminTools
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonAdminTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_CommonAdminTools");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonAdminTools"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder CommonAdminTools
void System::Environment::SpecialFolder::_set_CommonAdminTools(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_CommonAdminTools");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonAdminTools", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder AdminTools
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_AdminTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_AdminTools");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "AdminTools"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder AdminTools
void System::Environment::SpecialFolder::_set_AdminTools(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_AdminTools");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "AdminTools", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder CommonMusic
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonMusic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_CommonMusic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonMusic"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder CommonMusic
void System::Environment::SpecialFolder::_set_CommonMusic(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_CommonMusic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonMusic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder CommonPictures
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonPictures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_CommonPictures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonPictures"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder CommonPictures
void System::Environment::SpecialFolder::_set_CommonPictures(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_CommonPictures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonPictures", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder CommonVideos
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonVideos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_CommonVideos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonVideos"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder CommonVideos
void System::Environment::SpecialFolder::_set_CommonVideos(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_CommonVideos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonVideos", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder Resources
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Resources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_Resources");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Resources"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder Resources
void System::Environment::SpecialFolder::_set_Resources(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_Resources");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Resources", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder LocalizedResources
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_LocalizedResources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_LocalizedResources");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "LocalizedResources"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder LocalizedResources
void System::Environment::SpecialFolder::_set_LocalizedResources(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_LocalizedResources");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "LocalizedResources", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder CommonOemLinks
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonOemLinks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_CommonOemLinks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonOemLinks"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder CommonOemLinks
void System::Environment::SpecialFolder::_set_CommonOemLinks(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_CommonOemLinks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonOemLinks", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolder CDBurning
::System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CDBurning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_get_CDBurning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CDBurning"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolder CDBurning
void System::Environment::SpecialFolder::_set_CDBurning(::System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::_set_CDBurning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CDBurning", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Environment::SpecialFolder::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolder::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Environment/System.SpecialFolderOption
#include "System/Environment_SpecialFolderOption.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolderOption None
::System::Environment::SpecialFolderOption System::Environment::SpecialFolderOption::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolderOption::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolderOption>("System", "Environment/SpecialFolderOption", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolderOption None
void System::Environment::SpecialFolderOption::_set_None(::System::Environment::SpecialFolderOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolderOption::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolderOption", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolderOption DoNotVerify
::System::Environment::SpecialFolderOption System::Environment::SpecialFolderOption::_get_DoNotVerify() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolderOption::_get_DoNotVerify");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolderOption>("System", "Environment/SpecialFolderOption", "DoNotVerify"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolderOption DoNotVerify
void System::Environment::SpecialFolderOption::_set_DoNotVerify(::System::Environment::SpecialFolderOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolderOption::_set_DoNotVerify");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolderOption", "DoNotVerify", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/System.SpecialFolderOption Create
::System::Environment::SpecialFolderOption System::Environment::SpecialFolderOption::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolderOption::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Environment::SpecialFolderOption>("System", "Environment/SpecialFolderOption", "Create"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/System.SpecialFolderOption Create
void System::Environment::SpecialFolderOption::_set_Create(::System::Environment::SpecialFolderOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolderOption::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolderOption", "Create", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Environment::SpecialFolderOption::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Environment::SpecialFolderOption::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ParseNumbers
#include "System/ParseNumbers.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ParseNumbers.StringToInt
int System::ParseNumbers::StringToInt(::StringW value, int fromBase, int flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::StringToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "StringToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(fromBase), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, fromBase, flags);
}
// Autogenerated method: System.ParseNumbers.StringToInt
int System::ParseNumbers::StringToInt(::StringW value, int fromBase, int flags, int* parsePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::StringToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "StringToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(fromBase), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(parsePos)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, fromBase, flags, parsePos);
}
// Autogenerated method: System.ParseNumbers.LongToString
::StringW System::ParseNumbers::LongToString(int64_t value, int toBase, int width, ::Il2CppChar paddingChar, int flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::LongToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "LongToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(toBase), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(paddingChar), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, toBase, width, paddingChar, flags);
}
// Autogenerated method: System.ParseNumbers.StringToLong
int64_t System::ParseNumbers::StringToLong(::StringW value, int fromBase, int flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::StringToLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "StringToLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(fromBase), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, fromBase, flags);
}
// Autogenerated method: System.ParseNumbers.StringToLong
int64_t System::ParseNumbers::StringToLong(::StringW value, int fromBase, int flags, int* parsePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::StringToLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "StringToLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(fromBase), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(parsePos)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, fromBase, flags, parsePos);
}
// Autogenerated method: System.ParseNumbers.IntToString
::StringW System::ParseNumbers::IntToString(int value, int toBase, int width, ::Il2CppChar paddingChar, int flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::IntToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "IntToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(toBase), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(paddingChar), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, toBase, width, paddingChar, flags);
}
// Autogenerated method: System.ParseNumbers.EndianSwap
void System::ParseNumbers::EndianSwap(ByRef<::ArrayW<uint8_t>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::EndianSwap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "EndianSwap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value));
}
// Autogenerated method: System.ParseNumbers.ConvertToBase2
::System::Text::StringBuilder* System::ParseNumbers::ConvertToBase2(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::ConvertToBase2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "ConvertToBase2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.ParseNumbers.ConvertToBase8
::System::Text::StringBuilder* System::ParseNumbers::ConvertToBase8(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::ConvertToBase8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "ConvertToBase8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.ParseNumbers.ConvertToBase16
::System::Text::StringBuilder* System::ParseNumbers::ConvertToBase16(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParseNumbers::ConvertToBase16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ParseNumbers", "ConvertToBase16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.MonoTypeInfo
#include "System/MonoTypeInfo.hpp"
// Including type: System.Reflection.MonoCMethod
#include "System/Reflection/MonoCMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String full_name
[[deprecated("Use field access instead!")]] ::StringW& System::MonoTypeInfo::dyn_full_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoTypeInfo::dyn_full_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "full_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Reflection.MonoCMethod default_ctor
[[deprecated("Use field access instead!")]] ::System::Reflection::MonoCMethod*& System::MonoTypeInfo::dyn_default_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoTypeInfo::dyn_default_ctor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "default_ctor"))->offset;
  return *reinterpret_cast<::System::Reflection::MonoCMethod**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TypeNameParser
#include "System/TypeNameParser.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.AssemblyName
#include "System/Reflection/AssemblyName.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Func`4
#include "System/Func_4.hpp"
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.TypeNameParser.GetType
::System::Type* System::TypeNameParser::GetType(::StringW typeName, ::System::Func_2<::System::Reflection::AssemblyName*, ::System::Reflection::Assembly*>* assemblyResolver, ::System::Func_4<::System::Reflection::Assembly*, ::StringW, bool, ::System::Type*>* typeResolver, bool throwOnError, bool ignoreCase, ByRef<::System::Threading::StackCrawlMark> stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::TypeNameParser::GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TypeNameParser", "GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName), ::il2cpp_utils::ExtractType(assemblyResolver), ::il2cpp_utils::ExtractType(typeResolver), ::il2cpp_utils::ExtractType(throwOnError), ::il2cpp_utils::ExtractType(ignoreCase), ::il2cpp_utils::ExtractType(stackMark)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeName, assemblyResolver, typeResolver, throwOnError, ignoreCase, byref(stackMark));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.AppDomainSetup
#include "System/AppDomainSetup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String application_base
[[deprecated("Use field access instead!")]] ::StringW& System::AppDomainSetup::dyn_application_base() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_application_base");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "application_base"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String application_name
[[deprecated("Use field access instead!")]] ::StringW& System::AppDomainSetup::dyn_application_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_application_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "application_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String cache_path
[[deprecated("Use field access instead!")]] ::StringW& System::AppDomainSetup::dyn_cache_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_cache_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cache_path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String configuration_file
[[deprecated("Use field access instead!")]] ::StringW& System::AppDomainSetup::dyn_configuration_file() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_configuration_file");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration_file"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String dynamic_base
[[deprecated("Use field access instead!")]] ::StringW& System::AppDomainSetup::dyn_dynamic_base() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_dynamic_base");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dynamic_base"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String license_file
[[deprecated("Use field access instead!")]] ::StringW& System::AppDomainSetup::dyn_license_file() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_license_file");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "license_file"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String private_bin_path
[[deprecated("Use field access instead!")]] ::StringW& System::AppDomainSetup::dyn_private_bin_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_private_bin_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "private_bin_path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String private_bin_path_probe
[[deprecated("Use field access instead!")]] ::StringW& System::AppDomainSetup::dyn_private_bin_path_probe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_private_bin_path_probe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "private_bin_path_probe"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String shadow_copy_directories
[[deprecated("Use field access instead!")]] ::StringW& System::AppDomainSetup::dyn_shadow_copy_directories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_shadow_copy_directories");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shadow_copy_directories"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String shadow_copy_files
[[deprecated("Use field access instead!")]] ::StringW& System::AppDomainSetup::dyn_shadow_copy_files() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_shadow_copy_files");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shadow_copy_files"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean publisher_policy
[[deprecated("Use field access instead!")]] bool& System::AppDomainSetup::dyn_publisher_policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_publisher_policy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publisher_policy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean path_changed
[[deprecated("Use field access instead!")]] bool& System::AppDomainSetup::dyn_path_changed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_path_changed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path_changed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 loader_optimization
[[deprecated("Use field access instead!")]] int& System::AppDomainSetup::dyn_loader_optimization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_loader_optimization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loader_optimization"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disallow_binding_redirects
[[deprecated("Use field access instead!")]] bool& System::AppDomainSetup::dyn_disallow_binding_redirects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_disallow_binding_redirects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disallow_binding_redirects"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disallow_code_downloads
[[deprecated("Use field access instead!")]] bool& System::AppDomainSetup::dyn_disallow_code_downloads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_disallow_code_downloads");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disallow_code_downloads"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _activationArguments
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::AppDomainSetup::dyn__activationArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn__activationArguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activationArguments"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object domain_initializer
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::AppDomainSetup::dyn_domain_initializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_domain_initializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "domain_initializer"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object application_trust
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::AppDomainSetup::dyn_application_trust() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_application_trust");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "application_trust"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] domain_initializer_args
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::AppDomainSetup::dyn_domain_initializer_args() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_domain_initializer_args");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "domain_initializer_args"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disallow_appbase_probe
[[deprecated("Use field access instead!")]] bool& System::AppDomainSetup::dyn_disallow_appbase_probe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_disallow_appbase_probe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disallow_appbase_probe"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] configuration_bytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::AppDomainSetup::dyn_configuration_bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_configuration_bytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration_bytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] serialized_non_primitives
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::AppDomainSetup::dyn_serialized_non_primitives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_serialized_non_primitives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serialized_non_primitives"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <TargetFrameworkName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::AppDomainSetup::dyn_$TargetFrameworkName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppDomainSetup::dyn_$TargetFrameworkName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TargetFrameworkName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ArgIterator
#include "System/ArgIterator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr sig
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::ArgIterator::dyn_sig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgIterator::dyn_sig");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sig"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr args
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::ArgIterator::dyn_args() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgIterator::dyn_args");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "args"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 next_arg
[[deprecated("Use field access instead!")]] int& System::ArgIterator::dyn_next_arg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgIterator::dyn_next_arg");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next_arg"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 num_args
[[deprecated("Use field access instead!")]] int& System::ArgIterator::dyn_num_args() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgIterator::dyn_num_args");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "num_args"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ArgIterator.Equals
bool System::ArgIterator::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgIterator::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.ArgIterator.GetHashCode
int System::ArgIterator::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgIterator::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.AssemblyLoadEventArgs
#include "System/AssemblyLoadEventArgs.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Reflection.Assembly m_loadedAssembly
[[deprecated("Use field access instead!")]] ::System::Reflection::Assembly*& System::AssemblyLoadEventArgs::dyn_m_loadedAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AssemblyLoadEventArgs::dyn_m_loadedAssembly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_loadedAssembly"))->offset;
  return *reinterpret_cast<::System::Reflection::Assembly**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.AssemblyLoadEventHandler
#include "System/AssemblyLoadEventHandler.hpp"
// Including type: System.AssemblyLoadEventArgs
#include "System/AssemblyLoadEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.AssemblyLoadEventHandler.Invoke
void System::AssemblyLoadEventHandler::Invoke(::Il2CppObject* sender, ::System::AssemblyLoadEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AssemblyLoadEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, args);
}
// Autogenerated method: System.AssemblyLoadEventHandler.BeginInvoke
::System::IAsyncResult* System::AssemblyLoadEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::AssemblyLoadEventArgs* args, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AssemblyLoadEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, args, callback, object);
}
// Autogenerated method: System.AssemblyLoadEventHandler.EndInvoke
void System::AssemblyLoadEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AssemblyLoadEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Console
#include "System/Console.hpp"
// Including type: System.Console/System.WindowsConsole
#include "System/Console_WindowsConsole.hpp"
// Including type: System.Console/System.InternalCancelHandler
#include "System/Console_InternalCancelHandler.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.ConsoleCancelEventHandler
#include "System/ConsoleCancelEventHandler.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.IO.FileAccess
#include "System/IO/FileAccess.hpp"
// Including type: System.ConsoleKeyInfo
#include "System/ConsoleKeyInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.IO.TextWriter stdout
::System::IO::TextWriter* System::Console::_get_stdout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::_get_stdout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::TextWriter*>("System", "Console", "stdout"));
}
// Autogenerated static field setter
// Set static field: static System.IO.TextWriter stdout
void System::Console::_set_stdout(::System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::_set_stdout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console", "stdout", value));
}
// Autogenerated static field getter
// Get static field: static private System.IO.TextWriter stderr
::System::IO::TextWriter* System::Console::_get_stderr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::_get_stderr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::TextWriter*>("System", "Console", "stderr"));
}
// Autogenerated static field setter
// Set static field: static private System.IO.TextWriter stderr
void System::Console::_set_stderr(::System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::_set_stderr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console", "stderr", value));
}
// Autogenerated static field getter
// Get static field: static private System.IO.TextReader stdin
::System::IO::TextReader* System::Console::_get_stdin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::_get_stdin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::TextReader*>("System", "Console", "stdin"));
}
// Autogenerated static field setter
// Set static field: static private System.IO.TextReader stdin
void System::Console::_set_stdin(::System::IO::TextReader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::_set_stdin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console", "stdin", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding inputEncoding
::System::Text::Encoding* System::Console::_get_inputEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::_get_inputEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("System", "Console", "inputEncoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding inputEncoding
void System::Console::_set_inputEncoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::_set_inputEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console", "inputEncoding", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding outputEncoding
::System::Text::Encoding* System::Console::_get_outputEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::_get_outputEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("System", "Console", "outputEncoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding outputEncoding
void System::Console::_set_outputEncoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::_set_outputEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console", "outputEncoding", value));
}
// Autogenerated static field getter
// Get static field: static private System.ConsoleCancelEventHandler cancel_event
::System::ConsoleCancelEventHandler* System::Console::_get_cancel_event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::_get_cancel_event");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ConsoleCancelEventHandler*>("System", "Console", "cancel_event"));
}
// Autogenerated static field setter
// Set static field: static private System.ConsoleCancelEventHandler cancel_event
void System::Console::_set_cancel_event(::System::ConsoleCancelEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::_set_cancel_event");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console", "cancel_event", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Console/System.InternalCancelHandler cancel_handler
::System::Console::InternalCancelHandler* System::Console::_get_cancel_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::_get_cancel_handler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Console::InternalCancelHandler*>("System", "Console", "cancel_handler"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Console/System.InternalCancelHandler cancel_handler
void System::Console::_set_cancel_handler(::System::Console::InternalCancelHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::_set_cancel_handler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console", "cancel_handler", value));
}
// Autogenerated method: System.Console.get_Error
::System::IO::TextWriter* System::Console::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::get_Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console", "get_Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::TextWriter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console.get_Out
::System::IO::TextWriter* System::Console::get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::get_Out");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console", "get_Out", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::TextWriter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console.get_InputEncoding
::System::Text::Encoding* System::Console::get_InputEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::get_InputEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console", "get_InputEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console.get_OutputEncoding
::System::Text::Encoding* System::Console::get_OutputEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::get_OutputEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console", "get_OutputEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console..cctor
void System::Console::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console.SetupStreams
void System::Console::SetupStreams(::System::Text::Encoding* inputEncoding, ::System::Text::Encoding* outputEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::SetupStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console", "SetupStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputEncoding), ::il2cpp_utils::ExtractType(outputEncoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inputEncoding, outputEncoding);
}
// Autogenerated method: System.Console.Open
::System::IO::Stream* System::Console::Open(::System::IntPtr handle, ::System::IO::FileAccess access, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, access, bufferSize);
}
// Autogenerated method: System.Console.OpenStandardError
::System::IO::Stream* System::Console::OpenStandardError(int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::OpenStandardError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console", "OpenStandardError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferSize);
}
// Autogenerated method: System.Console.OpenStandardInput
::System::IO::Stream* System::Console::OpenStandardInput(int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::OpenStandardInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console", "OpenStandardInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferSize);
}
// Autogenerated method: System.Console.OpenStandardOutput
::System::IO::Stream* System::Console::OpenStandardOutput(int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::OpenStandardOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console", "OpenStandardOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferSize);
}
// Autogenerated method: System.Console.SetOut
void System::Console::SetOut(::System::IO::TextWriter* newOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::SetOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console", "SetOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newOut)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, newOut);
}
// Autogenerated method: System.Console.WriteLine
void System::Console::WriteLine(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::WriteLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console", "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Console.ReadKey
::System::ConsoleKeyInfo System::Console::ReadKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::ReadKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console", "ReadKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ConsoleKeyInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console.ReadKey
::System::ConsoleKeyInfo System::Console::ReadKey(bool intercept) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::ReadKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console", "ReadKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(intercept)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ConsoleKeyInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, intercept);
}
// Autogenerated method: System.Console.DoConsoleCancelEvent
void System::Console::DoConsoleCancelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::DoConsoleCancelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console", "DoConsoleCancelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Console/System.WindowsConsole
#include "System/Console_WindowsConsole.hpp"
// Including type: System.Console/System.WindowsConsole/System.WindowsCancelHandler
#include "System/Console_WindowsConsole_WindowsCancelHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean ctrlHandlerAdded
bool System::Console::WindowsConsole::_get_ctrlHandlerAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::WindowsConsole::_get_ctrlHandlerAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Console/WindowsConsole", "ctrlHandlerAdded"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean ctrlHandlerAdded
void System::Console::WindowsConsole::_set_ctrlHandlerAdded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::WindowsConsole::_set_ctrlHandlerAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console/WindowsConsole", "ctrlHandlerAdded", value));
}
// Autogenerated static field getter
// Get static field: static private System.Console/System.WindowsConsole/System.WindowsCancelHandler cancelHandler
::System::Console::WindowsConsole::WindowsCancelHandler* System::Console::WindowsConsole::_get_cancelHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::WindowsConsole::_get_cancelHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Console::WindowsConsole::WindowsCancelHandler*>("System", "Console/WindowsConsole", "cancelHandler"));
}
// Autogenerated static field setter
// Set static field: static private System.Console/System.WindowsConsole/System.WindowsCancelHandler cancelHandler
void System::Console::WindowsConsole::_set_cancelHandler(::System::Console::WindowsConsole::WindowsCancelHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::WindowsConsole::_set_cancelHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console/WindowsConsole", "cancelHandler", value));
}
// Autogenerated method: System.Console/System.WindowsConsole..cctor
void System::Console::WindowsConsole::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::WindowsConsole::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console/WindowsConsole", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console/System.WindowsConsole.GetConsoleCP
int System::Console::WindowsConsole::GetConsoleCP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::WindowsConsole::GetConsoleCP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console/WindowsConsole", "GetConsoleCP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console/System.WindowsConsole.GetConsoleOutputCP
int System::Console::WindowsConsole::GetConsoleOutputCP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::WindowsConsole::GetConsoleOutputCP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console/WindowsConsole", "GetConsoleOutputCP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console/System.WindowsConsole.DoWindowsConsoleCancelEvent
bool System::Console::WindowsConsole::DoWindowsConsoleCancelEvent(int keyCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::WindowsConsole::DoWindowsConsoleCancelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console/WindowsConsole", "DoWindowsConsoleCancelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyCode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyCode);
}
// Autogenerated method: System.Console/System.WindowsConsole.GetInputCodePage
int System::Console::WindowsConsole::GetInputCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::WindowsConsole::GetInputCodePage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console/WindowsConsole", "GetInputCodePage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console/System.WindowsConsole.GetOutputCodePage
int System::Console::WindowsConsole::GetOutputCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::WindowsConsole::GetOutputCodePage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Console/WindowsConsole", "GetOutputCodePage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Console/System.WindowsConsole/System.WindowsCancelHandler
#include "System/Console_WindowsConsole_WindowsCancelHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Console/System.WindowsConsole/System.WindowsCancelHandler.Invoke
bool System::Console::WindowsConsole::WindowsCancelHandler::Invoke(int keyCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::WindowsConsole::WindowsCancelHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyCode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, keyCode);
}
// Autogenerated method: System.Console/System.WindowsConsole/System.WindowsCancelHandler.BeginInvoke
::System::IAsyncResult* System::Console::WindowsConsole::WindowsCancelHandler::BeginInvoke(int keyCode, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::WindowsConsole::WindowsCancelHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyCode), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, keyCode, callback, object);
}
// Autogenerated method: System.Console/System.WindowsConsole/System.WindowsCancelHandler.EndInvoke
bool System::Console::WindowsConsole::WindowsCancelHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::WindowsConsole::WindowsCancelHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Console/System.InternalCancelHandler
#include "System/Console_InternalCancelHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Console/System.InternalCancelHandler.Invoke
void System::Console::InternalCancelHandler::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::InternalCancelHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Console/System.InternalCancelHandler.BeginInvoke
::System::IAsyncResult* System::Console::InternalCancelHandler::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::InternalCancelHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: System.Console/System.InternalCancelHandler.EndInvoke
void System::Console::InternalCancelHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Console::InternalCancelHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ConsoleDriver
#include "System/ConsoleDriver.hpp"
// Including type: System.IConsoleDriver
#include "System/IConsoleDriver.hpp"
// Including type: System.ConsoleKeyInfo
#include "System/ConsoleKeyInfo.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.IConsoleDriver driver
::System::IConsoleDriver* System::ConsoleDriver::_get_driver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ConsoleDriver::_get_driver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IConsoleDriver*>("System", "ConsoleDriver", "driver"));
}
// Autogenerated static field setter
// Set static field: static System.IConsoleDriver driver
void System::ConsoleDriver::_set_driver(::System::IConsoleDriver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ConsoleDriver::_set_driver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleDriver", "driver", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean is_console
bool System::ConsoleDriver::_get_is_console() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ConsoleDriver::_get_is_console");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "ConsoleDriver", "is_console"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean is_console
void System::ConsoleDriver::_set_is_console(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ConsoleDriver::_set_is_console");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleDriver", "is_console", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean called_isatty
bool System::ConsoleDriver::_get_called_isatty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ConsoleDriver::_get_called_isatty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "ConsoleDriver", "called_isatty"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean called_isatty
void System::ConsoleDriver::_set_called_isatty(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ConsoleDriver::_set_called_isatty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleDriver", "called_isatty", value));
}
// Autogenerated method: System.ConsoleDriver.get_IsConsole
bool System::ConsoleDriver::get_IsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ConsoleDriver::get_IsConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ConsoleDriver", "get_IsConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ConsoleDriver..cctor
void System::ConsoleDriver::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ConsoleDriver::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ConsoleDriver", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ConsoleDriver.CreateNullConsoleDriver
::System::IConsoleDriver* System::ConsoleDriver::CreateNullConsoleDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ConsoleDriver::CreateNullConsoleDriver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ConsoleDriver", "CreateNullConsoleDriver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IConsoleDriver*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ConsoleDriver.CreateWindowsConsoleDriver
::System::IConsoleDriver* System::ConsoleDriver::CreateWindowsConsoleDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ConsoleDriver::CreateWindowsConsoleDriver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ConsoleDriver", "CreateWindowsConsoleDriver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IConsoleDriver*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ConsoleDriver.CreateTermInfoDriver
::System::IConsoleDriver* System::ConsoleDriver::CreateTermInfoDriver(::StringW term) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ConsoleDriver::CreateTermInfoDriver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ConsoleDriver", "CreateTermInfoDriver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(term)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IConsoleDriver*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, term);
}
// Autogenerated method: System.ConsoleDriver.ReadKey
::System::ConsoleKeyInfo System::ConsoleDriver::ReadKey(bool intercept) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ConsoleDriver::ReadKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ConsoleDriver", "ReadKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(intercept)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ConsoleKeyInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, intercept);
}
// Autogenerated method: System.ConsoleDriver.Isatty
bool System::ConsoleDriver::Isatty(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ConsoleDriver::Isatty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ConsoleDriver", "Isatty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.ConsoleDriver.InternalKeyAvailable
int System::ConsoleDriver::InternalKeyAvailable(int ms_timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ConsoleDriver::InternalKeyAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ConsoleDriver", "InternalKeyAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ms_timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ms_timeout);
}
// Autogenerated method: System.ConsoleDriver.TtySetup
bool System::ConsoleDriver::TtySetup(::StringW keypadXmit, ::StringW teardown, ByRef<::ArrayW<uint8_t>> control_characters, ByRef<int*> address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ConsoleDriver::TtySetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ConsoleDriver", "TtySetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keypadXmit), ::il2cpp_utils::ExtractType(teardown), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>(), ::il2cpp_utils::ExtractIndependentType<int*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keypadXmit, teardown, byref(control_characters), byref(address));
}
// Autogenerated method: System.ConsoleDriver.SetEcho
bool System::ConsoleDriver::SetEcho(bool wantEcho) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ConsoleDriver::SetEcho");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ConsoleDriver", "SetEcho", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wantEcho)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, wantEcho);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.DelegateData
#include "System/DelegateData.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type target_type
[[deprecated("Use field access instead!")]] ::System::Type*& System::DelegateData::dyn_target_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DelegateData::dyn_target_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String method_name
[[deprecated("Use field access instead!")]] ::StringW& System::DelegateData::dyn_method_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DelegateData::dyn_method_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean curried_first_arg
[[deprecated("Use field access instead!")]] bool& System::DelegateData::dyn_curried_first_arg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DelegateData::dyn_curried_first_arg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curried_first_arg"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.DelegateData
#include "System/DelegateData.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr method_ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Delegate::dyn_method_ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::dyn_method_ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method_ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr invoke_impl
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Delegate::dyn_invoke_impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::dyn_invoke_impl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invoke_impl"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_target
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Delegate::dyn_m_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::dyn_m_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_target"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr method
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Delegate::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr delegate_trampoline
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Delegate::dyn_delegate_trampoline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::dyn_delegate_trampoline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delegate_trampoline"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr extra_arg
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Delegate::dyn_extra_arg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::dyn_extra_arg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extra_arg"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr method_code
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Delegate::dyn_method_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::dyn_method_code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method_code"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodInfo method_info
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& System::Delegate::dyn_method_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::dyn_method_info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method_info"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodInfo original_method_info
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& System::Delegate::dyn_original_method_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::dyn_original_method_info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "original_method_info"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DelegateData data
[[deprecated("Use field access instead!")]] ::System::DelegateData*& System::Delegate::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::System::DelegateData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean method_is_virtual
[[deprecated("Use field access instead!")]] bool& System::Delegate::dyn_method_is_virtual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::dyn_method_is_virtual");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method_is_virtual"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Delegate.get_Method
::System::Reflection::MethodInfo* System::Delegate::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Delegate.get_Target
::Il2CppObject* System::Delegate::get_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::get_Target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Delegate.GetVirtualMethod_internal
::System::Reflection::MethodInfo* System::Delegate::GetVirtualMethod_internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::GetVirtualMethod_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVirtualMethod_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Delegate.CreateDelegate_internal
::System::Delegate* System::Delegate::CreateDelegate_internal(::System::Type* type, ::Il2CppObject* target, ::System::Reflection::MethodInfo* info, bool throwOnBindFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::CreateDelegate_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(throwOnBindFailure)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, target, info, throwOnBindFailure);
}
// Autogenerated method: System.Delegate.arg_type_match
bool System::Delegate::arg_type_match(::System::Type* delArgType, ::System::Type* argType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::arg_type_match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "arg_type_match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delArgType), ::il2cpp_utils::ExtractType(argType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, delArgType, argType);
}
// Autogenerated method: System.Delegate.arg_type_match_this
bool System::Delegate::arg_type_match_this(::System::Type* delArgType, ::System::Type* argType, bool boxedThis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::arg_type_match_this");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "arg_type_match_this", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delArgType), ::il2cpp_utils::ExtractType(argType), ::il2cpp_utils::ExtractType(boxedThis)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, delArgType, argType, boxedThis);
}
// Autogenerated method: System.Delegate.return_type_match
bool System::Delegate::return_type_match(::System::Type* delReturnType, ::System::Type* returnType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::return_type_match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "return_type_match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delReturnType), ::il2cpp_utils::ExtractType(returnType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, delReturnType, returnType);
}
// Autogenerated method: System.Delegate.CreateDelegate
::System::Delegate* System::Delegate::CreateDelegate(::System::Type* type, ::Il2CppObject* firstArgument, ::System::Reflection::MethodInfo* method, bool throwOnBindFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(firstArgument), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(throwOnBindFailure)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, firstArgument, method, throwOnBindFailure);
}
// Autogenerated method: System.Delegate.CreateDelegate
::System::Delegate* System::Delegate::CreateDelegate(::System::Type* type, ::Il2CppObject* firstArgument, ::System::Reflection::MethodInfo* method, bool throwOnBindFailure, bool allowClosed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(firstArgument), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(throwOnBindFailure), ::il2cpp_utils::ExtractType(allowClosed)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, firstArgument, method, throwOnBindFailure, allowClosed);
}
// Autogenerated method: System.Delegate.CreateDelegate
::System::Delegate* System::Delegate::CreateDelegate(::System::Type* type, ::Il2CppObject* firstArgument, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(firstArgument), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, firstArgument, method);
}
// Autogenerated method: System.Delegate.CreateDelegate
::System::Delegate* System::Delegate::CreateDelegate(::System::Type* type, ::System::Reflection::MethodInfo* method, bool throwOnBindFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(throwOnBindFailure)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, method, throwOnBindFailure);
}
// Autogenerated method: System.Delegate.CreateDelegate
::System::Delegate* System::Delegate::CreateDelegate(::System::Type* type, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, method);
}
// Autogenerated method: System.Delegate.CreateDelegate
::System::Delegate* System::Delegate::CreateDelegate(::System::Type* type, ::Il2CppObject* target, ::StringW method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, target, method);
}
// Autogenerated method: System.Delegate.GetCandidateMethod
::System::Reflection::MethodInfo* System::Delegate::GetCandidateMethod(::System::Type* type, ::System::Type* target, ::StringW method, ::System::Reflection::BindingFlags bflags, bool ignoreCase, bool throwOnBindFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::GetCandidateMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "GetCandidateMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(bflags), ::il2cpp_utils::ExtractType(ignoreCase), ::il2cpp_utils::ExtractType(throwOnBindFailure)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, target, method, bflags, ignoreCase, throwOnBindFailure);
}
// Autogenerated method: System.Delegate.CreateDelegate
::System::Delegate* System::Delegate::CreateDelegate(::System::Type* type, ::System::Type* target, ::StringW method, bool ignoreCase, bool throwOnBindFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(ignoreCase), ::il2cpp_utils::ExtractType(throwOnBindFailure)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, target, method, ignoreCase, throwOnBindFailure);
}
// Autogenerated method: System.Delegate.CreateDelegate
::System::Delegate* System::Delegate::CreateDelegate(::System::Type* type, ::System::Type* target, ::StringW method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, target, method);
}
// Autogenerated method: System.Delegate.CreateDelegate
::System::Delegate* System::Delegate::CreateDelegate(::System::Type* type, ::Il2CppObject* target, ::StringW method, bool ignoreCase, bool throwOnBindFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(ignoreCase), ::il2cpp_utils::ExtractType(throwOnBindFailure)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, target, method, ignoreCase, throwOnBindFailure);
}
// Autogenerated method: System.Delegate.CreateDelegate
::System::Delegate* System::Delegate::CreateDelegate(::System::Type* type, ::Il2CppObject* target, ::StringW method, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, target, method, ignoreCase);
}
// Autogenerated method: System.Delegate.DynamicInvoke
::Il2CppObject* System::Delegate::DynamicInvoke(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::DynamicInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DynamicInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, args);
}
// Autogenerated method: System.Delegate.InitializeDelegateData
void System::Delegate::InitializeDelegateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::InitializeDelegateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeDelegateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Delegate.DynamicInvokeImpl
::Il2CppObject* System::Delegate::DynamicInvokeImpl(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::DynamicInvokeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DynamicInvokeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, args);
}
// Autogenerated method: System.Delegate.Clone
::Il2CppObject* System::Delegate::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Delegate.GetMethodImpl
::System::Reflection::MethodInfo* System::Delegate::GetMethodImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::GetMethodImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Delegate.GetObjectData
void System::Delegate::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Delegate.GetInvocationList
::ArrayW<::System::Delegate*> System::Delegate::GetInvocationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::GetInvocationList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInvocationList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Delegate*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Delegate.Combine
::System::Delegate* System::Delegate::Combine(::System::Delegate* a, ::System::Delegate* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: System.Delegate.Combine
::System::Delegate* System::Delegate::Combine(::ArrayW<::System::Delegate*> delegates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegates)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, delegates);
}
// Autogenerated method: System.Delegate.CombineImpl
::System::Delegate* System::Delegate::CombineImpl(::System::Delegate* d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::CombineImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CombineImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(this, ___internal__method, d);
}
// Autogenerated method: System.Delegate.Remove
::System::Delegate* System::Delegate::Remove(::System::Delegate* source, ::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, value);
}
// Autogenerated method: System.Delegate.RemoveImpl
::System::Delegate* System::Delegate::RemoveImpl(::System::Delegate* d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::RemoveImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(this, ___internal__method, d);
}
// Autogenerated method: System.Delegate.CreateDelegateNoSecurityCheck
::System::Delegate* System::Delegate::CreateDelegateNoSecurityCheck(::System::RuntimeType* type, ::Il2CppObject* firstArgument, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::CreateDelegateNoSecurityCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegateNoSecurityCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(firstArgument), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, firstArgument, method);
}
// Autogenerated method: System.Delegate.AllocDelegateLike_internal
::System::MulticastDelegate* System::Delegate::AllocDelegateLike_internal(::System::Delegate* d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::AllocDelegateLike_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "AllocDelegateLike_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::MulticastDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Delegate.Equals
bool System::Delegate::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Delegate.GetHashCode
int System::Delegate::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Delegate.op_Equality
bool System::operator ==(::System::Delegate* d1, ::System::Delegate& d2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Delegate::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Delegate", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d1), ::il2cpp_utils::ExtractType(&d2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d1, &d2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DelegateSerializationHolder
#include "System/DelegateSerializationHolder.hpp"
// Including type: System.DelegateSerializationHolder/System.DelegateEntry
#include "System/DelegateSerializationHolder_DelegateEntry.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Delegate _delegate
[[deprecated("Use field access instead!")]] ::System::Delegate*& System::DelegateSerializationHolder::dyn__delegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DelegateSerializationHolder::dyn__delegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delegate"))->offset;
  return *reinterpret_cast<::System::Delegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.DelegateSerializationHolder.GetDelegateData
void System::DelegateSerializationHolder::GetDelegateData(::System::Delegate* instance, ::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DelegateSerializationHolder::GetDelegateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DelegateSerializationHolder", "GetDelegateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, info, ctx);
}
// Autogenerated method: System.DelegateSerializationHolder.GetObjectData
void System::DelegateSerializationHolder::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DelegateSerializationHolder::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.DelegateSerializationHolder.GetRealObject
::Il2CppObject* System::DelegateSerializationHolder::GetRealObject(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DelegateSerializationHolder::GetRealObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRealObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DelegateSerializationHolder/System.DelegateEntry
#include "System/DelegateSerializationHolder_DelegateEntry.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String type
[[deprecated("Use field access instead!")]] ::StringW& System::DelegateSerializationHolder::DelegateEntry::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DelegateSerializationHolder::DelegateEntry::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String assembly
[[deprecated("Use field access instead!")]] ::StringW& System::DelegateSerializationHolder::DelegateEntry::dyn_assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DelegateSerializationHolder::DelegateEntry::dyn_assembly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assembly"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object target
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::DelegateSerializationHolder::DelegateEntry::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DelegateSerializationHolder::DelegateEntry::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String targetTypeAssembly
[[deprecated("Use field access instead!")]] ::StringW& System::DelegateSerializationHolder::DelegateEntry::dyn_targetTypeAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DelegateSerializationHolder::DelegateEntry::dyn_targetTypeAssembly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetTypeAssembly"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String targetTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::DelegateSerializationHolder::DelegateEntry::dyn_targetTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DelegateSerializationHolder::DelegateEntry::dyn_targetTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String methodName
[[deprecated("Use field access instead!")]] ::StringW& System::DelegateSerializationHolder::DelegateEntry::dyn_methodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DelegateSerializationHolder::DelegateEntry::dyn_methodName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DelegateSerializationHolder/System.DelegateEntry delegateEntry
[[deprecated("Use field access instead!")]] ::System::DelegateSerializationHolder::DelegateEntry*& System::DelegateSerializationHolder::DelegateEntry::dyn_delegateEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DelegateSerializationHolder::DelegateEntry::dyn_delegateEntry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delegateEntry"))->offset;
  return *reinterpret_cast<::System::DelegateSerializationHolder::DelegateEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.DelegateSerializationHolder/System.DelegateEntry.DeserializeDelegate
::System::Delegate* System::DelegateSerializationHolder::DelegateEntry::DeserializeDelegate(::System::Runtime::Serialization::SerializationInfo* info, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DelegateSerializationHolder::DelegateEntry::DeserializeDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(this, ___internal__method, info, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.EnvironmentVariableTarget
#include "System/EnvironmentVariableTarget.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.EnvironmentVariableTarget Process
::System::EnvironmentVariableTarget System::EnvironmentVariableTarget::_get_Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::EnvironmentVariableTarget::_get_Process");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::EnvironmentVariableTarget>("System", "EnvironmentVariableTarget", "Process"));
}
// Autogenerated static field setter
// Set static field: static public System.EnvironmentVariableTarget Process
void System::EnvironmentVariableTarget::_set_Process(::System::EnvironmentVariableTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::EnvironmentVariableTarget::_set_Process");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "EnvironmentVariableTarget", "Process", value));
}
// Autogenerated static field getter
// Get static field: static public System.EnvironmentVariableTarget User
::System::EnvironmentVariableTarget System::EnvironmentVariableTarget::_get_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::EnvironmentVariableTarget::_get_User");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::EnvironmentVariableTarget>("System", "EnvironmentVariableTarget", "User"));
}
// Autogenerated static field setter
// Set static field: static public System.EnvironmentVariableTarget User
void System::EnvironmentVariableTarget::_set_User(::System::EnvironmentVariableTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::EnvironmentVariableTarget::_set_User");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "EnvironmentVariableTarget", "User", value));
}
// Autogenerated static field getter
// Get static field: static public System.EnvironmentVariableTarget Machine
::System::EnvironmentVariableTarget System::EnvironmentVariableTarget::_get_Machine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::EnvironmentVariableTarget::_get_Machine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::EnvironmentVariableTarget>("System", "EnvironmentVariableTarget", "Machine"));
}
// Autogenerated static field setter
// Set static field: static public System.EnvironmentVariableTarget Machine
void System::EnvironmentVariableTarget::_set_Machine(::System::EnvironmentVariableTarget value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::EnvironmentVariableTarget::_set_Machine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "EnvironmentVariableTarget", "Machine", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::EnvironmentVariableTarget::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::EnvironmentVariableTarget::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IConsoleDriver
#include "System/IConsoleDriver.hpp"
// Including type: System.ConsoleKeyInfo
#include "System/ConsoleKeyInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IConsoleDriver.ReadKey
::System::ConsoleKeyInfo System::IConsoleDriver::ReadKey(bool intercept) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IConsoleDriver::ReadKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(intercept)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ConsoleKeyInfo, false>(this, ___internal__method, intercept);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IntPtr Zero
::System::IntPtr System::IntPtr::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("System", "IntPtr", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IntPtr Zero
void System::IntPtr::_set_Zero(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "IntPtr", "Zero", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Void* m_value
[[deprecated("Use field access instead!")]] void*& System::IntPtr::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<void**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IntPtr.get_Size
int System::IntPtr::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IntPtr", "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IntPtr..ctor
System::IntPtr::IntPtr(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IntPtr..ctor
System::IntPtr::IntPtr(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IntPtr..ctor
// ABORTED elsewhere.  System::IntPtr::IntPtr(void* value)
// Autogenerated method: System.IntPtr..ctor
System::IntPtr::IntPtr(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.IntPtr.System.Runtime.Serialization.ISerializable.GetObjectData
void System::IntPtr::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.IntPtr.ToInt64
int64_t System::IntPtr::ToInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IntPtr.ToPointer
void* System::IntPtr::ToPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::ToPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<void*, false>(this, ___internal__method);
}
// Autogenerated method: System.IntPtr.ToString
::StringW System::IntPtr::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: System.IntPtr.op_Explicit
System::IntPtr::IntPtr(int& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IntPtr", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.IntPtr.op_Explicit
System::IntPtr::IntPtr(int64_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IntPtr", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.IntPtr.op_Explicit
// ABORTED elsewhere.  System::IntPtr::IntPtr(void* value)
// Autogenerated method: System.IntPtr.op_Explicit
System::IntPtr::operator int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IntPtr", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IntPtr.op_Explicit
System::IntPtr::operator int64_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IntPtr", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IntPtr.op_Explicit
// ABORTED elsewhere.  System::IntPtr::operator void*()
// Autogenerated method: System.IntPtr.Add
::System::IntPtr System::IntPtr::Add(::System::IntPtr pointer, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IntPtr", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointer, offset);
}
// Autogenerated method: System.IntPtr.IsNull
bool System::IntPtr::IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::IsNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IntPtr.Equals
bool System::IntPtr::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.IntPtr.GetHashCode
int System::IntPtr::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IntPtr.ToString
::StringW System::IntPtr::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IntPtr.op_Equality
bool System::operator ==(const ::System::IntPtr& value1, const ::System::IntPtr& value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IntPtr", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value1, value2);
}
// Autogenerated method: System.IntPtr.op_Inequality
bool System::operator !=(const ::System::IntPtr& value1, const ::System::IntPtr& value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IntPtr::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IntPtr", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value1, value2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.KnownTerminals
#include "System/KnownTerminals.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.KnownTerminals.get_linux
::ArrayW<uint8_t> System::KnownTerminals::get_linux() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::KnownTerminals::get_linux");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "KnownTerminals", "get_linux", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.KnownTerminals.get_xterm
::ArrayW<uint8_t> System::KnownTerminals::get_xterm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::KnownTerminals::get_xterm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "KnownTerminals", "get_xterm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.KnownTerminals.get_ansi
::ArrayW<uint8_t> System::KnownTerminals::get_ansi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::KnownTerminals::get_ansi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "KnownTerminals", "get_ansi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MarshalByRefObject
#include "System/MarshalByRefObject.hpp"
// Including type: System.Runtime.Remoting.ServerIdentity
#include "System/Runtime/Remoting/ServerIdentity.hpp"
// Including type: System.Runtime.Remoting.ObjRef
#include "System/Runtime/Remoting/ObjRef.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _identity
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::MarshalByRefObject::dyn__identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MarshalByRefObject::dyn__identity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_identity"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.MarshalByRefObject.get_ObjectIdentity
::System::Runtime::Remoting::ServerIdentity* System::MarshalByRefObject::get_ObjectIdentity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MarshalByRefObject::get_ObjectIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::ServerIdentity*, false>(this, ___internal__method);
}
// Autogenerated method: System.MarshalByRefObject.set_ObjectIdentity
void System::MarshalByRefObject::set_ObjectIdentity(::System::Runtime::Remoting::ServerIdentity* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MarshalByRefObject::set_ObjectIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ObjectIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.MarshalByRefObject.CreateObjRef
::System::Runtime::Remoting::ObjRef* System::MarshalByRefObject::CreateObjRef(::System::Type* requestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MarshalByRefObject::CreateObjRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateObjRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestedType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Remoting::ObjRef*, false>(this, ___internal__method, requestedType);
}
// Autogenerated method: System.MarshalByRefObject.InitializeLifetimeService
::Il2CppObject* System::MarshalByRefObject::InitializeLifetimeService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MarshalByRefObject::InitializeLifetimeService");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeLifetimeService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MonoAsyncCall
#include "System/MonoAsyncCall.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object msg
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::MonoAsyncCall::dyn_msg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoAsyncCall::dyn_msg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "msg"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr cb_method
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::MonoAsyncCall::dyn_cb_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoAsyncCall::dyn_cb_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cb_method"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object cb_target
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::MonoAsyncCall::dyn_cb_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoAsyncCall::dyn_cb_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cb_target"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object state
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::MonoAsyncCall::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoAsyncCall::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object res
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::MonoAsyncCall::dyn_res() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoAsyncCall::dyn_res");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "res"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object out_args
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::MonoAsyncCall::dyn_out_args() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoAsyncCall::dyn_out_args");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "out_args"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MonoCustomAttrs
#include "System/MonoCustomAttrs.hpp"
// Including type: System.MonoCustomAttrs/System.AttributeInfo
#include "System/MonoCustomAttrs_AttributeInfo.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.AttributeUsageAttribute
#include "System/AttributeUsageAttribute.hpp"
// Including type: System.Reflection.ICustomAttributeProvider
#include "System/Reflection/ICustomAttributeProvider.hpp"
// Including type: System.Reflection.CustomAttributeData
#include "System/Reflection/CustomAttributeData.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.MonoProperty
#include "System/Reflection/MonoProperty.hpp"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Reflection.MonoEvent
#include "System/Reflection/MonoEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Reflection.Assembly corlib
::System::Reflection::Assembly* System::MonoCustomAttrs::_get_corlib() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::_get_corlib");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::Assembly*>("System", "MonoCustomAttrs", "corlib"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.Assembly corlib
void System::MonoCustomAttrs::_set_corlib(::System::Reflection::Assembly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::_set_corlib");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "MonoCustomAttrs", "corlib", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,System.AttributeUsageAttribute> usage_cache
::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::AttributeUsageAttribute*>* System::MonoCustomAttrs::_get_usage_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::_get_usage_cache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::AttributeUsageAttribute*>*>("System", "MonoCustomAttrs", "usage_cache")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,System.AttributeUsageAttribute> usage_cache
void System::MonoCustomAttrs::_set_usage_cache(::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::AttributeUsageAttribute*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::_set_usage_cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "MonoCustomAttrs", "usage_cache", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.AttributeUsageAttribute DefaultAttributeUsage
::System::AttributeUsageAttribute* System::MonoCustomAttrs::_get_DefaultAttributeUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::_get_DefaultAttributeUsage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeUsageAttribute*>("System", "MonoCustomAttrs", "DefaultAttributeUsage"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.AttributeUsageAttribute DefaultAttributeUsage
void System::MonoCustomAttrs::_set_DefaultAttributeUsage(::System::AttributeUsageAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::_set_DefaultAttributeUsage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "MonoCustomAttrs", "DefaultAttributeUsage", value));
}
// Autogenerated method: System.MonoCustomAttrs..cctor
void System::MonoCustomAttrs::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.MonoCustomAttrs.IsUserCattrProvider
bool System::MonoCustomAttrs::IsUserCattrProvider(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::IsUserCattrProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", "IsUserCattrProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.MonoCustomAttrs.GetCustomAttributesInternal
::ArrayW<::Il2CppObject*> System::MonoCustomAttrs::GetCustomAttributesInternal(::System::Reflection::ICustomAttributeProvider* obj, ::System::Type* attributeType, bool pseudoAttrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::GetCustomAttributesInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", "GetCustomAttributesInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(pseudoAttrs)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, attributeType, pseudoAttrs);
}
// Autogenerated method: System.MonoCustomAttrs.GetPseudoCustomAttributes
::ArrayW<::Il2CppObject*> System::MonoCustomAttrs::GetPseudoCustomAttributes(::System::Reflection::ICustomAttributeProvider* obj, ::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::GetPseudoCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", "GetPseudoCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, attributeType);
}
// Autogenerated method: System.MonoCustomAttrs.GetPseudoCustomAttributes
::ArrayW<::Il2CppObject*> System::MonoCustomAttrs::GetPseudoCustomAttributes(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::GetPseudoCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", "GetPseudoCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.MonoCustomAttrs.GetCustomAttributesBase
::ArrayW<::Il2CppObject*> System::MonoCustomAttrs::GetCustomAttributesBase(::System::Reflection::ICustomAttributeProvider* obj, ::System::Type* attributeType, bool inheritedOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::GetCustomAttributesBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", "GetCustomAttributesBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inheritedOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, attributeType, inheritedOnly);
}
// Autogenerated method: System.MonoCustomAttrs.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::MonoCustomAttrs::GetCustomAttributes(::System::Reflection::ICustomAttributeProvider* obj, ::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, attributeType, inherit);
}
// Autogenerated method: System.MonoCustomAttrs.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::MonoCustomAttrs::GetCustomAttributes(::System::Reflection::ICustomAttributeProvider* obj, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, inherit);
}
// Autogenerated method: System.MonoCustomAttrs.GetCustomAttributesDataInternal
::ArrayW<::System::Reflection::CustomAttributeData*> System::MonoCustomAttrs::GetCustomAttributesDataInternal(::System::Reflection::ICustomAttributeProvider* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::GetCustomAttributesDataInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", "GetCustomAttributesDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::CustomAttributeData*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.MonoCustomAttrs.GetCustomAttributesData
::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeData*>* System::MonoCustomAttrs::GetCustomAttributesData(::System::Reflection::ICustomAttributeProvider* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::GetCustomAttributesData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", "GetCustomAttributesData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::System::Reflection::CustomAttributeData*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.MonoCustomAttrs.IsDefined
bool System::MonoCustomAttrs::IsDefined(::System::Reflection::ICustomAttributeProvider* obj, ::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::IsDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, attributeType, inherit);
}
// Autogenerated method: System.MonoCustomAttrs.IsDefinedInternal
bool System::MonoCustomAttrs::IsDefinedInternal(::System::Reflection::ICustomAttributeProvider* obj, ::System::Type* AttributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::IsDefinedInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", "IsDefinedInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(AttributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, AttributeType);
}
// Autogenerated method: System.MonoCustomAttrs.GetBasePropertyDefinition
::System::Reflection::PropertyInfo* System::MonoCustomAttrs::GetBasePropertyDefinition(::System::Reflection::MonoProperty* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::GetBasePropertyDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", "GetBasePropertyDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::PropertyInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, property);
}
// Autogenerated method: System.MonoCustomAttrs.GetBaseEventDefinition
::System::Reflection::EventInfo* System::MonoCustomAttrs::GetBaseEventDefinition(::System::Reflection::MonoEvent* evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::GetBaseEventDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", "GetBaseEventDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::EventInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, evt);
}
// Autogenerated method: System.MonoCustomAttrs.GetBase
::System::Reflection::ICustomAttributeProvider* System::MonoCustomAttrs::GetBase(::System::Reflection::ICustomAttributeProvider* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::GetBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", "GetBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ICustomAttributeProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.MonoCustomAttrs.RetrieveAttributeUsageNoCache
::System::AttributeUsageAttribute* System::MonoCustomAttrs::RetrieveAttributeUsageNoCache(::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::RetrieveAttributeUsageNoCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", "RetrieveAttributeUsageNoCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::AttributeUsageAttribute*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attributeType);
}
// Autogenerated method: System.MonoCustomAttrs.RetrieveAttributeUsage
::System::AttributeUsageAttribute* System::MonoCustomAttrs::RetrieveAttributeUsage(::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::RetrieveAttributeUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "MonoCustomAttrs", "RetrieveAttributeUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::AttributeUsageAttribute*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attributeType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.MonoCustomAttrs/System.AttributeInfo
#include "System/MonoCustomAttrs_AttributeInfo.hpp"
// Including type: System.AttributeUsageAttribute
#include "System/AttributeUsageAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.AttributeUsageAttribute _usage
[[deprecated("Use field access instead!")]] ::System::AttributeUsageAttribute*& System::MonoCustomAttrs::AttributeInfo::dyn__usage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::AttributeInfo::dyn__usage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_usage"))->offset;
  return *reinterpret_cast<::System::AttributeUsageAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inheritanceLevel
[[deprecated("Use field access instead!")]] int& System::MonoCustomAttrs::AttributeInfo::dyn__inheritanceLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::AttributeInfo::dyn__inheritanceLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inheritanceLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.MonoCustomAttrs/System.AttributeInfo.get_Usage
::System::AttributeUsageAttribute* System::MonoCustomAttrs::AttributeInfo::get_Usage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::AttributeInfo::get_Usage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Usage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::AttributeUsageAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.MonoCustomAttrs/System.AttributeInfo.get_InheritanceLevel
int System::MonoCustomAttrs::AttributeInfo::get_InheritanceLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoCustomAttrs::AttributeInfo::get_InheritanceLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InheritanceLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MonoListItem
#include "System/MonoListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.MonoListItem next
[[deprecated("Use field access instead!")]] ::System::MonoListItem*& System::MonoListItem::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoListItem::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::MonoListItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object data
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::MonoListItem::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoListItem::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Delegate[] delegates
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Delegate*>& System::MulticastDelegate::dyn_delegates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MulticastDelegate::dyn_delegates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delegates"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Delegate*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.MulticastDelegate.LastIndexOf
int System::MulticastDelegate::LastIndexOf(::ArrayW<::System::Delegate*> haystack, ::ArrayW<::System::Delegate*> needle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MulticastDelegate::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(haystack), ::il2cpp_utils::ExtractType(needle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, haystack, needle);
}
// Autogenerated method: System.MulticastDelegate.GetObjectData
void System::MulticastDelegate::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MulticastDelegate::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.MulticastDelegate.DynamicInvokeImpl
::Il2CppObject* System::MulticastDelegate::DynamicInvokeImpl(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MulticastDelegate::DynamicInvokeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DynamicInvokeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, args);
}
// Autogenerated method: System.MulticastDelegate.Equals
bool System::MulticastDelegate::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MulticastDelegate::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.MulticastDelegate.GetHashCode
int System::MulticastDelegate::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MulticastDelegate::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.MulticastDelegate.GetMethodImpl
::System::Reflection::MethodInfo* System::MulticastDelegate::GetMethodImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MulticastDelegate::GetMethodImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.MulticastDelegate.GetInvocationList
::ArrayW<::System::Delegate*> System::MulticastDelegate::GetInvocationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MulticastDelegate::GetInvocationList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInvocationList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Delegate*>, false>(this, ___internal__method);
}
// Autogenerated method: System.MulticastDelegate.CombineImpl
::System::Delegate* System::MulticastDelegate::CombineImpl(::System::Delegate* follow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MulticastDelegate::CombineImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CombineImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(follow)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(this, ___internal__method, follow);
}
// Autogenerated method: System.MulticastDelegate.RemoveImpl
::System::Delegate* System::MulticastDelegate::RemoveImpl(::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MulticastDelegate::RemoveImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.NullConsoleDriver
#include "System/NullConsoleDriver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.ConsoleKeyInfo EmptyConsoleKeyInfo
::System::ConsoleKeyInfo System::NullConsoleDriver::_get_EmptyConsoleKeyInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::NullConsoleDriver::_get_EmptyConsoleKeyInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ConsoleKeyInfo>("System", "NullConsoleDriver", "EmptyConsoleKeyInfo"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.ConsoleKeyInfo EmptyConsoleKeyInfo
void System::NullConsoleDriver::_set_EmptyConsoleKeyInfo(::System::ConsoleKeyInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::NullConsoleDriver::_set_EmptyConsoleKeyInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "NullConsoleDriver", "EmptyConsoleKeyInfo", value));
}
// Autogenerated method: System.NullConsoleDriver..cctor
void System::NullConsoleDriver::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::NullConsoleDriver::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "NullConsoleDriver", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.NullConsoleDriver.ReadKey
::System::ConsoleKeyInfo System::NullConsoleDriver::ReadKey(bool intercept) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::NullConsoleDriver::ReadKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(intercept)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ConsoleKeyInfo, false>(this, ___internal__method, intercept);
}
