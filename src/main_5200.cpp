// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.RC4
#include "Mono/Security/Cryptography/RC4_.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
::ArrayW<::System::Security::Cryptography::KeySizes*> Mono::Security::Cryptography::RC4_::_get_s_legalBlockSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4_::_get_s_legalBlockSizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("Mono.Security.Cryptography", "RC4", "s_legalBlockSizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
void Mono::Security::Cryptography::RC4_::_set_s_legalBlockSizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4_::_set_s_legalBlockSizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "RC4", "s_legalBlockSizes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
::ArrayW<::System::Security::Cryptography::KeySizes*> Mono::Security::Cryptography::RC4_::_get_s_legalKeySizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4_::_get_s_legalKeySizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("Mono.Security.Cryptography", "RC4", "s_legalKeySizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
void Mono::Security::Cryptography::RC4_::_set_s_legalKeySizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4_::_set_s_legalKeySizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "RC4", "s_legalKeySizes", value));
}
// Autogenerated method: Mono.Security.Cryptography.RC4..cctor
void Mono::Security::Cryptography::RC4_::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4_::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "RC4", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RC4.Create
::Mono::Security::Cryptography::RC4_* Mono::Security::Cryptography::RC4_::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4_::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "RC4", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Cryptography::RC4_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RC4.get_IV
::ArrayW<uint8_t> Mono::Security::Cryptography::RC4_::get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4_::get_IV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RC4.set_IV
void Mono::Security::Cryptography::RC4_::set_IV(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4_::set_IV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.RSAManaged
#include "Mono/Security/Cryptography/RSAManaged_.hpp"
// Including type: Mono.Security.Cryptography.RSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/RSAManaged__KeyGeneratedEventHandler.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger_.hpp"
// Including type: System.Security.Cryptography.RSAParameters
#include "System/Security/Cryptography/RSAParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isCRTpossible
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::RSAManaged_::dyn_isCRTpossible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_isCRTpossible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isCRTpossible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean keyBlinding
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::RSAManaged_::dyn_keyBlinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_keyBlinding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyBlinding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean keypairGenerated
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::RSAManaged_::dyn_keypairGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_keypairGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keypairGenerated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::RSAManaged_::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger d
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::RSAManaged_::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger p
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::RSAManaged_::dyn_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_p");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger q
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::RSAManaged_::dyn_q() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_q");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "q"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger dp
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::RSAManaged_::dyn_dp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_dp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dp"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger dq
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::RSAManaged_::dyn_dq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_dq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dq"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger qInv
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::RSAManaged_::dyn_qInv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_qInv");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qInv"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger n
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::RSAManaged_::dyn_n() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_n");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "n"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger e
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::RSAManaged_::dyn_e() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_e");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "e"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Cryptography.RSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler KeyGenerated
[[deprecated("Use field access instead!")]] ::Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler*& Mono::Security::Cryptography::RSAManaged_::dyn_KeyGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::dyn_KeyGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyGenerated"))->offset;
  return *reinterpret_cast<::Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.get_PublicOnly
bool Mono::Security::Cryptography::RSAManaged_::get_PublicOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::get_PublicOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.add_KeyGenerated
void Mono::Security::Cryptography::RSAManaged_::add_KeyGenerated(::Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::add_KeyGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_KeyGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.remove_KeyGenerated
void Mono::Security::Cryptography::RSAManaged_::remove_KeyGenerated(::Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::remove_KeyGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_KeyGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.GenerateKeyPair
void Mono::Security::Cryptography::RSAManaged_::GenerateKeyPair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::GenerateKeyPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKeyPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.GetPaddedValue
::ArrayW<uint8_t> Mono::Security::Cryptography::RSAManaged_::GetPaddedValue(::Mono::Math::BigInteger_* value, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::GetPaddedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, value, length);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.get_KeySize
int Mono::Security::Cryptography::RSAManaged_::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::get_KeySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.Finalize
void Mono::Security::Cryptography::RSAManaged_::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.EncryptValue
::ArrayW<uint8_t> Mono::Security::Cryptography::RSAManaged_::EncryptValue(::ArrayW<uint8_t> rgb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::EncryptValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgb)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, rgb);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.ExportParameters
::System::Security::Cryptography::RSAParameters Mono::Security::Cryptography::RSAManaged_::ExportParameters(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::ExportParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExportParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includePrivateParameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSAParameters, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.ImportParameters
void Mono::Security::Cryptography::RSAManaged_::ImportParameters(::System::Security::Cryptography::RSAParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::ImportParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.Dispose
void Mono::Security::Cryptography::RSAManaged_::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.ToXmlString
::StringW Mono::Security::Cryptography::RSAManaged_::ToXmlString(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::ToXmlString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXmlString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includePrivateParameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.RSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/RSAManaged__KeyGeneratedEventHandler.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.RSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler.Invoke
void Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler::Invoke(::Il2CppObject* sender, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler.BeginInvoke
::System::IAsyncResult* Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::EventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler.EndInvoke
void Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged_::KeyGeneratedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.SymmetricTransform
#include "Mono/Security/Cryptography/SymmetricTransform.hpp"
// Including type: System.Security.Cryptography.SymmetricAlgorithm
#include "System/Security/Cryptography/SymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Security.Cryptography.SymmetricAlgorithm algo
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::SymmetricAlgorithm*& Mono::Security::Cryptography::SymmetricTransform::dyn_algo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_algo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "algo"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::SymmetricAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean encrypt
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::SymmetricTransform::dyn_encrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_encrypt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encrypt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 BlockSizeByte
[[deprecated("Use field access instead!")]] int& Mono::Security::Cryptography::SymmetricTransform::dyn_BlockSizeByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_BlockSizeByte");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BlockSizeByte"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Byte[] temp
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::SymmetricTransform::dyn_temp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_temp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "temp"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Byte[] temp2
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::SymmetricTransform::dyn_temp2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_temp2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "temp2"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] workBuff
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::SymmetricTransform::dyn_workBuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_workBuff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workBuff"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] workout
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::SymmetricTransform::dyn_workout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_workout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workout"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Security.Cryptography.PaddingMode padmode
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::PaddingMode& Mono::Security::Cryptography::SymmetricTransform::dyn_padmode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_padmode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "padmode"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::PaddingMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 FeedBackByte
[[deprecated("Use field access instead!")]] int& Mono::Security::Cryptography::SymmetricTransform::dyn_FeedBackByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_FeedBackByte");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FeedBackByte"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::SymmetricTransform::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean lastBlock
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::SymmetricTransform::dyn_lastBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn_lastBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastBlock"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RandomNumberGenerator _rng
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RandomNumberGenerator*& Mono::Security::Cryptography::SymmetricTransform::dyn__rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::dyn__rng");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rng"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RandomNumberGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_CanTransformMultipleBlocks
bool Mono::Security::Cryptography::SymmetricTransform::get_CanTransformMultipleBlocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::get_CanTransformMultipleBlocks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanTransformMultipleBlocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_InputBlockSize
int Mono::Security::Cryptography::SymmetricTransform::get_InputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::get_InputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_OutputBlockSize
int Mono::Security::Cryptography::SymmetricTransform::get_OutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::get_OutputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.get_KeepLastBlock
bool Mono::Security::Cryptography::SymmetricTransform::get_KeepLastBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::get_KeepLastBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeepLastBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.System.IDisposable.Dispose
void Mono::Security::Cryptography::SymmetricTransform::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.Dispose
void Mono::Security::Cryptography::SymmetricTransform::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.Transform
void Mono::Security::Cryptography::SymmetricTransform::Transform(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::Transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.ECB
void Mono::Security::Cryptography::SymmetricTransform::ECB(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::ECB");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ECB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.CBC
void Mono::Security::Cryptography::SymmetricTransform::CBC(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::CBC");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CBC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.CFB
void Mono::Security::Cryptography::SymmetricTransform::CFB(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::CFB");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CFB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.OFB
void Mono::Security::Cryptography::SymmetricTransform::OFB(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::OFB");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OFB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.CTS
void Mono::Security::Cryptography::SymmetricTransform::CTS(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::CTS");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CTS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.CheckInput
void Mono::Security::Cryptography::SymmetricTransform::CheckInput(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::CheckInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.TransformBlock
int Mono::Security::Cryptography::SymmetricTransform::TransformBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount, ::ArrayW<uint8_t> outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::TransformBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.InternalTransformBlock
int Mono::Security::Cryptography::SymmetricTransform::InternalTransformBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount, ::ArrayW<uint8_t> outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::InternalTransformBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalTransformBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.Random
void Mono::Security::Cryptography::SymmetricTransform::Random(::ArrayW<uint8_t> buffer, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::Random");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Random", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, start, length);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.ThrowBadPaddingException
void Mono::Security::Cryptography::SymmetricTransform::ThrowBadPaddingException(::System::Security::Cryptography::PaddingMode padding, int length, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::ThrowBadPaddingException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowBadPaddingException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, padding, length, position);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.FinalEncrypt
::ArrayW<uint8_t> Mono::Security::Cryptography::SymmetricTransform::FinalEncrypt(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::FinalEncrypt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalEncrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.FinalDecrypt
::ArrayW<uint8_t> Mono::Security::Cryptography::SymmetricTransform::FinalDecrypt(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::FinalDecrypt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalDecrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.TransformFinalBlock
::ArrayW<uint8_t> Mono::Security::Cryptography::SymmetricTransform::TransformFinalBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::TransformFinalBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformFinalBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.SymmetricTransform.Finalize
void Mono::Security::Cryptography::SymmetricTransform::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::SymmetricTransform::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.DSAManaged
#include "Mono/Security/Cryptography/DSAManaged.hpp"
// Including type: Mono.Security.Cryptography.DSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/DSAManaged_KeyGeneratedEventHandler.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger_.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.Security.Cryptography.DSAParameters
#include "System/Security/Cryptography/DSAParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean keypairGenerated
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::DSAManaged::dyn_keypairGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_keypairGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keypairGenerated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::DSAManaged::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger p
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::DSAManaged::dyn_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_p");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger q
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::DSAManaged::dyn_q() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_q");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "q"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger g
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::DSAManaged::dyn_g() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_g");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "g"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger x
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::DSAManaged::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger y
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::DSAManaged::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger j
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::DSAManaged::dyn_j() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_j");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "j"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger seed
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Security::Cryptography::DSAManaged::dyn_seed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_seed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seed"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 counter
[[deprecated("Use field access instead!")]] int& Mono::Security::Cryptography::DSAManaged::dyn_counter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_counter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "counter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean j_missing
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::DSAManaged::dyn_j_missing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_j_missing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "j_missing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RandomNumberGenerator rng
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RandomNumberGenerator*& Mono::Security::Cryptography::DSAManaged::dyn_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_rng");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rng"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RandomNumberGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Cryptography.DSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler KeyGenerated
[[deprecated("Use field access instead!")]] ::Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler*& Mono::Security::Cryptography::DSAManaged::dyn_KeyGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::dyn_KeyGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyGenerated"))->offset;
  return *reinterpret_cast<::Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.get_Random
::System::Security::Cryptography::RandomNumberGenerator* Mono::Security::Cryptography::DSAManaged::get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::get_Random");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Random", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.get_PublicOnly
bool Mono::Security::Cryptography::DSAManaged::get_PublicOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::get_PublicOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.add_KeyGenerated
void Mono::Security::Cryptography::DSAManaged::add_KeyGenerated(::Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::add_KeyGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_KeyGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.remove_KeyGenerated
void Mono::Security::Cryptography::DSAManaged::remove_KeyGenerated(::Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::remove_KeyGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_KeyGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.Generate
void Mono::Security::Cryptography::DSAManaged::Generate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::Generate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Generate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.GenerateKeyPair
void Mono::Security::Cryptography::DSAManaged::GenerateKeyPair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::GenerateKeyPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKeyPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.add
void Mono::Security::Cryptography::DSAManaged::add(::ArrayW<uint8_t> a, ::ArrayW<uint8_t> b, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b, value);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.GenerateParams
void Mono::Security::Cryptography::DSAManaged::GenerateParams(int keyLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::GenerateParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyLength);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.NormalizeArray
::ArrayW<uint8_t> Mono::Security::Cryptography::DSAManaged::NormalizeArray(::ArrayW<uint8_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::NormalizeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NormalizeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, array);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.get_KeySize
int Mono::Security::Cryptography::DSAManaged::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::get_KeySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.Finalize
void Mono::Security::Cryptography::DSAManaged::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.ExportParameters
::System::Security::Cryptography::DSAParameters Mono::Security::Cryptography::DSAManaged::ExportParameters(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::ExportParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExportParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includePrivateParameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSAParameters, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.ImportParameters
void Mono::Security::Cryptography::DSAManaged::ImportParameters(::System::Security::Cryptography::DSAParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::ImportParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.VerifySignature
bool Mono::Security::Cryptography::DSAManaged::VerifySignature(::ArrayW<uint8_t> rgbHash, ::ArrayW<uint8_t> rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::VerifySignature");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbHash), ::il2cpp_utils::ExtractType(rgbSignature)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rgbHash, rgbSignature);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged.Dispose
void Mono::Security::Cryptography::DSAManaged::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.DSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/DSAManaged_KeyGeneratedEventHandler.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.DSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler.Invoke
void Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::Invoke(::Il2CppObject* sender, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler.BeginInvoke
::System::IAsyncResult* Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::EventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: Mono.Security.Cryptography.DSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler.EndInvoke
void Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::DSAManaged::KeyGeneratedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger_.hpp"
// Including type: Mono.Math.BigInteger/Mono.Math.ModulusRing
#include "Mono/Math/BigInteger__ModulusRing.hpp"
// Including type: Mono.Math.BigInteger/Mono.Math.Kernel
#include "Mono/Math/BigInteger__Kernel.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] smallPrimes
::ArrayW<uint> Mono::Math::BigInteger_::_get_smallPrimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::_get_smallPrimes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("Mono.Math", "BigInteger", "smallPrimes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] smallPrimes
void Mono::Math::BigInteger_::_set_smallPrimes(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::_set_smallPrimes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger", "smallPrimes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator rng
::System::Security::Cryptography::RandomNumberGenerator* Mono::Math::BigInteger_::_get_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::_get_rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RandomNumberGenerator*>("Mono.Math", "BigInteger", "rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator rng
void Mono::Math::BigInteger_::_set_rng(::System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::_set_rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger", "rng", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 length
[[deprecated("Use field access instead!")]] uint& Mono::Math::BigInteger_::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] data
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Mono::Math::BigInteger_::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Math.BigInteger.get_Rng
::System::Security::Cryptography::RandomNumberGenerator* Mono::Math::BigInteger_::get_Rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::get_Rng");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "get_Rng", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger..cctor
void Mono::Math::BigInteger_::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GenerateRandom
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::GenerateRandom(int bits, ::System::Security::Cryptography::RandomNumberGenerator* rng) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GenerateRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(rng)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bits, rng);
}
// Autogenerated method: Mono.Math.BigInteger.GenerateRandom
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::GenerateRandom(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GenerateRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bits);
}
// Autogenerated method: Mono.Math.BigInteger.Randomize
void Mono::Math::BigInteger_::Randomize(::System::Security::Cryptography::RandomNumberGenerator* rng) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Randomize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Randomize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rng)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rng);
}
// Autogenerated method: Mono.Math.BigInteger.Randomize
void Mono::Math::BigInteger_::Randomize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Randomize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Randomize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.BitCount
int Mono::Math::BigInteger_::BitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::BitCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BitCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.TestBit
bool Mono::Math::BigInteger_::TestBit(uint bitNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::TestBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bitNum);
}
// Autogenerated method: Mono.Math.BigInteger.TestBit
bool Mono::Math::BigInteger_::TestBit(int bitNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::TestBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bitNum);
}
// Autogenerated method: Mono.Math.BigInteger.SetBit
void Mono::Math::BigInteger_::SetBit(uint bitNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::SetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bitNum);
}
// Autogenerated method: Mono.Math.BigInteger.SetBit
void Mono::Math::BigInteger_::SetBit(uint bitNum, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::SetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bitNum, value);
}
// Autogenerated method: Mono.Math.BigInteger.LowestSetBit
int Mono::Math::BigInteger_::LowestSetBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::LowestSetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LowestSetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GetBytes
::ArrayW<uint8_t> Mono::Math::BigInteger_::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::StringW Mono::Math::BigInteger_::ToString(uint radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, radix);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::StringW Mono::Math::BigInteger_::ToString(uint radix, ::StringW characterSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radix), ::il2cpp_utils::ExtractType(characterSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, radix, characterSet);
}
// Autogenerated method: Mono.Math.BigInteger.Normalize
void Mono::Math::BigInteger_::Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.Clear
void Mono::Math::BigInteger_::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ModInverse
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::ModInverse(::Mono::Math::BigInteger_* modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modulus)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, modulus);
}
// Autogenerated method: Mono.Math.BigInteger.ModPow
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::ModPow(::Mono::Math::BigInteger_* exp, ::Mono::Math::BigInteger_* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModPow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModPow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exp), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, exp, n);
}
// Autogenerated method: Mono.Math.BigInteger.IsProbablePrime
bool Mono::Math::BigInteger_::IsProbablePrime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::IsProbablePrime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsProbablePrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GeneratePseudoPrime
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::GeneratePseudoPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::GeneratePseudoPrime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GeneratePseudoPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bits);
}
// Autogenerated method: Mono.Math.BigInteger.Incr2
void Mono::Math::BigInteger_::Incr2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Incr2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Incr2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GetHashCode
int Mono::Math::BigInteger_::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::StringW Mono::Math::BigInteger_::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.Equals
bool Mono::Math::BigInteger_::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: Mono.Math.BigInteger.op_Subtraction
::Mono::Math::BigInteger_* Mono::Math::operator-(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Modulus
uint Mono::Math::operator%(::Mono::Math::BigInteger_& bi, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Modulus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Modulus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi), ::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Modulus
::Mono::Math::BigInteger_* Mono::Math::operator%(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Modulus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Modulus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Division
::Mono::Math::BigInteger_* Mono::Math::operator/(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Multiply
::Mono::Math::BigInteger_* Mono::Math::operator*(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Multiply
::Mono::Math::BigInteger_* Mono::Math::operator*(::Mono::Math::BigInteger_& bi, const int& i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi, i);
}
// Autogenerated method: Mono.Math.BigInteger.op_LeftShift
::Mono::Math::BigInteger_* Mono::Math::operator<<(::Mono::Math::BigInteger_& bi1, const int& shiftVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_LeftShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LeftShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(shiftVal)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi1, shiftVal);
}
// Autogenerated method: Mono.Math.BigInteger.op_RightShift
::Mono::Math::BigInteger_* Mono::Math::operator>>(::Mono::Math::BigInteger_& bi1, const int& shiftVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_RightShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_RightShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(shiftVal)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi1, shiftVal);
}
// Autogenerated method: Mono.Math.BigInteger.op_Equality
bool Mono::Math::operator ==(::Mono::Math::BigInteger_& bi1, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi1, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Inequality
bool Mono::Math::operator !=(::Mono::Math::BigInteger_& bi1, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi1, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Equality
bool Mono::Math::operator ==(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Inequality
bool Mono::Math::operator !=(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_GreaterThan
bool Mono::Math::operator >(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LessThan
bool Mono::Math::operator <(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_GreaterThanOrEqual
bool Mono::Math::operator >=(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LessThanOrEqual
bool Mono::Math::operator <=(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/Mono.Math.Sign
#include "Mono/Math/BigInteger_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Mono.Math.Sign Negative
::Mono::Math::BigInteger_::Sign Mono::Math::BigInteger_::Sign::_get_Negative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Sign::_get_Negative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::BigInteger_::Sign>("Mono.Math", "BigInteger/Sign", "Negative"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Mono.Math.Sign Negative
void Mono::Math::BigInteger_::Sign::_set_Negative(::Mono::Math::BigInteger_::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Sign::_set_Negative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Negative", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Mono.Math.Sign Zero
::Mono::Math::BigInteger_::Sign Mono::Math::BigInteger_::Sign::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Sign::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::BigInteger_::Sign>("Mono.Math", "BigInteger/Sign", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Mono.Math.Sign Zero
void Mono::Math::BigInteger_::Sign::_set_Zero(::Mono::Math::BigInteger_::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Sign::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Mono.Math.Sign Positive
::Mono::Math::BigInteger_::Sign Mono::Math::BigInteger_::Sign::_get_Positive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Sign::_get_Positive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::BigInteger_::Sign>("Mono.Math", "BigInteger/Sign", "Positive"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Mono.Math.Sign Positive
void Mono::Math::BigInteger_::Sign::_set_Positive(::Mono::Math::BigInteger_::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Sign::_set_Positive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Positive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Math::BigInteger_::Sign::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Sign::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/Mono.Math.ModulusRing
#include "Mono/Math/BigInteger__ModulusRing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger mod
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Math::BigInteger_::ModulusRing::dyn_mod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModulusRing::dyn_mod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mod"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger constant
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger_*& Mono::Math::BigInteger_::ModulusRing::dyn_constant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModulusRing::dyn_constant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constant"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.ModulusRing.BarrettReduction
void Mono::Math::BigInteger_::ModulusRing::BarrettReduction(::Mono::Math::BigInteger_* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModulusRing::BarrettReduction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BarrettReduction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.ModulusRing.Multiply
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::ModulusRing::Multiply(::Mono::Math::BigInteger_* a, ::Mono::Math::BigInteger_* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModulusRing::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.ModulusRing.Difference
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::ModulusRing::Difference(::Mono::Math::BigInteger_* a, ::Mono::Math::BigInteger_* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModulusRing::Difference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Difference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.ModulusRing.Pow
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::ModulusRing::Pow(::Mono::Math::BigInteger_* a, ::Mono::Math::BigInteger_* k) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModulusRing::Pow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(k)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, a, k);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.ModulusRing.Pow
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::ModulusRing::Pow(uint b, ::Mono::Math::BigInteger_* exp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::ModulusRing::Pow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(exp)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, b, exp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/Mono.Math.Kernel
#include "Mono/Math/BigInteger__Kernel.hpp"
// Including type: Mono.Math.BigInteger/Mono.Math.Sign
#include "Mono/Math/BigInteger_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.Subtract
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::Kernel::Subtract(::Mono::Math::BigInteger_* big, ::Mono::Math::BigInteger_* small) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(big), ::il2cpp_utils::ExtractType(small)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, big, small);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.MinusEq
void Mono::Math::BigInteger_::Kernel::MinusEq(::Mono::Math::BigInteger_* big, ::Mono::Math::BigInteger_* small) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::MinusEq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "MinusEq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(big), ::il2cpp_utils::ExtractType(small)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, big, small);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.PlusEq
void Mono::Math::BigInteger_::Kernel::PlusEq(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::PlusEq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "PlusEq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.Compare
::Mono::Math::BigInteger_::Sign Mono::Math::BigInteger_::Kernel::Compare(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_::Sign, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.SingleByteDivideInPlace
uint Mono::Math::BigInteger_::Kernel::SingleByteDivideInPlace(::Mono::Math::BigInteger_* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::SingleByteDivideInPlace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "SingleByteDivideInPlace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.DwordMod
uint Mono::Math::BigInteger_::Kernel::DwordMod(::Mono::Math::BigInteger_* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::DwordMod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "DwordMod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.DwordDivMod
::ArrayW<::Mono::Math::BigInteger_*> Mono::Math::BigInteger_::Kernel::DwordDivMod(::Mono::Math::BigInteger_* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::DwordDivMod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "DwordDivMod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Math::BigInteger_*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.multiByteDivide
::ArrayW<::Mono::Math::BigInteger_*> Mono::Math::BigInteger_::Kernel::multiByteDivide(::Mono::Math::BigInteger_* bi1, ::Mono::Math::BigInteger_* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::multiByteDivide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "multiByteDivide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Math::BigInteger_*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.LeftShift
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::Kernel::LeftShift(::Mono::Math::BigInteger_* bi, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::LeftShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "LeftShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, n);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.RightShift
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::Kernel::RightShift(::Mono::Math::BigInteger_* bi, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::RightShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "RightShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, n);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.MultiplyByDword
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::Kernel::MultiplyByDword(::Mono::Math::BigInteger_* n, uint f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::MultiplyByDword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "MultiplyByDword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, f);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.Multiply
void Mono::Math::BigInteger_::Kernel::Multiply(::ArrayW<uint> x, uint xOffset, uint xLen, ::ArrayW<uint> y, uint yOffset, uint yLen, ::ArrayW<uint> d, uint dOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(xOffset), ::il2cpp_utils::ExtractType(xLen), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(yOffset), ::il2cpp_utils::ExtractType(yLen), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(dOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, xOffset, xLen, y, yOffset, yLen, d, dOffset);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.MultiplyMod2p32pmod
void Mono::Math::BigInteger_::Kernel::MultiplyMod2p32pmod(::ArrayW<uint> x, int xOffset, int xLen, ::ArrayW<uint> y, int yOffest, int yLen, ::ArrayW<uint> d, int dOffset, int mod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::MultiplyMod2p32pmod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "MultiplyMod2p32pmod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(xOffset), ::il2cpp_utils::ExtractType(xLen), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(yOffest), ::il2cpp_utils::ExtractType(yLen), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(dOffset), ::il2cpp_utils::ExtractType(mod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, xOffset, xLen, y, yOffest, yLen, d, dOffset, mod);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.modInverse
uint Mono::Math::BigInteger_::Kernel::modInverse(::Mono::Math::BigInteger_* bi, uint modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::modInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "modInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(modulus)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, modulus);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.modInverse
::Mono::Math::BigInteger_* Mono::Math::BigInteger_::Kernel::modInverse(::Mono::Math::BigInteger_* bi, ::Mono::Math::BigInteger_* modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger_::Kernel::modInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "modInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(modulus)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, modulus);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor ExtraLow
::Mono::Math::Prime::ConfidenceFactor_ Mono::Math::Prime::ConfidenceFactor_::_get_ExtraLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_get_ExtraLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor_>("Mono.Math.Prime", "ConfidenceFactor", "ExtraLow"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor ExtraLow
void Mono::Math::Prime::ConfidenceFactor_::_set_ExtraLow(::Mono::Math::Prime::ConfidenceFactor_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_set_ExtraLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "ExtraLow", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Low
::Mono::Math::Prime::ConfidenceFactor_ Mono::Math::Prime::ConfidenceFactor_::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor_>("Mono.Math.Prime", "ConfidenceFactor", "Low"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Low
void Mono::Math::Prime::ConfidenceFactor_::_set_Low(::Mono::Math::Prime::ConfidenceFactor_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Medium
::Mono::Math::Prime::ConfidenceFactor_ Mono::Math::Prime::ConfidenceFactor_::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor_>("Mono.Math.Prime", "ConfidenceFactor", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Medium
void Mono::Math::Prime::ConfidenceFactor_::_set_Medium(::Mono::Math::Prime::ConfidenceFactor_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor High
::Mono::Math::Prime::ConfidenceFactor_ Mono::Math::Prime::ConfidenceFactor_::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor_>("Mono.Math.Prime", "ConfidenceFactor", "High"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor High
void Mono::Math::Prime::ConfidenceFactor_::_set_High(::Mono::Math::Prime::ConfidenceFactor_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "High", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor ExtraHigh
::Mono::Math::Prime::ConfidenceFactor_ Mono::Math::Prime::ConfidenceFactor_::_get_ExtraHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_get_ExtraHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor_>("Mono.Math.Prime", "ConfidenceFactor", "ExtraHigh"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor ExtraHigh
void Mono::Math::Prime::ConfidenceFactor_::_set_ExtraHigh(::Mono::Math::Prime::ConfidenceFactor_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_set_ExtraHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "ExtraHigh", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Provable
::Mono::Math::Prime::ConfidenceFactor_ Mono::Math::Prime::ConfidenceFactor_::_get_Provable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_get_Provable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor_>("Mono.Math.Prime", "ConfidenceFactor", "Provable"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Provable
void Mono::Math::Prime::ConfidenceFactor_::_set_Provable(::Mono::Math::Prime::ConfidenceFactor_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::_set_Provable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Provable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Math::Prime::ConfidenceFactor_::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor_::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.Prime.PrimalityTest
#include "Mono/Math/Prime/PrimalityTest_.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger_.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor_.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.PrimalityTest.Invoke
bool Mono::Math::Prime::PrimalityTest_::Invoke(::Mono::Math::BigInteger_* bi, ::Mono::Math::Prime::ConfidenceFactor_ confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTest_::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bi, confidence);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTest.BeginInvoke
::System::IAsyncResult* Mono::Math::Prime::PrimalityTest_::BeginInvoke(::Mono::Math::BigInteger_* bi, ::Mono::Math::Prime::ConfidenceFactor_ confidence, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTest_::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(confidence), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, bi, confidence, callback, object);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTest.EndInvoke
bool Mono::Math::Prime::PrimalityTest_::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTest_::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.PrimalityTests
#include "Mono/Math/Prime/PrimalityTests_.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger_.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.PrimalityTests.GetSPPRounds
int Mono::Math::Prime::PrimalityTests_::GetSPPRounds(::Mono::Math::BigInteger_* bi, ::Mono::Math::Prime::ConfidenceFactor_ confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTests_::GetSPPRounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", "GetSPPRounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, confidence);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTests.Test
bool Mono::Math::Prime::PrimalityTests_::Test(::Mono::Math::BigInteger_* n, ::Mono::Math::Prime::ConfidenceFactor_ confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTests_::Test");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", "Test", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, confidence);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTests.RabinMillerTest
bool Mono::Math::Prime::PrimalityTests_::RabinMillerTest(::Mono::Math::BigInteger_* n, ::Mono::Math::Prime::ConfidenceFactor_ confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTests_::RabinMillerTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", "RabinMillerTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, confidence);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTests.SmallPrimeSppTest
bool Mono::Math::Prime::PrimalityTests_::SmallPrimeSppTest(::Mono::Math::BigInteger_* bi, ::Mono::Math::Prime::ConfidenceFactor_ confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTests_::SmallPrimeSppTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", "SmallPrimeSppTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, confidence);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.Generator.PrimeGeneratorBase
#include "Mono/Math/Prime/Generator/PrimeGeneratorBase_.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor_.hpp"
// Including type: Mono.Math.Prime.PrimalityTest
#include "Mono/Math/Prime/PrimalityTest_.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_Confidence
::Mono::Math::Prime::ConfidenceFactor_ Mono::Math::Prime::Generator::PrimeGeneratorBase_::get_Confidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::PrimeGeneratorBase_::get_Confidence");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Confidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::Prime::ConfidenceFactor_, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_PrimalityTest
::Mono::Math::Prime::PrimalityTest_* Mono::Math::Prime::Generator::PrimeGeneratorBase_::get_PrimalityTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::PrimeGeneratorBase_::get_PrimalityTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrimalityTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::Prime::PrimalityTest_*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_TrialDivisionBounds
int Mono::Math::Prime::Generator::PrimeGeneratorBase_::get_TrialDivisionBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::PrimeGeneratorBase_::get_TrialDivisionBounds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrialDivisionBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.GenerateNewPrime
::Mono::Math::BigInteger_* Mono::Math::Prime::Generator::PrimeGeneratorBase_::GenerateNewPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::PrimeGeneratorBase_::GenerateNewPrime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateNewPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, bits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase
#include "Mono/Math/Prime/Generator/SequentialSearchPrimeGeneratorBase_.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateSearchBase
::Mono::Math::BigInteger_* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_::GenerateSearchBase(int bits, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_::GenerateSearchBase");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSearchBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, bits, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateNewPrime
::Mono::Math::BigInteger_* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_::GenerateNewPrime(int bits, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_::GenerateNewPrime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateNewPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, bits, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.IsPrimeAcceptable
bool Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_::IsPrimeAcceptable(::Mono::Math::BigInteger_* bi, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_::IsPrimeAcceptable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrimeAcceptable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bi, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateNewPrime
::Mono::Math::BigInteger_* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_::GenerateNewPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase_::GenerateNewPrime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateNewPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger_*, false>(this, ___internal__method, bits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.IRegistryApi
#include "Microsoft/Win32/IRegistryApi.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.IRegistryApi.OpenSubKey
::Microsoft::Win32::RegistryKey* Microsoft::Win32::IRegistryApi::OpenSubKey(::Microsoft::Win32::RegistryKey* rkey, ::StringW keyname, bool writtable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::IRegistryApi::OpenSubKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenSubKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(keyname), ::il2cpp_utils::ExtractType(writtable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, rkey, keyname, writtable);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.Flush
void Microsoft::Win32::IRegistryApi::Flush(::Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::IRegistryApi::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.Close
void Microsoft::Win32::IRegistryApi::Close(::Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::IRegistryApi::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.GetValue
::Il2CppObject* Microsoft::Win32::IRegistryApi::GetValue(::Microsoft::Win32::RegistryKey* rkey, ::StringW name, ::Il2CppObject* default_value, ::Microsoft::Win32::RegistryValueOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::IRegistryApi::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(default_value), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, rkey, name, default_value, options);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.GetSubKeyNames
::ArrayW<::StringW> Microsoft::Win32::IRegistryApi::GetSubKeyNames(::Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::IRegistryApi::GetSubKeyNames");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubKeyNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.ToString
::StringW Microsoft::Win32::IRegistryApi::ToString(::Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::IRegistryApi::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.IRegistryApi.GetHandle
::System::IntPtr Microsoft::Win32::IRegistryApi::GetHandle(::Microsoft::Win32::RegistryKey* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::IRegistryApi::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.Registry
#include "Microsoft/Win32/Registry.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey ClassesRoot
::Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_ClassesRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Registry::_get_ClassesRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "ClassesRoot"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey ClassesRoot
void Microsoft::Win32::Registry::_set_ClassesRoot(::Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Registry::_set_ClassesRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "ClassesRoot", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey CurrentConfig
::Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_CurrentConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Registry::_get_CurrentConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "CurrentConfig"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey CurrentConfig
void Microsoft::Win32::Registry::_set_CurrentConfig(::Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Registry::_set_CurrentConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "CurrentConfig", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey CurrentUser
::Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_CurrentUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Registry::_get_CurrentUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "CurrentUser"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey CurrentUser
void Microsoft::Win32::Registry::_set_CurrentUser(::Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Registry::_set_CurrentUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "CurrentUser", value));
}
// [ObsoleteAttribute] Offset: 0x107CC98
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey DynData
::Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_DynData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Registry::_get_DynData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "DynData"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey DynData
void Microsoft::Win32::Registry::_set_DynData(::Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Registry::_set_DynData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "DynData", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey LocalMachine
::Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_LocalMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Registry::_get_LocalMachine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "LocalMachine"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey LocalMachine
void Microsoft::Win32::Registry::_set_LocalMachine(::Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Registry::_set_LocalMachine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "LocalMachine", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey PerformanceData
::Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_PerformanceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Registry::_get_PerformanceData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "PerformanceData"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey PerformanceData
void Microsoft::Win32::Registry::_set_PerformanceData(::Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Registry::_set_PerformanceData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "PerformanceData", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Microsoft.Win32.RegistryKey Users
::Microsoft::Win32::RegistryKey* Microsoft::Win32::Registry::_get_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Registry::_get_Users");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryKey*>("Microsoft.Win32", "Registry", "Users"));
}
// Autogenerated static field setter
// Set static field: static public readonly Microsoft.Win32.RegistryKey Users
void Microsoft::Win32::Registry::_set_Users(::Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Registry::_set_Users");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "Registry", "Users", value));
}
// Autogenerated method: Microsoft.Win32.Registry..cctor
void Microsoft::Win32::Registry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Registry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Registry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.RegistryHive
#include "Microsoft/Win32/RegistryHive.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive ClassesRoot
::Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_ClassesRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryHive::_get_ClassesRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "ClassesRoot"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive ClassesRoot
void Microsoft::Win32::RegistryHive::_set_ClassesRoot(::Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryHive::_set_ClassesRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "ClassesRoot", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive CurrentConfig
::Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_CurrentConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryHive::_get_CurrentConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "CurrentConfig"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive CurrentConfig
void Microsoft::Win32::RegistryHive::_set_CurrentConfig(::Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryHive::_set_CurrentConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "CurrentConfig", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive CurrentUser
::Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_CurrentUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryHive::_get_CurrentUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "CurrentUser"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive CurrentUser
void Microsoft::Win32::RegistryHive::_set_CurrentUser(::Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryHive::_set_CurrentUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "CurrentUser", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive DynData
::Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_DynData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryHive::_get_DynData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "DynData"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive DynData
void Microsoft::Win32::RegistryHive::_set_DynData(::Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryHive::_set_DynData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "DynData", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive LocalMachine
::Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_LocalMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryHive::_get_LocalMachine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "LocalMachine"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive LocalMachine
void Microsoft::Win32::RegistryHive::_set_LocalMachine(::Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryHive::_set_LocalMachine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "LocalMachine", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive PerformanceData
::Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_PerformanceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryHive::_get_PerformanceData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "PerformanceData"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive PerformanceData
void Microsoft::Win32::RegistryHive::_set_PerformanceData(::Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryHive::_set_PerformanceData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "PerformanceData", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryHive Users
::Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryHive::_get_Users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryHive::_get_Users");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryHive>("Microsoft.Win32", "RegistryHive", "Users"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryHive Users
void Microsoft::Win32::RegistryHive::_set_Users(::Microsoft::Win32::RegistryHive value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryHive::_set_Users");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryHive", "Users", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Microsoft::Win32::RegistryHive::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryHive::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
#include "Microsoft/Win32/SafeHandles/SafeRegistryHandle.hpp"
// Including type: Microsoft.Win32.IRegistryApi
#include "Microsoft/Win32/IRegistryApi.hpp"
// Including type: System.IO.IOException
#include "System/IO/IOException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Microsoft.Win32.IRegistryApi RegistryApi
::Microsoft::Win32::IRegistryApi* Microsoft::Win32::RegistryKey::_get_RegistryApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::_get_RegistryApi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::IRegistryApi*>("Microsoft.Win32", "RegistryKey", "RegistryApi"));
}
// Autogenerated static field setter
// Set static field: static private readonly Microsoft.Win32.IRegistryApi RegistryApi
void Microsoft::Win32::RegistryKey::_set_RegistryApi(::Microsoft::Win32::IRegistryApi* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::_set_RegistryApi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryKey", "RegistryApi", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object handle
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Microsoft::Win32::RegistryKey::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::dyn_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Microsoft.Win32.SafeHandles.SafeRegistryHandle safe_handle
[[deprecated("Use field access instead!")]] ::Microsoft::Win32::SafeHandles::SafeRegistryHandle*& Microsoft::Win32::RegistryKey::dyn_safe_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::dyn_safe_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "safe_handle"))->offset;
  return *reinterpret_cast<::Microsoft::Win32::SafeHandles::SafeRegistryHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object hive
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Microsoft::Win32::RegistryKey::dyn_hive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::dyn_hive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hive"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String qname
[[deprecated("Use field access instead!")]] ::StringW& Microsoft::Win32::RegistryKey::dyn_qname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::dyn_qname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean isRemoteRoot
[[deprecated("Use field access instead!")]] bool& Microsoft::Win32::RegistryKey::dyn_isRemoteRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::dyn_isRemoteRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRemoteRoot"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean isWritable
[[deprecated("Use field access instead!")]] bool& Microsoft::Win32::RegistryKey::dyn_isWritable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::dyn_isWritable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isWritable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.get_Name
::StringW Microsoft::Win32::RegistryKey::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.get_Handle
::Microsoft::Win32::SafeHandles::SafeRegistryHandle* Microsoft::Win32::RegistryKey::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeRegistryHandle*, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.get_IsRoot
bool Microsoft::Win32::RegistryKey::get_IsRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::get_IsRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.get_Hive
::Microsoft::Win32::RegistryHive Microsoft::Win32::RegistryKey::get_Hive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::get_Hive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::RegistryHive, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.get_InternalHandle
::Il2CppObject* Microsoft::Win32::RegistryKey::get_InternalHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::get_InternalHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey..cctor
void Microsoft::Win32::RegistryKey::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "RegistryKey", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.IsEquals
bool Microsoft::Win32::RegistryKey::IsEquals(::Microsoft::Win32::RegistryKey* a, ::Microsoft::Win32::RegistryKey* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::IsEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "RegistryKey", "IsEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.Dispose
void Microsoft::Win32::RegistryKey::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.Flush
void Microsoft::Win32::RegistryKey::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.Close
void Microsoft::Win32::RegistryKey::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.OpenSubKey
::Microsoft::Win32::RegistryKey* Microsoft::Win32::RegistryKey::OpenSubKey(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::OpenSubKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenSubKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, name);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.OpenSubKey
::Microsoft::Win32::RegistryKey* Microsoft::Win32::RegistryKey::OpenSubKey(::StringW name, bool writable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::OpenSubKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenSubKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(writable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, name, writable);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.GetValue
::Il2CppObject* Microsoft::Win32::RegistryKey::GetValue(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.GetValue
::Il2CppObject* Microsoft::Win32::RegistryKey::GetValue(::StringW name, ::Il2CppObject* defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, defaultValue);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.GetSubKeyNames
::ArrayW<::StringW> Microsoft::Win32::RegistryKey::GetSubKeyNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::GetSubKeyNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubKeyNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.AssertKeyStillValid
void Microsoft::Win32::RegistryKey::AssertKeyStillValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::AssertKeyStillValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssertKeyStillValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.AssertKeyNameLength
void Microsoft::Win32::RegistryKey::AssertKeyNameLength(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::AssertKeyNameLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssertKeyNameLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.DecodeString
::StringW Microsoft::Win32::RegistryKey::DecodeString(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::DecodeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "RegistryKey", "DecodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.CreateMarkedForDeletionException
::System::IO::IOException* Microsoft::Win32::RegistryKey::CreateMarkedForDeletionException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::CreateMarkedForDeletionException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "RegistryKey", "CreateMarkedForDeletionException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::IOException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.GetHiveName
::StringW Microsoft::Win32::RegistryKey::GetHiveName(::Microsoft::Win32::RegistryHive hive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::GetHiveName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "RegistryKey", "GetHiveName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hive)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hive);
}
// Autogenerated method: Microsoft.Win32.RegistryKey.ToString
::StringW Microsoft::Win32::RegistryKey::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKey::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.RegistryValueKind
#include "Microsoft/Win32/RegistryValueKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind Unknown
::Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind Unknown
void Microsoft::Win32::RegistryValueKind::_set_Unknown(::Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind String
::Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "String"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind String
void Microsoft::Win32::RegistryValueKind::_set_String(::Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind ExpandString
::Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_ExpandString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::_get_ExpandString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "ExpandString"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind ExpandString
void Microsoft::Win32::RegistryValueKind::_set_ExpandString(::Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::_set_ExpandString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "ExpandString", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind Binary
::Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind Binary
void Microsoft::Win32::RegistryValueKind::_set_Binary(::Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind DWord
::Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_DWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::_get_DWord");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "DWord"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind DWord
void Microsoft::Win32::RegistryValueKind::_set_DWord(::Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::_set_DWord");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "DWord", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind MultiString
::Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_MultiString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::_get_MultiString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "MultiString"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind MultiString
void Microsoft::Win32::RegistryValueKind::_set_MultiString(::Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::_set_MultiString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "MultiString", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind QWord
::Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_QWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::_get_QWord");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "QWord"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind QWord
void Microsoft::Win32::RegistryValueKind::_set_QWord(::Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::_set_QWord");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "QWord", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueKind None
::Microsoft::Win32::RegistryValueKind Microsoft::Win32::RegistryValueKind::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryValueKind>("Microsoft.Win32", "RegistryValueKind", "None"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueKind None
void Microsoft::Win32::RegistryValueKind::_set_None(::Microsoft::Win32::RegistryValueKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueKind", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Microsoft::Win32::RegistryValueKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueOptions None
::Microsoft::Win32::RegistryValueOptions Microsoft::Win32::RegistryValueOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryValueOptions>("Microsoft.Win32", "RegistryValueOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueOptions None
void Microsoft::Win32::RegistryValueOptions::_set_None(::Microsoft::Win32::RegistryValueOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Microsoft.Win32.RegistryValueOptions DoNotExpandEnvironmentNames
::Microsoft::Win32::RegistryValueOptions Microsoft::Win32::RegistryValueOptions::_get_DoNotExpandEnvironmentNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueOptions::_get_DoNotExpandEnvironmentNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::RegistryValueOptions>("Microsoft.Win32", "RegistryValueOptions", "DoNotExpandEnvironmentNames"));
}
// Autogenerated static field setter
// Set static field: static public Microsoft.Win32.RegistryValueOptions DoNotExpandEnvironmentNames
void Microsoft::Win32::RegistryValueOptions::_set_DoNotExpandEnvironmentNames(::Microsoft::Win32::RegistryValueOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueOptions::_set_DoNotExpandEnvironmentNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "RegistryValueOptions", "DoNotExpandEnvironmentNames", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Microsoft::Win32::RegistryValueOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryValueOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.ExpandString
#include "Microsoft/Win32/ExpandString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String value
[[deprecated("Use field access instead!")]] ::StringW& Microsoft::Win32::ExpandString::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::ExpandString::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Microsoft.Win32.ExpandString.Expand
::StringW Microsoft::Win32::ExpandString::Expand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::ExpandString::Expand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Expand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.ExpandString.ToString
::StringW Microsoft::Win32::ExpandString::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::ExpandString::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.RegistryKeyComparer
#include "Microsoft/Win32/RegistryKeyComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.RegistryKeyComparer.Equals
bool Microsoft::Win32::RegistryKeyComparer::Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKeyComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: Microsoft.Win32.RegistryKeyComparer.GetHashCode
int Microsoft::Win32::RegistryKeyComparer::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::RegistryKeyComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.KeyHandler
#include "Microsoft/Win32/KeyHandler.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable key_to_handler
::System::Collections::Hashtable* Microsoft::Win32::KeyHandler::_get_key_to_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::_get_key_to_handler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("Microsoft.Win32", "KeyHandler", "key_to_handler"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable key_to_handler
void Microsoft::Win32::KeyHandler::_set_key_to_handler(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::_set_key_to_handler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "KeyHandler", "key_to_handler", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable dir_to_handler
::System::Collections::Hashtable* Microsoft::Win32::KeyHandler::_get_dir_to_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::_get_dir_to_handler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("Microsoft.Win32", "KeyHandler", "dir_to_handler"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable dir_to_handler
void Microsoft::Win32::KeyHandler::_set_dir_to_handler(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::_set_dir_to_handler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "KeyHandler", "dir_to_handler", value));
}
// Autogenerated static field getter
// Get static field: static private System.String user_store
::StringW Microsoft::Win32::KeyHandler::_get_user_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::_get_user_store");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Microsoft.Win32", "KeyHandler", "user_store"));
}
// Autogenerated static field setter
// Set static field: static private System.String user_store
void Microsoft::Win32::KeyHandler::_set_user_store(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::_set_user_store");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "KeyHandler", "user_store", value));
}
// Autogenerated static field getter
// Get static field: static private System.String machine_store
::StringW Microsoft::Win32::KeyHandler::_get_machine_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::_get_machine_store");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Microsoft.Win32", "KeyHandler", "machine_store"));
}
// Autogenerated static field setter
// Set static field: static private System.String machine_store
void Microsoft::Win32::KeyHandler::_set_machine_store(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::_set_machine_store");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "KeyHandler", "machine_store", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String Dir
[[deprecated("Use field access instead!")]] ::StringW& Microsoft::Win32::KeyHandler::dyn_Dir() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::dyn_Dir");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Dir"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String ActualDir
[[deprecated("Use field access instead!")]] ::StringW& Microsoft::Win32::KeyHandler::dyn_ActualDir() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::dyn_ActualDir");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ActualDir"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsVolatile
[[deprecated("Use field access instead!")]] bool& Microsoft::Win32::KeyHandler::dyn_IsVolatile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::dyn_IsVolatile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsVolatile"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable values
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& Microsoft::Win32::KeyHandler::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String file
[[deprecated("Use field access instead!")]] ::StringW& Microsoft::Win32::KeyHandler::dyn_file() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::dyn_file");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "file"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean dirty
[[deprecated("Use field access instead!")]] bool& Microsoft::Win32::KeyHandler::dyn_dirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::dyn_dirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.get_IsMarkedForDeletion
bool Microsoft::Win32::KeyHandler::get_IsMarkedForDeletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::get_IsMarkedForDeletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMarkedForDeletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.get_UserStore
::StringW Microsoft::Win32::KeyHandler::get_UserStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::get_UserStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "get_UserStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.get_MachineStore
::StringW Microsoft::Win32::KeyHandler::get_MachineStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::get_MachineStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "get_MachineStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler..cctor
void Microsoft::Win32::KeyHandler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Load
void Microsoft::Win32::KeyHandler::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.LoadKey
void Microsoft::Win32::KeyHandler::LoadKey(::System::Security::SecurityElement* se) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::LoadKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(se)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, se);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Ensure
::Microsoft::Win32::RegistryKey* Microsoft::Win32::KeyHandler::Ensure(::Microsoft::Win32::RegistryKey* rkey, ::StringW extra, bool writable, bool is_volatile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::Ensure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Ensure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(extra), ::il2cpp_utils::ExtractType(writable), ::il2cpp_utils::ExtractType(is_volatile)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, rkey, extra, writable, is_volatile);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Probe
::Microsoft::Win32::RegistryKey* Microsoft::Win32::KeyHandler::Probe(::Microsoft::Win32::RegistryKey* rkey, ::StringW extra, bool writable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::Probe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Probe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(extra), ::il2cpp_utils::ExtractType(writable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, rkey, extra, writable);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.CombineName
::StringW Microsoft::Win32::KeyHandler::CombineName(::Microsoft::Win32::RegistryKey* rkey, ::StringW extra) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::CombineName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "CombineName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(extra)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rkey, extra);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetSystemBootTime
int64_t Microsoft::Win32::KeyHandler::GetSystemBootTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::GetSystemBootTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "GetSystemBootTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetRegisteredBootTime
int64_t Microsoft::Win32::KeyHandler::GetRegisteredBootTime(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::GetRegisteredBootTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "GetRegisteredBootTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.SaveRegisteredBootTime
void Microsoft::Win32::KeyHandler::SaveRegisteredBootTime(::StringW path, int64_t btime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::SaveRegisteredBootTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "SaveRegisteredBootTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(btime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, btime);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.CleanVolatileKeys
void Microsoft::Win32::KeyHandler::CleanVolatileKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::CleanVolatileKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "CleanVolatileKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.VolatileKeyExists
bool Microsoft::Win32::KeyHandler::VolatileKeyExists(::StringW dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::VolatileKeyExists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "VolatileKeyExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dir);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetVolatileDir
::StringW Microsoft::Win32::KeyHandler::GetVolatileDir(::StringW dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::GetVolatileDir");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "GetVolatileDir", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dir);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Lookup
::Microsoft::Win32::KeyHandler* Microsoft::Win32::KeyHandler::Lookup(::Microsoft::Win32::RegistryKey* rkey, bool createNonExisting) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::Lookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "Lookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(createNonExisting)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::KeyHandler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rkey, createNonExisting);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetRootFromDir
::StringW Microsoft::Win32::KeyHandler::GetRootFromDir(::StringW dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::GetRootFromDir");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "GetRootFromDir", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dir);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Drop
void Microsoft::Win32::KeyHandler::Drop(::Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::Drop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "KeyHandler", "Drop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetValue
::Il2CppObject* Microsoft::Win32::KeyHandler::GetValue(::StringW name, ::Microsoft::Win32::RegistryValueOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name, options);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetSubKeyNames
::ArrayW<::StringW> Microsoft::Win32::KeyHandler::GetSubKeyNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::GetSubKeyNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubKeyNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Flush
void Microsoft::Win32::KeyHandler::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.ValueExists
bool Microsoft::Win32::KeyHandler::ValueExists(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::ValueExists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Save
void Microsoft::Win32::KeyHandler::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Finalize
void Microsoft::Win32::KeyHandler::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::KeyHandler::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.UnixRegistryApi
#include "Microsoft/Win32/UnixRegistryApi.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.ToUnix
::StringW Microsoft::Win32::UnixRegistryApi::ToUnix(::StringW keyname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::UnixRegistryApi::ToUnix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "UnixRegistryApi", "ToUnix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyname)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyname);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.IsWellKnownKey
bool Microsoft::Win32::UnixRegistryApi::IsWellKnownKey(::StringW parentKeyName, ::StringW keyname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::UnixRegistryApi::IsWellKnownKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "UnixRegistryApi", "IsWellKnownKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentKeyName), ::il2cpp_utils::ExtractType(keyname)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parentKeyName, keyname);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.OpenSubKey
::Microsoft::Win32::RegistryKey* Microsoft::Win32::UnixRegistryApi::OpenSubKey(::Microsoft::Win32::RegistryKey* rkey, ::StringW keyname, bool writable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::UnixRegistryApi::OpenSubKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenSubKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(keyname), ::il2cpp_utils::ExtractType(writable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, rkey, keyname, writable);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.Flush
void Microsoft::Win32::UnixRegistryApi::Flush(::Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::UnixRegistryApi::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.Close
void Microsoft::Win32::UnixRegistryApi::Close(::Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::UnixRegistryApi::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.GetValue
::Il2CppObject* Microsoft::Win32::UnixRegistryApi::GetValue(::Microsoft::Win32::RegistryKey* rkey, ::StringW name, ::Il2CppObject* default_value, ::Microsoft::Win32::RegistryValueOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::UnixRegistryApi::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(default_value), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, rkey, name, default_value, options);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.GetSubKeyNames
::ArrayW<::StringW> Microsoft::Win32::UnixRegistryApi::GetSubKeyNames(::Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::UnixRegistryApi::GetSubKeyNames");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubKeyNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.ToString
::StringW Microsoft::Win32::UnixRegistryApi::ToString(::Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::UnixRegistryApi::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.CreateSubKey
::Microsoft::Win32::RegistryKey* Microsoft::Win32::UnixRegistryApi::CreateSubKey(::Microsoft::Win32::RegistryKey* rkey, ::StringW keyname, bool writable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::UnixRegistryApi::CreateSubKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(keyname), ::il2cpp_utils::ExtractType(writable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, rkey, keyname, writable);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.CreateSubKey
::Microsoft::Win32::RegistryKey* Microsoft::Win32::UnixRegistryApi::CreateSubKey(::Microsoft::Win32::RegistryKey* rkey, ::StringW keyname, bool writable, bool is_volatile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::UnixRegistryApi::CreateSubKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(keyname), ::il2cpp_utils::ExtractType(writable), ::il2cpp_utils::ExtractType(is_volatile)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, rkey, keyname, writable, is_volatile);
}
// Autogenerated method: Microsoft.Win32.UnixRegistryApi.GetHandle
::System::IntPtr Microsoft::Win32::UnixRegistryApi::GetHandle(::Microsoft::Win32::RegistryKey* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::UnixRegistryApi::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.Win32RegistryApi
#include "Microsoft/Win32/Win32RegistryApi.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Microsoft.Win32.RegistryValueKind
#include "Microsoft/Win32/RegistryValueKind.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 NativeBytesPerCharacter
[[deprecated("Use field access instead!")]] int& Microsoft::Win32::Win32RegistryApi::dyn_NativeBytesPerCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::dyn_NativeBytesPerCharacter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NativeBytesPerCharacter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegCloseKey
int Microsoft::Win32::Win32RegistryApi::RegCloseKey(::System::IntPtr keyHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::RegCloseKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegCloseKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyHandle);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegFlushKey
int Microsoft::Win32::Win32RegistryApi::RegFlushKey(::System::IntPtr keyHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::RegFlushKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegFlushKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyHandle);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegOpenKeyEx
int Microsoft::Win32::Win32RegistryApi::RegOpenKeyEx(::System::IntPtr keyBase, ::StringW keyName, ::System::IntPtr reserved, int access, ByRef<::System::IntPtr> keyHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::RegOpenKeyEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegOpenKeyEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyBase), ::il2cpp_utils::ExtractType(keyName), ::il2cpp_utils::ExtractType(reserved), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyBase, keyName, reserved, access, byref(keyHandle));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegEnumKeyEx
int Microsoft::Win32::Win32RegistryApi::RegEnumKeyEx(::System::IntPtr keyHandle, int dwIndex, ::Il2CppChar* lpName, ByRef<int> lpcbName, ::ArrayW<int> lpReserved, ByRef<::System::Text::StringBuilder*> lpClass, ::ArrayW<int> lpcbClass, ::ArrayW<int64_t> lpftLastWriteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::RegEnumKeyEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegEnumKeyEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyHandle), ::il2cpp_utils::ExtractType(dwIndex), ::il2cpp_utils::ExtractType(lpName), ::il2cpp_utils::ExtractType(lpcbName), ::il2cpp_utils::ExtractType(lpReserved), ::il2cpp_utils::ExtractIndependentType<::System::Text::StringBuilder*&>(), ::il2cpp_utils::ExtractType(lpcbClass), ::il2cpp_utils::ExtractType(lpftLastWriteTime)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyHandle, dwIndex, lpName, byref(lpcbName), lpReserved, byref(lpClass), lpcbClass, lpftLastWriteTime);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(::System::IntPtr keyBase, ::StringW valueName, ::System::IntPtr reserved, ByRef<::Microsoft::Win32::RegistryValueKind> type, ::System::IntPtr zero, ByRef<int> dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::RegQueryValueEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyBase), ::il2cpp_utils::ExtractType(valueName), ::il2cpp_utils::ExtractType(reserved), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(zero), ::il2cpp_utils::ExtractType(dataSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyBase, valueName, reserved, byref(type), zero, byref(dataSize));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(::System::IntPtr keyBase, ::StringW valueName, ::System::IntPtr reserved, ByRef<::Microsoft::Win32::RegistryValueKind> type, ByRef<::ArrayW<uint8_t>> data, ByRef<int> dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::RegQueryValueEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyBase), ::il2cpp_utils::ExtractType(valueName), ::il2cpp_utils::ExtractType(reserved), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>(), ::il2cpp_utils::ExtractType(dataSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyBase, valueName, reserved, byref(type), byref(data), byref(dataSize));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(::System::IntPtr keyBase, ::StringW valueName, ::System::IntPtr reserved, ByRef<::Microsoft::Win32::RegistryValueKind> type, ByRef<int> data, ByRef<int> dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::RegQueryValueEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyBase), ::il2cpp_utils::ExtractType(valueName), ::il2cpp_utils::ExtractType(reserved), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyBase, valueName, reserved, byref(type), byref(data), byref(dataSize));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(::System::IntPtr keyBase, ::StringW valueName, ::System::IntPtr reserved, ByRef<::Microsoft::Win32::RegistryValueKind> type, ByRef<int64_t> data, ByRef<int> dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::RegQueryValueEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyBase), ::il2cpp_utils::ExtractType(valueName), ::il2cpp_utils::ExtractType(reserved), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyBase, valueName, reserved, byref(type), byref(data), byref(dataSize));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryInfoKey
int Microsoft::Win32::Win32RegistryApi::RegQueryInfoKey(::System::IntPtr hKey, ByRef<::System::Text::StringBuilder*> lpClass, ::ArrayW<int> lpcbClass, ::System::IntPtr lpReserved_MustBeZero, ByRef<int> lpcSubKeys, ::ArrayW<int> lpcbMaxSubKeyLen, ::ArrayW<int> lpcbMaxClassLen, ByRef<int> lpcValues, ::ArrayW<int> lpcbMaxValueNameLen, ::ArrayW<int> lpcbMaxValueLen, ::ArrayW<int> lpcbSecurityDescriptor, ::ArrayW<int> lpftLastWriteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::RegQueryInfoKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryInfoKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hKey), ::il2cpp_utils::ExtractIndependentType<::System::Text::StringBuilder*&>(), ::il2cpp_utils::ExtractType(lpcbClass), ::il2cpp_utils::ExtractType(lpReserved_MustBeZero), ::il2cpp_utils::ExtractType(lpcSubKeys), ::il2cpp_utils::ExtractType(lpcbMaxSubKeyLen), ::il2cpp_utils::ExtractType(lpcbMaxClassLen), ::il2cpp_utils::ExtractType(lpcValues), ::il2cpp_utils::ExtractType(lpcbMaxValueNameLen), ::il2cpp_utils::ExtractType(lpcbMaxValueLen), ::il2cpp_utils::ExtractType(lpcbSecurityDescriptor), ::il2cpp_utils::ExtractType(lpftLastWriteTime)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hKey, byref(lpClass), lpcbClass, lpReserved_MustBeZero, byref(lpcSubKeys), lpcbMaxSubKeyLen, lpcbMaxClassLen, byref(lpcValues), lpcbMaxValueNameLen, lpcbMaxValueLen, lpcbSecurityDescriptor, lpftLastWriteTime);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetHandle
::System::IntPtr Microsoft::Win32::Win32RegistryApi::GetHandle(::Microsoft::Win32::RegistryKey* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, key);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.IsHandleValid
bool Microsoft::Win32::Win32RegistryApi::IsHandleValid(::Microsoft::Win32::RegistryKey* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::IsHandleValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "IsHandleValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetValue
::Il2CppObject* Microsoft::Win32::Win32RegistryApi::GetValue(::Microsoft::Win32::RegistryKey* rkey, ::StringW name, ::Il2CppObject* defaultValue, ::Microsoft::Win32::RegistryValueOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(defaultValue), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, rkey, name, defaultValue, options);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetBinaryValue
int Microsoft::Win32::Win32RegistryApi::GetBinaryValue(::Microsoft::Win32::RegistryKey* rkey, ::StringW name, ::Microsoft::Win32::RegistryValueKind type, ByRef<::ArrayW<uint8_t>> data, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::GetBinaryValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBinaryValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>(), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, rkey, name, type, byref(data), size);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.SubKeyCount
int Microsoft::Win32::Win32RegistryApi::SubKeyCount(::Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::SubKeyCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubKeyCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.OpenSubKey
::Microsoft::Win32::RegistryKey* Microsoft::Win32::Win32RegistryApi::OpenSubKey(::Microsoft::Win32::RegistryKey* rkey, ::StringW keyName, bool writable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::OpenSubKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenSubKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(keyName), ::il2cpp_utils::ExtractType(writable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, rkey, keyName, writable);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.Flush
void Microsoft::Win32::Win32RegistryApi::Flush(::Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.Close
void Microsoft::Win32::Win32RegistryApi::Close(::Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetSubKeyNames
::ArrayW<::StringW> Microsoft::Win32::Win32RegistryApi::GetSubKeyNames(::Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::GetSubKeyNames");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubKeyNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GenerateException
void Microsoft::Win32::Win32RegistryApi::GenerateException(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::GenerateException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorCode);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.ToString
::StringW Microsoft::Win32::Win32RegistryApi::ToString(::Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.CombineName
::StringW Microsoft::Win32::Win32RegistryApi::CombineName(::Microsoft::Win32::RegistryKey* rkey, ::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32RegistryApi::CombineName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "CombineName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rkey), ::il2cpp_utils::ExtractType(localName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rkey, localName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.Win32Native
#include "Microsoft/Win32/Win32Native.hpp"
// Including type: Microsoft.Win32.Win32Native/Microsoft.Win32.WIN32_FIND_DATA
#include "Microsoft/Win32/Win32Native_WIN32_FIND_DATA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.Win32Native.GetMessage
::StringW Microsoft::Win32::Win32Native::GetMessage(int hr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32Native::GetMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32Native", "GetMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hr)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hr);
}
// Autogenerated method: Microsoft.Win32.Win32Native.MakeHRFromErrorCode
int Microsoft::Win32::Win32Native::MakeHRFromErrorCode(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32Native::MakeHRFromErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32Native", "MakeHRFromErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.Win32Native/Microsoft.Win32.WIN32_FIND_DATA
#include "Microsoft/Win32/Win32Native_WIN32_FIND_DATA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 dwFileAttributes
[[deprecated("Use field access instead!")]] int& Microsoft::Win32::Win32Native::WIN32_FIND_DATA::dyn_dwFileAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32Native::WIN32_FIND_DATA::dyn_dwFileAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dwFileAttributes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String cFileName
[[deprecated("Use field access instead!")]] ::StringW& Microsoft::Win32::Win32Native::WIN32_FIND_DATA::dyn_cFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::Win32Native::WIN32_FIND_DATA::dyn_cFileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cFileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeFileHandle
#include "Microsoft/Win32/SafeHandles/SafeFileHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeFileHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeFileHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeFileHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeFindHandle
#include "Microsoft/Win32/SafeHandles/SafeFindHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeFindHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeFindHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeFindHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
#include "Microsoft/Win32/SafeHandles/SafeRegistryHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeRegistryHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeRegistryHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeRegistryHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeWaitHandle
#include "Microsoft/Win32/SafeHandles/SafeWaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeWaitHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeWaitHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeWaitHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
#include "Microsoft/Win32/SafeHandles/SafeHandleZeroOrMinusOneIsInvalid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid
bool Microsoft::Win32::SafeHandles::SafeHandleZeroOrMinusOneIsInvalid::get_IsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeHandleZeroOrMinusOneIsInvalid::get_IsInvalid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInvalid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ThrowHelper
#include "System/ThrowHelper.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ExceptionResource
#include "System/ExceptionResource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ThrowHelper.ThrowArgumentNullException
void System::ThrowHelper::ThrowArgumentNullException(::System::ExceptionArgument argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ThrowHelper::ThrowArgumentNullException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowArgumentNullException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, argument);
}
// Autogenerated method: System.ThrowHelper.CreateArgumentNullException
::System::Exception* System::ThrowHelper::CreateArgumentNullException(::System::ExceptionArgument argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ThrowHelper::CreateArgumentNullException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "CreateArgumentNullException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argument)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, argument);
}
// Autogenerated method: System.ThrowHelper.ThrowArgumentOutOfRangeException
void System::ThrowHelper::ThrowArgumentOutOfRangeException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ThrowHelper::ThrowArgumentOutOfRangeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowArgumentOutOfRangeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ThrowHelper.ThrowWrongValueTypeArgumentException
void System::ThrowHelper::ThrowWrongValueTypeArgumentException(::Il2CppObject* value, ::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ThrowHelper::ThrowWrongValueTypeArgumentException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowWrongValueTypeArgumentException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(targetType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, targetType);
}
// Autogenerated method: System.ThrowHelper.ThrowKeyNotFoundException
void System::ThrowHelper::ThrowKeyNotFoundException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ThrowHelper::ThrowKeyNotFoundException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowKeyNotFoundException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ThrowHelper.ThrowArgumentException
void System::ThrowHelper::ThrowArgumentException(::System::ExceptionResource resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ThrowHelper::ThrowArgumentException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowArgumentException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resource);
}
// Autogenerated method: System.ThrowHelper.ThrowArgumentOutOfRangeException
void System::ThrowHelper::ThrowArgumentOutOfRangeException(::System::ExceptionArgument argument, ::System::ExceptionResource resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ThrowHelper::ThrowArgumentOutOfRangeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowArgumentOutOfRangeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argument), ::il2cpp_utils::ExtractType(resource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, argument, resource);
}
// Autogenerated method: System.ThrowHelper.ThrowInvalidOperationException
void System::ThrowHelper::ThrowInvalidOperationException(::System::ExceptionResource resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ThrowHelper::ThrowInvalidOperationException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowInvalidOperationException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resource);
}
// Autogenerated method: System.ThrowHelper.ThrowNotSupportedException
void System::ThrowHelper::ThrowNotSupportedException(::System::ExceptionResource resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ThrowHelper::ThrowNotSupportedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "ThrowNotSupportedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resource);
}
// Autogenerated method: System.ThrowHelper.GetArgumentName
::StringW System::ThrowHelper::GetArgumentName(::System::ExceptionArgument argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ThrowHelper::GetArgumentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "GetArgumentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argument)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, argument);
}
// Autogenerated method: System.ThrowHelper.GetResourceName
::StringW System::ThrowHelper::GetResourceName(::System::ExceptionResource resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ThrowHelper::GetResourceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ThrowHelper", "GetResourceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resource)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resource);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TupleExtensions
#include "System/TupleExtensions.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ValueTuple
#include "System/ValueTuple.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ValueTuple.Equals
bool System::ValueTuple::Equals(::System::ValueTuple other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ValueTuple::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.ValueTuple.System.Collections.IStructuralEquatable.Equals
bool System::ValueTuple::System_Collections_IStructuralEquatable_Equals(::Il2CppObject* other, ::System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ValueTuple::System.Collections.IStructuralEquatable.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.Collections.IStructuralEquatable.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other, comparer);
}
// Autogenerated method: System.ValueTuple.System.IComparable.CompareTo
int System::ValueTuple::System_IComparable_CompareTo(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ValueTuple::System.IComparable.CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.IComparable.CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated method: System.ValueTuple.CompareTo
int System::ValueTuple::CompareTo(::System::ValueTuple other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ValueTuple::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated method: System.ValueTuple.System.Collections.IStructuralComparable.CompareTo
int System::ValueTuple::System_Collections_IStructuralComparable_CompareTo(::Il2CppObject* other, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ValueTuple::System.Collections.IStructuralComparable.CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.Collections.IStructuralComparable.CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other, comparer);
}
// Autogenerated method: System.ValueTuple.System.Collections.IStructuralEquatable.GetHashCode
int System::ValueTuple::System_Collections_IStructuralEquatable_GetHashCode(::System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ValueTuple::System.Collections.IStructuralEquatable.GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.Collections.IStructuralEquatable.GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, comparer);
}
// Autogenerated method: System.ValueTuple.CombineHashCodes
int System::ValueTuple::CombineHashCodes(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ValueTuple::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ValueTuple", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: System.ValueTuple.CombineHashCodes
int System::ValueTuple::CombineHashCodes(int h1, int h2, int h3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ValueTuple::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ValueTuple", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3);
}
// Autogenerated method: System.ValueTuple.Equals
bool System::ValueTuple::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ValueTuple::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ValueTuple.GetHashCode
int System::ValueTuple::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ValueTuple::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ValueTuple.ToString
::StringW System::ValueTuple::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ValueTuple::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Array/System.ArrayEnumerator
#include "System/Array_ArrayEnumerator.hpp"
// Including type: System.Array/System.InternalEnumerator`1
#include "System/Array_InternalEnumerator_1.hpp"
// Including type: System.Array/System.EmptyInternalEnumerator`1
#include "System/Array_EmptyInternalEnumerator_1.hpp"
// Including type: System.Array/System.SorterObjectArray
#include "System/Array_SorterObjectArray.hpp"
// Including type: System.Array/System.SorterGenericArray
#include "System/Array_SorterGenericArray.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.Converter`2
#include "System/Converter_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IComparer`1
#include "System/Collections/Generic/IComparer_1.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Array.System.Collections.ICollection.get_Count
int System::Array::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.System.Collections.IList.get_IsReadOnly
bool System::Array::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.System.Collections.IList.get_Item
::Il2CppObject* System::Array::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Array.System.Collections.IList.set_Item
void System::Array::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Array.get_LongLength
int64_t System::Array::get_LongLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::get_LongLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LongLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.get_IsFixedSize
bool System::Array::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.get_IsReadOnly
bool System::Array::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.get_IsSynchronized
bool System::Array::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSynchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.get_SyncRoot
::Il2CppObject* System::Array::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.get_Length
int System::Array::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.get_Rank
int System::Array::get_Rank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::get_Rank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.CreateInstance
::System::Array* System::Array::CreateInstance(::System::Type* elementType, ::ArrayW<int64_t> lengths) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(lengths)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, elementType, lengths);
}
// Autogenerated method: System.Array.System.Collections.IList.Add
int System::Array::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Array.System.Collections.IList.Contains
bool System::Array::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Array.System.Collections.IList.Clear
void System::Array::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::System.Collections.IList.Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.System.Collections.IList.IndexOf
int System::Array::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Array.System.Collections.IList.Insert
void System::Array::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Array.System.Collections.IList.Remove
void System::Array::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Array.System.Collections.IList.RemoveAt
void System::Array::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::System.Collections.IList.RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Array.CopyTo
void System::Array::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Array.Clone
::Il2CppObject* System::Array::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.System.Collections.IStructuralComparable.CompareTo
int System::Array::System_Collections_IStructuralComparable_CompareTo(::Il2CppObject* other, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::System.Collections.IStructuralComparable.CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IStructuralComparable.CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other, comparer);
}
// Autogenerated method: System.Array.System.Collections.IStructuralEquatable.Equals
bool System::Array::System_Collections_IStructuralEquatable_Equals(::Il2CppObject* other, ::System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::System.Collections.IStructuralEquatable.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IStructuralEquatable.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other, comparer);
}
// Autogenerated method: System.Array.CombineHashCodes
int System::Array::CombineHashCodes(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: System.Array.System.Collections.IStructuralEquatable.GetHashCode
int System::Array::System_Collections_IStructuralEquatable_GetHashCode(::System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::System.Collections.IStructuralEquatable.GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IStructuralEquatable.GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, comparer);
}
// Autogenerated method: System.Array.BinarySearch
int System::Array::BinarySearch(::System::Array* array, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::BinarySearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "BinarySearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, value);
}
// Autogenerated method: System.Array.Copy
void System::Array::Copy(::System::Array* sourceArray, ::System::Array* destinationArray, int64_t length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArray), ::il2cpp_utils::ExtractType(destinationArray), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceArray, destinationArray, length);
}
// Autogenerated method: System.Array.Copy
void System::Array::Copy(::System::Array* sourceArray, int64_t sourceIndex, ::System::Array* destinationArray, int64_t destinationIndex, int64_t length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArray), ::il2cpp_utils::ExtractType(sourceIndex), ::il2cpp_utils::ExtractType(destinationArray), ::il2cpp_utils::ExtractType(destinationIndex), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceArray, sourceIndex, destinationArray, destinationIndex, length);
}
// Autogenerated method: System.Array.CopyTo
void System::Array::CopyTo(::System::Array* array, int64_t index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Array.GetLongLength
int64_t System::Array::GetLongLength(int dimension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::GetLongLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLongLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dimension)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, dimension);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int64_t index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int64_t index1, int64_t index2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index1, index2);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int64_t index1, int64_t index2, int64_t index3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2), ::il2cpp_utils::ExtractType(index3)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index1, index2, index3);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(::ArrayW<int64_t> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, indices);
}
// Autogenerated method: System.Array.BinarySearch
int System::Array::BinarySearch(::System::Array* array, int index, int length, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::BinarySearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "BinarySearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, length, value);
}
// Autogenerated method: System.Array.BinarySearch
int System::Array::BinarySearch(::System::Array* array, ::Il2CppObject* value, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::BinarySearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "BinarySearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, value, comparer);
}
// Autogenerated method: System.Array.BinarySearch
int System::Array::BinarySearch(::System::Array* array, int index, int length, ::Il2CppObject* value, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::BinarySearch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "BinarySearch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, length, value, comparer);
}
// Autogenerated method: System.Array.GetMedian
int System::Array::GetMedian(int low, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::GetMedian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "GetMedian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(low), ::il2cpp_utils::ExtractType(hi)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, low, hi);
}
// Autogenerated method: System.Array.IndexOf
int System::Array::IndexOf(::System::Array* array, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, value);
}
// Autogenerated method: System.Array.IndexOf
int System::Array::IndexOf(::System::Array* array, ::Il2CppObject* value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, value, startIndex);
}
// Autogenerated method: System.Array.IndexOf
int System::Array::IndexOf(::System::Array* array, ::Il2CppObject* value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Array.LastIndexOf
int System::Array::LastIndexOf(::System::Array* array, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, value);
}
// Autogenerated method: System.Array.LastIndexOf
int System::Array::LastIndexOf(::System::Array* array, ::Il2CppObject* value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, value, startIndex);
}
// Autogenerated method: System.Array.LastIndexOf
int System::Array::LastIndexOf(::System::Array* array, ::Il2CppObject* value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Array.Reverse
void System::Array::Reverse(::System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Reverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Reverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Array.Reverse
void System::Array::Reverse(::System::Array* array, int index, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Reverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Reverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, length);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int64_t index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, index);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int64_t index1, int64_t index2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, index1, index2);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int64_t index1, int64_t index2, int64_t index3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2), ::il2cpp_utils::ExtractType(index3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, index1, index2, index3);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, ::ArrayW<int64_t> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, indices);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(::System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(::System::Array* array, int index, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, length);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(::System::Array* array, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, comparer);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(::System::Array* array, int index, int length, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, length, comparer);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(::System::Array* keys, ::System::Array* items) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(items)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys, items);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(::System::Array* keys, ::System::Array* items, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(items), ::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys, items, comparer);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(::System::Array* keys, ::System::Array* items, int index, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(items), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys, items, index, length);
}
// Autogenerated method: System.Array.Sort
void System::Array::Sort(::System::Array* keys, ::System::Array* items, int index, int length, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(items), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys, items, index, length, comparer);
}
// Autogenerated method: System.Array.GetEnumerator
::System::Collections::IEnumerator* System::Array::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.InternalArray__ICollection_get_Count
int System::Array::InternalArray__ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::InternalArray__ICollection_get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalArray__ICollection_get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.InternalArray__ICollection_get_IsReadOnly
bool System::Array::InternalArray__ICollection_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::InternalArray__ICollection_get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalArray__ICollection_get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.InternalArray__ICollection_Clear
void System::Array::InternalArray__ICollection_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::InternalArray__ICollection_Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalArray__ICollection_Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.InternalArray__IReadOnlyCollection_get_Count
int System::Array::InternalArray__IReadOnlyCollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::InternalArray__IReadOnlyCollection_get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalArray__IReadOnlyCollection_get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.InternalArray__RemoveAt
void System::Array::InternalArray__RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::InternalArray__RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalArray__RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Array.GetRank
int System::Array::GetRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::GetRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.GetLength
int System::Array::GetLength(int dimension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::GetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dimension)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dimension);
}
// Autogenerated method: System.Array.GetLowerBound
int System::Array::GetLowerBound(int dimension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::GetLowerBound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLowerBound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dimension)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dimension);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(::ArrayW<int> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indices)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, indices);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, ::ArrayW<int> indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, indices);
}
// Autogenerated method: System.Array.GetValueImpl
::Il2CppObject* System::Array::GetValueImpl(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::GetValueImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Array.SetValueImpl
void System::Array::SetValueImpl(::Il2CppObject* value, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SetValueImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValueImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, pos);
}
// Autogenerated method: System.Array.FastCopy
bool System::Array::FastCopy(::System::Array* source, int source_idx, ::System::Array* dest, int dest_idx, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::FastCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "FastCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(source_idx), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(dest_idx), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, source_idx, dest, dest_idx, length);
}
// Autogenerated method: System.Array.CreateInstanceImpl
::System::Array* System::Array::CreateInstanceImpl(::System::Type* elementType, ::ArrayW<int> lengths, ::ArrayW<int> bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::CreateInstanceImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CreateInstanceImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(lengths), ::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, elementType, lengths, bounds);
}
// Autogenerated method: System.Array.GetUpperBound
int System::Array::GetUpperBound(int dimension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::GetUpperBound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUpperBound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dimension)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dimension);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int index1, int index2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index1, index2);
}
// Autogenerated method: System.Array.GetValue
::Il2CppObject* System::Array::GetValue(int index1, int index2, int index3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2), ::il2cpp_utils::ExtractType(index3)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index1, index2, index3);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, index);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int index1, int index2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, index1, index2);
}
// Autogenerated method: System.Array.SetValue
void System::Array::SetValue(::Il2CppObject* value, int index1, int index2, int index3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2), ::il2cpp_utils::ExtractType(index3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, index1, index2, index3);
}
// Autogenerated method: System.Array.UnsafeCreateInstance
::System::Array* System::Array::UnsafeCreateInstance(::System::Type* elementType, ::ArrayW<int> lengths, ::ArrayW<int> lowerBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::UnsafeCreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "UnsafeCreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(lengths), ::il2cpp_utils::ExtractType(lowerBounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, elementType, lengths, lowerBounds);
}
// Autogenerated method: System.Array.UnsafeCreateInstance
::System::Array* System::Array::UnsafeCreateInstance(::System::Type* elementType, int length1, int length2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::UnsafeCreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "UnsafeCreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(length2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, elementType, length1, length2);
}
// Autogenerated method: System.Array.UnsafeCreateInstance
::System::Array* System::Array::UnsafeCreateInstance(::System::Type* elementType, ::ArrayW<int> lengths) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::UnsafeCreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "UnsafeCreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(lengths)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, elementType, lengths);
}
// Autogenerated method: System.Array.CreateInstance
::System::Array* System::Array::CreateInstance(::System::Type* elementType, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, elementType, length);
}
// Autogenerated method: System.Array.CreateInstance
::System::Array* System::Array::CreateInstance(::System::Type* elementType, int length1, int length2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(length2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, elementType, length1, length2);
}
// Autogenerated method: System.Array.CreateInstance
::System::Array* System::Array::CreateInstance(::System::Type* elementType, int length1, int length2, int length3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(length2), ::il2cpp_utils::ExtractType(length3)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, elementType, length1, length2, length3);
}
// Autogenerated method: System.Array.CreateInstance
::System::Array* System::Array::CreateInstance(::System::Type* elementType, ::ArrayW<int> lengths) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(lengths)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, elementType, lengths);
}
// Autogenerated method: System.Array.CreateInstance
::System::Array* System::Array::CreateInstance(::System::Type* elementType, ::ArrayW<int> lengths, ::ArrayW<int> lowerBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementType), ::il2cpp_utils::ExtractType(lengths), ::il2cpp_utils::ExtractType(lowerBounds)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, elementType, lengths, lowerBounds);
}
// Autogenerated method: System.Array.Clear
void System::Array::Clear(::System::Array* array, int index, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index, length);
}
// Autogenerated method: System.Array.ClearInternal
void System::Array::ClearInternal(::System::Array* a, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::ClearInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "ClearInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, index, count);
}
// Autogenerated method: System.Array.Copy
void System::Array::Copy(::System::Array* sourceArray, ::System::Array* destinationArray, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArray), ::il2cpp_utils::ExtractType(destinationArray), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceArray, destinationArray, length);
}
// Autogenerated method: System.Array.Copy
void System::Array::Copy(::System::Array* sourceArray, int sourceIndex, ::System::Array* destinationArray, int destinationIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArray), ::il2cpp_utils::ExtractType(sourceIndex), ::il2cpp_utils::ExtractType(destinationArray), ::il2cpp_utils::ExtractType(destinationIndex), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceArray, sourceIndex, destinationArray, destinationIndex, length);
}
// Autogenerated method: System.Array.CreateArrayTypeMismatchException
::System::Exception* System::Array::CreateArrayTypeMismatchException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::CreateArrayTypeMismatchException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CreateArrayTypeMismatchException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Array.CanAssignArrayElement
bool System::Array::CanAssignArrayElement(::System::Type* source, ::System::Type* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::CanAssignArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "CanAssignArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, target);
}
// Autogenerated method: System.Array.ConstrainedCopy
void System::Array::ConstrainedCopy(::System::Array* sourceArray, int sourceIndex, ::System::Array* destinationArray, int destinationIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::ConstrainedCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "ConstrainedCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArray), ::il2cpp_utils::ExtractType(sourceIndex), ::il2cpp_utils::ExtractType(destinationArray), ::il2cpp_utils::ExtractType(destinationIndex), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceArray, sourceIndex, destinationArray, destinationIndex, length);
}
// Autogenerated method: System.Array.Initialize
void System::Array::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Array.SortImpl
void System::Array::SortImpl(::System::Array* keys, ::System::Array* items, int index, int length, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SortImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Array", "SortImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys), ::il2cpp_utils::ExtractType(items), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys, items, index, length, comparer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Array/System.ArrayEnumerator
#include "System/Array_ArrayEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Array _array
[[deprecated("Use field access instead!")]] ::System::Array*& System::Array::ArrayEnumerator::dyn__array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::ArrayEnumerator::dyn__array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_array"))->offset;
  return *reinterpret_cast<::System::Array**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& System::Array::ArrayEnumerator::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::ArrayEnumerator::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _endIndex
[[deprecated("Use field access instead!")]] int& System::Array::ArrayEnumerator::dyn__endIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::ArrayEnumerator::dyn__endIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Array/System.ArrayEnumerator.get_Current
::Il2CppObject* System::Array::ArrayEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::ArrayEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Array/System.ArrayEnumerator.MoveNext
bool System::Array::ArrayEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::ArrayEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Array/System.ArrayEnumerator.Reset
void System::Array::ArrayEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::ArrayEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Array/System.ArrayEnumerator.Clone
::Il2CppObject* System::Array::ArrayEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::ArrayEnumerator::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Array/System.SorterObjectArray
#include "System/Array_SorterObjectArray.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object[] keys
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::Array::SorterObjectArray::dyn_keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterObjectArray::dyn_keys");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keys"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] items
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::Array::SorterObjectArray::dyn_items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterObjectArray::dyn_items");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "items"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer comparer
[[deprecated("Use field access instead!")]] ::System::Collections::IComparer*& System::Array::SorterObjectArray::dyn_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterObjectArray::dyn_comparer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Array/System.SorterObjectArray..ctor
// ABORTED elsewhere.  System::Array::SorterObjectArray::SorterObjectArray(::ArrayW<::Il2CppObject*> keys, ::ArrayW<::Il2CppObject*> items, ::System::Collections::IComparer* comparer)
// Autogenerated method: System.Array/System.SorterObjectArray.SwapIfGreaterWithItems
void System::Array::SorterObjectArray::SwapIfGreaterWithItems(int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterObjectArray::SwapIfGreaterWithItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SwapIfGreaterWithItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Array/System.SorterObjectArray.Swap
void System::Array::SorterObjectArray::Swap(int i, int j) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterObjectArray::Swap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Swap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(j)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, j);
}
// Autogenerated method: System.Array/System.SorterObjectArray.Sort
void System::Array::SorterObjectArray::Sort(int left, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterObjectArray::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, left, length);
}
// Autogenerated method: System.Array/System.SorterObjectArray.IntrospectiveSort
void System::Array::SorterObjectArray::IntrospectiveSort(int left, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterObjectArray::IntrospectiveSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IntrospectiveSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, left, length);
}
// Autogenerated method: System.Array/System.SorterObjectArray.IntroSort
void System::Array::SorterObjectArray::IntroSort(int lo, int hi, int depthLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterObjectArray::IntroSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IntroSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi), ::il2cpp_utils::ExtractType(depthLimit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lo, hi, depthLimit);
}
// Autogenerated method: System.Array/System.SorterObjectArray.PickPivotAndPartition
int System::Array::SorterObjectArray::PickPivotAndPartition(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterObjectArray::PickPivotAndPartition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PickPivotAndPartition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, lo, hi);
}
// Autogenerated method: System.Array/System.SorterObjectArray.Heapsort
void System::Array::SorterObjectArray::Heapsort(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterObjectArray::Heapsort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Heapsort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lo, hi);
}
// Autogenerated method: System.Array/System.SorterObjectArray.DownHeap
void System::Array::SorterObjectArray::DownHeap(int i, int n, int lo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterObjectArray::DownHeap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "DownHeap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(lo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, n, lo);
}
// Autogenerated method: System.Array/System.SorterObjectArray.InsertionSort
void System::Array::SorterObjectArray::InsertionSort(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterObjectArray::InsertionSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InsertionSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lo, hi);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Array/System.SorterGenericArray
#include "System/Array_SorterGenericArray.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Array keys
[[deprecated("Use field access instead!")]] ::System::Array*& System::Array::SorterGenericArray::dyn_keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterGenericArray::dyn_keys");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keys"))->offset;
  return *reinterpret_cast<::System::Array**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Array items
[[deprecated("Use field access instead!")]] ::System::Array*& System::Array::SorterGenericArray::dyn_items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterGenericArray::dyn_items");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "items"))->offset;
  return *reinterpret_cast<::System::Array**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer comparer
[[deprecated("Use field access instead!")]] ::System::Collections::IComparer*& System::Array::SorterGenericArray::dyn_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterGenericArray::dyn_comparer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Array/System.SorterGenericArray..ctor
// ABORTED elsewhere.  System::Array::SorterGenericArray::SorterGenericArray(::System::Array* keys, ::System::Array* items, ::System::Collections::IComparer* comparer)
// Autogenerated method: System.Array/System.SorterGenericArray.SwapIfGreaterWithItems
void System::Array::SorterGenericArray::SwapIfGreaterWithItems(int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterGenericArray::SwapIfGreaterWithItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SwapIfGreaterWithItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Array/System.SorterGenericArray.Swap
void System::Array::SorterGenericArray::Swap(int i, int j) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterGenericArray::Swap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Swap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(j)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, j);
}
// Autogenerated method: System.Array/System.SorterGenericArray.Sort
void System::Array::SorterGenericArray::Sort(int left, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterGenericArray::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, left, length);
}
// Autogenerated method: System.Array/System.SorterGenericArray.IntrospectiveSort
void System::Array::SorterGenericArray::IntrospectiveSort(int left, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterGenericArray::IntrospectiveSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IntrospectiveSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, left, length);
}
// Autogenerated method: System.Array/System.SorterGenericArray.IntroSort
void System::Array::SorterGenericArray::IntroSort(int lo, int hi, int depthLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterGenericArray::IntroSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IntroSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi), ::il2cpp_utils::ExtractType(depthLimit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lo, hi, depthLimit);
}
// Autogenerated method: System.Array/System.SorterGenericArray.PickPivotAndPartition
int System::Array::SorterGenericArray::PickPivotAndPartition(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterGenericArray::PickPivotAndPartition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PickPivotAndPartition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, lo, hi);
}
// Autogenerated method: System.Array/System.SorterGenericArray.Heapsort
void System::Array::SorterGenericArray::Heapsort(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterGenericArray::Heapsort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Heapsort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lo, hi);
}
// Autogenerated method: System.Array/System.SorterGenericArray.DownHeap
void System::Array::SorterGenericArray::DownHeap(int i, int n, int lo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterGenericArray::DownHeap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "DownHeap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(lo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, n, lo);
}
// Autogenerated method: System.Array/System.SorterGenericArray.InsertionSort
void System::Array::SorterGenericArray::InsertionSort(int lo, int hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Array::SorterGenericArray::InsertionSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InsertionSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lo, hi);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ITupleInternal
#include "System/ITupleInternal.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ITupleInternal.ToString
::StringW System::ITupleInternal::ToString(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ITupleInternal::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Tuple
#include "System/Tuple.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: System.Tuple`3
#include "System/Tuple_3.hpp"
// Including type: System.Tuple`4
#include "System/Tuple_4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Tuple.CombineHashCodes
int System::Tuple::CombineHashCodes(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Tuple::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Tuple", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: System.Tuple.CombineHashCodes
int System::Tuple::CombineHashCodes(int h1, int h2, int h3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Tuple::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Tuple", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3);
}
// Autogenerated method: System.Tuple.CombineHashCodes
int System::Tuple::CombineHashCodes(int h1, int h2, int h3, int h4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Tuple::CombineHashCodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Tuple", "CombineHashCodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3, h4);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.MonoTODOAttribute
#include "System/MonoTODOAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String comment
[[deprecated("Use field access instead!")]] ::StringW& System::MonoTODOAttribute::dyn_comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::MonoTODOAttribute::dyn_comment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comment"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.MonoLimitationAttribute
#include "System/MonoLimitationAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.AggregateException
#include "System/AggregateException.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ObjectModel.ReadOnlyCollection`1<System.Exception> m_innerExceptions
[[deprecated("Use field access instead!")]] ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Exception*>*& System::AggregateException::dyn_m_innerExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AggregateException::dyn_m_innerExceptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_innerExceptions"))->offset;
  return *reinterpret_cast<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Exception*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.AggregateException.get_InnerExceptions
::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Exception*>* System::AggregateException::get_InnerExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AggregateException::get_InnerExceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerExceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Exception*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.AggregateException.Flatten
::System::AggregateException* System::AggregateException::Flatten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AggregateException::Flatten");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flatten", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::AggregateException*, false>(this, ___internal__method);
}
// Autogenerated method: System.AggregateException.GetObjectData
void System::AggregateException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AggregateException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.AggregateException.ToString
::StringW System::AggregateException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AggregateException::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.AppContextSwitches
#include "System/AppContextSwitches.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean ThrowExceptionIfDisposedCancellationTokenSource
bool System::AppContextSwitches::_get_ThrowExceptionIfDisposedCancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppContextSwitches::_get_ThrowExceptionIfDisposedCancellationTokenSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "AppContextSwitches", "ThrowExceptionIfDisposedCancellationTokenSource"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean ThrowExceptionIfDisposedCancellationTokenSource
void System::AppContextSwitches::_set_ThrowExceptionIfDisposedCancellationTokenSource(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppContextSwitches::_set_ThrowExceptionIfDisposedCancellationTokenSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppContextSwitches", "ThrowExceptionIfDisposedCancellationTokenSource", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean SetActorAsReferenceWhenCopyingClaimsIdentity
bool System::AppContextSwitches::_get_SetActorAsReferenceWhenCopyingClaimsIdentity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppContextSwitches::_get_SetActorAsReferenceWhenCopyingClaimsIdentity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "AppContextSwitches", "SetActorAsReferenceWhenCopyingClaimsIdentity"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean SetActorAsReferenceWhenCopyingClaimsIdentity
void System::AppContextSwitches::_set_SetActorAsReferenceWhenCopyingClaimsIdentity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppContextSwitches::_set_SetActorAsReferenceWhenCopyingClaimsIdentity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppContextSwitches", "SetActorAsReferenceWhenCopyingClaimsIdentity", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean NoAsyncCurrentCulture
bool System::AppContextSwitches::_get_NoAsyncCurrentCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppContextSwitches::_get_NoAsyncCurrentCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "AppContextSwitches", "NoAsyncCurrentCulture"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean NoAsyncCurrentCulture
void System::AppContextSwitches::_set_NoAsyncCurrentCulture(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AppContextSwitches::_set_NoAsyncCurrentCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppContextSwitches", "NoAsyncCurrentCulture", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.LazyHelpers
#include "System/LazyHelpers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Object PUBLICATION_ONLY_SENTINEL
::Il2CppObject* System::LazyHelpers::_get_PUBLICATION_ONLY_SENTINEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelpers::_get_PUBLICATION_ONLY_SENTINEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System", "LazyHelpers", "PUBLICATION_ONLY_SENTINEL"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Object PUBLICATION_ONLY_SENTINEL
void System::LazyHelpers::_set_PUBLICATION_ONLY_SENTINEL(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelpers::_set_PUBLICATION_ONLY_SENTINEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LazyHelpers", "PUBLICATION_ONLY_SENTINEL", value));
}
// Autogenerated method: System.LazyHelpers..cctor
void System::LazyHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LazyHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "LazyHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.__Filters
#include "System/__Filters.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.__Filters Instance
::System::__Filters* System::__Filters::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__Filters::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::__Filters*>("System", "__Filters", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly System.__Filters Instance
void System::__Filters::_set_Instance(::System::__Filters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__Filters::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "__Filters", "Instance", value));
}
// Autogenerated method: System.__Filters..cctor
void System::__Filters::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__Filters::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "__Filters", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.__Filters.FilterAttribute
bool System::__Filters::FilterAttribute(::System::Reflection::MemberInfo* m, ::Il2CppObject* filterCriteria) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__Filters::FilterAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(filterCriteria)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m, filterCriteria);
}
// Autogenerated method: System.__Filters.FilterName
bool System::__Filters::FilterName(::System::Reflection::MemberInfo* m, ::Il2CppObject* filterCriteria) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__Filters::FilterName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(filterCriteria)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m, filterCriteria);
}
// Autogenerated method: System.__Filters.FilterIgnoreCase
bool System::__Filters::FilterIgnoreCase(::System::Reflection::MemberInfo* m, ::Il2CppObject* filterCriteria) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__Filters::FilterIgnoreCase");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterIgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(filterCriteria)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m, filterCriteria);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.LocalDataStoreHolder
#include "System/LocalDataStoreHolder.hpp"
// Including type: System.LocalDataStore
#include "System/LocalDataStore.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.LocalDataStore m_Store
[[deprecated("Use field access instead!")]] ::System::LocalDataStore*& System::LocalDataStoreHolder::dyn_m_Store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreHolder::dyn_m_Store");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Store"))->offset;
  return *reinterpret_cast<::System::LocalDataStore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.LocalDataStoreHolder.get_Store
::System::LocalDataStore* System::LocalDataStoreHolder::get_Store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreHolder::get_Store");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Store", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::LocalDataStore*, false>(this, ___internal__method);
}
// Autogenerated method: System.LocalDataStoreHolder.Finalize
void System::LocalDataStoreHolder::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreHolder::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.LocalDataStoreElement
#include "System/LocalDataStoreElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object m_value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::LocalDataStoreElement::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreElement::dyn_m_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_cookie
[[deprecated("Use field access instead!")]] int64_t& System::LocalDataStoreElement::dyn_m_cookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreElement::dyn_m_cookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cookie"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.LocalDataStoreElement.get_Value
::Il2CppObject* System::LocalDataStoreElement::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreElement::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.LocalDataStoreElement.set_Value
void System::LocalDataStoreElement::set_Value(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreElement::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.LocalDataStoreElement.get_Cookie
int64_t System::LocalDataStoreElement::get_Cookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreElement::get_Cookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.LocalDataStore
#include "System/LocalDataStore.hpp"
// Including type: System.LocalDataStoreElement
#include "System/LocalDataStoreElement.hpp"
// Including type: System.LocalDataStoreMgr
#include "System/LocalDataStoreMgr.hpp"
// Including type: System.LocalDataStoreSlot
#include "System/LocalDataStoreSlot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.LocalDataStoreElement[] m_DataTable
[[deprecated("Use field access instead!")]] ::ArrayW<::System::LocalDataStoreElement*>& System::LocalDataStore::dyn_m_DataTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStore::dyn_m_DataTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DataTable"))->offset;
  return *reinterpret_cast<::ArrayW<::System::LocalDataStoreElement*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.LocalDataStoreMgr m_Manager
[[deprecated("Use field access instead!")]] ::System::LocalDataStoreMgr*& System::LocalDataStore::dyn_m_Manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStore::dyn_m_Manager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Manager"))->offset;
  return *reinterpret_cast<::System::LocalDataStoreMgr**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.LocalDataStore.Dispose
void System::LocalDataStore::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStore::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.LocalDataStore.GetData
::Il2CppObject* System::LocalDataStore::GetData(::System::LocalDataStoreSlot* slot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStore::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, slot);
}
// Autogenerated method: System.LocalDataStore.SetData
void System::LocalDataStore::SetData(::System::LocalDataStoreSlot* slot, ::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStore::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slot, data);
}
// Autogenerated method: System.LocalDataStore.FreeData
void System::LocalDataStore::FreeData(int slot, int64_t cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStore::FreeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(cookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slot, cookie);
}
// Autogenerated method: System.LocalDataStore.PopulateElement
::System::LocalDataStoreElement* System::LocalDataStore::PopulateElement(::System::LocalDataStoreSlot* slot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStore::PopulateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::LocalDataStoreElement*, false>(this, ___internal__method, slot);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.LocalDataStoreSlot
#include "System/LocalDataStoreSlot.hpp"
// Including type: System.LocalDataStoreMgr
#include "System/LocalDataStoreMgr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.LocalDataStoreMgr m_mgr
[[deprecated("Use field access instead!")]] ::System::LocalDataStoreMgr*& System::LocalDataStoreSlot::dyn_m_mgr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreSlot::dyn_m_mgr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mgr"))->offset;
  return *reinterpret_cast<::System::LocalDataStoreMgr**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_slot
[[deprecated("Use field access instead!")]] int& System::LocalDataStoreSlot::dyn_m_slot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreSlot::dyn_m_slot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_slot"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_cookie
[[deprecated("Use field access instead!")]] int64_t& System::LocalDataStoreSlot::dyn_m_cookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreSlot::dyn_m_cookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cookie"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.LocalDataStoreSlot.get_Manager
::System::LocalDataStoreMgr* System::LocalDataStoreSlot::get_Manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreSlot::get_Manager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Manager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::LocalDataStoreMgr*, false>(this, ___internal__method);
}
// Autogenerated method: System.LocalDataStoreSlot.get_Slot
int System::LocalDataStoreSlot::get_Slot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreSlot::get_Slot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Slot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.LocalDataStoreSlot.get_Cookie
int64_t System::LocalDataStoreSlot::get_Cookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreSlot::get_Cookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.LocalDataStoreSlot.Finalize
void System::LocalDataStoreSlot::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreSlot::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.LocalDataStoreMgr
#include "System/LocalDataStoreMgr.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.LocalDataStore
#include "System/LocalDataStore.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.LocalDataStoreSlot
#include "System/LocalDataStoreSlot.hpp"
// Including type: System.LocalDataStoreHolder
#include "System/LocalDataStoreHolder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 InitialSlotTableSize
int System::LocalDataStoreMgr::_get_InitialSlotTableSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::_get_InitialSlotTableSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "LocalDataStoreMgr", "InitialSlotTableSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 InitialSlotTableSize
void System::LocalDataStoreMgr::_set_InitialSlotTableSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::_set_InitialSlotTableSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LocalDataStoreMgr", "InitialSlotTableSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SlotTableDoubleThreshold
int System::LocalDataStoreMgr::_get_SlotTableDoubleThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::_get_SlotTableDoubleThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "LocalDataStoreMgr", "SlotTableDoubleThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SlotTableDoubleThreshold
void System::LocalDataStoreMgr::_set_SlotTableDoubleThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::_set_SlotTableDoubleThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LocalDataStoreMgr", "SlotTableDoubleThreshold", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LargeSlotTableSizeIncrease
int System::LocalDataStoreMgr::_get_LargeSlotTableSizeIncrease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::_get_LargeSlotTableSizeIncrease");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "LocalDataStoreMgr", "LargeSlotTableSizeIncrease"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LargeSlotTableSizeIncrease
void System::LocalDataStoreMgr::_set_LargeSlotTableSizeIncrease(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::_set_LargeSlotTableSizeIncrease");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LocalDataStoreMgr", "LargeSlotTableSizeIncrease", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] m_SlotInfoTable
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& System::LocalDataStoreMgr::dyn_m_SlotInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::dyn_m_SlotInfoTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SlotInfoTable"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_FirstAvailableSlot
[[deprecated("Use field access instead!")]] int& System::LocalDataStoreMgr::dyn_m_FirstAvailableSlot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::dyn_m_FirstAvailableSlot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FirstAvailableSlot"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.LocalDataStore> m_ManagedLocalDataStores
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::LocalDataStore*>*& System::LocalDataStoreMgr::dyn_m_ManagedLocalDataStores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::dyn_m_ManagedLocalDataStores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ManagedLocalDataStores"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::LocalDataStore*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.LocalDataStoreSlot> m_KeyToSlotMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::LocalDataStoreSlot*>*& System::LocalDataStoreMgr::dyn_m_KeyToSlotMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::dyn_m_KeyToSlotMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_KeyToSlotMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::LocalDataStoreSlot*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_CookieGenerator
[[deprecated("Use field access instead!")]] int64_t& System::LocalDataStoreMgr::dyn_m_CookieGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::dyn_m_CookieGenerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CookieGenerator"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.LocalDataStoreMgr.CreateLocalDataStore
::System::LocalDataStoreHolder* System::LocalDataStoreMgr::CreateLocalDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::CreateLocalDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLocalDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::LocalDataStoreHolder*, false>(this, ___internal__method);
}
// Autogenerated method: System.LocalDataStoreMgr.DeleteLocalDataStore
void System::LocalDataStoreMgr::DeleteLocalDataStore(::System::LocalDataStore* store) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::DeleteLocalDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteLocalDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(store)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store);
}
// Autogenerated method: System.LocalDataStoreMgr.AllocateDataSlot
::System::LocalDataStoreSlot* System::LocalDataStoreMgr::AllocateDataSlot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::AllocateDataSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllocateDataSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::LocalDataStoreSlot*, false>(this, ___internal__method);
}
// Autogenerated method: System.LocalDataStoreMgr.AllocateNamedDataSlot
::System::LocalDataStoreSlot* System::LocalDataStoreMgr::AllocateNamedDataSlot(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::AllocateNamedDataSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllocateNamedDataSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::LocalDataStoreSlot*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.LocalDataStoreMgr.GetNamedDataSlot
::System::LocalDataStoreSlot* System::LocalDataStoreMgr::GetNamedDataSlot(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::GetNamedDataSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNamedDataSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::LocalDataStoreSlot*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.LocalDataStoreMgr.FreeNamedDataSlot
void System::LocalDataStoreMgr::FreeNamedDataSlot(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::FreeNamedDataSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeNamedDataSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.LocalDataStoreMgr.FreeDataSlot
void System::LocalDataStoreMgr::FreeDataSlot(int slot, int64_t cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::FreeDataSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeDataSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(cookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slot, cookie);
}
// Autogenerated method: System.LocalDataStoreMgr.ValidateSlot
void System::LocalDataStoreMgr::ValidateSlot(::System::LocalDataStoreSlot* slot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::ValidateSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slot);
}
// Autogenerated method: System.LocalDataStoreMgr.GetSlotTableLength
int System::LocalDataStoreMgr::GetSlotTableLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalDataStoreMgr::GetSlotTableLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSlotTableLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Action.Invoke
void System::Action::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Action::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Action.BeginInvoke
::System::IAsyncResult* System::Action::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Action::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: System.Action.EndInvoke
void System::Action::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Action::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Activator
#include "System/Activator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Activator.CreateInstance
::Il2CppObject* System::Activator::CreateInstance(::System::Type* type, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> args, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Activator::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Activator", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, bindingAttr, binder, args, culture);
}
// Autogenerated method: System.Activator.CreateInstance
::Il2CppObject* System::Activator::CreateInstance(::System::Type* type, ::System::Reflection::BindingFlags bindingAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> args, ::System::Globalization::CultureInfo* culture, ::ArrayW<::Il2CppObject*> activationAttributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Activator::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Activator", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(activationAttributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, bindingAttr, binder, args, culture, activationAttributes);
}
// Autogenerated method: System.Activator.CreateInstance
::Il2CppObject* System::Activator::CreateInstance(::System::Type* type, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Activator::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Activator", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, args);
}
// Autogenerated method: System.Activator.CreateInstance
::Il2CppObject* System::Activator::CreateInstance(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Activator::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Activator", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Activator.CreateInstance
::Il2CppObject* System::Activator::CreateInstance(::System::Type* type, bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Activator::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Activator", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(nonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, nonPublic);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.AppDomainUnloadedException
#include "System/AppDomainUnloadedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ApplicationException
#include "System/ApplicationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_paramName
[[deprecated("Use field access instead!")]] ::StringW& System::ArgumentException::dyn_m_paramName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgumentException::dyn_m_paramName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_paramName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ArgumentException.get_Message
::StringW System::ArgumentException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgumentException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ArgumentException.GetObjectData
void System::ArgumentException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgumentException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ArgumentNullException
#include "System/ArgumentNullException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ArgumentOutOfRangeException
#include "System/ArgumentOutOfRangeException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String _rangeMessage
::StringW System::ArgumentOutOfRangeException::_get__rangeMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgumentOutOfRangeException::_get__rangeMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "ArgumentOutOfRangeException", "_rangeMessage"));
}
// Autogenerated static field setter
// Set static field: static private System.String _rangeMessage
void System::ArgumentOutOfRangeException::_set__rangeMessage(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgumentOutOfRangeException::_set__rangeMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ArgumentOutOfRangeException", "_rangeMessage", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_actualValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ArgumentOutOfRangeException::dyn_m_actualValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgumentOutOfRangeException::dyn_m_actualValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_actualValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ArgumentOutOfRangeException.get_RangeMessage
::StringW System::ArgumentOutOfRangeException::get_RangeMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgumentOutOfRangeException::get_RangeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "ArgumentOutOfRangeException", "get_RangeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ArgumentOutOfRangeException.get_Message
::StringW System::ArgumentOutOfRangeException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgumentOutOfRangeException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ArgumentOutOfRangeException.GetObjectData
void System::ArgumentOutOfRangeException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ArgumentOutOfRangeException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ArithmeticException
#include "System/ArithmeticException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ArrayTypeMismatchException
#include "System/ArrayTypeMismatchException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.AsyncCallback.Invoke
void System::AsyncCallback::Invoke(::System::IAsyncResult* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AsyncCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar);
}
// Autogenerated method: System.AsyncCallback.BeginInvoke
::System::IAsyncResult* System::AsyncCallback::BeginInvoke(::System::IAsyncResult* ar, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AsyncCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ar, callback, object);
}
// Autogenerated method: System.AsyncCallback.EndInvoke
void System::AsyncCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AsyncCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Attribute.get_TypeId
::Il2CppObject* System::Attribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Attribute.InternalGetCustomAttributes
::ArrayW<::System::Attribute*> System::Attribute::InternalGetCustomAttributes(::System::Reflection::PropertyInfo* element, ::System::Type* type, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::InternalGetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "InternalGetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, type, inherit);
}
// Autogenerated method: System.Attribute.InternalGetCustomAttributes
::ArrayW<::System::Attribute*> System::Attribute::InternalGetCustomAttributes(::System::Reflection::EventInfo* element, ::System::Type* type, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::InternalGetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "InternalGetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, type, inherit);
}
// Autogenerated method: System.Attribute.InternalParamGetCustomAttributes
::ArrayW<::System::Attribute*> System::Attribute::InternalParamGetCustomAttributes(::System::Reflection::ParameterInfo* parameter, ::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::InternalParamGetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "InternalParamGetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameter, attributeType, inherit);
}
// Autogenerated method: System.Attribute.InternalIsDefined
bool System::Attribute::InternalIsDefined(::System::Reflection::PropertyInfo* element, ::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::InternalIsDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "InternalIsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, attributeType, inherit);
}
// Autogenerated method: System.Attribute.InternalIsDefined
bool System::Attribute::InternalIsDefined(::System::Reflection::EventInfo* element, ::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::InternalIsDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "InternalIsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, attributeType, inherit);
}
// Autogenerated method: System.Attribute.GetCustomAttributes
::ArrayW<::System::Attribute*> System::Attribute::GetCustomAttributes(::System::Reflection::MemberInfo* element, ::System::Type* type, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, type, inherit);
}
// Autogenerated method: System.Attribute.GetCustomAttributes
::ArrayW<::System::Attribute*> System::Attribute::GetCustomAttributes(::System::Reflection::MemberInfo* element, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, inherit);
}
// Autogenerated method: System.Attribute.IsDefined
bool System::Attribute::IsDefined(::System::Reflection::MemberInfo* element, ::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::IsDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, attributeType);
}
// Autogenerated method: System.Attribute.IsDefined
bool System::Attribute::IsDefined(::System::Reflection::MemberInfo* element, ::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::IsDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, attributeType, inherit);
}
// Autogenerated method: System.Attribute.GetCustomAttribute
::System::Attribute* System::Attribute::GetCustomAttribute(::System::Reflection::MemberInfo* element, ::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::GetCustomAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Attribute*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, attributeType);
}
// Autogenerated method: System.Attribute.GetCustomAttribute
::System::Attribute* System::Attribute::GetCustomAttribute(::System::Reflection::MemberInfo* element, ::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::GetCustomAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Attribute*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, attributeType, inherit);
}
// Autogenerated method: System.Attribute.GetCustomAttributes
::ArrayW<::System::Attribute*> System::Attribute::GetCustomAttributes(::System::Reflection::ParameterInfo* element, ::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, attributeType, inherit);
}
// Autogenerated method: System.Attribute.GetCustomAttributes
::ArrayW<::System::Attribute*> System::Attribute::GetCustomAttributes(::System::Reflection::ParameterInfo* element, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, inherit);
}
// Autogenerated method: System.Attribute.GetCustomAttributes
::ArrayW<::System::Attribute*> System::Attribute::GetCustomAttributes(::System::Reflection::Module* element, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, inherit);
}
// Autogenerated method: System.Attribute.GetCustomAttributes
::ArrayW<::System::Attribute*> System::Attribute::GetCustomAttributes(::System::Reflection::Module* element, ::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, attributeType, inherit);
}
// Autogenerated method: System.Attribute.GetCustomAttributes
::ArrayW<::System::Attribute*> System::Attribute::GetCustomAttributes(::System::Reflection::Assembly* element, ::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, attributeType);
}
// Autogenerated method: System.Attribute.GetCustomAttributes
::ArrayW<::System::Attribute*> System::Attribute::GetCustomAttributes(::System::Reflection::Assembly* element, ::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, attributeType, inherit);
}
// Autogenerated method: System.Attribute.GetCustomAttributes
::ArrayW<::System::Attribute*> System::Attribute::GetCustomAttributes(::System::Reflection::Assembly* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element);
}
// Autogenerated method: System.Attribute.GetCustomAttributes
::ArrayW<::System::Attribute*> System::Attribute::GetCustomAttributes(::System::Reflection::Assembly* element, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, inherit);
}
// Autogenerated method: System.Attribute.GetCustomAttribute
::System::Attribute* System::Attribute::GetCustomAttribute(::System::Reflection::Assembly* element, ::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::GetCustomAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Attribute*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, attributeType);
}
// Autogenerated method: System.Attribute.GetCustomAttribute
::System::Attribute* System::Attribute::GetCustomAttribute(::System::Reflection::Assembly* element, ::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::GetCustomAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "GetCustomAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Attribute*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, attributeType, inherit);
}
// Autogenerated method: System.Attribute.AreFieldValuesEqual
bool System::Attribute::AreFieldValuesEqual(::Il2CppObject* thisValue, ::Il2CppObject* thatValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::AreFieldValuesEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Attribute", "AreFieldValuesEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisValue), ::il2cpp_utils::ExtractType(thatValue)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thisValue, thatValue);
}
// Autogenerated method: System.Attribute.IsDefaultAttribute
bool System::Attribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Attribute.Equals
bool System::Attribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Attribute.GetHashCode
int System::Attribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Attribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.AttributeTargets
#include "System/AttributeTargets.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Assembly
::System::AttributeTargets System::AttributeTargets::_get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Assembly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Assembly"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Assembly
void System::AttributeTargets::_set_Assembly(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Assembly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Assembly", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Module
::System::AttributeTargets System::AttributeTargets::_get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Module");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Module"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Module
void System::AttributeTargets::_set_Module(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Module");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Module", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Class
::System::AttributeTargets System::AttributeTargets::_get_Class() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Class");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Class"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Class
void System::AttributeTargets::_set_Class(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Class");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Class", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Struct
::System::AttributeTargets System::AttributeTargets::_get_Struct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Struct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Struct"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Struct
void System::AttributeTargets::_set_Struct(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Struct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Struct", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Enum
::System::AttributeTargets System::AttributeTargets::_get_Enum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Enum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Enum"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Enum
void System::AttributeTargets::_set_Enum(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Enum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Enum", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Constructor
::System::AttributeTargets System::AttributeTargets::_get_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Constructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Constructor"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Constructor
void System::AttributeTargets::_set_Constructor(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Constructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Constructor", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Method
::System::AttributeTargets System::AttributeTargets::_get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Method"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Method
void System::AttributeTargets::_set_Method(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Method", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Property
::System::AttributeTargets System::AttributeTargets::_get_Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Property");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Property"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Property
void System::AttributeTargets::_set_Property(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Property");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Property", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Field
::System::AttributeTargets System::AttributeTargets::_get_Field() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Field");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Field"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Field
void System::AttributeTargets::_set_Field(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Field");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Field", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Event
::System::AttributeTargets System::AttributeTargets::_get_Event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Event");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Event"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Event
void System::AttributeTargets::_set_Event(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Event");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Event", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Interface
::System::AttributeTargets System::AttributeTargets::_get_Interface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Interface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Interface"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Interface
void System::AttributeTargets::_set_Interface(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Interface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Interface", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Parameter
::System::AttributeTargets System::AttributeTargets::_get_Parameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Parameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Parameter"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Parameter
void System::AttributeTargets::_set_Parameter(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Parameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Parameter", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets Delegate
::System::AttributeTargets System::AttributeTargets::_get_Delegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_Delegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "Delegate"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets Delegate
void System::AttributeTargets::_set_Delegate(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_Delegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "Delegate", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets ReturnValue
::System::AttributeTargets System::AttributeTargets::_get_ReturnValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_ReturnValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "ReturnValue"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets ReturnValue
void System::AttributeTargets::_set_ReturnValue(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_ReturnValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "ReturnValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets GenericParameter
::System::AttributeTargets System::AttributeTargets::_get_GenericParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_GenericParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "GenericParameter"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets GenericParameter
void System::AttributeTargets::_set_GenericParameter(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_GenericParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "GenericParameter", value));
}
// Autogenerated static field getter
// Get static field: static public System.AttributeTargets All
::System::AttributeTargets System::AttributeTargets::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeTargets>("System", "AttributeTargets", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.AttributeTargets All
void System::AttributeTargets::_set_All(::System::AttributeTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeTargets", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::AttributeTargets::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeTargets::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.AttributeUsageAttribute
#include "System/AttributeUsageAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.AttributeUsageAttribute Default
::System::AttributeUsageAttribute* System::AttributeUsageAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::AttributeUsageAttribute*>("System", "AttributeUsageAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static System.AttributeUsageAttribute Default
void System::AttributeUsageAttribute::_set_Default(::System::AttributeUsageAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AttributeUsageAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: System.AttributeTargets m_attributeTarget
[[deprecated("Use field access instead!")]] ::System::AttributeTargets& System::AttributeUsageAttribute::dyn_m_attributeTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::dyn_m_attributeTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_attributeTarget"))->offset;
  return *reinterpret_cast<::System::AttributeTargets*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_allowMultiple
[[deprecated("Use field access instead!")]] bool& System::AttributeUsageAttribute::dyn_m_allowMultiple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::dyn_m_allowMultiple");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_allowMultiple"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_inherited
[[deprecated("Use field access instead!")]] bool& System::AttributeUsageAttribute::dyn_m_inherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::dyn_m_inherited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_inherited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.AttributeUsageAttribute.get_AllowMultiple
bool System::AttributeUsageAttribute::get_AllowMultiple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::get_AllowMultiple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowMultiple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.AttributeUsageAttribute.set_AllowMultiple
void System::AttributeUsageAttribute::set_AllowMultiple(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::set_AllowMultiple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowMultiple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.AttributeUsageAttribute.get_Inherited
bool System::AttributeUsageAttribute::get_Inherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::get_Inherited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Inherited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.AttributeUsageAttribute.set_Inherited
void System::AttributeUsageAttribute::set_Inherited(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::set_Inherited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Inherited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.AttributeUsageAttribute..cctor
void System::AttributeUsageAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::AttributeUsageAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "AttributeUsageAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.BadImageFormatException
#include "System/BadImageFormatException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _fileName
[[deprecated("Use field access instead!")]] ::StringW& System::BadImageFormatException::dyn__fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BadImageFormatException::dyn__fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _fusionLog
[[deprecated("Use field access instead!")]] ::StringW& System::BadImageFormatException::dyn__fusionLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BadImageFormatException::dyn__fusionLog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fusionLog"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.BadImageFormatException.get_FusionLog
::StringW System::BadImageFormatException::get_FusionLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BadImageFormatException::get_FusionLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FusionLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.BadImageFormatException.SetMessageField
void System::BadImageFormatException::SetMessageField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BadImageFormatException::SetMessageField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMessageField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.BadImageFormatException.get_Message
::StringW System::BadImageFormatException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BadImageFormatException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.BadImageFormatException.ToString
::StringW System::BadImageFormatException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BadImageFormatException::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.BadImageFormatException.GetObjectData
void System::BadImageFormatException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::BadImageFormatException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
