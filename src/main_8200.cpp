// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator
#include "OVRSimpleJSON/JSONNode_KeyEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator m_Enumerator
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode::Enumerator& OVRSimpleJSON::JSONNode::KeyEnumerator::dyn_m_Enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::dyn_m_Enumerator");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Enumerator"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator.get_Current
::StringW OVRSimpleJSON::JSONNode::KeyEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator..ctor
OVRSimpleJSON::JSONNode::KeyEnumerator::KeyEnumerator(typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator aArrayEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aArrayEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aArrayEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator..ctor
OVRSimpleJSON::JSONNode::KeyEnumerator::KeyEnumerator(typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator aDictEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDictEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aDictEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator..ctor
// ABORTED elsewhere.  OVRSimpleJSON::JSONNode::KeyEnumerator::KeyEnumerator(::OVRSimpleJSON::JSONNode::Enumerator aEnumerator)
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator.MoveNext
bool OVRSimpleJSON::JSONNode::KeyEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator.GetEnumerator
::OVRSimpleJSON::JSONNode::KeyEnumerator OVRSimpleJSON::JSONNode::KeyEnumerator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::KeyEnumerator, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator
#include "OVRSimpleJSON/JSONNode_LinqEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode m_Node
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONNode::LinqEnumerator::dyn_m_Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::dyn_m_Node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Node"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator m_Enumerator
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode::Enumerator& OVRSimpleJSON::JSONNode::LinqEnumerator::dyn_m_Enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::dyn_m_Enumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Enumerator"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.get_Current
::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*> OVRSimpleJSON::JSONNode::LinqEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONNode::LinqEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.MoveNext
bool OVRSimpleJSON::JSONNode::LinqEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.Dispose
void OVRSimpleJSON::JSONNode::LinqEnumerator::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>>* OVRSimpleJSON::JSONNode::LinqEnumerator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.Reset
void OVRSimpleJSON::JSONNode::LinqEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONNode::LinqEnumerator::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40
#include "OVRSimpleJSON/JSONNode_-get_Children-d__40.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode <>2__current
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_Generic_IEnumerator$OVRSimpleJSON_JSONNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.IDisposable.Dispose
void OVRSimpleJSON::JSONNode::$get_Children$d__40::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.MoveNext
bool OVRSimpleJSON::JSONNode::$get_Children$d__40::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.IEnumerator.Reset
void OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_Generic_IEnumerable$OVRSimpleJSON_JSONNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42
#include "OVRSimpleJSON/JSONNode_-get_DeepChildren-d__42.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode <>2__current
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSimpleJSON.JSONNode <>4__this
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<OVRSimpleJSON.JSONNode> <>7__wrap1
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<OVRSimpleJSON.JSONNode> <>7__wrap2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_Generic_IEnumerator$OVRSimpleJSON_JSONNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.IDisposable.Dispose
void OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.MoveNext
bool OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.<>m__Finally1
void OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.<>m__Finally2
void OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.IEnumerator.Reset
void OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_Generic_IEnumerable$OVRSimpleJSON_JSONNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONArray
#include "OVRSimpleJSON/JSONArray.hpp"
// Including type: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22
#include "OVRSimpleJSON/JSONArray_-get_Children-d__22.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRSimpleJSON.JSONNode> m_List
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>*& OVRSimpleJSON::JSONArray::dyn_m_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::dyn_m_List");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_List"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inline
[[deprecated("Use field access instead!")]] bool& OVRSimpleJSON::JSONArray::dyn_inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::dyn_inline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Inline
bool OVRSimpleJSON::JSONArray::get_Inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Inline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Inline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.set_Inline
void OVRSimpleJSON::JSONArray::set_Inline(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::set_Inline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Inline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONArray::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_IsArray
bool OVRSimpleJSON::JSONArray::get_IsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_IsArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::get_Item(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.set_Item
void OVRSimpleJSON::JSONArray::set_Item(int aIndex, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aIndex, value);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::get_Item(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.set_Item
void OVRSimpleJSON::JSONArray::set_Item(::StringW aKey, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, value);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Count
int OVRSimpleJSON::JSONArray::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Children
::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONArray::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Children");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONArray::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.Add
void OVRSimpleJSON::JSONArray::Add(::StringW aKey, ::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(aItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::Remove(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::Remove(::OVRSimpleJSON::JSONNode* aNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aNode);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.WriteToStringBuilder
void OVRSimpleJSON::JSONArray::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22
#include "OVRSimpleJSON/JSONArray_-get_Children-d__22.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode <>2__current
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSimpleJSON.JSONArray <>4__this
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONArray*& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONArray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<OVRSimpleJSON.JSONNode> <>7__wrap1
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_Generic_IEnumerator$OVRSimpleJSON_JSONNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.IDisposable.Dispose
void OVRSimpleJSON::JSONArray::$get_Children$d__22::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.MoveNext
bool OVRSimpleJSON::JSONArray::$get_Children$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.<>m__Finally1
void OVRSimpleJSON::JSONArray::$get_Children$d__22::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.IEnumerator.Reset
void OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_Generic_IEnumerable$OVRSimpleJSON_JSONNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONObject
#include "OVRSimpleJSON/JSONObject.hpp"
// Including type: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<>c__DisplayClass21_0
#include "OVRSimpleJSON/JSONObject_--c__DisplayClass21_0.hpp"
// Including type: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23
#include "OVRSimpleJSON/JSONObject_-get_Children-d__23.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,OVRSimpleJSON.JSONNode> m_Dict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>*& OVRSimpleJSON::JSONObject::dyn_m_Dict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::dyn_m_Dict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Dict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inline
[[deprecated("Use field access instead!")]] bool& OVRSimpleJSON::JSONObject::dyn_inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::dyn_inline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Inline
bool OVRSimpleJSON::JSONObject::get_Inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Inline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Inline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.set_Inline
void OVRSimpleJSON::JSONObject::set_Inline(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::set_Inline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Inline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONObject::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_IsObject
bool OVRSimpleJSON::JSONObject::get_IsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_IsObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::get_Item(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.set_Item
void OVRSimpleJSON::JSONObject::set_Item(::StringW aKey, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, value);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::get_Item(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.set_Item
void OVRSimpleJSON::JSONObject::set_Item(int aIndex, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aIndex, value);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Count
int OVRSimpleJSON::JSONObject::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Children
::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONObject::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Children");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONObject::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.Add
void OVRSimpleJSON::JSONObject::Add(::StringW aKey, ::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(aItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::Remove(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::Remove(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::Remove(::OVRSimpleJSON::JSONNode* aNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aNode);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.WriteToStringBuilder
void OVRSimpleJSON::JSONObject::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<>c__DisplayClass21_0
#include "OVRSimpleJSON/JSONObject_--c__DisplayClass21_0.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRSimpleJSON.JSONNode aNode
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONObject::$$c__DisplayClass21_0::dyn_aNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$$c__DisplayClass21_0::dyn_aNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aNode"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<>c__DisplayClass21_0.<Remove>b__0
bool OVRSimpleJSON::JSONObject::$$c__DisplayClass21_0::$Remove$b__0(::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*> k) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$$c__DisplayClass21_0::<Remove>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Remove>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, k);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23
#include "OVRSimpleJSON/JSONObject_-get_Children-d__23.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode <>2__current
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSimpleJSON.JSONObject <>4__this
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONObject*& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.String,OVRSimpleJSON.JSONNode> <>7__wrap1
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_Generic_IEnumerator$OVRSimpleJSON_JSONNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.IDisposable.Dispose
void OVRSimpleJSON::JSONObject::$get_Children$d__23::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.MoveNext
bool OVRSimpleJSON::JSONObject::$get_Children$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.<>m__Finally1
void OVRSimpleJSON::JSONObject::$get_Children$d__23::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.IEnumerator.Reset
void OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_Generic_IEnumerable$OVRSimpleJSON_JSONNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONString
#include "OVRSimpleJSON/JSONString.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_Data
[[deprecated("Use field access instead!")]] ::StringW& OVRSimpleJSON::JSONString::dyn_m_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::dyn_m_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Data"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONString.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONString::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONString.get_IsString
bool OVRSimpleJSON::JSONString::get_IsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::get_IsString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONString.get_Value
::StringW OVRSimpleJSON::JSONString::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONString.set_Value
void OVRSimpleJSON::JSONString::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONString.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONString::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONString.WriteToStringBuilder
void OVRSimpleJSON::JSONString::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONString.Equals
bool OVRSimpleJSON::JSONString::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONString.GetHashCode
int OVRSimpleJSON::JSONString::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNumber
#include "OVRSimpleJSON/JSONNumber.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Double m_Data
[[deprecated("Use field access instead!")]] double& OVRSimpleJSON::JSONNumber::dyn_m_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::dyn_m_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Data"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.IsNumeric
bool OVRSimpleJSON::JSONNumber::IsNumeric(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::IsNumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNumber", "IsNumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNumber::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_IsNumber
bool OVRSimpleJSON::JSONNumber::get_IsNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_IsNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_Value
::StringW OVRSimpleJSON::JSONNumber::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.set_Value
void OVRSimpleJSON::JSONNumber::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_AsDouble
double OVRSimpleJSON::JSONNumber::get_AsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_AsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.set_AsDouble
void OVRSimpleJSON::JSONNumber::set_AsDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::set_AsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_AsLong
int64_t OVRSimpleJSON::JSONNumber::get_AsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_AsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.set_AsLong
void OVRSimpleJSON::JSONNumber::set_AsLong(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::set_AsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONNumber::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.WriteToStringBuilder
void OVRSimpleJSON::JSONNumber::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.Equals
bool OVRSimpleJSON::JSONNumber::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.GetHashCode
int OVRSimpleJSON::JSONNumber::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONBool
#include "OVRSimpleJSON/JSONBool.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Data
[[deprecated("Use field access instead!")]] bool& OVRSimpleJSON::JSONBool::dyn_m_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::dyn_m_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Data"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONBool::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.get_IsBoolean
bool OVRSimpleJSON::JSONBool::get_IsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::get_IsBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.get_Value
::StringW OVRSimpleJSON::JSONBool::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.set_Value
void OVRSimpleJSON::JSONBool::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.get_AsBool
bool OVRSimpleJSON::JSONBool::get_AsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::get_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.set_AsBool
void OVRSimpleJSON::JSONBool::set_AsBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::set_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONBool::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.WriteToStringBuilder
void OVRSimpleJSON::JSONBool::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.Equals
bool OVRSimpleJSON::JSONBool::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.GetHashCode
int OVRSimpleJSON::JSONBool::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNull
#include "OVRSimpleJSON/JSONNull.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRSimpleJSON.JSONNull m_StaticInstance
::OVRSimpleJSON::JSONNull* OVRSimpleJSON::JSONNull::_get_m_StaticInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::_get_m_StaticInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNull*>("OVRSimpleJSON", "JSONNull", "m_StaticInstance"));
}
// Autogenerated static field setter
// Set static field: static private OVRSimpleJSON.JSONNull m_StaticInstance
void OVRSimpleJSON::JSONNull::_set_m_StaticInstance(::OVRSimpleJSON::JSONNull* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::_set_m_StaticInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNull", "m_StaticInstance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean reuseSameInstance
bool OVRSimpleJSON::JSONNull::_get_reuseSameInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::_get_reuseSameInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVRSimpleJSON", "JSONNull", "reuseSameInstance"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean reuseSameInstance
void OVRSimpleJSON::JSONNull::_set_reuseSameInstance(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::_set_reuseSameInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNull", "reuseSameInstance", value));
}
// Autogenerated method: OVRSimpleJSON.JSONNull.CreateOrGet
::OVRSimpleJSON::JSONNull* OVRSimpleJSON::JSONNull::CreateOrGet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::CreateOrGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNull", "CreateOrGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNull*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNull::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.get_IsNull
bool OVRSimpleJSON::JSONNull::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::get_IsNull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.get_Value
::StringW OVRSimpleJSON::JSONNull::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.set_Value
void OVRSimpleJSON::JSONNull::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.get_AsBool
bool OVRSimpleJSON::JSONNull::get_AsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::get_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.set_AsBool
void OVRSimpleJSON::JSONNull::set_AsBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::set_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNull..cctor
void OVRSimpleJSON::JSONNull::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNull", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONNull::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.Equals
bool OVRSimpleJSON::JSONNull::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.GetHashCode
int OVRSimpleJSON::JSONNull::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.WriteToStringBuilder
void OVRSimpleJSON::JSONNull::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONLazyCreator
#include "OVRSimpleJSON/JSONLazyCreator.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: OVRSimpleJSON.JSONArray
#include "OVRSimpleJSON/JSONArray.hpp"
// Including type: OVRSimpleJSON.JSONObject
#include "OVRSimpleJSON/JSONObject.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode m_Node
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONLazyCreator::dyn_m_Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::dyn_m_Node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Node"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_Key
[[deprecated("Use field access instead!")]] ::StringW& OVRSimpleJSON::JSONLazyCreator::dyn_m_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::dyn_m_Key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONLazyCreator::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONLazyCreator::get_Item(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_Item
void OVRSimpleJSON::JSONLazyCreator::set_Item(int aIndex, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aIndex, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONLazyCreator::get_Item(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_Item
void OVRSimpleJSON::JSONLazyCreator::set_Item(::StringW aKey, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsInt
int OVRSimpleJSON::JSONLazyCreator::get_AsInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsInt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsInt
void OVRSimpleJSON::JSONLazyCreator::set_AsInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsInt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsFloat
float OVRSimpleJSON::JSONLazyCreator::get_AsFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsFloat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsFloat
void OVRSimpleJSON::JSONLazyCreator::set_AsFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsFloat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsDouble
double OVRSimpleJSON::JSONLazyCreator::get_AsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsDouble
void OVRSimpleJSON::JSONLazyCreator::set_AsDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsLong
int64_t OVRSimpleJSON::JSONLazyCreator::get_AsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsLong
void OVRSimpleJSON::JSONLazyCreator::set_AsLong(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsBool
bool OVRSimpleJSON::JSONLazyCreator::get_AsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsBool
void OVRSimpleJSON::JSONLazyCreator::set_AsBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsArray
::OVRSimpleJSON::JSONArray* OVRSimpleJSON::JSONLazyCreator::get_AsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONArray*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsObject
::OVRSimpleJSON::JSONObject* OVRSimpleJSON::JSONLazyCreator::get_AsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONLazyCreator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.Add
void OVRSimpleJSON::JSONLazyCreator::Add(::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.Add
void OVRSimpleJSON::JSONLazyCreator::Add(::StringW aKey, ::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(aItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.Equals
bool OVRSimpleJSON::JSONLazyCreator::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.GetHashCode
int OVRSimpleJSON::JSONLazyCreator::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.WriteToStringBuilder
void OVRSimpleJSON::JSONLazyCreator::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.op_Equality
bool OVRSimpleJSON::operator ==(::OVRSimpleJSON::JSONLazyCreator* a, ::Il2CppObject& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONLazyCreator", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.op_Inequality
bool OVRSimpleJSON::operator !=(::OVRSimpleJSON::JSONLazyCreator* a, ::Il2CppObject& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONLazyCreator", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSON
#include "OVRSimpleJSON/JSON.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRSimpleJSON.JSON.Parse
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSON::Parse(::StringW aJSON) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSON::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSON", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aJSON)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aJSON);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONContainerType
#include "OVRSimpleJSON/JSONContainerType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType Array
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONContainerType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONContainerType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType Array
void OVRSimpleJSON::JSONContainerType::_set_Array(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONContainerType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType Object
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONContainerType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONContainerType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType Object
void OVRSimpleJSON::JSONContainerType::_set_Object(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONContainerType", "Object", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONContainerType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Assets.OVR.Scripts.Record
#include "Assets/OVR/Scripts/Record.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String category
[[deprecated("Use field access instead!")]] ::StringW& Assets::OVR::Scripts::Record::dyn_category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::Record::dyn_category");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "category"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String message
[[deprecated("Use field access instead!")]] ::StringW& Assets::OVR::Scripts::Record::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::Record::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Assets.OVR.Scripts.RangedRecord
#include "Assets/OVR/Scripts/RangedRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single value
[[deprecated("Use field access instead!")]] float& Assets::OVR::Scripts::RangedRecord::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::RangedRecord::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single min
[[deprecated("Use field access instead!")]] float& Assets::OVR::Scripts::RangedRecord::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::RangedRecord::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single max
[[deprecated("Use field access instead!")]] float& Assets::OVR::Scripts::RangedRecord::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::RangedRecord::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Assets.OVR.Scripts.FixMethodDelegate
#include "Assets/OVR/Scripts/FixMethodDelegate.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Assets.OVR.Scripts.FixMethodDelegate.Invoke
void Assets::OVR::Scripts::FixMethodDelegate::Invoke(::UnityEngine::Object* obj, bool isLastInSet, int selectedIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixMethodDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(isLastInSet), ::il2cpp_utils::ExtractType(selectedIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, isLastInSet, selectedIndex);
}
// Autogenerated method: Assets.OVR.Scripts.FixMethodDelegate.BeginInvoke
::System::IAsyncResult* Assets::OVR::Scripts::FixMethodDelegate::BeginInvoke(::UnityEngine::Object* obj, bool isLastInSet, int selectedIndex, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixMethodDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(isLastInSet), ::il2cpp_utils::ExtractType(selectedIndex), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, obj, isLastInSet, selectedIndex, callback, object);
}
// Autogenerated method: Assets.OVR.Scripts.FixMethodDelegate.EndInvoke
void Assets::OVR::Scripts::FixMethodDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixMethodDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Assets.OVR.Scripts.FixRecord
#include "Assets/OVR/Scripts/FixRecord.hpp"
// Including type: Assets.OVR.Scripts.FixMethodDelegate
#include "Assets/OVR/Scripts/FixMethodDelegate.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Assets.OVR.Scripts.FixMethodDelegate fixMethod
[[deprecated("Use field access instead!")]] ::Assets::OVR::Scripts::FixMethodDelegate*& Assets::OVR::Scripts::FixRecord::dyn_fixMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_fixMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixMethod"))->offset;
  return *reinterpret_cast<::Assets::OVR::Scripts::FixMethodDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Object targetObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Assets::OVR::Scripts::FixRecord::dyn_targetObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_targetObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] buttonNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Assets::OVR::Scripts::FixRecord::dyn_buttonNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_buttonNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean editModeRequired
[[deprecated("Use field access instead!")]] bool& Assets::OVR::Scripts::FixRecord::dyn_editModeRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_editModeRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editModeRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean complete
[[deprecated("Use field access instead!")]] bool& Assets::OVR::Scripts::FixRecord::dyn_complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_complete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "complete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRInputModule
#include "UnityEngine/EventSystems/OVRInputModule.hpp"
// Including type: UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode
#include "UnityEngine/EventSystems/OVRInputModule_InputMode.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OVRCursor
#include "GlobalNamespace/OVRCursor.hpp"
// Including type: OVRRaycaster
#include "GlobalNamespace/OVRRaycaster.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.EventSystems.OVRPointerEventData
#include "UnityEngine/EventSystems/OVRPointerEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerInputModule/UnityEngine.EventSystems.MouseState
#include "UnityEngine/EventSystems/PointerInputModule_MouseState.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.EventSystems.PointerInputModule/UnityEngine.EventSystems.MouseButtonEventData
#include "UnityEngine/EventSystems/PointerInputModule_MouseButtonEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData/UnityEngine.EventSystems.FramePressState
#include "UnityEngine/EventSystems/PointerEventData_FramePressState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rayTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::EventSystems::OVRInputModule::dyn_rayTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_rayTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCursor m_Cursor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCursor*& UnityEngine::EventSystems::OVRInputModule::dyn_m_Cursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_Cursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Cursor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCursor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/Button joyPadClickButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Button& UnityEngine::EventSystems::OVRInputModule::dyn_joyPadClickButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_joyPadClickButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joyPadClickButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode gazeClickKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& UnityEngine::EventSystems::OVRInputModule::dyn_gazeClickKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_gazeClickKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gazeClickKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean performSphereCastForGazepointer
[[deprecated("Use field access instead!")]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_performSphereCastForGazepointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_performSphereCastForGazepointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "performSphereCastForGazepointer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useRightStickScroll
[[deprecated("Use field access instead!")]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_useRightStickScroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_useRightStickScroll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useRightStickScroll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rightStickDeadZone
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_rightStickDeadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_rightStickDeadZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightStickDeadZone"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useSwipeScroll
[[deprecated("Use field access instead!")]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_useSwipeScroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_useSwipeScroll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useSwipeScroll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single swipeDragThreshold
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swipeDragThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single swipeDragScale
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swipeDragScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean InvertSwipeXAxis
[[deprecated("Use field access instead!")]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_InvertSwipeXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_InvertSwipeXAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvertSwipeXAxis"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRRaycaster activeGraphicRaycaster
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRRaycaster*& UnityEngine::EventSystems::OVRInputModule::dyn_activeGraphicRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_activeGraphicRaycaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeGraphicRaycaster"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRRaycaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angleDragThreshold
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_angleDragThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_angleDragThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angleDragThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SpherecastRadius
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_m_SpherecastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_SpherecastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SpherecastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_NextAction
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_m_NextAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_NextAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NextAction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_LastMousePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::EventSystems::OVRInputModule::dyn_m_LastMousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_LastMousePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastMousePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_MousePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::EventSystems::OVRInputModule::dyn_m_MousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_MousePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MousePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_HorizontalAxis
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_HorizontalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_HorizontalAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HorizontalAxis"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_VerticalAxis
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_VerticalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_VerticalAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalAxis"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_SubmitButton
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_SubmitButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_SubmitButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubmitButton"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_CancelButton
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_CancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_CancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CancelButton"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_InputActionsPerSecond
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_m_InputActionsPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_InputActionsPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputActionsPerSecond"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowActivationOnMobileDevice
[[deprecated("Use field access instead!")]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_m_AllowActivationOnMobileDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_AllowActivationOnMobileDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowActivationOnMobileDevice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.EventSystems.OVRPointerEventData> m_VRRayPointerData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::EventSystems::OVRPointerEventData*>*& UnityEngine::EventSystems::OVRInputModule::dyn_m_VRRayPointerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_VRRayPointerData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VRRayPointerData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::EventSystems::OVRPointerEventData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.EventSystems.PointerInputModule/UnityEngine.EventSystems.MouseState m_MouseState
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerInputModule::MouseState*& UnityEngine::EventSystems::OVRInputModule::dyn_m_MouseState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_MouseState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MouseState"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerInputModule::MouseState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_inputMode
::UnityEngine::EventSystems::OVRInputModule::InputMode UnityEngine::EventSystems::OVRInputModule::get_inputMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_inputMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::OVRInputModule::InputMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_allowActivationOnMobileDevice
bool UnityEngine::EventSystems::OVRInputModule::get_allowActivationOnMobileDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_allowActivationOnMobileDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowActivationOnMobileDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_allowActivationOnMobileDevice
void UnityEngine::EventSystems::OVRInputModule::set_allowActivationOnMobileDevice(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_allowActivationOnMobileDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowActivationOnMobileDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_inputActionsPerSecond
float UnityEngine::EventSystems::OVRInputModule::get_inputActionsPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_inputActionsPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputActionsPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_inputActionsPerSecond
void UnityEngine::EventSystems::OVRInputModule::set_inputActionsPerSecond(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_inputActionsPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inputActionsPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_horizontalAxis
::StringW UnityEngine::EventSystems::OVRInputModule::get_horizontalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_horizontalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_horizontalAxis
void UnityEngine::EventSystems::OVRInputModule::set_horizontalAxis(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_horizontalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_verticalAxis
::StringW UnityEngine::EventSystems::OVRInputModule::get_verticalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_verticalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_verticalAxis
void UnityEngine::EventSystems::OVRInputModule::set_verticalAxis(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_verticalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_submitButton
::StringW UnityEngine::EventSystems::OVRInputModule::get_submitButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_submitButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_submitButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_submitButton
void UnityEngine::EventSystems::OVRInputModule::set_submitButton(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_submitButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_submitButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_cancelButton
::StringW UnityEngine::EventSystems::OVRInputModule::get_cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_cancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_cancelButton
void UnityEngine::EventSystems::OVRInputModule::set_cancelButton(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_cancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SendSubmitEventToSelectedObject
bool UnityEngine::EventSystems::OVRInputModule::SendSubmitEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SendSubmitEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendSubmitEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.AllowMoveEventProcessing
bool UnityEngine::EventSystems::OVRInputModule::AllowMoveEventProcessing(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::AllowMoveEventProcessing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllowMoveEventProcessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetRawMoveVector
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRInputModule::GetRawMoveVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetRawMoveVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawMoveVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SendMoveEventToSelectedObject
bool UnityEngine::EventSystems::OVRInputModule::SendMoveEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SendMoveEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMoveEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SendUpdateEventToSelectedObject
bool UnityEngine::EventSystems::OVRInputModule::SendUpdateEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SendUpdateEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUpdateEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ProcessMousePress
void UnityEngine::EventSystems::OVRInputModule::ProcessMousePress(::UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ProcessMousePress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMousePress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ProcessMouseEvent
void UnityEngine::EventSystems::OVRInputModule::ProcessMouseEvent(::UnityEngine::EventSystems::PointerInputModule::MouseState* mouseData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ProcessMouseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMouseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mouseData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mouseData);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.UseMouse
bool UnityEngine::EventSystems::OVRInputModule::UseMouse(bool pressed, bool released, ::UnityEngine::EventSystems::PointerEventData* pointerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::UseMouse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRInputModule", "UseMouse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressed), ::il2cpp_utils::ExtractType(released), ::il2cpp_utils::ExtractType(pointerData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pressed, released, pointerData);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.CopyFromTo
void UnityEngine::EventSystems::OVRInputModule::CopyFromTo(::UnityEngine::EventSystems::OVRPointerEventData* from, ::UnityEngine::EventSystems::OVRPointerEventData* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::CopyFromTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFromTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.CopyFromTo
void UnityEngine::EventSystems::OVRInputModule::CopyFromTo(::UnityEngine::EventSystems::PointerEventData* from, ::UnityEngine::EventSystems::PointerEventData* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::CopyFromTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFromTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetPointerData
bool UnityEngine::EventSystems::OVRInputModule::GetPointerData(int id, ByRef<::UnityEngine::EventSystems::OVRPointerEventData*> data, bool create) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetPointerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::EventSystems::OVRPointerEventData*&>(), ::il2cpp_utils::ExtractType(create)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id, byref(data), create);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ClearSelection
void UnityEngine::EventSystems::OVRInputModule::ClearSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetRectTransformNormal
::UnityEngine::Vector3 UnityEngine::EventSystems::OVRInputModule::GetRectTransformNormal(::UnityEngine::RectTransform* rectTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetRectTransformNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRInputModule", "GetRectTransformNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rectTransform);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetGazePointerData
::UnityEngine::EventSystems::PointerInputModule::MouseState* UnityEngine::EventSystems::OVRInputModule::GetGazePointerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetGazePointerData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGazePointerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerInputModule::MouseState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetCanvasPointerData
::UnityEngine::EventSystems::PointerInputModule::MouseState* UnityEngine::EventSystems::OVRInputModule::GetCanvasPointerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetCanvasPointerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanvasPointerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerInputModule::MouseState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ShouldStartDrag
bool UnityEngine::EventSystems::OVRInputModule::ShouldStartDrag(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ShouldStartDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldStartDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.IsPointerMoving
bool UnityEngine::EventSystems::OVRInputModule::IsPointerMoving(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::IsPointerMoving");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRInputModule", "IsPointerMoving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SwipeAdjustedPosition
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRInputModule::SwipeAdjustedPosition(::UnityEngine::Vector2 originalPosition, ::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SwipeAdjustedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwipeAdjustedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPosition), ::il2cpp_utils::ExtractType(pointerEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, originalPosition, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetGazeButtonState
::UnityEngine::EventSystems::PointerEventData::FramePressState UnityEngine::EventSystems::OVRInputModule::GetGazeButtonState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetGazeButtonState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGazeButtonState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerEventData::FramePressState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetExtraScrollDelta
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRInputModule::GetExtraScrollDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetExtraScrollDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtraScrollDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.UpdateModule
void UnityEngine::EventSystems::OVRInputModule::UpdateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::UpdateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.IsModuleSupported
bool UnityEngine::EventSystems::OVRInputModule::IsModuleSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::IsModuleSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsModuleSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ShouldActivateModule
bool UnityEngine::EventSystems::OVRInputModule::ShouldActivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ShouldActivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldActivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ActivateModule
void UnityEngine::EventSystems::OVRInputModule::ActivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ActivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.DeactivateModule
void UnityEngine::EventSystems::OVRInputModule::DeactivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::DeactivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.Process
void UnityEngine::EventSystems::OVRInputModule::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::Process");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ProcessDrag
void UnityEngine::EventSystems::OVRInputModule::ProcessDrag(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ProcessDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode
#include "UnityEngine/EventSystems/OVRInputModule_InputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode Mouse
::UnityEngine::EventSystems::OVRInputModule::InputMode UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Mouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Mouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::OVRInputModule::InputMode>("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Mouse"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode Mouse
void UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Mouse(::UnityEngine::EventSystems::OVRInputModule::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Mouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Mouse", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode Buttons
::UnityEngine::EventSystems::OVRInputModule::InputMode UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Buttons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::OVRInputModule::InputMode>("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Buttons"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode Buttons
void UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Buttons(::UnityEngine::EventSystems::OVRInputModule::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Buttons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Buttons", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::EventSystems::OVRInputModule::InputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster.hpp"
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster_--c.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Int32 kNoEventMaskSet
int UnityEngine::EventSystems::OVRPhysicsRaycaster::_get_kNoEventMaskSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::_get_kNoEventMaskSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.EventSystems", "OVRPhysicsRaycaster", "kNoEventMaskSet"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 kNoEventMaskSet
void UnityEngine::EventSystems::OVRPhysicsRaycaster::_set_kNoEventMaskSet(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::_set_kNoEventMaskSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster", "kNoEventMaskSet", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.LayerMask m_EventMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_m_EventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_m_EventMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EventMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sortOrder
[[deprecated("Use field access instead!")]] int& UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_sortOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_sortOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortOrder"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_depth
int UnityEngine::EventSystems::OVRPhysicsRaycaster::get_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_depth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_finalEventMask
int UnityEngine::EventSystems::OVRPhysicsRaycaster::get_finalEventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_finalEventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_finalEventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_eventMask
::UnityEngine::LayerMask UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.set_eventMask
void UnityEngine::EventSystems::OVRPhysicsRaycaster::set_eventMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::set_eventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.Spherecast
void UnityEngine::EventSystems::OVRPhysicsRaycaster::Spherecast(::UnityEngine::EventSystems::PointerEventData* eventData, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::Spherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Spherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, resultAppendList, radius);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.GetScreenPos
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRPhysicsRaycaster::GetScreenPos(::UnityEngine::Vector3 worldPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::GetScreenPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScreenPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, worldPosition);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_eventCamera
::UnityEngine::Camera* UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventCamera");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_sortOrderPriority
int UnityEngine::EventSystems::OVRPhysicsRaycaster::get_sortOrderPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_sortOrderPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortOrderPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.Raycast
void UnityEngine::EventSystems::OVRPhysicsRaycaster::Raycast(::UnityEngine::EventSystems::PointerEventData* eventData, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::Raycast");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c <>9
::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c* UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c*>("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c <>9
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9(::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__15_0
::System::Comparison_1<::UnityEngine::RaycastHit>* UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__15_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::RaycastHit>*>("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__15_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__15_0
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__15_0(::System::Comparison_1<::UnityEngine::RaycastHit>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__15_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__15_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__16_0
::System::Comparison_1<::UnityEngine::RaycastHit>* UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__16_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__16_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::RaycastHit>*>("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__16_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__16_0
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__16_0(::System::Comparison_1<::UnityEngine::RaycastHit>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__16_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__16_0", value)));
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c..cctor
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c.<Raycast>b__15_0
int UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::$Raycast$b__15_0(::UnityEngine::RaycastHit r1, ::UnityEngine::RaycastHit r2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::<Raycast>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Raycast>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r1), ::il2cpp_utils::ExtractType(r2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r1, r2);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c.<Spherecast>b__16_0
int UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::$Spherecast$b__16_0(::UnityEngine::RaycastHit r1, ::UnityEngine::RaycastHit r2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::<Spherecast>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Spherecast>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r1), ::il2cpp_utils::ExtractType(r2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r1, r2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRPointerEventData
#include "UnityEngine/EventSystems/OVRPointerEventData.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Ray worldSpaceRay
[[deprecated("Use field access instead!")]] ::UnityEngine::Ray& UnityEngine::EventSystems::OVRPointerEventData::dyn_worldSpaceRay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPointerEventData::dyn_worldSpaceRay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldSpaceRay"))->offset;
  return *reinterpret_cast<::UnityEngine::Ray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 swipeStart
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::EventSystems::OVRPointerEventData::dyn_swipeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPointerEventData::dyn_swipeStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swipeStart"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPointerEventData.ToString
::StringW UnityEngine::EventSystems::OVRPointerEventData::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPointerEventData::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.PointerEventDataExtension
#include "UnityEngine/EventSystems/PointerEventDataExtension.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.IsVRPointer
bool UnityEngine::EventSystems::PointerEventDataExtension::IsVRPointer(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::IsVRPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "IsVRPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.GetRay
::UnityEngine::Ray UnityEngine::EventSystems::PointerEventDataExtension::GetRay(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::GetRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "GetRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Ray, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.GetSwipeStart
::UnityEngine::Vector2 UnityEngine::EventSystems::PointerEventDataExtension::GetSwipeStart(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::GetSwipeStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "GetSwipeStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.SetSwipeStart
void UnityEngine::EventSystems::PointerEventDataExtension::SetSwipeStart(::UnityEngine::EventSystems::PointerEventData* pointerEventData, ::UnityEngine::Vector2 start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::SetSwipeStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "SetSwipeStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData), ::il2cpp_utils::ExtractType(start)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData, start);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizationKeyAttribute
#include "GlobalNamespace/LocalizationKeyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizationProvider
#include "GlobalNamespace/LocalizationProvider.hpp"
// Including type: Polyglot.Localization
#include "Polyglot/Localization.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private LocalizationProvider _instance
::GlobalNamespace::LocalizationProvider* GlobalNamespace::LocalizationProvider::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizationProvider::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalizationProvider*>("", "LocalizationProvider", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private LocalizationProvider _instance
void GlobalNamespace::LocalizationProvider::_set__instance(::GlobalNamespace::LocalizationProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizationProvider::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalizationProvider", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.Localization _localization
[[deprecated("Use field access instead!")]] ::Polyglot::Localization*& GlobalNamespace::LocalizationProvider::dyn__localization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizationProvider::dyn__localization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localization"))->offset;
  return *reinterpret_cast<::Polyglot::Localization**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalizationProvider.get_localization
::Polyglot::Localization* GlobalNamespace::LocalizationProvider::get_localization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizationProvider::get_localization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::Localization*, false>(this, ___internal__method);
}
// Autogenerated method: LocalizationProvider.get_Instance
::GlobalNamespace::LocalizationProvider* GlobalNamespace::LocalizationProvider::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizationProvider::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalizationProvider", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocalizationProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LocalizationProvider.set_Instance
void GlobalNamespace::LocalizationProvider::set_Instance(::GlobalNamespace::LocalizationProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizationProvider::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalizationProvider", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LocalizationProvider.get_HasInstance
bool GlobalNamespace::LocalizationProvider::get_HasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizationProvider::get_HasInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalizationProvider", "get_HasInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.CsvReader
#include "Polyglot/CsvReader.hpp"
// Including type: Polyglot.CsvReader/Polyglot.ParsingMode
#include "Polyglot/CsvReader_ParsingMode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.CsvReader.Parse
::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::StringW>*>* Polyglot::CsvReader::Parse(::StringW src) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvReader::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "CsvReader", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::StringW>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.CsvReader/Polyglot.ParsingMode
#include "Polyglot/CsvReader_ParsingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Polyglot.CsvReader/Polyglot.ParsingMode None
::Polyglot::CsvReader::ParsingMode Polyglot::CsvReader::ParsingMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvReader::ParsingMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::CsvReader::ParsingMode>("Polyglot", "CsvReader/ParsingMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.CsvReader/Polyglot.ParsingMode None
void Polyglot::CsvReader::ParsingMode::_set_None(::Polyglot::CsvReader::ParsingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvReader::ParsingMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "CsvReader/ParsingMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.CsvReader/Polyglot.ParsingMode OutQuote
::Polyglot::CsvReader::ParsingMode Polyglot::CsvReader::ParsingMode::_get_OutQuote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvReader::ParsingMode::_get_OutQuote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::CsvReader::ParsingMode>("Polyglot", "CsvReader/ParsingMode", "OutQuote"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.CsvReader/Polyglot.ParsingMode OutQuote
void Polyglot::CsvReader::ParsingMode::_set_OutQuote(::Polyglot::CsvReader::ParsingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvReader::ParsingMode::_set_OutQuote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "CsvReader/ParsingMode", "OutQuote", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.CsvReader/Polyglot.ParsingMode InQuote
::Polyglot::CsvReader::ParsingMode Polyglot::CsvReader::ParsingMode::_get_InQuote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvReader::ParsingMode::_get_InQuote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::CsvReader::ParsingMode>("Polyglot", "CsvReader/ParsingMode", "InQuote"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.CsvReader/Polyglot.ParsingMode InQuote
void Polyglot::CsvReader::ParsingMode::_set_InQuote(::Polyglot::CsvReader::ParsingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvReader::ParsingMode::_set_InQuote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "CsvReader/ParsingMode", "InQuote", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Polyglot::CsvReader::ParsingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvReader::ParsingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.CsvWriter
#include "Polyglot/CsvWriter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.CsvWriter.AppendRow
void Polyglot::CsvWriter::AppendRow(::StringW filePath, ::System::Collections::Generic::List_1<::StringW>* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvWriter::AppendRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "CsvWriter", "AppendRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, row);
}
// Autogenerated method: Polyglot.CsvWriter.AppendElement
void Polyglot::CsvWriter::AppendElement(::System::Text::StringBuilder* buffer, ::StringW element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvWriter::AppendElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "CsvWriter", "AppendElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, element);
}
// Autogenerated method: Polyglot.CsvWriter.HasEscapeChars
bool Polyglot::CsvWriter::HasEscapeChars(::StringW element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvWriter::HasEscapeChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "CsvWriter", "HasEscapeChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.TsvReader
#include "Polyglot/TsvReader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.TsvReader.Parse
::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::StringW>*>* Polyglot::TsvReader::Parse(::StringW src) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::TsvReader::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "TsvReader", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::StringW>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.GoogleDownload
#include "Polyglot/GoogleDownload.hpp"
// Including type: Polyglot.GoogleDownload/Polyglot.<DownloadSheet>d__0
#include "Polyglot/GoogleDownload_-DownloadSheet-d__0.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Polyglot.GoogleDriveDownloadFormat
#include "Polyglot/GoogleDriveDownloadFormat.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.GoogleDownload.DownloadSheet
::System::Collections::IEnumerator* Polyglot::GoogleDownload::DownloadSheet(::StringW docsId, ::StringW sheetId, ::System::Action_1<::StringW>* done, ::Polyglot::GoogleDriveDownloadFormat format, ::System::Func_2<float, bool>* progressbar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::DownloadSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "GoogleDownload", "DownloadSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(docsId), ::il2cpp_utils::ExtractType(sheetId), ::il2cpp_utils::ExtractType(done), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(progressbar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, docsId, sheetId, done, format, progressbar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.GoogleDownload/Polyglot.<DownloadSheet>d__0
#include "Polyglot/GoogleDownload_-DownloadSheet-d__0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<System.Single,System.Boolean> progressbar
[[deprecated("Use field access instead!")]] ::System::Func_2<float, bool>*& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_progressbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_progressbar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressbar"))->offset;
  return *reinterpret_cast<::System::Func_2<float, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> done
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_done");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "done"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String docsId
[[deprecated("Use field access instead!")]] ::StringW& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_docsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_docsId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "docsId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sheetId
[[deprecated("Use field access instead!")]] ::StringW& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_sheetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_sheetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sheetId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Polyglot.GoogleDriveDownloadFormat format
[[deprecated("Use field access instead!")]] ::Polyglot::GoogleDriveDownloadFormat& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_format");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "format"))->offset;
  return *reinterpret_cast<::Polyglot::GoogleDriveDownloadFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <url>5__2
[[deprecated("Use field access instead!")]] ::StringW& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_$url$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_$url$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<url>5__2"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_$www$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_$www$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.GoogleDownload/Polyglot.<DownloadSheet>d__0.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Polyglot::GoogleDownload::$DownloadSheet$d__0::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.GoogleDownload/Polyglot.<DownloadSheet>d__0.System.Collections.IEnumerator.get_Current
::Il2CppObject* Polyglot::GoogleDownload::$DownloadSheet$d__0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.GoogleDownload/Polyglot.<DownloadSheet>d__0.System.IDisposable.Dispose
void Polyglot::GoogleDownload::$DownloadSheet$d__0::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.GoogleDownload/Polyglot.<DownloadSheet>d__0.MoveNext
bool Polyglot::GoogleDownload::$DownloadSheet$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.GoogleDownload/Polyglot.<DownloadSheet>d__0.System.Collections.IEnumerator.Reset
void Polyglot::GoogleDownload::$DownloadSheet$d__0::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.GoogleDriveDownloadFormat
#include "Polyglot/GoogleDriveDownloadFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Polyglot.GoogleDriveDownloadFormat CSV
::Polyglot::GoogleDriveDownloadFormat Polyglot::GoogleDriveDownloadFormat::_get_CSV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDriveDownloadFormat::_get_CSV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::GoogleDriveDownloadFormat>("Polyglot", "GoogleDriveDownloadFormat", "CSV"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.GoogleDriveDownloadFormat CSV
void Polyglot::GoogleDriveDownloadFormat::_set_CSV(::Polyglot::GoogleDriveDownloadFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDriveDownloadFormat::_set_CSV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "GoogleDriveDownloadFormat", "CSV", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.GoogleDriveDownloadFormat TSV
::Polyglot::GoogleDriveDownloadFormat Polyglot::GoogleDriveDownloadFormat::_get_TSV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDriveDownloadFormat::_get_TSV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::GoogleDriveDownloadFormat>("Polyglot", "GoogleDriveDownloadFormat", "TSV"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.GoogleDriveDownloadFormat TSV
void Polyglot::GoogleDriveDownloadFormat::_set_TSV(::Polyglot::GoogleDriveDownloadFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDriveDownloadFormat::_set_TSV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "GoogleDriveDownloadFormat", "TSV", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Polyglot::GoogleDriveDownloadFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDriveDownloadFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.ILocalize
#include "Polyglot/ILocalize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.ILocalize.OnLocalize
void Polyglot::ILocalize::OnLocalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::ILocalize::OnLocalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLocalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.Language
#include "Polyglot/Language.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Polyglot.Language English
::Polyglot::Language Polyglot::Language::_get_English() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_English");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "English"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language English
void Polyglot::Language::_set_English(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_English");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "English", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language French
::Polyglot::Language Polyglot::Language::_get_French() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_French");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "French"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language French
void Polyglot::Language::_set_French(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_French");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "French", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Spanish
::Polyglot::Language Polyglot::Language::_get_Spanish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Spanish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Spanish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Spanish
void Polyglot::Language::_set_Spanish(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Spanish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Spanish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language German
::Polyglot::Language Polyglot::Language::_get_German() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_German");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "German"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language German
void Polyglot::Language::_set_German(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_German");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "German", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Italian
::Polyglot::Language Polyglot::Language::_get_Italian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Italian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Italian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Italian
void Polyglot::Language::_set_Italian(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Italian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Italian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Portuguese_Brazil
::Polyglot::Language Polyglot::Language::_get_Portuguese_Brazil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Portuguese_Brazil");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Portuguese_Brazil"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Portuguese_Brazil
void Polyglot::Language::_set_Portuguese_Brazil(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Portuguese_Brazil");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Portuguese_Brazil", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Portuguese
::Polyglot::Language Polyglot::Language::_get_Portuguese() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Portuguese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Portuguese"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Portuguese
void Polyglot::Language::_set_Portuguese(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Portuguese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Portuguese", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Russian
::Polyglot::Language Polyglot::Language::_get_Russian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Russian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Russian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Russian
void Polyglot::Language::_set_Russian(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Russian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Russian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Greek
::Polyglot::Language Polyglot::Language::_get_Greek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Greek");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Greek"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Greek
void Polyglot::Language::_set_Greek(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Greek");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Greek", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Turkish
::Polyglot::Language Polyglot::Language::_get_Turkish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Turkish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Turkish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Turkish
void Polyglot::Language::_set_Turkish(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Turkish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Turkish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Danish
::Polyglot::Language Polyglot::Language::_get_Danish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Danish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Danish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Danish
void Polyglot::Language::_set_Danish(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Danish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Danish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Norwegian
::Polyglot::Language Polyglot::Language::_get_Norwegian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Norwegian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Norwegian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Norwegian
void Polyglot::Language::_set_Norwegian(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Norwegian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Norwegian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Swedish
::Polyglot::Language Polyglot::Language::_get_Swedish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Swedish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Swedish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Swedish
void Polyglot::Language::_set_Swedish(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Swedish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Swedish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Dutch
::Polyglot::Language Polyglot::Language::_get_Dutch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Dutch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Dutch"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Dutch
void Polyglot::Language::_set_Dutch(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Dutch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Dutch", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Polish
::Polyglot::Language Polyglot::Language::_get_Polish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Polish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Polish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Polish
void Polyglot::Language::_set_Polish(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Polish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Polish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Finnish
::Polyglot::Language Polyglot::Language::_get_Finnish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Finnish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Finnish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Finnish
void Polyglot::Language::_set_Finnish(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Finnish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Finnish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Japanese
::Polyglot::Language Polyglot::Language::_get_Japanese() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Japanese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Japanese"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Japanese
void Polyglot::Language::_set_Japanese(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Japanese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Japanese", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Simplified_Chinese
::Polyglot::Language Polyglot::Language::_get_Simplified_Chinese() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Simplified_Chinese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Simplified_Chinese"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Simplified_Chinese
void Polyglot::Language::_set_Simplified_Chinese(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Simplified_Chinese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Simplified_Chinese", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Traditional_Chinese
::Polyglot::Language Polyglot::Language::_get_Traditional_Chinese() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Traditional_Chinese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Traditional_Chinese"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Traditional_Chinese
void Polyglot::Language::_set_Traditional_Chinese(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Traditional_Chinese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Traditional_Chinese", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Korean
::Polyglot::Language Polyglot::Language::_get_Korean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Korean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Korean"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Korean
void Polyglot::Language::_set_Korean(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Korean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Korean", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Czech
::Polyglot::Language Polyglot::Language::_get_Czech() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Czech");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Czech"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Czech
void Polyglot::Language::_set_Czech(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Czech");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Czech", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Hungarian
::Polyglot::Language Polyglot::Language::_get_Hungarian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Hungarian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Hungarian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Hungarian
void Polyglot::Language::_set_Hungarian(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Hungarian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Hungarian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Romanian
::Polyglot::Language Polyglot::Language::_get_Romanian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Romanian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Romanian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Romanian
void Polyglot::Language::_set_Romanian(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Romanian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Romanian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Thai
::Polyglot::Language Polyglot::Language::_get_Thai() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Thai");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Thai"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Thai
void Polyglot::Language::_set_Thai(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Thai");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Thai", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Bulgarian
::Polyglot::Language Polyglot::Language::_get_Bulgarian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Bulgarian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Bulgarian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Bulgarian
void Polyglot::Language::_set_Bulgarian(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Bulgarian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Bulgarian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Hebrew
::Polyglot::Language Polyglot::Language::_get_Hebrew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Hebrew");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Hebrew"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Hebrew
void Polyglot::Language::_set_Hebrew(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Hebrew");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Hebrew", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Arabic
::Polyglot::Language Polyglot::Language::_get_Arabic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Arabic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Arabic"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Arabic
void Polyglot::Language::_set_Arabic(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Arabic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Arabic", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Bosnian
::Polyglot::Language Polyglot::Language::_get_Bosnian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Bosnian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Bosnian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Bosnian
void Polyglot::Language::_set_Bosnian(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Bosnian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Bosnian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Debug_Keys
::Polyglot::Language Polyglot::Language::_get_Debug_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Debug_Keys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Debug_Keys"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Debug_Keys
void Polyglot::Language::_set_Debug_Keys(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Debug_Keys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Debug_Keys", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Debug_English_Reverted
::Polyglot::Language Polyglot::Language::_get_Debug_English_Reverted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Debug_English_Reverted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Debug_English_Reverted"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Debug_English_Reverted
void Polyglot::Language::_set_Debug_English_Reverted(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Debug_English_Reverted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Debug_English_Reverted", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Debug_Word_With_Max_Lenght
::Polyglot::Language Polyglot::Language::_get_Debug_Word_With_Max_Lenght() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Debug_Word_With_Max_Lenght");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Debug_Word_With_Max_Lenght"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Debug_Word_With_Max_Lenght
void Polyglot::Language::_set_Debug_Word_With_Max_Lenght(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Debug_Word_With_Max_Lenght");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Debug_Word_With_Max_Lenght", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Polyglot::Language::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LanguageExtensions
#include "Polyglot/LanguageExtensions.hpp"
// Including type: Polyglot.Language
#include "Polyglot/Language.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LanguageExtensions.ToSerializedName
::StringW Polyglot::LanguageExtensions::ToSerializedName(::Polyglot::Language lang) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageExtensions::ToSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LanguageExtensions", "ToSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lang)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lang);
}
// Autogenerated method: Polyglot.LanguageExtensions.ToCultureInfoName
::StringW Polyglot::LanguageExtensions::ToCultureInfoName(::Polyglot::Language lang) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageExtensions::ToCultureInfoName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LanguageExtensions", "ToCultureInfoName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lang)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lang);
}
// Autogenerated method: Polyglot.LanguageExtensions.ToLanguage
::Polyglot::Language Polyglot::LanguageExtensions::ToLanguage(::StringW serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageExtensions::ToLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LanguageExtensions", "ToLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::Language, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, serializedName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LanguageDirection
#include "Polyglot/LanguageDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Polyglot.LanguageDirection LeftToRight
::Polyglot::LanguageDirection Polyglot::LanguageDirection::_get_LeftToRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDirection::_get_LeftToRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::LanguageDirection>("Polyglot", "LanguageDirection", "LeftToRight"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.LanguageDirection LeftToRight
void Polyglot::LanguageDirection::_set_LeftToRight(::Polyglot::LanguageDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDirection::_set_LeftToRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "LanguageDirection", "LeftToRight", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.LanguageDirection RightToLeft
::Polyglot::LanguageDirection Polyglot::LanguageDirection::_get_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDirection::_get_RightToLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::LanguageDirection>("Polyglot", "LanguageDirection", "RightToLeft"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.LanguageDirection RightToLeft
void Polyglot::LanguageDirection::_set_RightToLeft(::Polyglot::LanguageDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDirection::_set_RightToLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "LanguageDirection", "RightToLeft", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Polyglot::LanguageDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LanguageDropdown
#include "Polyglot/LanguageDropdown.hpp"
// Including type: UnityEngine.UI.Dropdown
#include "UnityEngine/UI/Dropdown.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Dropdown dropdown
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Dropdown*& Polyglot::LanguageDropdown::dyn_dropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDropdown::dyn_dropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dropdown"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Dropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.LanguageDropdown.Reset
void Polyglot::LanguageDropdown::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDropdown::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LanguageDropdown.Start
void Polyglot::LanguageDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LanguageDropdown.CreateDropdown
void Polyglot::LanguageDropdown::CreateDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDropdown::CreateDropdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDropdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LanguageDropdown.OnLocalize
void Polyglot::LanguageDropdown::OnLocalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDropdown::OnLocalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLocalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.Localization
#include "Polyglot/Localization.hpp"
// Including type: Polyglot.LocalizationDocument
#include "Polyglot/LocalizationDocument.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Polyglot.LocalizationAsset
#include "Polyglot/LocalizationAsset.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Polyglot.LanguageDirection
#include "Polyglot/LanguageDirection.hpp"
// Including type: UnityEngine.SystemLanguage
#include "UnityEngine/SystemLanguage.hpp"
// Including type: Polyglot.ILocalize
#include "Polyglot/ILocalize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String KeyNotFound
::StringW Polyglot::Localization::_get_KeyNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::_get_KeyNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Polyglot", "Localization", "KeyNotFound"));
}
// Autogenerated static field setter
// Set static field: static private System.String KeyNotFound
void Polyglot::Localization::_set_KeyNotFound(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::_set_KeyNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Localization", "KeyNotFound", value));
}
// Autogenerated static field getter
// Get static field: static private Polyglot.Localization instance
::Polyglot::Localization* Polyglot::Localization::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Localization*>("Polyglot", "Localization", "instance"));
}
// Autogenerated static field setter
// Set static field: static private Polyglot.Localization instance
void Polyglot::Localization::_set_instance(::Polyglot::Localization* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Localization", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.LocalizationDocument customDocument
[[deprecated("Use field access instead!")]] ::Polyglot::LocalizationDocument*& Polyglot::Localization::dyn_customDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::dyn_customDocument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customDocument"))->offset;
  return *reinterpret_cast<::Polyglot::LocalizationDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Polyglot.LocalizationAsset> inputFiles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Polyglot::LocalizationAsset*>*& Polyglot::Localization::dyn_inputFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::dyn_inputFiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputFiles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Polyglot::LocalizationAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Polyglot.Language> supportedLanguages
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Polyglot::Language>*& Polyglot::Localization::dyn_supportedLanguages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::dyn_supportedLanguages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportedLanguages"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Polyglot::Language>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.Language selectedLanguage
[[deprecated("Use field access instead!")]] ::Polyglot::Language& Polyglot::Localization::dyn_selectedLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::dyn_selectedLanguage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedLanguage"))->offset;
  return *reinterpret_cast<::Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.Language fallbackLanguage
[[deprecated("Use field access instead!")]] ::Polyglot::Language& Polyglot::Localization::dyn_fallbackLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::dyn_fallbackLanguage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackLanguage"))->offset;
  return *reinterpret_cast<::Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent Localize
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Polyglot::Localization::dyn_Localize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::dyn_Localize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Localize"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo selectedCultureInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& Polyglot::Localization::dyn_selectedCultureInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::dyn_selectedCultureInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedCultureInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.Localization.get_CustomDocument
::Polyglot::LocalizationDocument* Polyglot::Localization::get_CustomDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_CustomDocument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::LocalizationDocument*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_InputFiles
::System::Collections::Generic::List_1<::Polyglot::LocalizationAsset*>* Polyglot::Localization::get_InputFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_InputFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Polyglot::LocalizationAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_Instance
::Polyglot::Localization* Polyglot::Localization::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "Localization", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::Localization*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.Localization.set_Instance
void Polyglot::Localization::set_Instance(::Polyglot::Localization* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "Localization", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Polyglot.Localization.get_HasInstance
bool Polyglot::Localization::get_HasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_HasInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "Localization", "get_HasInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_SupportedLanguages
::System::Collections::Generic::List_1<::Polyglot::Language>* Polyglot::Localization::get_SupportedLanguages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_SupportedLanguages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportedLanguages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Polyglot::Language>*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_SelectedLanguageDirection
::Polyglot::LanguageDirection Polyglot::Localization::get_SelectedLanguageDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_SelectedLanguageDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectedLanguageDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::LanguageDirection, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_SelectedLanguageIndex
int Polyglot::Localization::get_SelectedLanguageIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_SelectedLanguageIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectedLanguageIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_SelectedCultureInfo
::System::Globalization::CultureInfo* Polyglot::Localization::get_SelectedCultureInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_SelectedCultureInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectedCultureInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_SelectedLanguage
::Polyglot::Language Polyglot::Localization::get_SelectedLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_SelectedLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectedLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::Language, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.set_SelectedLanguage
void Polyglot::Localization::set_SelectedLanguage(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::set_SelectedLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SelectedLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.Localization.get_EnglishLanguageNames
::System::Collections::Generic::List_1<::StringW>* Polyglot::Localization::get_EnglishLanguageNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_EnglishLanguageNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnglishLanguageNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_LocalizedLanguageNames
::System::Collections::Generic::List_1<::StringW>* Polyglot::Localization::get_LocalizedLanguageNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_LocalizedLanguageNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalizedLanguageNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_EnglishLanguageName
::StringW Polyglot::Localization::get_EnglishLanguageName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_EnglishLanguageName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnglishLanguageName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_LocalizedLanguageName
::StringW Polyglot::Localization::get_LocalizedLanguageName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_LocalizedLanguageName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalizedLanguageName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.GetLanguageDirection
::Polyglot::LanguageDirection Polyglot::Localization::GetLanguageDirection(::Polyglot::Language language) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::GetLanguageDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLanguageDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(language)})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::LanguageDirection, false>(this, ___internal__method, language);
}
// Autogenerated method: Polyglot.Localization.IsLanguageSupported
bool Polyglot::Localization::IsLanguageSupported(::Polyglot::Language language) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::IsLanguageSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLanguageSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(language)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, language);
}
// Autogenerated method: Polyglot.Localization.InvokeOnLocalize
void Polyglot::Localization::InvokeOnLocalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::InvokeOnLocalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnLocalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.SelectLanguage
void Polyglot::Localization::SelectLanguage(int selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::SelectLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selected);
}
// Autogenerated method: Polyglot.Localization.SelectLanguage
void Polyglot::Localization::SelectLanguage(::Polyglot::Language selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::SelectLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selected);
}
// Autogenerated method: Polyglot.Localization.ConvertSystemLanguage
::Polyglot::Language Polyglot::Localization::ConvertSystemLanguage(::UnityEngine::SystemLanguage selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::ConvertSystemLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertSystemLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selected)})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::Language, false>(this, ___internal__method, selected);
}
// Autogenerated method: Polyglot.Localization.AddOnLocalizeEvent
void Polyglot::Localization::AddOnLocalizeEvent(::Polyglot::ILocalize* localize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::AddOnLocalizeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOnLocalizeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localize);
}
// Autogenerated method: Polyglot.Localization.RemoveOnLocalizeEvent
void Polyglot::Localization::RemoveOnLocalizeEvent(::Polyglot::ILocalize* localize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::RemoveOnLocalizeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveOnLocalizeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localize);
}
// Autogenerated method: Polyglot.Localization.Get
::StringW Polyglot::Localization::Get(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "Localization", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Polyglot.Localization.Get
::StringW Polyglot::Localization::Get(::StringW key, ::Polyglot::Language language) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "Localization", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(language)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, language);
}
// Autogenerated method: Polyglot.Localization.KeyExist
bool Polyglot::Localization::KeyExist(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::KeyExist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "Localization", "KeyExist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Polyglot.Localization.GetKeys
::System::Collections::Generic::List_1<::StringW>* Polyglot::Localization::GetKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::GetKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "Localization", "GetKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.Localization.GetFormat
::StringW Polyglot::Localization::GetFormat(::StringW key, ::ArrayW<::Il2CppObject*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::GetFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "Localization", "GetFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, arguments);
}
// Autogenerated method: Polyglot.Localization.InputFilesContains
bool Polyglot::Localization::InputFilesContains(::Polyglot::LocalizationDocument* doc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::InputFilesContains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InputFilesContains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, doc);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizationAsset
#include "Polyglot/LocalizationAsset.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextAsset textAsset
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& Polyglot::LocalizationAsset::dyn_textAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationAsset::dyn_textAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textAsset"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.GoogleDriveDownloadFormat format
[[deprecated("Use field access instead!")]] ::Polyglot::GoogleDriveDownloadFormat& Polyglot::LocalizationAsset::dyn_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationAsset::dyn_format");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "format"))->offset;
  return *reinterpret_cast<::Polyglot::GoogleDriveDownloadFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.LocalizationAsset.get_TextAsset
::UnityEngine::TextAsset* Polyglot::LocalizationAsset::get_TextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationAsset::get_TextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextAsset*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationAsset.set_TextAsset
void Polyglot::LocalizationAsset::set_TextAsset(::UnityEngine::TextAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationAsset::set_TextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.LocalizationAsset.get_Format
::Polyglot::GoogleDriveDownloadFormat Polyglot::LocalizationAsset::get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationAsset::get_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::GoogleDriveDownloadFormat, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationAsset.set_Format
void Polyglot::LocalizationAsset::set_Format(::Polyglot::GoogleDriveDownloadFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationAsset::set_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizationDocument
#include "Polyglot/LocalizationDocument.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String docsId
[[deprecated("Use field access instead!")]] ::StringW& Polyglot::LocalizationDocument::dyn_docsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::dyn_docsId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "docsId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sheetId
[[deprecated("Use field access instead!")]] ::StringW& Polyglot::LocalizationDocument::dyn_sheetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::dyn_sheetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sheetId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.GoogleDriveDownloadFormat format
[[deprecated("Use field access instead!")]] ::Polyglot::GoogleDriveDownloadFormat& Polyglot::LocalizationDocument::dyn_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::dyn_format");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "format"))->offset;
  return *reinterpret_cast<::Polyglot::GoogleDriveDownloadFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextAsset textAsset
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& Polyglot::LocalizationDocument::dyn_textAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::dyn_textAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textAsset"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean downloadOnStart
[[deprecated("Use field access instead!")]] bool& Polyglot::LocalizationDocument::dyn_downloadOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::dyn_downloadOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "downloadOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.LocalizationDocument.get_TextAsset
::UnityEngine::TextAsset* Polyglot::LocalizationDocument::get_TextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::get_TextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextAsset*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationDocument.set_TextAsset
void Polyglot::LocalizationDocument::set_TextAsset(::UnityEngine::TextAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::set_TextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.LocalizationDocument.get_DocsId
::StringW Polyglot::LocalizationDocument::get_DocsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::get_DocsId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocsId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationDocument.set_DocsId
void Polyglot::LocalizationDocument::set_DocsId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::set_DocsId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DocsId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.LocalizationDocument.get_SheetId
::StringW Polyglot::LocalizationDocument::get_SheetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::get_SheetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SheetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationDocument.set_SheetId
void Polyglot::LocalizationDocument::set_SheetId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::set_SheetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SheetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.LocalizationDocument.get_Format
::Polyglot::GoogleDriveDownloadFormat Polyglot::LocalizationDocument::get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::get_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::GoogleDriveDownloadFormat, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationDocument.set_Format
void Polyglot::LocalizationDocument::set_Format(::Polyglot::GoogleDriveDownloadFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::set_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.LocalizationDocument.get_DownloadOnStart
bool Polyglot::LocalizationDocument::get_DownloadOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::get_DownloadOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DownloadOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationDocument.set_DownloadOnStart
void Polyglot::LocalizationDocument::set_DownloadOnStart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::set_DownloadOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DownloadOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizationImporter
#include "Polyglot/LocalizationImporter.hpp"
// Including type: Polyglot.LocalizationImporter/Polyglot.<>c__DisplayClass5_0
#include "Polyglot/LocalizationImporter_--c__DisplayClass5_0.hpp"
// Including type: Polyglot.LocalizationImporter/Polyglot.<>c__DisplayClass8_0
#include "Polyglot/LocalizationImporter_--c__DisplayClass8_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Polyglot.LocalizationAsset
#include "Polyglot/LocalizationAsset.hpp"
// Including type: Polyglot.Localization
#include "Polyglot/Localization.hpp"
// Including type: Polyglot.GoogleDriveDownloadFormat
#include "Polyglot/GoogleDriveDownloadFormat.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Polyglot.LocalizationDocument
#include "Polyglot/LocalizationDocument.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<System.String>> languageStrings
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::StringW>*>* Polyglot::LocalizationImporter::_get_languageStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::_get_languageStrings");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::StringW>*>*>("Polyglot", "LocalizationImporter", "languageStrings")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<System.String>> languageStrings
void Polyglot::LocalizationImporter::_set_languageStrings(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::_set_languageStrings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "LocalizationImporter", "languageStrings", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.String> EmptyList
::System::Collections::Generic::List_1<::StringW>* Polyglot::LocalizationImporter::_get_EmptyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::_get_EmptyList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::StringW>*>("Polyglot", "LocalizationImporter", "EmptyList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.String> EmptyList
void Polyglot::LocalizationImporter::_set_EmptyList(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::_set_EmptyList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "LocalizationImporter", "EmptyList", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Polyglot.LocalizationAsset> InputFiles
::System::Collections::Generic::List_1<::Polyglot::LocalizationAsset*>* Polyglot::LocalizationImporter::_get_InputFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::_get_InputFiles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Polyglot::LocalizationAsset*>*>("Polyglot", "LocalizationImporter", "InputFiles"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Polyglot.LocalizationAsset> InputFiles
void Polyglot::LocalizationImporter::_set_InputFiles(::System::Collections::Generic::List_1<::Polyglot::LocalizationAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::_set_InputFiles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "LocalizationImporter", "InputFiles", value));
}
// Autogenerated method: Polyglot.LocalizationImporter..cctor
void Polyglot::LocalizationImporter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationImporter.Initialize
void Polyglot::LocalizationImporter::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationImporter.ImportFromGoogle
void Polyglot::LocalizationImporter::ImportFromGoogle(::Polyglot::Localization* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::ImportFromGoogle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "ImportFromGoogle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, settings);
}
// Autogenerated method: Polyglot.LocalizationImporter.Import
void Polyglot::LocalizationImporter::Import(::StringW text, ::Polyglot::GoogleDriveDownloadFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::Import");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "Import", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, format);
}
// Autogenerated method: Polyglot.LocalizationImporter.Download
::System::Collections::IEnumerator* Polyglot::LocalizationImporter::Download(::Polyglot::LocalizationDocument* document, ::System::Action_1<::StringW>* done, ::System::Func_2<float, bool>* progressbar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::Download");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "Download", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(done), ::il2cpp_utils::ExtractType(progressbar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, document, done, progressbar);
}
// Autogenerated method: Polyglot.LocalizationImporter.DownloadCustomSheet
::System::Collections::IEnumerator* Polyglot::LocalizationImporter::DownloadCustomSheet(::System::Func_2<float, bool>* progressbar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::DownloadCustomSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "DownloadCustomSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progressbar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, progressbar);
}
// Autogenerated method: Polyglot.LocalizationImporter.ImportFromFiles
void Polyglot::LocalizationImporter::ImportFromFiles(::Polyglot::Localization* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::ImportFromFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "ImportFromFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, settings);
}
// Autogenerated method: Polyglot.LocalizationImporter.ImportInputFiles
void Polyglot::LocalizationImporter::ImportInputFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::ImportInputFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "ImportInputFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationImporter.ImportTextFile
void Polyglot::LocalizationImporter::ImportTextFile(::StringW text, ::Polyglot::GoogleDriveDownloadFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::ImportTextFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "ImportTextFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, format);
}
// Autogenerated method: Polyglot.LocalizationImporter.IsLineBreak
bool Polyglot::LocalizationImporter::IsLineBreak(::StringW currentString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::IsLineBreak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "IsLineBreak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentString)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentString);
}
// Autogenerated method: Polyglot.LocalizationImporter.GetLanguages
::System::Collections::Generic::List_1<::StringW>* Polyglot::LocalizationImporter::GetLanguages(::StringW key, ::System::Collections::Generic::List_1<::Polyglot::Language>* supportedLanguages) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::GetLanguages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "GetLanguages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(supportedLanguages)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, supportedLanguages);
}
// Autogenerated method: Polyglot.LocalizationImporter.GetLanguagesStartsWith
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::StringW>*>* Polyglot::LocalizationImporter::GetLanguagesStartsWith(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::GetLanguagesStartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "GetLanguagesStartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::StringW>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Polyglot.LocalizationImporter.GetLanguagesContains
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::StringW>*>* Polyglot::LocalizationImporter::GetLanguagesContains(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::GetLanguagesContains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "GetLanguagesContains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::StringW>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Polyglot.LocalizationImporter.Refresh
void Polyglot::LocalizationImporter::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationImporter.GetKeys
::System::Collections::Generic::List_1<::StringW>* Polyglot::LocalizationImporter::GetKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::GetKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "GetKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizationImporter/Polyglot.<>c__DisplayClass5_0
#include "Polyglot/LocalizationImporter_--c__DisplayClass5_0.hpp"
// Including type: Polyglot.Localization
#include "Polyglot/Localization.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Polyglot.Localization settings
[[deprecated("Use field access instead!")]] ::Polyglot::Localization*& Polyglot::LocalizationImporter::$$c__DisplayClass5_0::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::$$c__DisplayClass5_0::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::Polyglot::Localization**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.LocalizationImporter/Polyglot.<>c__DisplayClass5_0.<ImportFromGoogle>b__0
void Polyglot::LocalizationImporter::$$c__DisplayClass5_0::$ImportFromGoogle$b__0(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::$$c__DisplayClass5_0::<ImportFromGoogle>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ImportFromGoogle>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizationImporter/Polyglot.<>c__DisplayClass8_0
#include "Polyglot/LocalizationImporter_--c__DisplayClass8_0.hpp"
// Including type: Polyglot.Localization
#include "Polyglot/Localization.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Polyglot.Localization settings
[[deprecated("Use field access instead!")]] ::Polyglot::Localization*& Polyglot::LocalizationImporter::$$c__DisplayClass8_0::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::$$c__DisplayClass8_0::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::Polyglot::Localization**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.LocalizationImporter/Polyglot.<>c__DisplayClass8_0.<DownloadCustomSheet>b__0
void Polyglot::LocalizationImporter::$$c__DisplayClass8_0::$DownloadCustomSheet$b__0(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::$$c__DisplayClass8_0::<DownloadCustomSheet>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadCustomSheet>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizedText
#include "Polyglot/LocalizedText.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.TextAnchor
#include "UnityEngine/TextAnchor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LocalizedText.SetText
void Polyglot::LocalizedText::SetText(::UnityEngine::UI::Text* text, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedText::SetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, value);
}
// Autogenerated method: Polyglot.LocalizedText.UpdateAlignment
void Polyglot::LocalizedText::UpdateAlignment(::UnityEngine::UI::Text* text, ::Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedText::UpdateAlignment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(direction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, direction);
}
// Autogenerated method: Polyglot.LocalizedText.IsOppositeDirection
bool Polyglot::LocalizedText::IsOppositeDirection(::UnityEngine::TextAnchor alignment, ::Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedText::IsOppositeDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOppositeDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment, direction);
}
// Autogenerated method: Polyglot.LocalizedText.IsAlignmentRight
bool Polyglot::LocalizedText::IsAlignmentRight(::UnityEngine::TextAnchor alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedText::IsAlignmentRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlignmentRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated method: Polyglot.LocalizedText.IsAlignmentLeft
bool Polyglot::LocalizedText::IsAlignmentLeft(::UnityEngine::TextAnchor alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedText::IsAlignmentLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlignmentLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizedTextMesh
#include "Polyglot/LocalizedTextMesh.hpp"
// Including type: UnityEngine.TextMesh
#include "UnityEngine/TextMesh.hpp"
// Including type: UnityEngine.TextAlignment
#include "UnityEngine/TextAlignment.hpp"
// Including type: Polyglot.LanguageDirection
#include "Polyglot/LanguageDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextMesh text
[[deprecated("Use field access instead!")]] ::UnityEngine::TextMesh*& Polyglot::LocalizedTextMesh::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::UnityEngine::TextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String key
[[deprecated("Use field access instead!")]] ::StringW& Polyglot::LocalizedTextMesh::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.get_Key
::StringW Polyglot::LocalizedTextMesh::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::get_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.Reset
void Polyglot::LocalizedTextMesh::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.Start
void Polyglot::LocalizedTextMesh::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.OnLocalize
void Polyglot::LocalizedTextMesh::OnLocalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::OnLocalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLocalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.IsOppositeDirection
bool Polyglot::LocalizedTextMesh::IsOppositeDirection(::UnityEngine::TextAlignment alignment, ::Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::IsOppositeDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOppositeDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment, direction);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.IsAlignmentRight
bool Polyglot::LocalizedTextMesh::IsAlignmentRight(::UnityEngine::TextAlignment alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::IsAlignmentRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlignmentRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.IsAlignmentLeft
bool Polyglot::LocalizedTextMesh::IsAlignmentLeft(::UnityEngine::TextAlignment alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::IsAlignmentLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlignmentLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizedTextMeshPro
#include "Polyglot/LocalizedTextMeshPro.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: TMPro.TextAlignmentOptions
#include "TMPro/TextAlignmentOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LocalizedTextMeshPro.SetText
void Polyglot::LocalizedTextMeshPro::SetText(::TMPro::TextMeshPro* text, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshPro::SetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, value);
}
// Autogenerated method: Polyglot.LocalizedTextMeshPro.UpdateAlignment
void Polyglot::LocalizedTextMeshPro::UpdateAlignment(::TMPro::TextMeshPro* text, ::Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshPro::UpdateAlignment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(direction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, direction);
}
// Autogenerated method: Polyglot.LocalizedTextMeshPro.IsOppositeDirection
bool Polyglot::LocalizedTextMeshPro::IsOppositeDirection(::TMPro::TextAlignmentOptions alignment, ::Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshPro::IsOppositeDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOppositeDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment, direction);
}
// Autogenerated method: Polyglot.LocalizedTextMeshPro.IsAlignmentRight
bool Polyglot::LocalizedTextMeshPro::IsAlignmentRight(::TMPro::TextAlignmentOptions alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshPro::IsAlignmentRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlignmentRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated method: Polyglot.LocalizedTextMeshPro.IsAlignmentLeft
bool Polyglot::LocalizedTextMeshPro::IsAlignmentLeft(::TMPro::TextAlignmentOptions alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshPro::IsAlignmentLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlignmentLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizedTextMeshProUGUI
#include "Polyglot/LocalizedTextMeshProUGUI.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: Polyglot.LanguageDirection
#include "Polyglot/LanguageDirection.hpp"
// Including type: TMPro.TextAlignmentOptions
#include "TMPro/TextAlignmentOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LocalizedTextMeshProUGUI.SetText
void Polyglot::LocalizedTextMeshProUGUI::SetText(::TMPro::TextMeshProUGUI* text, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshProUGUI::SetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, value);
}
// Autogenerated method: Polyglot.LocalizedTextMeshProUGUI.UpdateAlignment
void Polyglot::LocalizedTextMeshProUGUI::UpdateAlignment(::TMPro::TextMeshProUGUI* text, ::Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshProUGUI::UpdateAlignment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(direction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, direction);
}
// Autogenerated method: Polyglot.LocalizedTextMeshProUGUI.IsOppositeDirection
bool Polyglot::LocalizedTextMeshProUGUI::IsOppositeDirection(::TMPro::TextAlignmentOptions alignment, ::Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshProUGUI::IsOppositeDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOppositeDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment, direction);
}
// Autogenerated method: Polyglot.LocalizedTextMeshProUGUI.IsAlignmentRight
bool Polyglot::LocalizedTextMeshProUGUI::IsAlignmentRight(::TMPro::TextAlignmentOptions alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshProUGUI::IsAlignmentRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlignmentRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated method: Polyglot.LocalizedTextMeshProUGUI.IsAlignmentLeft
bool Polyglot::LocalizedTextMeshProUGUI::IsAlignmentLeft(::TMPro::TextAlignmentOptions alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshProUGUI::IsAlignmentLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlignmentLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.SaveLanguagePreference
#include "Polyglot/SaveLanguagePreference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String preferenceKey
[[deprecated("Use field access instead!")]] ::StringW& Polyglot::SaveLanguagePreference::dyn_preferenceKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::SaveLanguagePreference::dyn_preferenceKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preferenceKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.SaveLanguagePreference.Start
void Polyglot::SaveLanguagePreference::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::SaveLanguagePreference::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.SaveLanguagePreference.OnLocalize
void Polyglot::SaveLanguagePreference::OnLocalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::SaveLanguagePreference::OnLocalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLocalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AlwaysVisibleQuad
#include "GlobalNamespace/AlwaysVisibleQuad.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::AlwaysVisibleQuad::dyn__mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysVisibleQuad::dyn__mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AlwaysVisibleQuad.OnEnable
void GlobalNamespace::AlwaysVisibleQuad::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysVisibleQuad::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AlwaysVisibleQuad.OnDisable
void GlobalNamespace::AlwaysVisibleQuad::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysVisibleQuad::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BakedLightWithIdBase
#include "GlobalNamespace/BakedLightWithIdBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BakedLightWithIdBase.get_id
int GlobalNamespace::BakedLightWithIdBase::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightWithIdBase::get_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BakedLightWithIdBase.SetupLightSource
void GlobalNamespace::BakedLightWithIdBase::SetupLightSource(float intensityMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightWithIdBase::SetupLightSource");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupLightSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(intensityMultiplier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, intensityMultiplier);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBakedLightWithRenderer
#include "GlobalNamespace/IBakedLightWithRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBakedLightWithRenderer.get_bakingMaterial
::UnityEngine::Material* GlobalNamespace::IBakedLightWithRenderer::get_bakingMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBakedLightWithRenderer::get_bakingMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bakingMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CommandBufferBlurryScreenGrab
#include "GlobalNamespace/CommandBufferBlurryScreenGrab.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: CommandBufferOwners
#include "GlobalNamespace/CommandBufferOwners.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Camera,CommandBufferOwners> _cameras
::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>* GlobalNamespace::CommandBufferBlurryScreenGrab::_get__cameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::_get__cameras");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>*>("", "CommandBufferBlurryScreenGrab", "_cameras")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Camera,CommandBufferOwners> _cameras
void GlobalNamespace::CommandBufferBlurryScreenGrab::_set__cameras(::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::_set__cameras");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CommandBufferBlurryScreenGrab", "_cameras", value));
}
// Autogenerated instance field getter
// Get instance field: private KawaseBlurRendererSO _kawaseBlurRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::KawaseBlurRendererSO*& GlobalNamespace::CommandBufferBlurryScreenGrab::dyn__kawaseBlurRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::dyn__kawaseBlurRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kawaseBlurRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::KawaseBlurRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private KawaseBlurRendererSO/KernelSize _kernelSize
[[deprecated("Use field access instead!")]] ::GlobalNamespace::KawaseBlurRendererSO::KernelSize& GlobalNamespace::CommandBufferBlurryScreenGrab::dyn__kernelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::dyn__kernelSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kernelSize"))->offset;
  return *reinterpret_cast<::GlobalNamespace::KawaseBlurRendererSO::KernelSize*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _cameraEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CameraEvent& GlobalNamespace::CommandBufferBlurryScreenGrab::dyn__cameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::dyn__cameraEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _downsample
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CommandBufferBlurryScreenGrab::dyn__downsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::dyn__downsample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downsample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CommandBufferBlurryScreenGrab..cctor
void GlobalNamespace::CommandBufferBlurryScreenGrab::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CommandBufferBlurryScreenGrab", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CommandBufferBlurryScreenGrab.CreateCommandBuffer
::UnityEngine::Rendering::CommandBuffer* GlobalNamespace::CommandBufferBlurryScreenGrab::CreateCommandBuffer(::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::CreateCommandBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CommandBuffer*, false>(this, ___internal__method, camera);
}
// Autogenerated method: CommandBufferBlurryScreenGrab.CamerasDict
::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>* GlobalNamespace::CommandBufferBlurryScreenGrab::CamerasDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::CamerasDict");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CamerasDict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>*, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferBlurryScreenGrab.CommandBufferCameraEvent
::UnityEngine::Rendering::CameraEvent GlobalNamespace::CommandBufferBlurryScreenGrab::CommandBufferCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::CommandBufferCameraEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CommandBufferCameraEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CameraEvent, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CommandBufferGrabPass
#include "GlobalNamespace/CommandBufferGrabPass.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: CommandBufferOwners
#include "GlobalNamespace/CommandBufferOwners.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Camera,CommandBufferOwners> _cameras
::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>* GlobalNamespace::CommandBufferGrabPass::_get__cameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGrabPass::_get__cameras");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>*>("", "CommandBufferGrabPass", "_cameras")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Camera,CommandBufferOwners> _cameras
void GlobalNamespace::CommandBufferGrabPass::_set__cameras(::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGrabPass::_set__cameras");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CommandBufferGrabPass", "_cameras", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _textureName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CommandBufferGrabPass::dyn__textureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGrabPass::dyn__textureName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textureName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _cameraEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CameraEvent& GlobalNamespace::CommandBufferGrabPass::dyn__cameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGrabPass::dyn__cameraEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CommandBufferGrabPass..cctor
void GlobalNamespace::CommandBufferGrabPass::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGrabPass::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CommandBufferGrabPass", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CommandBufferGrabPass.CreateCommandBuffer
::UnityEngine::Rendering::CommandBuffer* GlobalNamespace::CommandBufferGrabPass::CreateCommandBuffer(::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGrabPass::CreateCommandBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CommandBuffer*, false>(this, ___internal__method, camera);
}
// Autogenerated method: CommandBufferGrabPass.CamerasDict
::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>* GlobalNamespace::CommandBufferGrabPass::CamerasDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGrabPass::CamerasDict");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CamerasDict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>*, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferGrabPass.CommandBufferCameraEvent
::UnityEngine::Rendering::CameraEvent GlobalNamespace::CommandBufferGrabPass::CommandBufferCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGrabPass::CommandBufferCameraEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CommandBufferCameraEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CameraEvent, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CommandBufferGOCore
#include "GlobalNamespace/CommandBufferGOCore.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: CommandBufferOwners
#include "GlobalNamespace/CommandBufferOwners.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Rendering.CameraEvent
#include "UnityEngine/Rendering/CameraEvent.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D0CF8
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material _material
::UnityEngine::Material* GlobalNamespace::CommandBufferGOCore::_get__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::_get__material");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Material*>("", "CommandBufferGOCore", "_material"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material _material
void GlobalNamespace::CommandBufferGOCore::_set__material(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::_set__material");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CommandBufferGOCore", "_material", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Camera,CommandBufferOwners> _cameras
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>*& GlobalNamespace::CommandBufferGOCore::dyn__cameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::dyn__cameras");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameras"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::CommandBufferGOCore::dyn__mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::dyn__mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CommandBufferGOCore.OnEnable
void GlobalNamespace::CommandBufferGOCore::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferGOCore.OnDisable
void GlobalNamespace::CommandBufferGOCore::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferGOCore.OnWillRenderObject
void GlobalNamespace::CommandBufferGOCore::OnWillRenderObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::OnWillRenderObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnWillRenderObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferGOCore.CommandBufferCameraEvent
::UnityEngine::Rendering::CameraEvent GlobalNamespace::CommandBufferGOCore::CommandBufferCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::CommandBufferCameraEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CommandBufferCameraEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CameraEvent, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferGOCore.CreateCommandBuffer
::UnityEngine::Rendering::CommandBuffer* GlobalNamespace::CommandBufferGOCore::CreateCommandBuffer(::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::CreateCommandBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CommandBuffer*, false>(this, ___internal__method, camera);
}
// Autogenerated method: CommandBufferGOCore.CamerasDict
::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>* GlobalNamespace::CommandBufferGOCore::CamerasDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::CamerasDict");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CamerasDict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CommandBufferOwners
#include "GlobalNamespace/CommandBufferOwners.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<UnityEngine.Object> _owners
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::Object*>*& GlobalNamespace::CommandBufferOwners::dyn__owners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferOwners::dyn__owners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_owners"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rendering.CommandBuffer commandBuffer
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CommandBuffer*& GlobalNamespace::CommandBufferOwners::dyn_commandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferOwners::dyn_commandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "commandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CommandBufferOwners.get_NumberOfOwners
int GlobalNamespace::CommandBufferOwners::get_NumberOfOwners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferOwners::get_NumberOfOwners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberOfOwners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferOwners.AddOwner
void GlobalNamespace::CommandBufferOwners::AddOwner(::UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferOwners::AddOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(owner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, owner);
}
// Autogenerated method: CommandBufferOwners.RemoveOwner
void GlobalNamespace::CommandBufferOwners::RemoveOwner(::UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferOwners::RemoveOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(owner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, owner);
}
// Autogenerated method: CommandBufferOwners.ContainsOwner
bool GlobalNamespace::CommandBufferOwners::ContainsOwner(::UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferOwners::ContainsOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(owner)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, owner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisableDepthTexturePS4
#include "GlobalNamespace/DisableDepthTexturePS4.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BoolSO _depthTextureEnabled
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BoolSO*& GlobalNamespace::DisableDepthTexturePS4::dyn__depthTextureEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableDepthTexturePS4::dyn__depthTextureEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthTextureEnabled"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExternalCamerasManager
#include "GlobalNamespace/ExternalCamerasManager.hpp"
// Including type: OculusMRCManager
#include "GlobalNamespace/OculusMRCManager.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OculusMRCManager _oculusMRCManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusMRCManager*& GlobalNamespace::ExternalCamerasManager::dyn__oculusMRCManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExternalCamerasManager::dyn__oculusMRCManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusMRCManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusMRCManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _mrcBackgroundCameraPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::ExternalCamerasManager::dyn__mrcBackgroundCameraPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExternalCamerasManager::dyn__mrcBackgroundCameraPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mrcBackgroundCameraPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _mrcForegroundCameraPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::ExternalCamerasManager::dyn__mrcForegroundCameraPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExternalCamerasManager::dyn__mrcForegroundCameraPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mrcForegroundCameraPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExternalCamerasManager.OnEnable
void GlobalNamespace::ExternalCamerasManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExternalCamerasManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExternalCamerasManager.InstantiateMixedRealityBackgroundCameraGameObject
::UnityEngine::GameObject* GlobalNamespace::ExternalCamerasManager::InstantiateMixedRealityBackgroundCameraGameObject(::UnityEngine::GameObject* mainCameraGameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExternalCamerasManager::InstantiateMixedRealityBackgroundCameraGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateMixedRealityBackgroundCameraGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainCameraGameObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, mainCameraGameObject);
}
// Autogenerated method: ExternalCamerasManager.InstantiateMixedRealityForegroundCameraGameObject
::UnityEngine::GameObject* GlobalNamespace::ExternalCamerasManager::InstantiateMixedRealityForegroundCameraGameObject(::UnityEngine::GameObject* mainCameraGameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExternalCamerasManager::InstantiateMixedRealityForegroundCameraGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateMixedRealityForegroundCameraGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainCameraGameObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, mainCameraGameObject);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FadeInOnSceneTransitionFinished
#include "GlobalNamespace/FadeInOnSceneTransitionFinished.hpp"
// Including type: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3
#include "GlobalNamespace/FadeInOnSceneTransitionFinished_-FadeInAfterSceneTransitionCoroutine-d__3.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FadeInOutController _fadeInOut
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FadeInOutController*& GlobalNamespace::FadeInOnSceneTransitionFinished::dyn__fadeInOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::dyn__fadeInOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInOut"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FadeInOutController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameScenesManager _gameScenesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameScenesManager*& GlobalNamespace::FadeInOnSceneTransitionFinished::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FadeInOnSceneTransitionFinished.OnEnable
void GlobalNamespace::FadeInOnSceneTransitionFinished::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeInOnSceneTransitionFinished.FadeInAfterSceneTransitionCoroutine
::System::Collections::IEnumerator* GlobalNamespace::FadeInOnSceneTransitionFinished::FadeInAfterSceneTransitionCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::FadeInAfterSceneTransitionCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeInAfterSceneTransitionCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3
#include "GlobalNamespace/FadeInOnSceneTransitionFinished_-FadeInAfterSceneTransitionCoroutine-d__3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FadeInOnSceneTransitionFinished <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FadeInOnSceneTransitionFinished*& GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FadeInOnSceneTransitionFinished**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3.System.IDisposable.Dispose
void GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3.MoveNext
bool GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FadeOutInstantly
#include "GlobalNamespace/FadeOutInstantly.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FadeInOutController _fadeInOut
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FadeInOutController*& GlobalNamespace::FadeOutInstantly::dyn__fadeInOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutInstantly::dyn__fadeInOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInOut"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FadeInOutController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FadeOutInstantly.Start
void GlobalNamespace::FadeOutInstantly::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutInstantly::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FadeOutOnSceneTransitionStart
#include "GlobalNamespace/FadeOutOnSceneTransitionStart.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly FadeInOutController _fadeInOut
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FadeInOutController*& GlobalNamespace::FadeOutOnSceneTransitionStart::dyn__fadeInOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutOnSceneTransitionStart::dyn__fadeInOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInOut"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FadeInOutController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameScenesManager*& GlobalNamespace::FadeOutOnSceneTransitionStart::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutOnSceneTransitionStart::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FadeOutOnSceneTransitionStart.Start
void GlobalNamespace::FadeOutOnSceneTransitionStart::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutOnSceneTransitionStart::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeOutOnSceneTransitionStart.OnDestroy
void GlobalNamespace::FadeOutOnSceneTransitionStart::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutOnSceneTransitionStart::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeOutOnSceneTransitionStart.HandleGameScenesManagerTransitionDidStart
void GlobalNamespace::FadeOutOnSceneTransitionStart::HandleGameScenesManagerTransitionDidStart(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutOnSceneTransitionStart::HandleGameScenesManagerTransitionDidStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameScenesManagerTransitionDidStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FakeMirrorSettings
#include "GlobalNamespace/FakeMirrorSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D10AC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _fakeMirrorTransparencyId
int GlobalNamespace::FakeMirrorSettings::_get__fakeMirrorTransparencyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_get__fakeMirrorTransparencyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FakeMirrorSettings", "_fakeMirrorTransparencyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _fakeMirrorTransparencyId
void GlobalNamespace::FakeMirrorSettings::_set__fakeMirrorTransparencyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_set__fakeMirrorTransparencyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FakeMirrorSettings", "_fakeMirrorTransparencyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D10BC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _vertexDistortionNoiseScaleId
int GlobalNamespace::FakeMirrorSettings::_get__vertexDistortionNoiseScaleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_get__vertexDistortionNoiseScaleId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FakeMirrorSettings", "_vertexDistortionNoiseScaleId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _vertexDistortionNoiseScaleId
void GlobalNamespace::FakeMirrorSettings::_set__vertexDistortionNoiseScaleId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_set__vertexDistortionNoiseScaleId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FakeMirrorSettings", "_vertexDistortionNoiseScaleId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D10CC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _vertexDistortionStrengthId
int GlobalNamespace::FakeMirrorSettings::_get__vertexDistortionStrengthId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_get__vertexDistortionStrengthId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FakeMirrorSettings", "_vertexDistortionStrengthId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _vertexDistortionStrengthId
void GlobalNamespace::FakeMirrorSettings::_set__vertexDistortionStrengthId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_set__vertexDistortionStrengthId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FakeMirrorSettings", "_vertexDistortionStrengthId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D10DC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _vertexDistortionDirectionalityId
int GlobalNamespace::FakeMirrorSettings::_get__vertexDistortionDirectionalityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_get__vertexDistortionDirectionalityId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FakeMirrorSettings", "_vertexDistortionDirectionalityId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _vertexDistortionDirectionalityId
void GlobalNamespace::FakeMirrorSettings::_set__vertexDistortionDirectionalityId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_set__vertexDistortionDirectionalityId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FakeMirrorSettings", "_vertexDistortionDirectionalityId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D10EC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _vertexDistortionZposMultiplierId
int GlobalNamespace::FakeMirrorSettings::_get__vertexDistortionZposMultiplierId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_get__vertexDistortionZposMultiplierId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FakeMirrorSettings", "_vertexDistortionZposMultiplierId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _vertexDistortionZposMultiplierId
void GlobalNamespace::FakeMirrorSettings::_set__vertexDistortionZposMultiplierId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_set__vertexDistortionZposMultiplierId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FakeMirrorSettings", "_vertexDistortionZposMultiplierId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fakeMirrorTransparency
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FakeMirrorSettings::dyn__fakeMirrorTransparency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::dyn__fakeMirrorTransparency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fakeMirrorTransparency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useVertexDistortion
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FakeMirrorSettings::dyn__useVertexDistortion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::dyn__useVertexDistortion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useVertexDistortion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _vertexDistortionNoiseScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FakeMirrorSettings::dyn__vertexDistortionNoiseScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::dyn__vertexDistortionNoiseScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertexDistortionNoiseScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _vertexDistortionStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FakeMirrorSettings::dyn__vertexDistortionStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::dyn__vertexDistortionStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertexDistortionStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _vertexDistortionDirectionality
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::FakeMirrorSettings::dyn__vertexDistortionDirectionality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::dyn__vertexDistortionDirectionality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertexDistortionDirectionality"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _vertexDistortionZposMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FakeMirrorSettings::dyn__vertexDistortionZposMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::dyn__vertexDistortionZposMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertexDistortionZposMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FakeMirrorSettings.get_fakeMirrorTransparency
float GlobalNamespace::FakeMirrorSettings::get_fakeMirrorTransparency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::get_fakeMirrorTransparency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fakeMirrorTransparency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: FakeMirrorSettings.set_fakeMirrorTransparency
void GlobalNamespace::FakeMirrorSettings::set_fakeMirrorTransparency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::set_fakeMirrorTransparency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fakeMirrorTransparency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FakeMirrorSettings..cctor
void GlobalNamespace::FakeMirrorSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FakeMirrorSettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FakeMirrorSettings.Start
void GlobalNamespace::FakeMirrorSettings::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FakeMirrorSettings.OnEnable
void GlobalNamespace::FakeMirrorSettings::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FakeMirrorSettings.OnValidate
void GlobalNamespace::FakeMirrorSettings::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FakeMirrorSettings.SetGlobalParameters
void GlobalNamespace::FakeMirrorSettings::SetGlobalParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::SetGlobalParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGlobalParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainCameraCullingMask
#include "GlobalNamespace/MainCameraCullingMask.hpp"
// Including type: MainCameraCullingMask/InitData
#include "GlobalNamespace/MainCameraCullingMask_InitData.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::MainCameraCullingMask::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCameraCullingMask::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MainCameraCullingMask/InitData _initData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainCameraCullingMask::InitData*& GlobalNamespace::MainCameraCullingMask::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCameraCullingMask::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainCameraCullingMask::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainCameraCullingMask.Start
void GlobalNamespace::MainCameraCullingMask::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCameraCullingMask::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainCameraCullingMask/InitData
#include "GlobalNamespace/MainCameraCullingMask_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean showDebris
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MainCameraCullingMask::InitData::dyn_showDebris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCameraCullingMask::InitData::dyn_showDebris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showDebris"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: KawaseBloomMainEffectSO
#include "GlobalNamespace/KawaseBloomMainEffectSO.hpp"
// Including type: KawaseBlurRendererSO
#include "GlobalNamespace/KawaseBlurRendererSO.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D1264
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _bloomTexID
int GlobalNamespace::KawaseBloomMainEffectSO::_get__bloomTexID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::_get__bloomTexID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "KawaseBloomMainEffectSO", "_bloomTexID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _bloomTexID
void GlobalNamespace::KawaseBloomMainEffectSO::_set__bloomTexID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::_set__bloomTexID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBloomMainEffectSO", "_bloomTexID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D1274
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _bloomIntensityID
int GlobalNamespace::KawaseBloomMainEffectSO::_get__bloomIntensityID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::_get__bloomIntensityID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "KawaseBloomMainEffectSO", "_bloomIntensityID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _bloomIntensityID
void GlobalNamespace::KawaseBloomMainEffectSO::_set__bloomIntensityID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::_set__bloomIntensityID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBloomMainEffectSO", "_bloomIntensityID", value));
}
// Autogenerated instance field getter
// Get instance field: private KawaseBlurRendererSO _kawaseBlurRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::KawaseBlurRendererSO*& GlobalNamespace::KawaseBloomMainEffectSO::dyn__kawaseBlurRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__kawaseBlurRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kawaseBlurRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::KawaseBlurRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _fadeShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::KawaseBloomMainEffectSO::dyn__fadeShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__fadeShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _mainEffectShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::KawaseBloomMainEffectSO::dyn__mainEffectShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__mainEffectShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bloomIterations
[[deprecated("Use field access instead!")]] int& GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomIterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomIterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomBoost
[[deprecated("Use field access instead!")]] float& GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomBoost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomBoost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomAlphaWeights
[[deprecated("Use field access instead!")]] float& GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomAlphaWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomAlphaWeights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomAlphaWeights"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bloomTextureWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomTextureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomTextureWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _baseColorBoost
[[deprecated("Use field access instead!")]] float& GlobalNamespace::KawaseBloomMainEffectSO::dyn__baseColorBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__baseColorBoost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseColorBoost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _baseColorBoostThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::KawaseBloomMainEffectSO::dyn__baseColorBoostThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__baseColorBoostThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseColorBoostThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _fadeMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::KawaseBloomMainEffectSO::dyn__fadeMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__fadeMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _mainEffectMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::KawaseBloomMainEffectSO::dyn__mainEffectMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__mainEffectMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: KawaseBloomMainEffectSO..cctor
void GlobalNamespace::KawaseBloomMainEffectSO::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "KawaseBloomMainEffectSO", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.OnDisable
void GlobalNamespace::KawaseBloomMainEffectSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.LazyInitializeMaterials
void GlobalNamespace::KawaseBloomMainEffectSO::LazyInitializeMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::LazyInitializeMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInitializeMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.get_hasPostProcessEffect
bool GlobalNamespace::KawaseBloomMainEffectSO::get_hasPostProcessEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::get_hasPostProcessEffect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasPostProcessEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.OnEnable
void GlobalNamespace::KawaseBloomMainEffectSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.PreRender
void GlobalNamespace::KawaseBloomMainEffectSO::PreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::PreRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.Render
void GlobalNamespace::KawaseBloomMainEffectSO::Render(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dest, float fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::Render");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(fade)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dest, fade);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainEffectContainerSO
#include "GlobalNamespace/MainEffectContainerSO.hpp"
// Including type: MainEffectSO
#include "GlobalNamespace/MainEffectSO.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MainEffectSO _mainEffect
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainEffectSO*& GlobalNamespace::MainEffectContainerSO::dyn__mainEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectContainerSO::dyn__mainEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _postProcessEnabled
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BoolSO*& GlobalNamespace::MainEffectContainerSO::dyn__postProcessEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectContainerSO::dyn__postProcessEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_postProcessEnabled"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainEffectContainerSO.get_mainEffect
::GlobalNamespace::MainEffectSO* GlobalNamespace::MainEffectContainerSO::get_mainEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectContainerSO::get_mainEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MainEffectSO*, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectContainerSO.Init
void GlobalNamespace::MainEffectContainerSO::Init(::GlobalNamespace::MainEffectSO* mainEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectContainerSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainEffect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainEffect);
}
// Autogenerated method: MainEffectContainerSO.OnEnable
void GlobalNamespace::MainEffectContainerSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectContainerSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainEffectController
#include "GlobalNamespace/MainEffectController.hpp"
// Including type: MainEffectContainerSO
#include "GlobalNamespace/MainEffectContainerSO.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: ImageEffectController
#include "GlobalNamespace/ImageEffectController.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kMainEffectEnabledKeyword
::StringW GlobalNamespace::MainEffectController::_get_kMainEffectEnabledKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::_get_kMainEffectEnabledKeyword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MainEffectController", "kMainEffectEnabledKeyword"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMainEffectEnabledKeyword
void GlobalNamespace::MainEffectController::_set_kMainEffectEnabledKeyword(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::_set_kMainEffectEnabledKeyword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainEffectController", "kMainEffectEnabledKeyword", value));
}
// Autogenerated instance field getter
// Get instance field: private MainEffectContainerSO _mainEffectContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainEffectContainerSO*& GlobalNamespace::MainEffectController::dyn__mainEffectContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::dyn__mainEffectContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainEffectContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FloatSO _fadeValue
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FloatSO*& GlobalNamespace::MainEffectController::dyn__fadeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::dyn__fadeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeValue"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.RenderTexture> afterImageEffectEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::RenderTexture*>*& GlobalNamespace::MainEffectController::dyn_afterImageEffectEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::dyn_afterImageEffectEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "afterImageEffectEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::RenderTexture*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ImageEffectController _imageEffectController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ImageEffectController*& GlobalNamespace::MainEffectController::dyn__imageEffectController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::dyn__imageEffectController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_imageEffectController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ImageEffectController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainEffectController.add_afterImageEffectEvent
void GlobalNamespace::MainEffectController::add_afterImageEffectEvent(::System::Action_1<::UnityEngine::RenderTexture*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::add_afterImageEffectEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_afterImageEffectEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainEffectController.remove_afterImageEffectEvent
void GlobalNamespace::MainEffectController::remove_afterImageEffectEvent(::System::Action_1<::UnityEngine::RenderTexture*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::remove_afterImageEffectEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_afterImageEffectEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainEffectController.OnEnable
void GlobalNamespace::MainEffectController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectController.OnDisable
void GlobalNamespace::MainEffectController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectController.OnValidate
void GlobalNamespace::MainEffectController::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectController.LazySetupImageEffectController
void GlobalNamespace::MainEffectController::LazySetupImageEffectController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::LazySetupImageEffectController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazySetupImageEffectController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectController.ImageEffectControllerCallback
void GlobalNamespace::MainEffectController::ImageEffectControllerCallback(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::ImageEffectControllerCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImageEffectControllerCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dest);
}
// Autogenerated method: MainEffectController.OnPreRender
void GlobalNamespace::MainEffectController::OnPreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::OnPreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectController.OnPostRender
void GlobalNamespace::MainEffectController::OnPostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::OnPostRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainEffectCore
#include "GlobalNamespace/MainEffectCore.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D12D4
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _baseColorBoostID
int GlobalNamespace::MainEffectCore::_get__baseColorBoostID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectCore::_get__baseColorBoostID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainEffectCore", "_baseColorBoostID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _baseColorBoostID
void GlobalNamespace::MainEffectCore::_set__baseColorBoostID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectCore::_set__baseColorBoostID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainEffectCore", "_baseColorBoostID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D12E4
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _baseColorBoostThresholdID
int GlobalNamespace::MainEffectCore::_get__baseColorBoostThresholdID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectCore::_get__baseColorBoostThresholdID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainEffectCore", "_baseColorBoostThresholdID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _baseColorBoostThresholdID
void GlobalNamespace::MainEffectCore::_set__baseColorBoostThresholdID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectCore::_set__baseColorBoostThresholdID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainEffectCore", "_baseColorBoostThresholdID", value));
}
// Autogenerated method: MainEffectCore..cctor
void GlobalNamespace::MainEffectCore::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectCore::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MainEffectCore", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MainEffectCore.SetGlobalShaderValues
void GlobalNamespace::MainEffectCore::SetGlobalShaderValues(float baseColorBoost, float baseColorBoostThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectCore::SetGlobalShaderValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MainEffectCore", "SetGlobalShaderValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseColorBoost), ::il2cpp_utils::ExtractType(baseColorBoostThreshold)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseColorBoost, baseColorBoostThreshold);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainEffectSO
#include "GlobalNamespace/MainEffectSO.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainEffectSO.get_hasPostProcessEffect
bool GlobalNamespace::MainEffectSO::get_hasPostProcessEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectSO::get_hasPostProcessEffect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasPostProcessEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectSO.PreRender
void GlobalNamespace::MainEffectSO::PreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectSO::PreRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectSO.Render
void GlobalNamespace::MainEffectSO::Render(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dest, float fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectSO::Render");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(fade)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dest, fade);
}
// Autogenerated method: MainEffectSO.PostRender
void GlobalNamespace::MainEffectSO::PostRender(float fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectSO::PostRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fade)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fade);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoPostProcessMainEffectSO
#include "GlobalNamespace/NoPostProcessMainEffectSO.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _fadeShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::NoPostProcessMainEffectSO::dyn__fadeShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::dyn__fadeShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _baseColorBoost
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoPostProcessMainEffectSO::dyn__baseColorBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::dyn__baseColorBoost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseColorBoost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _baseColorBoostThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoPostProcessMainEffectSO::dyn__baseColorBoostThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::dyn__baseColorBoostThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseColorBoostThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _fadeMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::NoPostProcessMainEffectSO::dyn__fadeMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::dyn__fadeMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoPostProcessMainEffectSO.OnDisable
void GlobalNamespace::NoPostProcessMainEffectSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoPostProcessMainEffectSO.DrawFadeQuad
void GlobalNamespace::NoPostProcessMainEffectSO::DrawFadeQuad(float alpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::DrawFadeQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawFadeQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alpha)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alpha);
}
// Autogenerated method: NoPostProcessMainEffectSO.get_hasPostProcessEffect
bool GlobalNamespace::NoPostProcessMainEffectSO::get_hasPostProcessEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::get_hasPostProcessEffect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasPostProcessEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NoPostProcessMainEffectSO.OnEnable
void GlobalNamespace::NoPostProcessMainEffectSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoPostProcessMainEffectSO.PreRender
void GlobalNamespace::NoPostProcessMainEffectSO::PreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::PreRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoPostProcessMainEffectSO.PostRender
void GlobalNamespace::NoPostProcessMainEffectSO::PostRender(float fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::PostRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fade)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fade);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PyramidBloomMainEffectSO
#include "GlobalNamespace/PyramidBloomMainEffectSO.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D150C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _bloomTexID
int GlobalNamespace::PyramidBloomMainEffectSO::_get__bloomTexID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::_get__bloomTexID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PyramidBloomMainEffectSO", "_bloomTexID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _bloomTexID
void GlobalNamespace::PyramidBloomMainEffectSO::_set__bloomTexID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::_set__bloomTexID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomMainEffectSO", "_bloomTexID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D151C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _bloomIntensityID
int GlobalNamespace::PyramidBloomMainEffectSO::_get__bloomIntensityID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::_get__bloomIntensityID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PyramidBloomMainEffectSO", "_bloomIntensityID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _bloomIntensityID
void GlobalNamespace::PyramidBloomMainEffectSO::_set__bloomIntensityID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::_set__bloomIntensityID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomMainEffectSO", "_bloomIntensityID", value));
}
// Autogenerated instance field getter
// Get instance field: private PyramidBloomRendererSO _bloomRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PyramidBloomRendererSO*& GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PyramidBloomRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _fadeShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::PyramidBloomMainEffectSO::dyn__fadeShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__fadeShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _mainEffectShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::PyramidBloomMainEffectSO::dyn__mainEffectShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__mainEffectShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomBlendFactor
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomBlendFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomBlendFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomBlendFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _downBloomIntensityOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PyramidBloomMainEffectSO::dyn__downBloomIntensityOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__downBloomIntensityOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downBloomIntensityOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _pyramidWeightsParam
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PyramidBloomMainEffectSO::dyn__pyramidWeightsParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__pyramidWeightsParam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pyramidWeightsParam"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _alphaWeights
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PyramidBloomMainEffectSO::dyn__alphaWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__alphaWeights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alphaWeights"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PyramidBloomRendererSO/Pass _preFilterPass
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PyramidBloomRendererSO::Pass& GlobalNamespace::PyramidBloomMainEffectSO::dyn__preFilterPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__preFilterPass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preFilterPass"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PyramidBloomRendererSO::Pass*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PyramidBloomRendererSO/Pass _downsamplePass
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PyramidBloomRendererSO::Pass& GlobalNamespace::PyramidBloomMainEffectSO::dyn__downsamplePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__downsamplePass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downsamplePass"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PyramidBloomRendererSO::Pass*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PyramidBloomRendererSO/Pass _upsamplePass
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PyramidBloomRendererSO::Pass& GlobalNamespace::PyramidBloomMainEffectSO::dyn__upsamplePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__upsamplePass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_upsamplePass"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PyramidBloomRendererSO::Pass*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PyramidBloomRendererSO/Pass _finalUpsamplePass
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PyramidBloomRendererSO::Pass& GlobalNamespace::PyramidBloomMainEffectSO::dyn__finalUpsamplePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__finalUpsamplePass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalUpsamplePass"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PyramidBloomRendererSO::Pass*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bloomTextureWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomTextureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomTextureWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _baseColorBoost
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PyramidBloomMainEffectSO::dyn__baseColorBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__baseColorBoost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseColorBoost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _baseColorBoostThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PyramidBloomMainEffectSO::dyn__baseColorBoostThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__baseColorBoostThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseColorBoostThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _fadeMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::PyramidBloomMainEffectSO::dyn__fadeMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__fadeMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _mainEffectMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::PyramidBloomMainEffectSO::dyn__mainEffectMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__mainEffectMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PyramidBloomMainEffectSO..cctor
void GlobalNamespace::PyramidBloomMainEffectSO::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PyramidBloomMainEffectSO", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.OnDisable
void GlobalNamespace::PyramidBloomMainEffectSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.LazyInitializeMaterials
void GlobalNamespace::PyramidBloomMainEffectSO::LazyInitializeMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::LazyInitializeMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInitializeMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.get_hasPostProcessEffect
bool GlobalNamespace::PyramidBloomMainEffectSO::get_hasPostProcessEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::get_hasPostProcessEffect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasPostProcessEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.OnEnable
void GlobalNamespace::PyramidBloomMainEffectSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.PreRender
void GlobalNamespace::PyramidBloomMainEffectSO::PreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::PreRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.Render
void GlobalNamespace::PyramidBloomMainEffectSO::Render(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dest, float fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::Render");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(fade)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dest, fade);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mirror
#include "GlobalNamespace/Mirror.hpp"
// Including type: MirrorRendererSO
#include "GlobalNamespace/MirrorRendererSO.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10D156C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _texturePropertyID
int GlobalNamespace::Mirror::_get__texturePropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::_get__texturePropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "Mirror", "_texturePropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _texturePropertyID
void GlobalNamespace::Mirror::_set__texturePropertyID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::_set__texturePropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Mirror", "_texturePropertyID", value));
}
// Autogenerated instance field getter
// Get instance field: private MirrorRendererSO _mirrorRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MirrorRendererSO*& GlobalNamespace::Mirror::dyn__mirrorRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::dyn__mirrorRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirrorRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::Mirror::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _mirrorMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::Mirror::dyn__mirrorMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::dyn__mirrorMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _noMirrorMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::Mirror::dyn__noMirrorMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::dyn__noMirrorMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noMirrorMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isEnabled>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Mirror::dyn_$isEnabled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::dyn_$isEnabled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isEnabled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> mirrorDidChangeEnabledStateEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& GlobalNamespace::Mirror::dyn_mirrorDidChangeEnabledStateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::dyn_mirrorDidChangeEnabledStateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mirrorDidChangeEnabledStateEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mirror.get_noMirrorMaterial
::UnityEngine::Material* GlobalNamespace::Mirror::get_noMirrorMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::get_noMirrorMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noMirrorMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: Mirror.get_isEnabled
bool GlobalNamespace::Mirror::get_isEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::get_isEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mirror.set_isEnabled
void GlobalNamespace::Mirror::set_isEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::set_isEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mirror.add_mirrorDidChangeEnabledStateEvent
void GlobalNamespace::Mirror::add_mirrorDidChangeEnabledStateEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::add_mirrorDidChangeEnabledStateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_mirrorDidChangeEnabledStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mirror.remove_mirrorDidChangeEnabledStateEvent
void GlobalNamespace::Mirror::remove_mirrorDidChangeEnabledStateEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::remove_mirrorDidChangeEnabledStateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_mirrorDidChangeEnabledStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mirror..cctor
void GlobalNamespace::Mirror::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Mirror", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mirror.Update
void GlobalNamespace::Mirror::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mirror.OnWillRenderObject
void GlobalNamespace::Mirror::OnWillRenderObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::OnWillRenderObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnWillRenderObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mirror.ChangeMirrorEnabledState
void GlobalNamespace::Mirror::ChangeMirrorEnabledState(bool newIsEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::ChangeMirrorEnabledState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeMirrorEnabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newIsEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newIsEnabled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirrorRendererSO
#include "GlobalNamespace/MirrorRendererSO.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: BloomPrePassRendererSO
#include "GlobalNamespace/BloomPrePassRendererSO.hpp"
// Including type: BloomPrePassEffectSO
#include "GlobalNamespace/BloomPrePassEffectSO.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kWaterLayer
int GlobalNamespace::MirrorRendererSO::_get_kWaterLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::_get_kWaterLayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MirrorRendererSO", "kWaterLayer"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kWaterLayer
void GlobalNamespace::MirrorRendererSO::_set_kWaterLayer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::_set_kWaterLayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MirrorRendererSO", "kWaterLayer", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _reflectLayers
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::MirrorRendererSO::dyn__reflectLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__reflectLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectLayers"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _stereoTextureWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MirrorRendererSO::dyn__stereoTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__stereoTextureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stereoTextureWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _stereoTextureHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MirrorRendererSO::dyn__stereoTextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__stereoTextureHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stereoTextureHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _monoTextureWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MirrorRendererSO::dyn__monoTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__monoTextureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_monoTextureWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _monoTextureHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MirrorRendererSO::dyn__monoTextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__monoTextureHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_monoTextureHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxAntiAliasing
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MirrorRendererSO::dyn__maxAntiAliasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__maxAntiAliasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAntiAliasing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disableDepthTexture
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MirrorRendererSO::dyn__disableDepthTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__disableDepthTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disableDepthTexture"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _enableBloomPrePass
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MirrorRendererSO::dyn__enableBloomPrePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__enableBloomPrePass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enableBloomPrePass"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassRendererSO _bloomPrePassRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassRendererSO*& GlobalNamespace::MirrorRendererSO::dyn__bloomPrePassRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__bloomPrePassRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassEffectSO _bloomPrePassEffect
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassEffectSO*& GlobalNamespace::MirrorRendererSO::dyn__bloomPrePassEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__bloomPrePassEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _clearDepthShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::MirrorRendererSO::dyn__clearDepthShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__clearDepthShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearDepthShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _bloomPrePassRenderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::MirrorRendererSO::dyn__bloomPrePassRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__bloomPrePassRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _mirrorCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::MirrorRendererSO::dyn__mirrorCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__mirrorCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _antialiasing
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MirrorRendererSO::dyn__antialiasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__antialiasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_antialiasing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<MirrorRendererSO/CameraTransformData,UnityEngine.RenderTexture> _renderTextures
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::MirrorRendererSO::CameraTransformData, ::UnityEngine::RenderTexture*>*& GlobalNamespace::MirrorRendererSO::dyn__renderTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__renderTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderTextures"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::MirrorRendererSO::CameraTransformData, ::UnityEngine::RenderTexture*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Rect kLeftRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::MirrorRendererSO::dyn_kLeftRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn_kLeftRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kLeftRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Rect kRightRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::MirrorRendererSO::dyn_kRightRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn_kRightRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kRightRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Rect kFullRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::MirrorRendererSO::dyn_kFullRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn_kFullRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kFullRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MirrorRendererSO.OnValidate
void GlobalNamespace::MirrorRendererSO::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MirrorRendererSO.Awake
void GlobalNamespace::MirrorRendererSO::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MirrorRendererSO.ValidateParams
void GlobalNamespace::MirrorRendererSO::ValidateParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::ValidateParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MirrorRendererSO.Init
void GlobalNamespace::MirrorRendererSO::Init(::UnityEngine::LayerMask reflectLayers, int stereoTextureWidth, int stereoTextureHeight, int monoTextureWidth, int monoTextureHeight, int maxAntiAliasing, bool enableBloomPrePass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reflectLayers), ::il2cpp_utils::ExtractType(stereoTextureWidth), ::il2cpp_utils::ExtractType(stereoTextureHeight), ::il2cpp_utils::ExtractType(monoTextureWidth), ::il2cpp_utils::ExtractType(monoTextureHeight), ::il2cpp_utils::ExtractType(maxAntiAliasing), ::il2cpp_utils::ExtractType(enableBloomPrePass)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reflectLayers, stereoTextureWidth, stereoTextureHeight, monoTextureWidth, monoTextureHeight, maxAntiAliasing, enableBloomPrePass);
}
// Autogenerated method: MirrorRendererSO.PrepareForNextFrame
void GlobalNamespace::MirrorRendererSO::PrepareForNextFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::PrepareForNextFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareForNextFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MirrorRendererSO.GetMirrorTexture
::UnityEngine::Texture* GlobalNamespace::MirrorRendererSO::GetMirrorTexture(::UnityEngine::Vector3 reflectionPlanePos, ::UnityEngine::Vector3 reflectionPlaneNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::GetMirrorTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMirrorTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reflectionPlanePos), ::il2cpp_utils::ExtractType(reflectionPlaneNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method, reflectionPlanePos, reflectionPlaneNormal);
}
// Autogenerated method: MirrorRendererSO.RenderMirror
void GlobalNamespace::MirrorRendererSO::RenderMirror(::UnityEngine::Vector3 camPosition, ::UnityEngine::Quaternion camRotation, ::UnityEngine::Matrix4x4 camProjectionMatrix, ::UnityEngine::Rect screenRect, ::UnityEngine::Vector3 reclectionPlanePos, ::UnityEngine::Vector3 reflectionPlaneNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::RenderMirror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderMirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camPosition), ::il2cpp_utils::ExtractType(camRotation), ::il2cpp_utils::ExtractType(camProjectionMatrix), ::il2cpp_utils::ExtractType(screenRect), ::il2cpp_utils::ExtractType(reclectionPlanePos), ::il2cpp_utils::ExtractType(reflectionPlaneNormal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, camPosition, camRotation, camProjectionMatrix, screenRect, reclectionPlanePos, reflectionPlaneNormal);
}
// Autogenerated method: MirrorRendererSO.OnDisable
void GlobalNamespace::MirrorRendererSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MirrorRendererSO.CreateOrUpdateMirrorCamera
void GlobalNamespace::MirrorRendererSO::CreateOrUpdateMirrorCamera(::UnityEngine::Camera* currentCamera, ::UnityEngine::RenderTexture* renderTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CreateOrUpdateMirrorCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOrUpdateMirrorCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentCamera), ::il2cpp_utils::ExtractType(renderTexture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentCamera, renderTexture);
}
// Autogenerated method: MirrorRendererSO.Plane
::UnityEngine::Vector4 GlobalNamespace::MirrorRendererSO::Plane(::UnityEngine::Vector3 pos, ::UnityEngine::Vector3 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::Plane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MirrorRendererSO", "Plane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(normal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pos, normal);
}
// Autogenerated method: MirrorRendererSO.CameraSpacePlane
::UnityEngine::Vector4 GlobalNamespace::MirrorRendererSO::CameraSpacePlane(::UnityEngine::Matrix4x4 worldToCameraMatrix, ::UnityEngine::Vector3 pos, ::UnityEngine::Vector3 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CameraSpacePlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MirrorRendererSO", "CameraSpacePlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldToCameraMatrix), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(normal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, worldToCameraMatrix, pos, normal);
}
// Autogenerated method: MirrorRendererSO.CalculateReflectionMatrix
::UnityEngine::Matrix4x4 GlobalNamespace::MirrorRendererSO::CalculateReflectionMatrix(::UnityEngine::Vector4 plane) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CalculateReflectionMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MirrorRendererSO", "CalculateReflectionMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plane)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, plane);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MirrorRendererSO/CameraTransformData
#include "GlobalNamespace/MirrorRendererSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MirrorRendererSO::CameraTransformData::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CameraTransformData::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Quaternion rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::MirrorRendererSO::CameraTransformData::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CameraTransformData::dyn_rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single fov
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MirrorRendererSO::CameraTransformData::dyn_fov() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CameraTransformData::dyn_fov");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fov"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean stereoEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MirrorRendererSO::CameraTransformData::dyn_stereoEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CameraTransformData::dyn_stereoEnabled");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stereoEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MirrorRendererSO/CameraTransformData..ctor
// ABORTED elsewhere.  GlobalNamespace::MirrorRendererSO::CameraTransformData::CameraTransformData(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, float fov, bool stereoEnabled)
// Autogenerated method: MirrorRendererSO/CameraTransformData.Equals
bool GlobalNamespace::MirrorRendererSO::CameraTransformData::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CameraTransformData::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: MirrorRendererSO/CameraTransformData.GetHashCode
int GlobalNamespace::MirrorRendererSO::CameraTransformData::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CameraTransformData::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RenderTextureFromPostEffect
#include "GlobalNamespace/RenderTextureFromPostEffect.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RenderTexture _targetTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::RenderTextureFromPostEffect::dyn__targetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RenderTextureFromPostEffect::dyn__targetTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::RenderTextureFromPostEffect::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RenderTextureFromPostEffect::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RenderTextureFromPostEffect.get_targetTexture
::UnityEngine::RenderTexture* GlobalNamespace::RenderTextureFromPostEffect::get_targetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RenderTextureFromPostEffect::get_targetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(this, ___internal__method);
}
// Autogenerated method: RenderTextureFromPostEffect.Awake
void GlobalNamespace::RenderTextureFromPostEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RenderTextureFromPostEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RenderTextureFromPostEffect.OnRenderImage
void GlobalNamespace::RenderTextureFromPostEffect::OnRenderImage(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RenderTextureFromPostEffect::OnRenderImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRenderImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dst);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Noise3DTexturesGenerator
#include "GlobalNamespace/Noise3DTexturesGenerator.hpp"
// Including type: UnityEngine.Texture3D
#include "UnityEngine/Texture3D.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Texture3D _texture
::UnityEngine::Texture3D* GlobalNamespace::Noise3DTexturesGenerator::_get__texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Noise3DTexturesGenerator::_get__texture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Texture3D*>("", "Noise3DTexturesGenerator", "_texture"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Texture3D _texture
void GlobalNamespace::Noise3DTexturesGenerator::_set__texture(::UnityEngine::Texture3D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Noise3DTexturesGenerator::_set__texture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Noise3DTexturesGenerator", "_texture", value));
}
// Autogenerated instance field getter
// Get instance field: private Noise3DTexturesGenerator/MaterialTextureParamsCouple[] _data
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::Noise3DTexturesGenerator::MaterialTextureParamsCouple>& GlobalNamespace::Noise3DTexturesGenerator::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Noise3DTexturesGenerator::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::Noise3DTexturesGenerator::MaterialTextureParamsCouple>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Noise3DTexturesGenerator..cctor
void GlobalNamespace::Noise3DTexturesGenerator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Noise3DTexturesGenerator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Noise3DTexturesGenerator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Noise3DTexturesGenerator.Awake
void GlobalNamespace::Noise3DTexturesGenerator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Noise3DTexturesGenerator::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Noise3DTexturesGenerator.CreateNoisePixels
::ArrayW<::UnityEngine::Color32> GlobalNamespace::Noise3DTexturesGenerator::CreateNoisePixels(int width, int height, int depth, float scale, int repeat, float contrast) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Noise3DTexturesGenerator::CreateNoisePixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Noise3DTexturesGenerator", "CreateNoisePixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(repeat), ::il2cpp_utils::ExtractType(contrast)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Color32>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, width, height, depth, scale, repeat, contrast);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScreenCaptureAfterDelay
#include "GlobalNamespace/ScreenCaptureAfterDelay.hpp"
// Including type: ScreenCaptureAfterDelay/InitData
#include "GlobalNamespace/ScreenCaptureAfterDelay_InitData.hpp"
// Including type: ScreenCaptureAfterDelay/<Start>d__6
#include "GlobalNamespace/ScreenCaptureAfterDelay_-Start-d__6.hpp"
// Including type: MainEffectController
#include "GlobalNamespace/MainEffectController.hpp"
// Including type: ScreenCaptureCache
#include "GlobalNamespace/ScreenCaptureCache.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MainEffectController _mainEffectController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainEffectController*& GlobalNamespace::ScreenCaptureAfterDelay::dyn__mainEffectController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::dyn__mainEffectController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainEffectController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ScreenCaptureCache _screenCaptureCache
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ScreenCaptureCache*& GlobalNamespace::ScreenCaptureAfterDelay::dyn__screenCaptureCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::dyn__screenCaptureCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screenCaptureCache"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScreenCaptureCache**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ScreenCaptureAfterDelay/InitData _initData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ScreenCaptureAfterDelay::InitData*& GlobalNamespace::ScreenCaptureAfterDelay::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScreenCaptureAfterDelay::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _captureTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::ScreenCaptureAfterDelay::dyn__captureTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::dyn__captureTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captureTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _captureRenderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::ScreenCaptureAfterDelay::dyn__captureRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::dyn__captureRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captureRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScreenCaptureAfterDelay.Start
::System::Collections::IEnumerator* GlobalNamespace::ScreenCaptureAfterDelay::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: ScreenCaptureAfterDelay.OnDestroy
void GlobalNamespace::ScreenCaptureAfterDelay::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScreenCaptureAfterDelay.HandleMainEffectControllerAfterImageEffectEvent
void GlobalNamespace::ScreenCaptureAfterDelay::HandleMainEffectControllerAfterImageEffectEvent(::UnityEngine::RenderTexture* renderTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::HandleMainEffectControllerAfterImageEffectEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMainEffectControllerAfterImageEffectEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderTexture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderTexture);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScreenCaptureAfterDelay/InitData
#include "GlobalNamespace/ScreenCaptureAfterDelay_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ScreenCaptureCache/ScreenshotType screenshotType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ScreenCaptureCache::ScreenshotType& GlobalNamespace::ScreenCaptureAfterDelay::InitData::dyn_screenshotType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::InitData::dyn_screenshotType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScreenCaptureCache::ScreenshotType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single screenCaptureTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ScreenCaptureAfterDelay::InitData::dyn_screenCaptureTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::InitData::dyn_screenCaptureTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenCaptureTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 pixelsWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScreenCaptureAfterDelay::InitData::dyn_pixelsWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::InitData::dyn_pixelsWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pixelsWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 pixelsHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScreenCaptureAfterDelay::InitData::dyn_pixelsHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::InitData::dyn_pixelsHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pixelsHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ScreenCaptureAfterDelay/<Start>d__6
#include "GlobalNamespace/ScreenCaptureAfterDelay_-Start-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ScreenCaptureAfterDelay <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ScreenCaptureAfterDelay*& GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScreenCaptureAfterDelay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScreenCaptureAfterDelay/<Start>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ScreenCaptureAfterDelay/<Start>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ScreenCaptureAfterDelay/<Start>d__6.System.IDisposable.Dispose
void GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScreenCaptureAfterDelay/<Start>d__6.MoveNext
bool GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ScreenCaptureAfterDelay/<Start>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScreenCaptureCache
#include "GlobalNamespace/ScreenCaptureCache.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<ScreenCaptureCache/ScreenshotType,UnityEngine.Texture2D> _cache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::ScreenCaptureCache::ScreenshotType, ::UnityEngine::Texture2D*>*& GlobalNamespace::ScreenCaptureCache::dyn__cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::dyn__cache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::ScreenCaptureCache::ScreenshotType, ::UnityEngine::Texture2D*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScreenCaptureCache.GetLastScreenshot
::UnityEngine::Texture2D* GlobalNamespace::ScreenCaptureCache::GetLastScreenshot(::GlobalNamespace::ScreenCaptureCache::ScreenshotType screenshotType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::GetLastScreenshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastScreenshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method, screenshotType);
}
// Autogenerated method: ScreenCaptureCache.StoreScreenshot
void GlobalNamespace::ScreenCaptureCache::StoreScreenshot(::GlobalNamespace::ScreenCaptureCache::ScreenshotType screenshotType, ::UnityEngine::Texture2D* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::StoreScreenshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreScreenshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotType), ::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, screenshotType, texture);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScreenCaptureCache/ScreenshotType
#include "GlobalNamespace/ScreenCaptureCache.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ScreenCaptureCache/ScreenshotType Game
::GlobalNamespace::ScreenCaptureCache::ScreenshotType GlobalNamespace::ScreenCaptureCache::ScreenshotType::_get_Game() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::ScreenshotType::_get_Game");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScreenCaptureCache::ScreenshotType>("", "ScreenCaptureCache/ScreenshotType", "Game"));
}
// Autogenerated static field setter
// Set static field: static public ScreenCaptureCache/ScreenshotType Game
void GlobalNamespace::ScreenCaptureCache::ScreenshotType::_set_Game(::GlobalNamespace::ScreenCaptureCache::ScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::ScreenshotType::_set_Game");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScreenCaptureCache/ScreenshotType", "Game", value));
}
// Autogenerated static field getter
// Get static field: static public ScreenCaptureCache/ScreenshotType Menu
::GlobalNamespace::ScreenCaptureCache::ScreenshotType GlobalNamespace::ScreenCaptureCache::ScreenshotType::_get_Menu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::ScreenshotType::_get_Menu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScreenCaptureCache::ScreenshotType>("", "ScreenCaptureCache/ScreenshotType", "Menu"));
}
// Autogenerated static field setter
// Set static field: static public ScreenCaptureCache/ScreenshotType Menu
void GlobalNamespace::ScreenCaptureCache::ScreenshotType::_set_Menu(::GlobalNamespace::ScreenCaptureCache::ScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::ScreenshotType::_set_Menu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScreenCaptureCache/ScreenshotType", "Menu", value));
}
// Autogenerated static field getter
// Get static field: static public ScreenCaptureCache/ScreenshotType Other
::GlobalNamespace::ScreenCaptureCache::ScreenshotType GlobalNamespace::ScreenCaptureCache::ScreenshotType::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::ScreenshotType::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScreenCaptureCache::ScreenshotType>("", "ScreenCaptureCache/ScreenshotType", "Other"));
}
// Autogenerated static field setter
// Set static field: static public ScreenCaptureCache/ScreenshotType Other
void GlobalNamespace::ScreenCaptureCache::ScreenshotType::_set_Other(::GlobalNamespace::ScreenCaptureCache::ScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::ScreenshotType::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScreenCaptureCache/ScreenshotType", "Other", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScreenCaptureCache::ScreenshotType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::ScreenshotType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShaderVariantsSO
#include "GlobalNamespace/ShaderVariantsSO.hpp"
// Including type: ShaderVariantsSO/ShaderVariant
#include "GlobalNamespace/ShaderVariantsSO_ShaderVariant.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ShaderVariantsSO/ShaderVariant[] _shaderVariants
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant*>& GlobalNamespace::ShaderVariantsSO::dyn__shaderVariants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::dyn__shaderVariants");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shaderVariants"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ShaderVariantsSO.get_shaderVariants
::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant*> GlobalNamespace::ShaderVariantsSO::get_shaderVariants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::get_shaderVariants");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shaderVariants", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant*>, false>(this, ___internal__method);
}
// Autogenerated method: ShaderVariantsSO.Init
void GlobalNamespace::ShaderVariantsSO::Init(::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant*> shaderVariants) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shaderVariants)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shaderVariants);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShaderVariantsSO/ShaderVariant
#include "GlobalNamespace/ShaderVariantsSO_ShaderVariant.hpp"
// Including type: ShaderVariantsSO/ShaderVariant/Variant
#include "GlobalNamespace/ShaderVariantsSO_ShaderVariant_Variant.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ShaderVariantsSO/ShaderVariant/Variant[] _variants
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant*>& GlobalNamespace::ShaderVariantsSO::ShaderVariant::dyn__variants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::ShaderVariant::dyn__variants");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_variants"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _shader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::ShaderVariantsSO::ShaderVariant::dyn__shader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::ShaderVariant::dyn__shader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ShaderVariantsSO/ShaderVariant.get_variants
::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant*> GlobalNamespace::ShaderVariantsSO::ShaderVariant::get_variants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::ShaderVariant::get_variants");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_variants", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant*>, false>(this, ___internal__method);
}
// Autogenerated method: ShaderVariantsSO/ShaderVariant.get_shader
::UnityEngine::Shader* GlobalNamespace::ShaderVariantsSO::ShaderVariant::get_shader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::ShaderVariant::get_shader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShaderVariantsSO/ShaderVariant/Variant
#include "GlobalNamespace/ShaderVariantsSO_ShaderVariant_Variant.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.PassType _passType
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::PassType& GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::dyn__passType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::dyn__passType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_passType"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::PassType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _keywords
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::dyn__keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::dyn__keywords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keywords"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ShaderVariantsSO/ShaderVariant/Variant.get_passType
::UnityEngine::Rendering::PassType GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::get_passType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::get_passType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_passType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::PassType, false>(this, ___internal__method);
}
// Autogenerated method: ShaderVariantsSO/ShaderVariant/Variant.get_keywords
::StringW GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::get_keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::get_keywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleTemporalFiltering
#include "GlobalNamespace/SimpleTemporalFiltering.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture[] _temporalFilteringTextures
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RenderTexture*>& GlobalNamespace::SimpleTemporalFiltering::dyn__temporalFilteringTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTemporalFiltering::dyn__temporalFilteringTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_temporalFilteringTextures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevTemporalFilteringTextureIdx
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SimpleTemporalFiltering::dyn__prevTemporalFilteringTextureIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTemporalFiltering::dyn__prevTemporalFilteringTextureIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevTemporalFilteringTextureIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _temporalFilteringMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::SimpleTemporalFiltering::dyn__temporalFilteringMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTemporalFiltering::dyn__temporalFilteringMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_temporalFilteringMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bufferTexID
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SimpleTemporalFiltering::dyn__bufferTexID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTemporalFiltering::dyn__bufferTexID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferTexID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleTemporalFiltering.FilterTexture
::UnityEngine::RenderTexture* GlobalNamespace::SimpleTemporalFiltering::FilterTexture(::UnityEngine::RenderTexture* src) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTemporalFiltering::FilterTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(this, ___internal__method, src);
}
// Autogenerated method: SimpleTemporalFiltering.CreateRenderTexturesIfNeeded
void GlobalNamespace::SimpleTemporalFiltering::CreateRenderTexturesIfNeeded(int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTemporalFiltering::CreateRenderTexturesIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRenderTexturesIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, width, height);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBloomTextureEffectSO
#include "GlobalNamespace/BloomPrePassBloomTextureEffectSO.hpp"
// Including type: ToneMapping
#include "GlobalNamespace/ToneMapping.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _radius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _intensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _downBloomIntensityOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__downBloomIntensityOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__downBloomIntensityOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downBloomIntensityOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _uniformPyramidWeights
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__uniformPyramidWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__uniformPyramidWeights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uniformPyramidWeights"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _pyramidWeightsParam
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__pyramidWeightsParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__pyramidWeightsParam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pyramidWeightsParam"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _firstUpsampleBrightness
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__firstUpsampleBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__firstUpsampleBrightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstUpsampleBrightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _finalUpsampleBrightness
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__finalUpsampleBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__finalUpsampleBrightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalUpsampleBrightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PyramidBloomRendererSO/Pass _prefilterPass
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PyramidBloomRendererSO::Pass& GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__prefilterPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__prefilterPass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefilterPass"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PyramidBloomRendererSO::Pass*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PyramidBloomRendererSO/Pass _downsamplePass
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PyramidBloomRendererSO::Pass& GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__downsamplePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__downsamplePass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downsamplePass"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PyramidBloomRendererSO::Pass*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PyramidBloomRendererSO/Pass _upsamplePass
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PyramidBloomRendererSO::Pass& GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__upsamplePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__upsamplePass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_upsamplePass"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PyramidBloomRendererSO::Pass*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PyramidBloomRendererSO/Pass _finalUpsamplePass
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PyramidBloomRendererSO::Pass& GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__finalUpsamplePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__finalUpsamplePass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalUpsamplePass"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PyramidBloomRendererSO::Pass*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PyramidBloomRendererSO _bloomRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PyramidBloomRendererSO*& GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__bloomRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBloomTextureEffectSO::dyn__bloomRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PyramidBloomRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassBloomTextureEffectSO.get_toneMapping
::GlobalNamespace::ToneMapping GlobalNamespace::BloomPrePassBloomTextureEffectSO::get_toneMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBloomTextureEffectSO::get_toneMapping");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_toneMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ToneMapping, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBloomTextureEffectSO.Render
void GlobalNamespace::BloomPrePassBloomTextureEffectSO::Render(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBloomTextureEffectSO::Render");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dest);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassDoubleKawaseBlurTextureEffectSO
#include "GlobalNamespace/BloomPrePassDoubleKawaseBlurTextureEffectSO.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private KawaseBlurRendererSO/KernelSize _bloom1KernelSize
[[deprecated("Use field access instead!")]] ::GlobalNamespace::KawaseBlurRendererSO::KernelSize& GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::dyn__bloom1KernelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::dyn__bloom1KernelSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloom1KernelSize"))->offset;
  return *reinterpret_cast<::GlobalNamespace::KawaseBlurRendererSO::KernelSize*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloom1Boost
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::dyn__bloom1Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::dyn__bloom1Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloom1Boost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private KawaseBlurRendererSO/KernelSize _bloom2KernelSize
[[deprecated("Use field access instead!")]] ::GlobalNamespace::KawaseBlurRendererSO::KernelSize& GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::dyn__bloom2KernelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::dyn__bloom2KernelSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloom2KernelSize"))->offset;
  return *reinterpret_cast<::GlobalNamespace::KawaseBlurRendererSO::KernelSize*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloom2Boost
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::dyn__bloom2Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::dyn__bloom2Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloom2Boost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloom2Alpha
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::dyn__bloom2Alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::dyn__bloom2Alpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloom2Alpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _downsample
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::dyn__downsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::dyn__downsample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downsample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _gammaCorrection
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::dyn__gammaCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::dyn__gammaCorrection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gammaCorrection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private KawaseBlurRendererSO _kawaseBlurRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::KawaseBlurRendererSO*& GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::dyn__kawaseBlurRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::dyn__kawaseBlurRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kawaseBlurRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::KawaseBlurRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassDoubleKawaseBlurTextureEffectSO.Render
void GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::Render(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassDoubleKawaseBlurTextureEffectSO::Render");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dest);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRRenderingParamsSetup
#include "GlobalNamespace/VRRenderingParamsSetup.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FloatSO _vrResolutionScale
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FloatSO*& GlobalNamespace::VRRenderingParamsSetup::dyn__vrResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRenderingParamsSetup::dyn__vrResolutionScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrResolutionScale"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FloatSO _menuVRResolutionScaleMultiplier
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FloatSO*& GlobalNamespace::VRRenderingParamsSetup::dyn__menuVRResolutionScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRenderingParamsSetup::dyn__menuVRResolutionScaleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuVRResolutionScaleMultiplier"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _useFixedFoveatedRenderingDuringGameplay
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BoolSO*& GlobalNamespace::VRRenderingParamsSetup::dyn__useFixedFoveatedRenderingDuringGameplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRenderingParamsSetup::dyn__useFixedFoveatedRenderingDuringGameplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useFixedFoveatedRenderingDuringGameplay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRenderingParamsSetup/SceneType _sceneType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRenderingParamsSetup::SceneType& GlobalNamespace::VRRenderingParamsSetup::dyn__sceneType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRenderingParamsSetup::dyn__sceneType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRenderingParamsSetup::SceneType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IVRPlatformHelper _vrPlatformHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::VRRenderingParamsSetup::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRenderingParamsSetup::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRRenderingParamsSetup.OnEnable
void GlobalNamespace::VRRenderingParamsSetup::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRenderingParamsSetup::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRRenderingParamsSetup/SceneType
#include "GlobalNamespace/VRRenderingParamsSetup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VRRenderingParamsSetup/SceneType Undefined
::GlobalNamespace::VRRenderingParamsSetup::SceneType GlobalNamespace::VRRenderingParamsSetup::SceneType::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRenderingParamsSetup::SceneType::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::VRRenderingParamsSetup::SceneType>("", "VRRenderingParamsSetup/SceneType", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public VRRenderingParamsSetup/SceneType Undefined
void GlobalNamespace::VRRenderingParamsSetup::SceneType::_set_Undefined(::GlobalNamespace::VRRenderingParamsSetup::SceneType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRenderingParamsSetup::SceneType::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRRenderingParamsSetup/SceneType", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public VRRenderingParamsSetup/SceneType Menu
::GlobalNamespace::VRRenderingParamsSetup::SceneType GlobalNamespace::VRRenderingParamsSetup::SceneType::_get_Menu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRenderingParamsSetup::SceneType::_get_Menu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::VRRenderingParamsSetup::SceneType>("", "VRRenderingParamsSetup/SceneType", "Menu"));
}
// Autogenerated static field setter
// Set static field: static public VRRenderingParamsSetup/SceneType Menu
void GlobalNamespace::VRRenderingParamsSetup::SceneType::_set_Menu(::GlobalNamespace::VRRenderingParamsSetup::SceneType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRenderingParamsSetup::SceneType::_set_Menu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRRenderingParamsSetup/SceneType", "Menu", value));
}
// Autogenerated static field getter
// Get static field: static public VRRenderingParamsSetup/SceneType Game
::GlobalNamespace::VRRenderingParamsSetup::SceneType GlobalNamespace::VRRenderingParamsSetup::SceneType::_get_Game() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRenderingParamsSetup::SceneType::_get_Game");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::VRRenderingParamsSetup::SceneType>("", "VRRenderingParamsSetup/SceneType", "Game"));
}
// Autogenerated static field setter
// Set static field: static public VRRenderingParamsSetup/SceneType Game
void GlobalNamespace::VRRenderingParamsSetup::SceneType::_set_Game(::GlobalNamespace::VRRenderingParamsSetup::SceneType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRenderingParamsSetup::SceneType::_set_Game");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRRenderingParamsSetup/SceneType", "Game", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRRenderingParamsSetup::SceneType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRenderingParamsSetup::SceneType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VisualEffectsController
#include "GlobalNamespace/VisualEffectsController.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kDepthTextureEnabledKeyword
::StringW GlobalNamespace::VisualEffectsController::_get_kDepthTextureEnabledKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualEffectsController::_get_kDepthTextureEnabledKeyword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "VisualEffectsController", "kDepthTextureEnabledKeyword"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDepthTextureEnabledKeyword
void GlobalNamespace::VisualEffectsController::_set_kDepthTextureEnabledKeyword(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualEffectsController::_set_kDepthTextureEnabledKeyword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VisualEffectsController", "kDepthTextureEnabledKeyword", value));
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _depthTextureEnabled
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BoolSO*& GlobalNamespace::VisualEffectsController::dyn__depthTextureEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualEffectsController::dyn__depthTextureEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthTextureEnabled"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::VisualEffectsController::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualEffectsController::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VisualEffectsController.Awake
void GlobalNamespace::VisualEffectsController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualEffectsController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VisualEffectsController.OnDestroy
void GlobalNamespace::VisualEffectsController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualEffectsController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VisualEffectsController.OnPreRender
void GlobalNamespace::VisualEffectsController::OnPreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualEffectsController::OnPreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VisualEffectsController.HandleDepthTextureEnabledDidChange
void GlobalNamespace::VisualEffectsController::HandleDepthTextureEnabledDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualEffectsController::HandleDepthTextureEnabledDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDepthTextureEnabledDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VisualEffectsController.SetShaderKeyword
void GlobalNamespace::VisualEffectsController::SetShaderKeyword(::StringW keyword, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualEffectsController::SetShaderKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShaderKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyword), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyword, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamVR
#include "GlobalNamespace/SteamVR.hpp"
// Including type: Valve.VR.CVRSystem
#include "Valve/VR/CVRSystem.hpp"
// Including type: Valve.VR.CVRCompositor
#include "Valve/VR/CVRCompositor.hpp"
// Including type: Valve.VR.CVROverlay
#include "Valve/VR/CVROverlay.hpp"
// Including type: Valve.VR.EVRInitError
#include "Valve/VR/EVRInitError.hpp"
// Including type: Valve.VR.ETrackedDeviceProperty
#include "Valve/VR/ETrackedDeviceProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean _enabled
bool GlobalNamespace::SteamVR::_get__enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::_get__enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "SteamVR", "_enabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _enabled
void GlobalNamespace::SteamVR::_set__enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::_set__enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR", "_enabled", value));
}
// Autogenerated static field getter
// Get static field: static private SteamVR _instance
::GlobalNamespace::SteamVR* GlobalNamespace::SteamVR::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SteamVR*>("", "SteamVR", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private SteamVR _instance
void GlobalNamespace::SteamVR::_set__instance(::GlobalNamespace::SteamVR* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean <initializing>k__BackingField
bool GlobalNamespace::SteamVR::_get_$initializing$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::_get_$initializing$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("", "SteamVR", "<initializing>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <initializing>k__BackingField
void GlobalNamespace::SteamVR::_set_$initializing$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::_set_$initializing$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR", "<initializing>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean <calibrating>k__BackingField
bool GlobalNamespace::SteamVR::_get_$calibrating$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::_get_$calibrating$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("", "SteamVR", "<calibrating>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <calibrating>k__BackingField
void GlobalNamespace::SteamVR::_set_$calibrating$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::_set_$calibrating$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR", "<calibrating>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean <outOfRange>k__BackingField
bool GlobalNamespace::SteamVR::_get_$outOfRange$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::_get_$outOfRange$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("", "SteamVR", "<outOfRange>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <outOfRange>k__BackingField
void GlobalNamespace::SteamVR::_set_$outOfRange$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::_set_$outOfRange$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR", "<outOfRange>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean[] connected
::ArrayW<bool> GlobalNamespace::SteamVR::_get_connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::_get_connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("", "SteamVR", "connected"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean[] connected
void GlobalNamespace::SteamVR::_set_connected(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::_set_connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR", "connected", value));
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRSystem <hmd>k__BackingField
[[deprecated("Use field access instead!")]] ::Valve::VR::CVRSystem*& GlobalNamespace::SteamVR::dyn_$hmd$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::dyn_$hmd$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hmd>k__BackingField"))->offset;
  return *reinterpret_cast<::Valve::VR::CVRSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRCompositor <compositor>k__BackingField
[[deprecated("Use field access instead!")]] ::Valve::VR::CVRCompositor*& GlobalNamespace::SteamVR::dyn_$compositor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::dyn_$compositor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<compositor>k__BackingField"))->offset;
  return *reinterpret_cast<::Valve::VR::CVRCompositor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVROverlay <overlay>k__BackingField
[[deprecated("Use field access instead!")]] ::Valve::VR::CVROverlay*& GlobalNamespace::SteamVR::dyn_$overlay$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::dyn_$overlay$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<overlay>k__BackingField"))->offset;
  return *reinterpret_cast<::Valve::VR::CVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <sceneWidth>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SteamVR::dyn_$sceneWidth$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::dyn_$sceneWidth$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sceneWidth>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <sceneHeight>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SteamVR::dyn_$sceneHeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::dyn_$sceneHeight$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sceneHeight>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <aspect>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SteamVR::dyn_$aspect$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::dyn_$aspect$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<aspect>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <fieldOfView>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SteamVR::dyn_$fieldOfView$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::dyn_$fieldOfView$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<fieldOfView>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 <tanHalfFov>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::SteamVR::dyn_$tanHalfFov$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::dyn_$tanHalfFov$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<tanHalfFov>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.VRTextureBounds_t[] <textureBounds>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::Valve::VR::VRTextureBounds_t>& GlobalNamespace::SteamVR::dyn_$textureBounds$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::dyn_$textureBounds$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<textureBounds>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::Valve::VR::VRTextureBounds_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SteamVR_Utils/RigidTransform[] <eyes>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SteamVR_Utils::RigidTransform>& GlobalNamespace::SteamVR::dyn_$eyes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::dyn_$eyes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<eyes>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SteamVR_Utils::RigidTransform>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Valve.VR.ETextureType textureType
[[deprecated("Use field access instead!")]] ::Valve::VR::ETextureType& GlobalNamespace::SteamVR::dyn_textureType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::dyn_textureType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureType"))->offset;
  return *reinterpret_cast<::Valve::VR::ETextureType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamVR.get_active
bool GlobalNamespace::SteamVR::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR", "get_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SteamVR.get_enabled
bool GlobalNamespace::SteamVR::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR", "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SteamVR.set_enabled
void GlobalNamespace::SteamVR::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::set_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR", "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: SteamVR.get_instance
::GlobalNamespace::SteamVR* GlobalNamespace::SteamVR::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SteamVR*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SteamVR.get_usingNativeSupport
bool GlobalNamespace::SteamVR::get_usingNativeSupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_usingNativeSupport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR", "get_usingNativeSupport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SteamVR.get_hmd
::Valve::VR::CVRSystem* GlobalNamespace::SteamVR::get_hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_hmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::CVRSystem*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR.set_hmd
void GlobalNamespace::SteamVR::set_hmd(::Valve::VR::CVRSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::set_hmd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hmd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR.get_compositor
::Valve::VR::CVRCompositor* GlobalNamespace::SteamVR::get_compositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_compositor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_compositor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::CVRCompositor*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR.set_compositor
void GlobalNamespace::SteamVR::set_compositor(::Valve::VR::CVRCompositor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::set_compositor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_compositor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR.get_overlay
::Valve::VR::CVROverlay* GlobalNamespace::SteamVR::get_overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_overlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Valve::VR::CVROverlay*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR.set_overlay
void GlobalNamespace::SteamVR::set_overlay(::Valve::VR::CVROverlay* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::set_overlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR.get_initializing
bool GlobalNamespace::SteamVR::get_initializing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_initializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR", "get_initializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SteamVR.set_initializing
void GlobalNamespace::SteamVR::set_initializing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::set_initializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR", "set_initializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: SteamVR.get_calibrating
bool GlobalNamespace::SteamVR::get_calibrating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_calibrating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR", "get_calibrating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SteamVR.set_calibrating
void GlobalNamespace::SteamVR::set_calibrating(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::set_calibrating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR", "set_calibrating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: SteamVR.get_outOfRange
bool GlobalNamespace::SteamVR::get_outOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_outOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR", "get_outOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SteamVR.set_outOfRange
void GlobalNamespace::SteamVR::set_outOfRange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::set_outOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR", "set_outOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: SteamVR.get_sceneWidth
float GlobalNamespace::SteamVR::get_sceneWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_sceneWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sceneWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR.set_sceneWidth
void GlobalNamespace::SteamVR::set_sceneWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::set_sceneWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sceneWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR.get_sceneHeight
float GlobalNamespace::SteamVR::get_sceneHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_sceneHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sceneHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR.set_sceneHeight
void GlobalNamespace::SteamVR::set_sceneHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::set_sceneHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sceneHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR.get_aspect
float GlobalNamespace::SteamVR::get_aspect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_aspect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_aspect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR.set_aspect
void GlobalNamespace::SteamVR::set_aspect(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::set_aspect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_aspect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR.get_fieldOfView
float GlobalNamespace::SteamVR::get_fieldOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_fieldOfView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fieldOfView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR.set_fieldOfView
void GlobalNamespace::SteamVR::set_fieldOfView(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::set_fieldOfView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fieldOfView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR.get_tanHalfFov
::UnityEngine::Vector2 GlobalNamespace::SteamVR::get_tanHalfFov() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_tanHalfFov");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tanHalfFov", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR.set_tanHalfFov
void GlobalNamespace::SteamVR::set_tanHalfFov(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::set_tanHalfFov");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tanHalfFov", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR.get_textureBounds
::ArrayW<::Valve::VR::VRTextureBounds_t> GlobalNamespace::SteamVR::get_textureBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_textureBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textureBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Valve::VR::VRTextureBounds_t>, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR.set_textureBounds
void GlobalNamespace::SteamVR::set_textureBounds(::ArrayW<::Valve::VR::VRTextureBounds_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::set_textureBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textureBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR.get_eyes
::ArrayW<::GlobalNamespace::SteamVR_Utils::RigidTransform> GlobalNamespace::SteamVR::get_eyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_eyes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eyes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::SteamVR_Utils::RigidTransform>, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR.set_eyes
void GlobalNamespace::SteamVR::set_eyes(::ArrayW<::GlobalNamespace::SteamVR_Utils::RigidTransform> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::set_eyes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eyes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR.get_hmd_TrackingSystemName
::StringW GlobalNamespace::SteamVR::get_hmd_TrackingSystemName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_hmd_TrackingSystemName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hmd_TrackingSystemName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR.get_hmd_ModelNumber
::StringW GlobalNamespace::SteamVR::get_hmd_ModelNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_hmd_ModelNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hmd_ModelNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR.get_hmd_SerialNumber
::StringW GlobalNamespace::SteamVR::get_hmd_SerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_hmd_SerialNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hmd_SerialNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR.get_hmd_SecondsFromVsyncToPhotons
float GlobalNamespace::SteamVR::get_hmd_SecondsFromVsyncToPhotons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_hmd_SecondsFromVsyncToPhotons");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hmd_SecondsFromVsyncToPhotons", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR.get_hmd_DisplayFrequency
float GlobalNamespace::SteamVR::get_hmd_DisplayFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::get_hmd_DisplayFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hmd_DisplayFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR..cctor
void GlobalNamespace::SteamVR::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SteamVR.CreateInstance
::GlobalNamespace::SteamVR* GlobalNamespace::SteamVR::CreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SteamVR*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SteamVR.ReportError
void GlobalNamespace::SteamVR::ReportError(::Valve::VR::EVRInitError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::ReportError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR", "ReportError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: SteamVR.GetTrackedDeviceString
::StringW GlobalNamespace::SteamVR::GetTrackedDeviceString(uint deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::GetTrackedDeviceString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrackedDeviceString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, deviceId);
}
// Autogenerated method: SteamVR.GetStringProperty
::StringW GlobalNamespace::SteamVR::GetStringProperty(::Valve::VR::ETrackedDeviceProperty prop, uint deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::GetStringProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(deviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prop, deviceId);
}
// Autogenerated method: SteamVR.GetFloatProperty
float GlobalNamespace::SteamVR::GetFloatProperty(::Valve::VR::ETrackedDeviceProperty prop, uint deviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::GetFloatProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloatProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(deviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, prop, deviceId);
}
// Autogenerated method: SteamVR.OnInitializing
void GlobalNamespace::SteamVR::OnInitializing(bool initializing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::OnInitializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initializing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initializing);
}
// Autogenerated method: SteamVR.OnCalibrating
void GlobalNamespace::SteamVR::OnCalibrating(bool calibrating) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::OnCalibrating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCalibrating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calibrating)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, calibrating);
}
// Autogenerated method: SteamVR.OnOutOfRange
void GlobalNamespace::SteamVR::OnOutOfRange(bool outOfRange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::OnOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outOfRange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, outOfRange);
}
// Autogenerated method: SteamVR.OnDeviceConnected
void GlobalNamespace::SteamVR::OnDeviceConnected(int i, bool connected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::OnDeviceConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeviceConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(connected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, connected);
}
// Autogenerated method: SteamVR.OnNewPoses
void GlobalNamespace::SteamVR::OnNewPoses(::ArrayW<::Valve::VR::TrackedDevicePose_t> poses) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::OnNewPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNewPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poses)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poses);
}
// Autogenerated method: SteamVR.Dispose
void GlobalNamespace::SteamVR::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR.Dispose
void GlobalNamespace::SteamVR::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: SteamVR.SafeDispose
void GlobalNamespace::SteamVR::SafeDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::SafeDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR", "SafeDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SteamVR.Finalize
void GlobalNamespace::SteamVR::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamVR_Camera
#include "GlobalNamespace/SteamVR_Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable values
::System::Collections::Hashtable* GlobalNamespace::SteamVR_Camera::_get_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::_get_values");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("", "SteamVR_Camera", "values"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable values
void GlobalNamespace::SteamVR_Camera::_set_values(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::_set_values");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Camera", "values", value));
}
// Autogenerated static field getter
// Get static field: static private System.String eyeSuffix
::StringW GlobalNamespace::SteamVR_Camera::_get_eyeSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::_get_eyeSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "SteamVR_Camera", "eyeSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String eyeSuffix
void GlobalNamespace::SteamVR_Camera::_set_eyeSuffix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::_set_eyeSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Camera", "eyeSuffix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String earsSuffix
::StringW GlobalNamespace::SteamVR_Camera::_get_earsSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::_get_earsSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "SteamVR_Camera", "earsSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String earsSuffix
void GlobalNamespace::SteamVR_Camera::_set_earsSuffix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::_set_earsSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Camera", "earsSuffix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String headSuffix
::StringW GlobalNamespace::SteamVR_Camera::_get_headSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::_get_headSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "SteamVR_Camera", "headSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String headSuffix
void GlobalNamespace::SteamVR_Camera::_set_headSuffix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::_set_headSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Camera", "headSuffix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String originSuffix
::StringW GlobalNamespace::SteamVR_Camera::_get_originSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::_get_originSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "SteamVR_Camera", "originSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String originSuffix
void GlobalNamespace::SteamVR_Camera::_set_originSuffix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::_set_originSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Camera", "originSuffix", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _head
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::SteamVR_Camera::dyn__head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::dyn__head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_head"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera <camera>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::SteamVR_Camera::dyn_$camera$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::dyn_$camera$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<camera>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _ears
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::SteamVR_Camera::dyn__ears() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::dyn__ears");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ears"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean wireframe
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SteamVR_Camera::dyn_wireframe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::dyn_wireframe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wireframe"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamVR_Camera.get_head
::UnityEngine::Transform* GlobalNamespace::SteamVR_Camera::get_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::get_head");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_head", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.get_offset
::UnityEngine::Transform* GlobalNamespace::SteamVR_Camera::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::get_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.get_origin
::UnityEngine::Transform* GlobalNamespace::SteamVR_Camera::get_origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::get_origin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_origin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.get_camera
::UnityEngine::Camera* GlobalNamespace::SteamVR_Camera::get_camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::get_camera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_camera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.set_camera
void GlobalNamespace::SteamVR_Camera::set_camera(::UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::set_camera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_camera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR_Camera.get_ears
::UnityEngine::Transform* GlobalNamespace::SteamVR_Camera::get_ears() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::get_ears");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ears", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.get_sceneResolutionScale
float GlobalNamespace::SteamVR_Camera::get_sceneResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::get_sceneResolutionScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR_Camera", "get_sceneResolutionScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SteamVR_Camera.set_sceneResolutionScale
void GlobalNamespace::SteamVR_Camera::set_sceneResolutionScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::set_sceneResolutionScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SteamVR_Camera", "set_sceneResolutionScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: SteamVR_Camera.get_baseName
::StringW GlobalNamespace::SteamVR_Camera::get_baseName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::get_baseName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_baseName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.GetRay
::UnityEngine::Ray GlobalNamespace::SteamVR_Camera::GetRay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::GetRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Ray, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.OnDisable
void GlobalNamespace::SteamVR_Camera::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.OnEnable
void GlobalNamespace::SteamVR_Camera::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.Awake
void GlobalNamespace::SteamVR_Camera::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.ForceLast
void GlobalNamespace::SteamVR_Camera::ForceLast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::ForceLast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceLast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.Expand
void GlobalNamespace::SteamVR_Camera::Expand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::Expand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Expand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.Collapse
void GlobalNamespace::SteamVR_Camera::Collapse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_Camera::Collapse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Collapse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamVR_CameraFlip
#include "GlobalNamespace/SteamVR_CameraFlip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamVR_CameraFlip.Awake
void GlobalNamespace::SteamVR_CameraFlip::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_CameraFlip::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamVR_CameraMask
#include "GlobalNamespace/SteamVR_CameraMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamVR_CameraMask.Awake
void GlobalNamespace::SteamVR_CameraMask::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamVR_CameraMask::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
