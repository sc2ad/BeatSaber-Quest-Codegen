// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VROverlayFlags
#include "OVR/OpenVR/VROverlayFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags None
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags None
void OVR::OpenVR::VROverlayFlags::_set_None(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags Curved
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_Curved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_Curved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "Curved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags Curved
void OVR::OpenVR::VROverlayFlags::_set_Curved(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_Curved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "Curved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags RGSS4X
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_RGSS4X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_RGSS4X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "RGSS4X"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags RGSS4X
void OVR::OpenVR::VROverlayFlags::_set_RGSS4X(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_RGSS4X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "RGSS4X", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags NoDashboardTab
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_NoDashboardTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_NoDashboardTab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "NoDashboardTab"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags NoDashboardTab
void OVR::OpenVR::VROverlayFlags::_set_NoDashboardTab(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_NoDashboardTab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "NoDashboardTab", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags AcceptsGamepadEvents
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_AcceptsGamepadEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_AcceptsGamepadEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "AcceptsGamepadEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags AcceptsGamepadEvents
void OVR::OpenVR::VROverlayFlags::_set_AcceptsGamepadEvents(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_AcceptsGamepadEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "AcceptsGamepadEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags ShowGamepadFocus
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_ShowGamepadFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_ShowGamepadFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "ShowGamepadFocus"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags ShowGamepadFocus
void OVR::OpenVR::VROverlayFlags::_set_ShowGamepadFocus(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_ShowGamepadFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "ShowGamepadFocus", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SendVRScrollEvents
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SendVRScrollEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SendVRScrollEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SendVRScrollEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SendVRScrollEvents
void OVR::OpenVR::VROverlayFlags::_set_SendVRScrollEvents(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SendVRScrollEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SendVRScrollEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SendVRTouchpadEvents
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SendVRTouchpadEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SendVRTouchpadEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SendVRTouchpadEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SendVRTouchpadEvents
void OVR::OpenVR::VROverlayFlags::_set_SendVRTouchpadEvents(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SendVRTouchpadEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SendVRTouchpadEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags ShowTouchPadScrollWheel
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_ShowTouchPadScrollWheel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_ShowTouchPadScrollWheel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "ShowTouchPadScrollWheel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags ShowTouchPadScrollWheel
void OVR::OpenVR::VROverlayFlags::_set_ShowTouchPadScrollWheel(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_ShowTouchPadScrollWheel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "ShowTouchPadScrollWheel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags TransferOwnershipToInternalProcess
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_TransferOwnershipToInternalProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_TransferOwnershipToInternalProcess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "TransferOwnershipToInternalProcess"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags TransferOwnershipToInternalProcess
void OVR::OpenVR::VROverlayFlags::_set_TransferOwnershipToInternalProcess(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_TransferOwnershipToInternalProcess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "TransferOwnershipToInternalProcess", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Parallel
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SideBySide_Parallel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SideBySide_Parallel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SideBySide_Parallel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Parallel
void OVR::OpenVR::VROverlayFlags::_set_SideBySide_Parallel(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SideBySide_Parallel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SideBySide_Parallel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Crossed
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SideBySide_Crossed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SideBySide_Crossed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SideBySide_Crossed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Crossed
void OVR::OpenVR::VROverlayFlags::_set_SideBySide_Crossed(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SideBySide_Crossed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SideBySide_Crossed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags Panorama
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_Panorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_Panorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "Panorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags Panorama
void OVR::OpenVR::VROverlayFlags::_set_Panorama(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_Panorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "Panorama", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags StereoPanorama
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_StereoPanorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_StereoPanorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "StereoPanorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags StereoPanorama
void OVR::OpenVR::VROverlayFlags::_set_StereoPanorama(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_StereoPanorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "StereoPanorama", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SortWithNonSceneOverlays
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SortWithNonSceneOverlays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SortWithNonSceneOverlays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SortWithNonSceneOverlays"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SortWithNonSceneOverlays
void OVR::OpenVR::VROverlayFlags::_set_SortWithNonSceneOverlays(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SortWithNonSceneOverlays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SortWithNonSceneOverlays", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags VisibleInDashboard
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_VisibleInDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_VisibleInDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "VisibleInDashboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags VisibleInDashboard
void OVR::OpenVR::VROverlayFlags::_set_VisibleInDashboard(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_VisibleInDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "VisibleInDashboard", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::VROverlayFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VRMessageOverlayResponse
#include "OVR/OpenVR/VRMessageOverlayResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_0
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_0"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_0
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_0(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_0", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_1
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_1"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_1
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_1(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_1", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_2
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_2"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_2
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_2(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_2", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_3
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_3"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_3
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_3(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_3", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindSystemOverlay
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindSystemOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindSystemOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindSystemOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindSystemOverlay
void OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindSystemOverlay(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindSystemOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindSystemOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindOrCreateClientOverlay
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindOrCreateClientOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindOrCreateClientOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindOrCreateClientOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindOrCreateClientOverlay
void OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindOrCreateClientOverlay(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindOrCreateClientOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindOrCreateClientOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ApplicationQuit
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ApplicationQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ApplicationQuit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ApplicationQuit
void OVR::OpenVR::VRMessageOverlayResponse::_set_ApplicationQuit(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ApplicationQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ApplicationQuit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::VRMessageOverlayResponse::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EGamepadTextInputMode
#include "OVR/OpenVR/EGamepadTextInputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeNormal
::OVR::OpenVR::EGamepadTextInputMode OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputMode>("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeNormal"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeNormal
void OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeNormal(::OVR::OpenVR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeNormal", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModePassword
::OVR::OpenVR::EGamepadTextInputMode OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModePassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModePassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputMode>("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModePassword"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModePassword
void OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModePassword(::OVR::OpenVR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModePassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModePassword", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeSubmit
::OVR::OpenVR::EGamepadTextInputMode OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeSubmit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputMode>("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeSubmit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeSubmit
void OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeSubmit(::OVR::OpenVR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeSubmit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeSubmit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EGamepadTextInputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EGamepadTextInputLineMode
#include "OVR/OpenVR/EGamepadTextInputLineMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeSingleLine
::OVR::OpenVR::EGamepadTextInputLineMode OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeSingleLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeSingleLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputLineMode>("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeSingleLine"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeSingleLine
void OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeSingleLine(::OVR::OpenVR::EGamepadTextInputLineMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeSingleLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeSingleLine", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeMultipleLines
::OVR::OpenVR::EGamepadTextInputLineMode OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeMultipleLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeMultipleLines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputLineMode>("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeMultipleLines"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeMultipleLines
void OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeMultipleLines(::OVR::OpenVR::EGamepadTextInputLineMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeMultipleLines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeMultipleLines", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EGamepadTextInputLineMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EOverlayDirection
#include "OVR/OpenVR/EOverlayDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Up
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Up
void OVR::OpenVR::EOverlayDirection::_set_Up(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Down
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Down
void OVR::OpenVR::EOverlayDirection::_set_Down(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Left
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Left
void OVR::OpenVR::EOverlayDirection::_set_Left(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Right
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Right
void OVR::OpenVR::EOverlayDirection::_set_Right(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Count
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Count"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Count
void OVR::OpenVR::EOverlayDirection::_set_Count(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EOverlayDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType
#include "OVR/OpenVR/EVROverlayIntersectionMaskPrimitiveType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Rectangle
::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Rectangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Rectangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType>("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Rectangle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Rectangle
void OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Rectangle(::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Rectangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Rectangle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Circle
::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Circle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Circle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType>("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Circle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Circle
void OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Circle(::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Circle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Circle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError None
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError None
void OVR::OpenVR::EVRRenderModelError::_set_None(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError Loading
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_Loading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_Loading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "Loading"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError Loading
void OVR::OpenVR::EVRRenderModelError::_set_Loading(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_Loading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "Loading", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NotSupported
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NotSupported"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NotSupported
void OVR::OpenVR::EVRRenderModelError::_set_NotSupported(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError InvalidArg
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_InvalidArg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_InvalidArg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "InvalidArg"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError InvalidArg
void OVR::OpenVR::EVRRenderModelError::_set_InvalidArg(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_InvalidArg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "InvalidArg", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError InvalidModel
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_InvalidModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_InvalidModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "InvalidModel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError InvalidModel
void OVR::OpenVR::EVRRenderModelError::_set_InvalidModel(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_InvalidModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "InvalidModel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NoShapes
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NoShapes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NoShapes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NoShapes"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NoShapes
void OVR::OpenVR::EVRRenderModelError::_set_NoShapes(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NoShapes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NoShapes", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError MultipleShapes
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_MultipleShapes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_MultipleShapes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "MultipleShapes"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError MultipleShapes
void OVR::OpenVR::EVRRenderModelError::_set_MultipleShapes(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_MultipleShapes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "MultipleShapes", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError TooManyVertices
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_TooManyVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_TooManyVertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "TooManyVertices"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError TooManyVertices
void OVR::OpenVR::EVRRenderModelError::_set_TooManyVertices(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_TooManyVertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "TooManyVertices", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError MultipleTextures
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_MultipleTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_MultipleTextures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "MultipleTextures"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError MultipleTextures
void OVR::OpenVR::EVRRenderModelError::_set_MultipleTextures(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_MultipleTextures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "MultipleTextures", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError BufferTooSmall
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError BufferTooSmall
void OVR::OpenVR::EVRRenderModelError::_set_BufferTooSmall(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughNormals
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NotEnoughNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NotEnoughNormals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NotEnoughNormals"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughNormals
void OVR::OpenVR::EVRRenderModelError::_set_NotEnoughNormals(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NotEnoughNormals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NotEnoughNormals", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughTexCoords
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NotEnoughTexCoords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NotEnoughTexCoords");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NotEnoughTexCoords"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughTexCoords
void OVR::OpenVR::EVRRenderModelError::_set_NotEnoughTexCoords(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NotEnoughTexCoords");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NotEnoughTexCoords", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError InvalidTexture
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_InvalidTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError InvalidTexture
void OVR::OpenVR::EVRRenderModelError::_set_InvalidTexture(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "InvalidTexture", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRRenderModelError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRComponentProperty
#include "OVR/OpenVR/EVRComponentProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsStatic
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsStatic"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsStatic
void OVR::OpenVR::EVRComponentProperty::_set_IsStatic(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsStatic", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsVisible
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsVisible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsVisible"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsVisible
void OVR::OpenVR::EVRComponentProperty::_set_IsVisible(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsVisible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsVisible", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsTouched
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsTouched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsTouched"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsTouched
void OVR::OpenVR::EVRComponentProperty::_set_IsTouched(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsTouched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsTouched", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsPressed
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsPressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsPressed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsPressed
void OVR::OpenVR::EVRComponentProperty::_set_IsPressed(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsPressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsPressed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsScrolled
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsScrolled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsScrolled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsScrolled"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsScrolled
void OVR::OpenVR::EVRComponentProperty::_set_IsScrolled(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsScrolled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsScrolled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRComponentProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRNotificationType
#include "OVR/OpenVR/EVRNotificationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationType Transient
::OVR::OpenVR::EVRNotificationType OVR::OpenVR::EVRNotificationType::_get_Transient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_get_Transient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationType>("OVR.OpenVR", "EVRNotificationType", "Transient"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationType Transient
void OVR::OpenVR::EVRNotificationType::_set_Transient(::OVR::OpenVR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_set_Transient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationType", "Transient", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationType Persistent
::OVR::OpenVR::EVRNotificationType OVR::OpenVR::EVRNotificationType::_get_Persistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_get_Persistent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationType>("OVR.OpenVR", "EVRNotificationType", "Persistent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationType Persistent
void OVR::OpenVR::EVRNotificationType::_set_Persistent(::OVR::OpenVR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_set_Persistent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationType", "Persistent", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationType Transient_SystemWithUserValue
::OVR::OpenVR::EVRNotificationType OVR::OpenVR::EVRNotificationType::_get_Transient_SystemWithUserValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_get_Transient_SystemWithUserValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationType>("OVR.OpenVR", "EVRNotificationType", "Transient_SystemWithUserValue"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationType Transient_SystemWithUserValue
void OVR::OpenVR::EVRNotificationType::_set_Transient_SystemWithUserValue(::OVR::OpenVR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_set_Transient_SystemWithUserValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationType", "Transient_SystemWithUserValue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRNotificationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRNotificationStyle
#include "OVR/OpenVR/EVRNotificationStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle None
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle None
void OVR::OpenVR::EVRNotificationStyle::_set_None(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Application
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Application() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Application");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Application"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Application
void OVR::OpenVR::EVRNotificationStyle::_set_Application(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Application");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Application", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Disabled
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Contact_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Contact_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Contact_Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Disabled
void OVR::OpenVR::EVRNotificationStyle::_set_Contact_Disabled(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Contact_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Contact_Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Enabled
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Contact_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Contact_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Contact_Enabled"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Enabled
void OVR::OpenVR::EVRNotificationStyle::_set_Contact_Enabled(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Contact_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Contact_Enabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Active
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Contact_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Contact_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Contact_Active"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Active
void OVR::OpenVR::EVRNotificationStyle::_set_Contact_Active(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Contact_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Contact_Active", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRNotificationStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError None
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError None
void OVR::OpenVR::EVRSettingsError::_set_None(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError IPCFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_IPCFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_IPCFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "IPCFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError IPCFailed
void OVR::OpenVR::EVRSettingsError::_set_IPCFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_IPCFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "IPCFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError WriteFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_WriteFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_WriteFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "WriteFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError WriteFailed
void OVR::OpenVR::EVRSettingsError::_set_WriteFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_WriteFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "WriteFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError ReadFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_ReadFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_ReadFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "ReadFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError ReadFailed
void OVR::OpenVR::EVRSettingsError::_set_ReadFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_ReadFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "ReadFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError JsonParseFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_JsonParseFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_JsonParseFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "JsonParseFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError JsonParseFailed
void OVR::OpenVR::EVRSettingsError::_set_JsonParseFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_JsonParseFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "JsonParseFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError UnsetSettingHasNoDefault
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_UnsetSettingHasNoDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_UnsetSettingHasNoDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "UnsetSettingHasNoDefault"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError UnsetSettingHasNoDefault
void OVR::OpenVR::EVRSettingsError::_set_UnsetSettingHasNoDefault(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_UnsetSettingHasNoDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "UnsetSettingHasNoDefault", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRSettingsError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRScreenshotError
#include "OVR/OpenVR/EVRScreenshotError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError None
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError None
void OVR::OpenVR::EVRScreenshotError::_set_None(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError RequestFailed
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError RequestFailed
void OVR::OpenVR::EVRScreenshotError::_set_RequestFailed(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError IncompatibleVersion
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_IncompatibleVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_IncompatibleVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "IncompatibleVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError IncompatibleVersion
void OVR::OpenVR::EVRScreenshotError::_set_IncompatibleVersion(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_IncompatibleVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "IncompatibleVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError NotFound
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_NotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_NotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "NotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError NotFound
void OVR::OpenVR::EVRScreenshotError::_set_NotFound(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_NotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "NotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError BufferTooSmall
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError BufferTooSmall
void OVR::OpenVR::EVRScreenshotError::_set_BufferTooSmall(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError ScreenshotAlreadyInProgress
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_ScreenshotAlreadyInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_ScreenshotAlreadyInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "ScreenshotAlreadyInProgress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError ScreenshotAlreadyInProgress
void OVR::OpenVR::EVRScreenshotError::_set_ScreenshotAlreadyInProgress(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_ScreenshotAlreadyInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "ScreenshotAlreadyInProgress", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRScreenshotError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSkeletalTransformSpace
#include "OVR/OpenVR/EVRSkeletalTransformSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Model
::OVR::OpenVR::EVRSkeletalTransformSpace OVR::OpenVR::EVRSkeletalTransformSpace::_get_Model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_get_Model");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalTransformSpace>("OVR.OpenVR", "EVRSkeletalTransformSpace", "Model"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Model
void OVR::OpenVR::EVRSkeletalTransformSpace::_set_Model(::OVR::OpenVR::EVRSkeletalTransformSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_set_Model");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalTransformSpace", "Model", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Parent
::OVR::OpenVR::EVRSkeletalTransformSpace OVR::OpenVR::EVRSkeletalTransformSpace::_get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_get_Parent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalTransformSpace>("OVR.OpenVR", "EVRSkeletalTransformSpace", "Parent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Parent
void OVR::OpenVR::EVRSkeletalTransformSpace::_set_Parent(::OVR::OpenVR::EVRSkeletalTransformSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_set_Parent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalTransformSpace", "Parent", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Additive
::OVR::OpenVR::EVRSkeletalTransformSpace OVR::OpenVR::EVRSkeletalTransformSpace::_get_Additive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_get_Additive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalTransformSpace>("OVR.OpenVR", "EVRSkeletalTransformSpace", "Additive"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Additive
void OVR::OpenVR::EVRSkeletalTransformSpace::_set_Additive(::OVR::OpenVR::EVRSkeletalTransformSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_set_Additive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalTransformSpace", "Additive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRSkeletalTransformSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRInputFilterCancelType
#include "OVR/OpenVR/EVRInputFilterCancelType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Timers
::OVR::OpenVR::EVRInputFilterCancelType OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Timers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Timers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputFilterCancelType>("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Timers"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Timers
void OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Timers(::OVR::OpenVR::EVRInputFilterCancelType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Timers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Timers", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Momentum
::OVR::OpenVR::EVRInputFilterCancelType OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Momentum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Momentum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputFilterCancelType>("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Momentum"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Momentum
void OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Momentum(::OVR::OpenVR::EVRInputFilterCancelType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Momentum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Momentum", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EVRInputFilterCancelType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EIOBufferError
#include "OVR/OpenVR/EIOBufferError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Success
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_Success"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Success
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_Success(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_OperationFailed
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_OperationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_OperationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_OperationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_OperationFailed
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_OperationFailed(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_OperationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_OperationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidHandle
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidHandle
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidHandle(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidArgument
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidArgument
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidArgument(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathExists
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathExists"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathExists
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathExists(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathExists", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathDoesNotExist
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathDoesNotExist
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathDoesNotExist(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Permission
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_Permission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_Permission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_Permission"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Permission
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_Permission(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_Permission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_Permission", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EIOBufferError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EIOBufferMode
#include "OVR/OpenVR/EIOBufferMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferMode Read
::OVR::OpenVR::EIOBufferMode OVR::OpenVR::EIOBufferMode::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferMode>("OVR.OpenVR", "EIOBufferMode", "Read"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferMode Read
void OVR::OpenVR::EIOBufferMode::_set_Read(::OVR::OpenVR::EIOBufferMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferMode", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferMode Write
::OVR::OpenVR::EIOBufferMode OVR::OpenVR::EIOBufferMode::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferMode>("OVR.OpenVR", "EIOBufferMode", "Write"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferMode Write
void OVR::OpenVR::EIOBufferMode::_set_Write(::OVR::OpenVR::EIOBufferMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferMode", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferMode Create
::OVR::OpenVR::EIOBufferMode OVR::OpenVR::EIOBufferMode::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferMode>("OVR.OpenVR", "EIOBufferMode", "Create"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferMode Create
void OVR::OpenVR::EIOBufferMode::_set_Create(::OVR::OpenVR::EIOBufferMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferMode", "Create", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::EIOBufferMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VREvent_Keyboard_t
#include "OVR/OpenVR/VREvent_Keyboard_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput0
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput0"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput1
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput1"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput2
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput2"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput3
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput3"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput4
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput4"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput5
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput5"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput6
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput6"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte cNewInput7
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_cNewInput7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cNewInput7"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 uUserValue
[[deprecated("Use field access instead!")]] uint64_t& OVR::OpenVR::VREvent_Keyboard_t::dyn_uUserValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::dyn_uUserValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uUserValue"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.VREvent_Keyboard_t.get_cNewInput
::StringW OVR::OpenVR::VREvent_Keyboard_t::get_cNewInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_Keyboard_t::get_cNewInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_cNewInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VREvent_t_Packed
#include "OVR/OpenVR/VREvent_t_Packed.hpp"
// Including type: OVR.OpenVR.VREvent_t
#include "OVR/OpenVR/VREvent_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 eventType
[[deprecated("Use field access instead!")]] uint& OVR::OpenVR::VREvent_t_Packed::dyn_eventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::dyn_eventType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventType"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 trackedDeviceIndex
[[deprecated("Use field access instead!")]] uint& OVR::OpenVR::VREvent_t_Packed::dyn_trackedDeviceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::dyn_trackedDeviceIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedDeviceIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single eventAgeSeconds
[[deprecated("Use field access instead!")]] float& OVR::OpenVR::VREvent_t_Packed::dyn_eventAgeSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::dyn_eventAgeSeconds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventAgeSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VREvent_Data_t data
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::VREvent_Data_t& OVR::OpenVR::VREvent_t_Packed::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::dyn_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VREvent_Data_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.VREvent_t_Packed..ctor
OVR::OpenVR::VREvent_t_Packed::VREvent_t_Packed(::OVR::OpenVR::VREvent_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: OVR.OpenVR.VREvent_t_Packed.Unpack
void OVR::OpenVR::VREvent_t_Packed::Unpack(ByRef<::OVR::OpenVR::VREvent_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VREvent_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VRControllerState_t_Packed
#include "OVR/OpenVR/VRControllerState_t_Packed.hpp"
// Including type: OVR.OpenVR.VRControllerState_t
#include "OVR/OpenVR/VRControllerState_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unPacketNum
[[deprecated("Use field access instead!")]] uint& OVR::OpenVR::VRControllerState_t_Packed::dyn_unPacketNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_unPacketNum");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unPacketNum"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 ulButtonPressed
[[deprecated("Use field access instead!")]] uint64_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_ulButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_ulButtonPressed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ulButtonPressed"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 ulButtonTouched
[[deprecated("Use field access instead!")]] uint64_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_ulButtonTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_ulButtonTouched");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ulButtonTouched"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis0
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis0"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis1
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis1"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis2
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis2"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis3
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis3"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OpenVR.VRControllerAxis_t rAxis4
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::VRControllerAxis_t& OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::dyn_rAxis4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis4"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.VRControllerState_t_Packed..ctor
OVR::OpenVR::VRControllerState_t_Packed::VRControllerState_t_Packed(::OVR::OpenVR::VRControllerState_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: OVR.OpenVR.VRControllerState_t_Packed.Unpack
void OVR::OpenVR::VRControllerState_t_Packed::Unpack(ByRef<::OVR::OpenVR::VRControllerState_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRControllerState_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.RenderModel_TextureMap_t_Packed
#include "OVR/OpenVR/RenderModel_TextureMap_t_Packed.hpp"
// Including type: OVR.OpenVR.RenderModel_TextureMap_t
#include "OVR/OpenVR/RenderModel_TextureMap_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt16 unWidth
[[deprecated("Use field access instead!")]] uint16_t& OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_unWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_unWidth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unWidth"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 unHeight
[[deprecated("Use field access instead!")]] uint16_t& OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_unHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_unHeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unHeight"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rubTextureMapData
[[deprecated("Use field access instead!")]] ::System::IntPtr& OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_rubTextureMapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::dyn_rubTextureMapData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rubTextureMapData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.RenderModel_TextureMap_t_Packed..ctor
OVR::OpenVR::RenderModel_TextureMap_t_Packed::RenderModel_TextureMap_t_Packed(::OVR::OpenVR::RenderModel_TextureMap_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: OVR.OpenVR.RenderModel_TextureMap_t_Packed.Unpack
void OVR::OpenVR::RenderModel_TextureMap_t_Packed::Unpack(ByRef<::OVR::OpenVR::RenderModel_TextureMap_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_TextureMap_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.RenderModel_t_Packed
#include "OVR/OpenVR/RenderModel_t_Packed.hpp"
// Including type: OVR.OpenVR.RenderModel_t
#include "OVR/OpenVR/RenderModel_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rVertexData
[[deprecated("Use field access instead!")]] ::System::IntPtr& OVR::OpenVR::RenderModel_t_Packed::dyn_rVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_rVertexData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rVertexData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unVertexCount
[[deprecated("Use field access instead!")]] uint& OVR::OpenVR::RenderModel_t_Packed::dyn_unVertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_unVertexCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unVertexCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rIndexData
[[deprecated("Use field access instead!")]] ::System::IntPtr& OVR::OpenVR::RenderModel_t_Packed::dyn_rIndexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_rIndexData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rIndexData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unTriangleCount
[[deprecated("Use field access instead!")]] uint& OVR::OpenVR::RenderModel_t_Packed::dyn_unTriangleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_unTriangleCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unTriangleCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 diffuseTextureId
[[deprecated("Use field access instead!")]] int& OVR::OpenVR::RenderModel_t_Packed::dyn_diffuseTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::dyn_diffuseTextureId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "diffuseTextureId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.RenderModel_t_Packed..ctor
OVR::OpenVR::RenderModel_t_Packed::RenderModel_t_Packed(::OVR::OpenVR::RenderModel_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: OVR.OpenVR.RenderModel_t_Packed.Unpack
void OVR::OpenVR::RenderModel_t_Packed::Unpack(ByRef<::OVR::OpenVR::RenderModel_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::RenderModel_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.InputOriginInfo_t
#include "OVR/OpenVR/InputOriginInfo_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 devicePath
[[deprecated("Use field access instead!")]] uint64_t& OVR::OpenVR::InputOriginInfo_t::dyn_devicePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_devicePath");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "devicePath"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 trackedDeviceIndex
[[deprecated("Use field access instead!")]] uint& OVR::OpenVR::InputOriginInfo_t::dyn_trackedDeviceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_trackedDeviceIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedDeviceIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName0
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName0"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName1
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName1"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName2
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName2"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName3
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName3"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName4
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName4"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName5
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName5"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName6
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName6"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName7
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName7"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName8
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName8");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName8"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName9
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName9");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName9"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName10
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName10"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName11
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName11"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName12
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName12"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName13
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName13"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName14
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName14");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName14"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName15
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName15");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName15"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName16
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName16");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName16"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName17
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName17");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName17"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName18
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName18");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName18"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName19
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName19() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName19");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName19"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName20
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName20");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName20"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName21
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName21");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName21"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName22
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName22");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName22"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName23
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName23");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName23"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName24
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName24");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName24"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName25
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName25() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName25");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName25"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName26
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName26() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName26");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName26"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName27
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName27() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName27");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName27"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName28
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName28() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName28");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName28"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName29
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName29() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName29");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName29"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName30
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName30");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName30"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName31
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName31() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName31");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName31"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName32
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName32");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName32"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName33
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName33() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName33");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName33"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName34
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName34() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName34");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName34"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName35
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName35() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName35");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName35"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName36
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName36() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName36");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName36"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName37
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName37() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName37");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName37"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName38
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName38() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName38");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName38"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName39
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName39() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName39");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName39"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName40
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName40() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName40");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName40"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName41
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName41() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName41");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName41"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName42
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName42() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName42");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName42"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName43
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName43() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName43");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName43"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName44
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName44() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName44");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName44"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName45
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName45() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName45");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName45"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName46
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName46() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName46");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName46"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName47
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName47() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName47");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName47"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName48
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName48() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName48");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName48"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName49
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName49() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName49");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName49"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName50
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName50() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName50");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName50"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName51
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName51() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName51");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName51"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName52
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName52() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName52");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName52"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName53
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName53() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName53");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName53"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName54
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName54() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName54");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName54"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName55
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName55() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName55");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName55"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName56
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName56() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName56");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName56"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName57
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName57() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName57");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName57"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName58
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName58() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName58");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName58"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName59
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName59() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName59");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName59"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName60
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName60() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName60");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName60"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName61
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName61() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName61");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName61"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName62
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName62() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName62");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName62"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName63
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName63() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName63");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName63"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName64
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName64");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName64"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName65
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName65() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName65");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName65"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName66
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName66() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName66");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName66"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName67
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName67() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName67");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName67"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName68
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName68() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName68");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName68"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName69
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName69() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName69");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName69"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName70
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName70() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName70");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName70"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName71
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName71() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName71");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName71"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName72
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName72() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName72");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName72"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName73
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName73() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName73");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName73"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName74
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName74() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName74");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName74"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName75
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName75() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName75");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName75"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName76
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName76() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName76");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName76"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName77
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName77() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName77");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName77"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName78
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName78() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName78");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName78"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName79
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName79() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName79");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName79"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName80
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName80() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName80");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName80"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName81
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName81() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName81");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName81"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName82
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName82() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName82");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName82"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName83
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName83() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName83");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName83"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName84
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName84() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName84");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName84"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName85
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName85() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName85");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName85"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName86
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName86() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName86");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName86"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName87
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName87() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName87");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName87"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName88
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName88() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName88");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName88"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName89
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName89() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName89");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName89"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName90
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName90() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName90");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName90"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName91
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName91() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName91");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName91"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName92
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName92() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName92");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName92"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName93
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName93() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName93");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName93"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName94
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName94() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName94");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName94"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName95
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName95() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName95");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName95"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName96
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName96() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName96");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName96"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName97
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName97() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName97");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName97"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName98
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName98() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName98");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName98"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName99
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName99() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName99");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName99"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName100
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName100() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName100");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName100"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName101
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName101() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName101");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName101"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName102
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName102() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName102");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName102"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName103
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName103() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName103");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName103"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName104
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName104() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName104");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName104"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName105
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName105() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName105");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName105"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName106
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName106() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName106");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName106"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName107
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName107() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName107");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName107"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName108
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName108() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName108");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName108"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName109
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName109() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName109");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName109"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName110
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName110() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName110");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName110"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName111
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName111() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName111");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName111"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName112
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName112() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName112");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName112"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName113
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName113() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName113");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName113"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName114
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName114() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName114");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName114"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName115
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName115() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName115");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName115"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName116
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName116() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName116");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName116"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName117
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName117() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName117");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName117"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName118
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName118() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName118");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName118"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName119
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName119() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName119");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName119"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName120
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName120() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName120");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName120"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName121
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName121() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName121");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName121"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName122
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName122() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName122");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName122"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName123
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName123() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName123");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName123"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName124
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName124() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName124");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName124"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName125
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName125() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName125");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName125"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName126
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName126() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName126");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName126"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte rchRenderModelComponentName127
[[deprecated("Use field access instead!")]] uint8_t& OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName127() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::dyn_rchRenderModelComponentName127");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rchRenderModelComponentName127"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.InputOriginInfo_t.get_rchRenderModelComponentName
::StringW OVR::OpenVR::InputOriginInfo_t::get_rchRenderModelComponentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::InputOriginInfo_t::get_rchRenderModelComponentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rchRenderModelComponentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.OpenVR
#include "OVR/OpenVR/OpenVR.hpp"
// Including type: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext
#include "OVR/OpenVR/OpenVR_COpenVRContext.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OVR.OpenVR.CVRSystem
#include "OVR/OpenVR/CVRSystem.hpp"
// Including type: OVR.OpenVR.CVRChaperone
#include "OVR/OpenVR/CVRChaperone.hpp"
// Including type: OVR.OpenVR.CVRChaperoneSetup
#include "OVR/OpenVR/CVRChaperoneSetup.hpp"
// Including type: OVR.OpenVR.CVRCompositor
#include "OVR/OpenVR/CVRCompositor.hpp"
// Including type: OVR.OpenVR.CVROverlay
#include "OVR/OpenVR/CVROverlay.hpp"
// Including type: OVR.OpenVR.CVRRenderModels
#include "OVR/OpenVR/CVRRenderModels.hpp"
// Including type: OVR.OpenVR.CVRExtendedDisplay
#include "OVR/OpenVR/CVRExtendedDisplay.hpp"
// Including type: OVR.OpenVR.CVRSettings
#include "OVR/OpenVR/CVRSettings.hpp"
// Including type: OVR.OpenVR.CVRApplications
#include "OVR/OpenVR/CVRApplications.hpp"
// Including type: OVR.OpenVR.CVRScreenshots
#include "OVR/OpenVR/CVRScreenshots.hpp"
// Including type: OVR.OpenVR.CVRTrackedCamera
#include "OVR/OpenVR/CVRTrackedCamera.hpp"
// Including type: OVR.OpenVR.CVRInput
#include "OVR/OpenVR/CVRInput.hpp"
// Including type: OVR.OpenVR.CVRSpatialAnchors
#include "OVR/OpenVR/CVRSpatialAnchors.hpp"
// Including type: OVR.OpenVR.EVRInitError
#include "OVR/OpenVR/EVRInitError.hpp"
// Including type: OVR.OpenVR.EVRApplicationType
#include "OVR/OpenVR/EVRApplicationType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_nDriverNone
uint OVR::OpenVR::OpenVR::_get_k_nDriverNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_nDriverNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_nDriverNone"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_nDriverNone
void OVR::OpenVR::OpenVR::_set_k_nDriverNone(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_nDriverNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_nDriverNone", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxDriverDebugResponseSize
uint OVR::OpenVR::OpenVR::_get_k_unMaxDriverDebugResponseSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxDriverDebugResponseSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxDriverDebugResponseSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxDriverDebugResponseSize
void OVR::OpenVR::OpenVR::_set_k_unMaxDriverDebugResponseSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxDriverDebugResponseSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxDriverDebugResponseSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndex_Hmd
uint OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndex_Hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndex_Hmd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndex_Hmd"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndex_Hmd
void OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndex_Hmd(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndex_Hmd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndex_Hmd", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxTrackedDeviceCount
uint OVR::OpenVR::OpenVR::_get_k_unMaxTrackedDeviceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxTrackedDeviceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxTrackedDeviceCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxTrackedDeviceCount
void OVR::OpenVR::OpenVR::_set_k_unMaxTrackedDeviceCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxTrackedDeviceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxTrackedDeviceCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndexOther
uint OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndexOther() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndexOther");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndexOther"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndexOther
void OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndexOther(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndexOther");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndexOther", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndexInvalid
uint OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndexInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unTrackedDeviceIndexInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndexInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndexInvalid
void OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndexInvalid(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unTrackedDeviceIndexInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unTrackedDeviceIndexInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidPropertyContainer
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidPropertyContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidPropertyContainer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidPropertyContainer"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidPropertyContainer
void OVR::OpenVR::OpenVR::_set_k_ulInvalidPropertyContainer(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidPropertyContainer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidPropertyContainer", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInvalidPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unInvalidPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unInvalidPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unInvalidPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInvalidPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unInvalidPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unInvalidPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unInvalidPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidDriverHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidDriverHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidDriverHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidDriverHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidDriverHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidDriverHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidDriverHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidDriverHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unFloatPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unFloatPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unFloatPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unFloatPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unFloatPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unFloatPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unFloatPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unFloatPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInt32PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unInt32PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unInt32PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unInt32PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInt32PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unInt32PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unInt32PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unInt32PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unUint64PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unUint64PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unUint64PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unUint64PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unUint64PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unUint64PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unUint64PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unUint64PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unBoolPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unBoolPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unBoolPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unBoolPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unBoolPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unBoolPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unBoolPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unBoolPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unStringPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unStringPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unStringPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unStringPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unStringPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unStringPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unStringPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unStringPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdMatrix34PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHmdMatrix34PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHmdMatrix34PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHmdMatrix34PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdMatrix34PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHmdMatrix34PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHmdMatrix34PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHmdMatrix34PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdMatrix44PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHmdMatrix44PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHmdMatrix44PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHmdMatrix44PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdMatrix44PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHmdMatrix44PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHmdMatrix44PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHmdMatrix44PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdVector3PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHmdVector3PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHmdVector3PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHmdVector3PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdVector3PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHmdVector3PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHmdVector3PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHmdVector3PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdVector4PropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHmdVector4PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHmdVector4PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHmdVector4PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdVector4PropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHmdVector4PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHmdVector4PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHmdVector4PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHiddenAreaPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHiddenAreaPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHiddenAreaPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHiddenAreaPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHiddenAreaPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHiddenAreaPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHiddenAreaPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHiddenAreaPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unPathHandleInfoTag
uint OVR::OpenVR::OpenVR::_get_k_unPathHandleInfoTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unPathHandleInfoTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unPathHandleInfoTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unPathHandleInfoTag
void OVR::OpenVR::OpenVR::_set_k_unPathHandleInfoTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unPathHandleInfoTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unPathHandleInfoTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unActionPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unActionPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unActionPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unActionPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unActionPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unActionPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unActionPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unActionPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInputValuePropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unInputValuePropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unInputValuePropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unInputValuePropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInputValuePropertyTag
void OVR::OpenVR::OpenVR::_set_k_unInputValuePropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unInputValuePropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unInputValuePropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unWildcardPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unWildcardPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unWildcardPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unWildcardPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unWildcardPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unWildcardPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unWildcardPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unWildcardPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHapticVibrationPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unHapticVibrationPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unHapticVibrationPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unHapticVibrationPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHapticVibrationPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unHapticVibrationPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unHapticVibrationPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unHapticVibrationPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unSkeletonPropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unSkeletonPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unSkeletonPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unSkeletonPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unSkeletonPropertyTag
void OVR::OpenVR::OpenVR::_set_k_unSkeletonPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unSkeletonPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unSkeletonPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unSpatialAnchorPosePropertyTag
uint OVR::OpenVR::OpenVR::_get_k_unSpatialAnchorPosePropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unSpatialAnchorPosePropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unSpatialAnchorPosePropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unSpatialAnchorPosePropertyTag
void OVR::OpenVR::OpenVR::_set_k_unSpatialAnchorPosePropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unSpatialAnchorPosePropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unSpatialAnchorPosePropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unOpenVRInternalReserved_Start
uint OVR::OpenVR::OpenVR::_get_k_unOpenVRInternalReserved_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unOpenVRInternalReserved_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unOpenVRInternalReserved_Start"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unOpenVRInternalReserved_Start
void OVR::OpenVR::OpenVR::_set_k_unOpenVRInternalReserved_Start(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unOpenVRInternalReserved_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unOpenVRInternalReserved_Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unOpenVRInternalReserved_End
uint OVR::OpenVR::OpenVR::_get_k_unOpenVRInternalReserved_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unOpenVRInternalReserved_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unOpenVRInternalReserved_End"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unOpenVRInternalReserved_End
void OVR::OpenVR::OpenVR::_set_k_unOpenVRInternalReserved_End(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unOpenVRInternalReserved_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unOpenVRInternalReserved_End", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxPropertyStringSize
uint OVR::OpenVR::OpenVR::_get_k_unMaxPropertyStringSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxPropertyStringSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxPropertyStringSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxPropertyStringSize
void OVR::OpenVR::OpenVR::_set_k_unMaxPropertyStringSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxPropertyStringSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxPropertyStringSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidActionHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidActionHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidActionHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidActionHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidActionHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidActionHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidActionHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidActionHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidActionSetHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidActionSetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidActionSetHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidActionSetHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidActionSetHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidActionSetHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidActionSetHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidActionSetHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidInputValueHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidInputValueHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidInputValueHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidInputValueHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidInputValueHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidInputValueHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidInputValueHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidInputValueHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unControllerStateAxisCount
uint OVR::OpenVR::OpenVR::_get_k_unControllerStateAxisCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unControllerStateAxisCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unControllerStateAxisCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unControllerStateAxisCount
void OVR::OpenVR::OpenVR::_set_k_unControllerStateAxisCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unControllerStateAxisCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unControllerStateAxisCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulOverlayHandleInvalid
uint64_t OVR::OpenVR::OpenVR::_get_k_ulOverlayHandleInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulOverlayHandleInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulOverlayHandleInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulOverlayHandleInvalid
void OVR::OpenVR::OpenVR::_set_k_ulOverlayHandleInvalid(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulOverlayHandleInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulOverlayHandleInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unScreenshotHandleInvalid
uint OVR::OpenVR::OpenVR::_get_k_unScreenshotHandleInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unScreenshotHandleInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unScreenshotHandleInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unScreenshotHandleInvalid
void OVR::OpenVR::OpenVR::_set_k_unScreenshotHandleInvalid(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unScreenshotHandleInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unScreenshotHandleInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRSystem_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRSystem_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRSystem_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRSystem_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRSystem_Version
void OVR::OpenVR::OpenVR::_set_IVRSystem_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRSystem_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRSystem_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRExtendedDisplay_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRExtendedDisplay_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRExtendedDisplay_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRExtendedDisplay_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRExtendedDisplay_Version
void OVR::OpenVR::OpenVR::_set_IVRExtendedDisplay_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRExtendedDisplay_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRExtendedDisplay_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRTrackedCamera_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRTrackedCamera_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRTrackedCamera_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRTrackedCamera_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRTrackedCamera_Version
void OVR::OpenVR::OpenVR::_set_IVRTrackedCamera_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRTrackedCamera_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRTrackedCamera_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxApplicationKeyLength
uint OVR::OpenVR::OpenVR::_get_k_unMaxApplicationKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxApplicationKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxApplicationKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxApplicationKeyLength
void OVR::OpenVR::OpenVR::_set_k_unMaxApplicationKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxApplicationKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxApplicationKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_MimeType_HomeApp
::StringW OVR::OpenVR::OpenVR::_get_k_pch_MimeType_HomeApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_MimeType_HomeApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_MimeType_HomeApp"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_MimeType_HomeApp
void OVR::OpenVR::OpenVR::_set_k_pch_MimeType_HomeApp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_MimeType_HomeApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_MimeType_HomeApp", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_MimeType_GameTheater
::StringW OVR::OpenVR::OpenVR::_get_k_pch_MimeType_GameTheater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_MimeType_GameTheater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_MimeType_GameTheater"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_MimeType_GameTheater
void OVR::OpenVR::OpenVR::_set_k_pch_MimeType_GameTheater(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_MimeType_GameTheater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_MimeType_GameTheater", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRApplications_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRApplications_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRApplications_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRApplications_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRApplications_Version
void OVR::OpenVR::OpenVR::_set_IVRApplications_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRApplications_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRApplications_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRChaperone_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRChaperone_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRChaperone_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRChaperone_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRChaperone_Version
void OVR::OpenVR::OpenVR::_set_IVRChaperone_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRChaperone_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRChaperone_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRChaperoneSetup_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRChaperoneSetup_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRChaperoneSetup_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRChaperoneSetup_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRChaperoneSetup_Version
void OVR::OpenVR::OpenVR::_set_IVRChaperoneSetup_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRChaperoneSetup_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRChaperoneSetup_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRCompositor_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRCompositor_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRCompositor_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRCompositor_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRCompositor_Version
void OVR::OpenVR::OpenVR::_set_IVRCompositor_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRCompositor_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRCompositor_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unVROverlayMaxKeyLength
uint OVR::OpenVR::OpenVR::_get_k_unVROverlayMaxKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unVROverlayMaxKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unVROverlayMaxKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unVROverlayMaxKeyLength
void OVR::OpenVR::OpenVR::_set_k_unVROverlayMaxKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unVROverlayMaxKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unVROverlayMaxKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unVROverlayMaxNameLength
uint OVR::OpenVR::OpenVR::_get_k_unVROverlayMaxNameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unVROverlayMaxNameLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unVROverlayMaxNameLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unVROverlayMaxNameLength
void OVR::OpenVR::OpenVR::_set_k_unVROverlayMaxNameLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unVROverlayMaxNameLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unVROverlayMaxNameLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxOverlayCount
uint OVR::OpenVR::OpenVR::_get_k_unMaxOverlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxOverlayCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxOverlayCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxOverlayCount
void OVR::OpenVR::OpenVR::_set_k_unMaxOverlayCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxOverlayCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxOverlayCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxOverlayIntersectionMaskPrimitivesCount
uint OVR::OpenVR::OpenVR::_get_k_unMaxOverlayIntersectionMaskPrimitivesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxOverlayIntersectionMaskPrimitivesCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxOverlayIntersectionMaskPrimitivesCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxOverlayIntersectionMaskPrimitivesCount
void OVR::OpenVR::OpenVR::_set_k_unMaxOverlayIntersectionMaskPrimitivesCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxOverlayIntersectionMaskPrimitivesCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxOverlayIntersectionMaskPrimitivesCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVROverlay_Version
::StringW OVR::OpenVR::OpenVR::_get_IVROverlay_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVROverlay_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVROverlay_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVROverlay_Version
void OVR::OpenVR::OpenVR::_set_IVROverlay_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVROverlay_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVROverlay_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_GDC2015
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_GDC2015() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_GDC2015");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_GDC2015"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_GDC2015
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_GDC2015(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_GDC2015");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_GDC2015", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Base
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Base");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Base"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Base
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Base(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Base");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Base", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Tip
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Tip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Tip"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Tip
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Tip(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Tip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Tip", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_HandGrip
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_HandGrip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_HandGrip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_HandGrip"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_HandGrip
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_HandGrip(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_HandGrip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_HandGrip", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Status
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Controller_Component_Status");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Status"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Status
void OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Status(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Controller_Component_Status");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Controller_Component_Status", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRRenderModels_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRRenderModels_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRRenderModels_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRRenderModels_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRRenderModels_Version
void OVR::OpenVR::OpenVR::_set_IVRRenderModels_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRRenderModels_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRRenderModels_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unNotificationTextMaxSize
uint OVR::OpenVR::OpenVR::_get_k_unNotificationTextMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unNotificationTextMaxSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unNotificationTextMaxSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unNotificationTextMaxSize
void OVR::OpenVR::OpenVR::_set_k_unNotificationTextMaxSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unNotificationTextMaxSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unNotificationTextMaxSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRNotifications_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRNotifications_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRNotifications_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRNotifications_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRNotifications_Version
void OVR::OpenVR::OpenVR::_set_IVRNotifications_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRNotifications_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRNotifications_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxSettingsKeyLength
uint OVR::OpenVR::OpenVR::_get_k_unMaxSettingsKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxSettingsKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxSettingsKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxSettingsKeyLength
void OVR::OpenVR::OpenVR::_set_k_unMaxSettingsKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxSettingsKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxSettingsKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRSettings_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRSettings_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRSettings_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRSettings_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRSettings_Version
void OVR::OpenVR::OpenVR::_set_IVRSettings_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRSettings_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRSettings_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_Section
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_RequireHmd_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RequireHmd_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RequireHmd_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RequireHmd_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_RequireHmd_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RequireHmd_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RequireHmd_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RequireHmd_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForcedDriverKey_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForcedDriverKey_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForcedDriverKey_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForcedDriverKey_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForcedDriverKey_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForcedDriverKey_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForcedDriverKey_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForcedDriverKey_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForcedHmdKey_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForcedHmdKey_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForcedHmdKey_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForcedHmdKey_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForcedHmdKey_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForcedHmdKey_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForcedHmdKey_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForcedHmdKey_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebug_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebug_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebug_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebug_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebug_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebug_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebug_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebug_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DebugProcessPipe_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugProcessPipe_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugProcessPipe_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugProcessPipe_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DebugProcessPipe_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugProcessPipe_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugProcessPipe_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugProcessPipe_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebugX_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebugX_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebugX_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebugX_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebugX_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebugX_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebugX_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebugX_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebugY_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebugY_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DisplayDebugY_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebugY_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebugY_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebugY_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DisplayDebugY_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DisplayDebugY_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SendSystemButtonToAllApps_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SendSystemButtonToAllApps_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SendSystemButtonToAllApps_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SendSystemButtonToAllApps_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SendSystemButtonToAllApps_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SendSystemButtonToAllApps_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SendSystemButtonToAllApps_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SendSystemButtonToAllApps_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_LogLevel_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_LogLevel_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_LogLevel_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_LogLevel_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_LogLevel_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_LogLevel_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_LogLevel_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_LogLevel_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_IPD_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_IPD_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_IPD_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_IPD_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_IPD_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_IPD_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_IPD_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_IPD_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_Background_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_Background_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_Background_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_Background_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_Background_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_Background_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_Background_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_Background_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundUseDomeProjection_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundUseDomeProjection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundUseDomeProjection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundUseDomeProjection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundUseDomeProjection_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundUseDomeProjection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundUseDomeProjection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundUseDomeProjection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundCameraHeight_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundCameraHeight_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundCameraHeight_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundCameraHeight_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundCameraHeight_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundCameraHeight_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundCameraHeight_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundCameraHeight_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundDomeRadius_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundDomeRadius_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BackgroundDomeRadius_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundDomeRadius_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundDomeRadius_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundDomeRadius_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BackgroundDomeRadius_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BackgroundDomeRadius_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_GridColor_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_GridColor_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_GridColor_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_GridColor_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_GridColor_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_GridColor_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_GridColor_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_GridColor_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_PlayAreaColor_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_PlayAreaColor_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_PlayAreaColor_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_PlayAreaColor_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_PlayAreaColor_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_PlayAreaColor_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_PlayAreaColor_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_PlayAreaColor_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ShowStage_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ShowStage_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ShowStage_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ShowStage_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ShowStage_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ShowStage_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ShowStage_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ShowStage_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ActivateMultipleDrivers_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ActivateMultipleDrivers_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ActivateMultipleDrivers_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ActivateMultipleDrivers_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ActivateMultipleDrivers_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ActivateMultipleDrivers_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ActivateMultipleDrivers_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ActivateMultipleDrivers_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectMode_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectMode_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectModeEdidVid_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidVid_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidVid_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectModeEdidVid_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectModeEdidVid_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidVid_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidVid_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectModeEdidVid_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectModeEdidPid_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidPid_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidPid_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectModeEdidPid_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectModeEdidPid_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidPid_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidPid_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DirectModeEdidPid_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_UsingSpeakers_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_UsingSpeakers_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_UsingSpeakers_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_UsingSpeakers_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_UsingSpeakers_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_UsingSpeakers_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_UsingSpeakers_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_UsingSpeakers_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BaseStationPowerManagement_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BaseStationPowerManagement_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_BaseStationPowerManagement_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BaseStationPowerManagement_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BaseStationPowerManagement_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BaseStationPowerManagement_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_BaseStationPowerManagement_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_BaseStationPowerManagement_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_NeverKillProcesses_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_NeverKillProcesses_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_NeverKillProcesses_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_NeverKillProcesses_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_NeverKillProcesses_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_NeverKillProcesses_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_NeverKillProcesses_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_NeverKillProcesses_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SupersampleScale_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SupersampleScale_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SupersampleScale_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SupersampleScale_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SupersampleScale_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SupersampleScale_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SupersampleScale_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SupersampleScale_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowAsyncReprojection_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowAsyncReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowAsyncReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowAsyncReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowAsyncReprojection_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowAsyncReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowAsyncReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowAsyncReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowReprojection_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowReprojection_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceReprojection_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceReprojection_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceFadeOnBadTracking_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceFadeOnBadTracking_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceFadeOnBadTracking_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceFadeOnBadTracking_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceFadeOnBadTracking_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceFadeOnBadTracking_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceFadeOnBadTracking_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceFadeOnBadTracking_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DefaultMirrorView_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DefaultMirrorView_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DefaultMirrorView_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DefaultMirrorView_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DefaultMirrorView_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DefaultMirrorView_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DefaultMirrorView_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DefaultMirrorView_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ShowMirrorView_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ShowMirrorView_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ShowMirrorView_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ShowMirrorView_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ShowMirrorView_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ShowMirrorView_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ShowMirrorView_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ShowMirrorView_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_MirrorViewGeometry_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_MirrorViewGeometry_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_MirrorViewGeometry_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_MirrorViewGeometry_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_MirrorViewGeometry_String
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_MirrorViewGeometry_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_MirrorViewGeometry_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_MirrorViewGeometry_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartMonitorFromAppLaunch
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartMonitorFromAppLaunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartMonitorFromAppLaunch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartMonitorFromAppLaunch"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartMonitorFromAppLaunch
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartMonitorFromAppLaunch(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartMonitorFromAppLaunch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartMonitorFromAppLaunch", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartCompositorFromAppLaunch_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartCompositorFromAppLaunch_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartCompositorFromAppLaunch_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartCompositorFromAppLaunch_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartDashboardFromAppLaunch_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartDashboardFromAppLaunch_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartDashboardFromAppLaunch_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartDashboardFromAppLaunch_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_EnableHomeApp
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_EnableHomeApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_EnableHomeApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_EnableHomeApp"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_EnableHomeApp
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_EnableHomeApp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_EnableHomeApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_EnableHomeApp", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_RetailDemo_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RetailDemo_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RetailDemo_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RetailDemo_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_RetailDemo_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RetailDemo_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RetailDemo_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RetailDemo_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_IpdOffset_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_IpdOffset_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_IpdOffset_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_IpdOffset_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_IpdOffset_Float
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_IpdOffset_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_IpdOffset_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_IpdOffset_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowSupersampleFiltering_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowSupersampleFiltering_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowSupersampleFiltering_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowSupersampleFiltering_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowSupersampleFiltering_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowSupersampleFiltering_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowSupersampleFiltering_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowSupersampleFiltering_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SupersampleManualOverride_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SupersampleManualOverride_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_SupersampleManualOverride_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SupersampleManualOverride_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SupersampleManualOverride_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SupersampleManualOverride_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_SupersampleManualOverride_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_SupersampleManualOverride_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_EnableLinuxVulkanAsync_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_EnableLinuxVulkanAsync_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_EnableLinuxVulkanAsync_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_EnableLinuxVulkanAsync_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowDisplayLockedMode_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowDisplayLockedMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_AllowDisplayLockedMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowDisplayLockedMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowDisplayLockedMode_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowDisplayLockedMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_AllowDisplayLockedMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_AllowDisplayLockedMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceWindows32bitVRMonitor
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceWindows32bitVRMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_ForceWindows32bitVRMonitor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceWindows32bitVRMonitor"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceWindows32bitVRMonitor
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceWindows32bitVRMonitor(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_ForceWindows32bitVRMonitor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_ForceWindows32bitVRMonitor", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DebugInput
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugInput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugInput"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DebugInput
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugInput(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugInput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugInput", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_LegacyInputRebinding
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_LegacyInputRebinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_LegacyInputRebinding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_LegacyInputRebinding"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_LegacyInputRebinding
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_LegacyInputRebinding(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_LegacyInputRebinding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_LegacyInputRebinding", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DebugInputBinding
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugInputBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_DebugInputBinding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugInputBinding"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DebugInputBinding
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugInputBinding(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_DebugInputBinding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_DebugInputBinding", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_InputBindingUIBlock
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_InputBindingUIBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_InputBindingUIBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_InputBindingUIBlock"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_InputBindingUIBlock
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_InputBindingUIBlock(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_InputBindingUIBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_InputBindingUIBlock", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_RenderCameraMode
::StringW OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RenderCameraMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_SteamVR_RenderCameraMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RenderCameraMode"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_RenderCameraMode
void OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RenderCameraMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_SteamVR_RenderCameraMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_SteamVR_RenderCameraMode", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisableIMU_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisableIMU_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisableIMU_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisableIMU_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisableIMU_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisableIMU_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisableIMU_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisableIMU_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisableIMUExceptHMD_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisableIMUExceptHMD_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisableIMUExceptHMD_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisableIMUExceptHMD_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisableIMUExceptHMD_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisableIMUExceptHMD_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisableIMUExceptHMD_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisableIMUExceptHMD_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_UseDisambiguation_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_UseDisambiguation_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_UseDisambiguation_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_UseDisambiguation_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_UseDisambiguation_String
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_UseDisambiguation_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_UseDisambiguation_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_UseDisambiguation_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisambiguationDebug_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisambiguationDebug_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DisambiguationDebug_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisambiguationDebug_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisambiguationDebug_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisambiguationDebug_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DisambiguationDebug_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DisambiguationDebug_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_PrimaryBasestation_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_PrimaryBasestation_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_PrimaryBasestation_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_PrimaryBasestation_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_PrimaryBasestation_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_PrimaryBasestation_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_PrimaryBasestation_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_PrimaryBasestation_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DBHistory_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DBHistory_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_DBHistory_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DBHistory_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DBHistory_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DBHistory_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_DBHistory_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_DBHistory_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_EnableBluetooth_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_EnableBluetooth_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_EnableBluetooth_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_EnableBluetooth_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_EnableBluetooth_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_EnableBluetooth_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_EnableBluetooth_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_EnableBluetooth_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_PowerManagedBaseStations_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_PowerManagedBaseStations_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Lighthouse_PowerManagedBaseStations_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_PowerManagedBaseStations_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_PowerManagedBaseStations_String
void OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_PowerManagedBaseStations_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Lighthouse_PowerManagedBaseStations_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Lighthouse_PowerManagedBaseStations_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Null_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_SerialNumber_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_SerialNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_SerialNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_SerialNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_SerialNumber_String
void OVR::OpenVR::OpenVR::_set_k_pch_Null_SerialNumber_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_SerialNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_SerialNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_ModelNumber_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_ModelNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_ModelNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_ModelNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_ModelNumber_String
void OVR::OpenVR::OpenVR::_set_k_pch_Null_ModelNumber_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_ModelNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_ModelNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowX_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowX_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowX_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowX_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowX_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowX_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowX_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowX_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowY_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowY_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowY_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowY_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowY_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowY_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowY_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowY_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowWidth_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowWidth_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowWidth_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowWidth_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowWidth_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowWidth_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowWidth_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowWidth_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowHeight_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowHeight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_WindowHeight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowHeight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowHeight_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowHeight_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_WindowHeight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_WindowHeight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_RenderWidth_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_RenderWidth_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_RenderWidth_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_RenderWidth_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_RenderWidth_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_RenderWidth_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_RenderWidth_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_RenderWidth_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_RenderHeight_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_RenderHeight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_RenderHeight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_RenderHeight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_RenderHeight_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Null_RenderHeight_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_RenderHeight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_RenderHeight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_SecondsFromVsyncToPhotons_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_SecondsFromVsyncToPhotons_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_SecondsFromVsyncToPhotons_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_SecondsFromVsyncToPhotons_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_SecondsFromVsyncToPhotons_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Null_SecondsFromVsyncToPhotons_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_SecondsFromVsyncToPhotons_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_SecondsFromVsyncToPhotons_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_DisplayFrequency_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Null_DisplayFrequency_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Null_DisplayFrequency_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Null_DisplayFrequency_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_DisplayFrequency_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Null_DisplayFrequency_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Null_DisplayFrequency_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Null_DisplayFrequency_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_Section
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_StatusAlwaysOnTop_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_StatusAlwaysOnTop_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_StatusAlwaysOnTop_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_StatusAlwaysOnTop_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_StatusAlwaysOnTop_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_StatusAlwaysOnTop_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_StatusAlwaysOnTop_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_StatusAlwaysOnTop_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_MinimizeToTray_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_MinimizeToTray_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_MinimizeToTray_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_MinimizeToTray_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_MinimizeToTray_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_MinimizeToTray_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_MinimizeToTray_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_MinimizeToTray_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_Screenshots_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_Screenshots_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_Screenshots_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_Screenshots_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_Screenshots_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_Screenshots_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_Screenshots_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_Screenshots_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_ScreenshotType_Int
::StringW OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_ScreenshotType_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_UserInterface_ScreenshotType_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_ScreenshotType_Int"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_ScreenshotType_Int
void OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_ScreenshotType_Int(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_UserInterface_ScreenshotType_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_UserInterface_ScreenshotType_Int", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Notifications_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Notifications_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Notifications_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Notifications_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Notifications_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Notifications_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Notifications_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Notifications_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Notifications_DoNotDisturb_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Notifications_DoNotDisturb_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Notifications_DoNotDisturb_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Notifications_DoNotDisturb_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Notifications_DoNotDisturb_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Notifications_DoNotDisturb_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Notifications_DoNotDisturb_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Notifications_DoNotDisturb_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_TutorialCompletions
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_TutorialCompletions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_TutorialCompletions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_TutorialCompletions"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_TutorialCompletions
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_TutorialCompletions(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_TutorialCompletions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_TutorialCompletions", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_ScaleX
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_ScaleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_ScaleX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_ScaleX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_ScaleX
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_ScaleX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_ScaleX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_ScaleX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_ScaleY
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_ScaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_ScaleY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_ScaleY"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_ScaleY
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_ScaleY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_ScaleY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_ScaleY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetLeftX
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetLeftX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetLeftX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetLeftX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetLeftX
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetLeftX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetLeftX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetLeftX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetRightX
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetRightX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetRightX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetRightX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetRightX
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetRightX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetRightX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetRightX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetY
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_OffsetY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetY"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetY
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_OffsetY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_OffsetY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_Smoothing
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_Smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Keyboard_Smoothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_Smoothing"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_Smoothing
void OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_Smoothing(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Keyboard_Smoothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Keyboard_Smoothing", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_HeuristicActive_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_HeuristicActive_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_HeuristicActive_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_HeuristicActive_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_HeuristicActive_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_HeuristicActive_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_HeuristicActive_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_HeuristicActive_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_NotifyInHMD_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_NotifyInHMD_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_NotifyInHMD_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_NotifyInHMD_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_NotifyInHMD_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_NotifyInHMD_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_NotifyInHMD_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_NotifyInHMD_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_NotifyOnlyOnce_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_NotifyOnlyOnce_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_NotifyOnlyOnce_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_NotifyOnlyOnce_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_NotifyOnlyOnce_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_NotifyOnlyOnce_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_NotifyOnlyOnce_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_NotifyOnlyOnce_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_AllowTimingStore_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_AllowTimingStore_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_AllowTimingStore_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_AllowTimingStore_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_AllowTimingStore_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_AllowTimingStore_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_AllowTimingStore_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_AllowTimingStore_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_SaveTimingsOnExit_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_SaveTimingsOnExit_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_SaveTimingsOnExit_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_SaveTimingsOnExit_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_SaveTimingsOnExit_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_SaveTimingsOnExit_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_SaveTimingsOnExit_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_SaveTimingsOnExit_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_TestData_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_TestData_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_TestData_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_TestData_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_TestData_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_TestData_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_TestData_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_TestData_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_LinuxGPUProfiling_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Perf_LinuxGPUProfiling_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Perf_LinuxGPUProfiling_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Perf_LinuxGPUProfiling_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_LinuxGPUProfiling_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Perf_LinuxGPUProfiling_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Perf_LinuxGPUProfiling_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Perf_LinuxGPUProfiling_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_Section
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_Style_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_Style_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_Style_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_Style_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_Style_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_Style_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_Style_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_Style_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_GroundPerimeterOn_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_GroundPerimeterOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_GroundPerimeterOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_GroundPerimeterOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_GroundPerimeterOn_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_GroundPerimeterOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_GroundPerimeterOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_GroundPerimeterOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_CenterMarkerOn_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_CenterMarkerOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_CenterMarkerOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_CenterMarkerOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_CenterMarkerOn_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_CenterMarkerOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_CenterMarkerOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_CenterMarkerOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_PlaySpaceOn_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_PlaySpaceOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_PlaySpaceOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_PlaySpaceOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_PlaySpaceOn_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_PlaySpaceOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_PlaySpaceOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_PlaySpaceOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_FadeDistance_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_FadeDistance_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_FadeDistance_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_FadeDistance_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_FadeDistance_Float
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_FadeDistance_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_FadeDistance_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_FadeDistance_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaR_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaR_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaR_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaR_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaR_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaR_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaR_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaR_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaG_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaG_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaG_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaG_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaG_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaG_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaG_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaG_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaB_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaB_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaB_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaB_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaB_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaB_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaB_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaB_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaA_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaA_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaA_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaA_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaA_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaA_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaA_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_CollisionBounds_ColorGammaA_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCamera_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCamera_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCamera_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCamera_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCamera_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCamera_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCamera_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCamera_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraInDashboard_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraInDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraInDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraInDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraInDashboard_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraInDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraInDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraInDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraForCollisionBounds_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraForCollisionBounds_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraForCollisionBounds_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraForCollisionBounds_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraForCollisionBounds_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraForCollisionBounds_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraForCollisionBounds_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraForCollisionBounds_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraForRoomView_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraForRoomView_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_EnableCameraForRoomView_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraForRoomView_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraForRoomView_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraForRoomView_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_EnableCameraForRoomView_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_EnableCameraForRoomView_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaR_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaR_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaR_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaR_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaR_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaR_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaR_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaR_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaG_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaG_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaG_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaG_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaG_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaG_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaG_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaG_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaB_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaB_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaB_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaB_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaB_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaB_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaB_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaB_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaA_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaA_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsColorGammaA_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaA_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaA_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaA_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsColorGammaA_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsColorGammaA_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsStrength_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsStrength_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_BoundsStrength_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsStrength_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsStrength_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsStrength_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_BoundsStrength_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_BoundsStrength_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_RoomViewMode_Int32
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Camera_RoomViewMode_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Camera_RoomViewMode_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Camera_RoomViewMode_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_RoomViewMode_Int32
void OVR::OpenVR::OpenVR::_set_k_pch_Camera_RoomViewMode_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Camera_RoomViewMode_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Camera_RoomViewMode_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_Section
void OVR::OpenVR::OpenVR::_set_k_pch_audio_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnPlaybackDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OnPlaybackDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OnPlaybackDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OnPlaybackDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnPlaybackDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OnPlaybackDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OnPlaybackDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OnPlaybackDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnRecordDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OnRecordDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OnRecordDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OnRecordDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnRecordDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OnRecordDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OnRecordDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OnRecordDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnPlaybackMirrorDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OnPlaybackMirrorDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OnPlaybackMirrorDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OnPlaybackMirrorDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnPlaybackMirrorDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OnPlaybackMirrorDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OnPlaybackMirrorDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OnPlaybackMirrorDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OffPlaybackDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OffPlaybackDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OffPlaybackDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OffPlaybackDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OffPlaybackDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OffPlaybackDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OffPlaybackDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OffPlaybackDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OffRecordDevice_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_OffRecordDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_OffRecordDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_OffRecordDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OffRecordDevice_String
void OVR::OpenVR::OpenVR::_set_k_pch_audio_OffRecordDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_OffRecordDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_OffRecordDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_VIVEHDMIGain
::StringW OVR::OpenVR::OpenVR::_get_k_pch_audio_VIVEHDMIGain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_audio_VIVEHDMIGain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_audio_VIVEHDMIGain"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_VIVEHDMIGain
void OVR::OpenVR::OpenVR::_set_k_pch_audio_VIVEHDMIGain(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_audio_VIVEHDMIGain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_audio_VIVEHDMIGain", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Power_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_PowerOffOnExit_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_PowerOffOnExit_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_PowerOffOnExit_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_PowerOffOnExit_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_PowerOffOnExit_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Power_PowerOffOnExit_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_PowerOffOnExit_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_PowerOffOnExit_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_TurnOffScreensTimeout_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_TurnOffScreensTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_TurnOffScreensTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_TurnOffScreensTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_TurnOffScreensTimeout_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Power_TurnOffScreensTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_TurnOffScreensTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_TurnOffScreensTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_TurnOffControllersTimeout_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_TurnOffControllersTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_TurnOffControllersTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_TurnOffControllersTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_TurnOffControllersTimeout_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Power_TurnOffControllersTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_TurnOffControllersTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_TurnOffControllersTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_ReturnToWatchdogTimeout_Float
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_ReturnToWatchdogTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_ReturnToWatchdogTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_ReturnToWatchdogTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_ReturnToWatchdogTimeout_Float
void OVR::OpenVR::OpenVR::_set_k_pch_Power_ReturnToWatchdogTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_ReturnToWatchdogTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_ReturnToWatchdogTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_AutoLaunchSteamVROnButtonPress
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_AutoLaunchSteamVROnButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_AutoLaunchSteamVROnButtonPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_AutoLaunchSteamVROnButtonPress"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_AutoLaunchSteamVROnButtonPress
void OVR::OpenVR::OpenVR::_set_k_pch_Power_AutoLaunchSteamVROnButtonPress(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_AutoLaunchSteamVROnButtonPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_AutoLaunchSteamVROnButtonPress", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_PauseCompositorOnStandby_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Power_PauseCompositorOnStandby_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Power_PauseCompositorOnStandby_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Power_PauseCompositorOnStandby_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_PauseCompositorOnStandby_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Power_PauseCompositorOnStandby_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Power_PauseCompositorOnStandby_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Power_PauseCompositorOnStandby_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableDashboard_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableDashboard_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_ArcadeMode_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_ArcadeMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_ArcadeMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_ArcadeMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_ArcadeMode_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_ArcadeMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_ArcadeMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_ArcadeMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableWebUI
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUI"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableWebUI
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUI(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUI", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableWebUIDevTools
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUIDevTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUIDevTools");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUIDevTools"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableWebUIDevTools
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUIDevTools(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUIDevTools");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUIDevTools", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableWebUIDashboardReplacement
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUIDashboardReplacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Dashboard_EnableWebUIDashboardReplacement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUIDashboardReplacement"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableWebUIDashboardReplacement
void OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUIDashboardReplacement(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Dashboard_EnableWebUIDashboardReplacement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Dashboard_EnableWebUIDashboardReplacement", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_modelskin_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_modelskin_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_modelskin_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_modelskin_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_modelskin_Section
void OVR::OpenVR::OpenVR::_set_k_pch_modelskin_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_modelskin_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_modelskin_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Driver_Enable_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Driver_Enable_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Driver_Enable_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Driver_Enable_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Driver_Enable_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_Driver_Enable_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Driver_Enable_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Driver_Enable_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_WebInterface_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_WebInterface_Section
void OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_WebInterface_WebEnable_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_WebEnable_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_WebEnable_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_WebEnable_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_WebInterface_WebEnable_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_WebEnable_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_WebEnable_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_WebEnable_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_WebInterface_WebPort_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_WebPort_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_WebInterface_WebPort_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_WebPort_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_WebInterface_WebPort_String
void OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_WebPort_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_WebInterface_WebPort_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_WebInterface_WebPort_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_TrackingOverride_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_TrackingOverride_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_TrackingOverride_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_TrackingOverride_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_TrackingOverride_Section
void OVR::OpenVR::OpenVR::_set_k_pch_TrackingOverride_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_TrackingOverride_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_TrackingOverride_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_App_BindingAutosaveURLSuffix_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_App_BindingAutosaveURLSuffix_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_App_BindingAutosaveURLSuffix_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_App_BindingAutosaveURLSuffix_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_App_BindingAutosaveURLSuffix_String
void OVR::OpenVR::OpenVR::_set_k_pch_App_BindingAutosaveURLSuffix_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_App_BindingAutosaveURLSuffix_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_App_BindingAutosaveURLSuffix_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_App_BindingCurrentURLSuffix_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_App_BindingCurrentURLSuffix_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_App_BindingCurrentURLSuffix_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_App_BindingCurrentURLSuffix_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_App_BindingCurrentURLSuffix_String
void OVR::OpenVR::OpenVR::_set_k_pch_App_BindingCurrentURLSuffix_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_App_BindingCurrentURLSuffix_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_App_BindingCurrentURLSuffix_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_App_NeedToUpdateAutosaveSuffix_Bool
::StringW OVR::OpenVR::OpenVR::_get_k_pch_App_NeedToUpdateAutosaveSuffix_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_App_NeedToUpdateAutosaveSuffix_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_App_NeedToUpdateAutosaveSuffix_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_App_NeedToUpdateAutosaveSuffix_Bool
void OVR::OpenVR::OpenVR::_set_k_pch_App_NeedToUpdateAutosaveSuffix_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_App_NeedToUpdateAutosaveSuffix_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_App_NeedToUpdateAutosaveSuffix_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_App_ActionManifestURL_String
::StringW OVR::OpenVR::OpenVR::_get_k_pch_App_ActionManifestURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_App_ActionManifestURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_App_ActionManifestURL_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_App_ActionManifestURL_String
void OVR::OpenVR::OpenVR::_set_k_pch_App_ActionManifestURL_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_App_ActionManifestURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_App_ActionManifestURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Trackers_Section
::StringW OVR::OpenVR::OpenVR::_get_k_pch_Trackers_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_pch_Trackers_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "k_pch_Trackers_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Trackers_Section
void OVR::OpenVR::OpenVR::_set_k_pch_Trackers_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_pch_Trackers_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_pch_Trackers_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRScreenshots_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRScreenshots_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRScreenshots_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRScreenshots_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRScreenshots_Version
void OVR::OpenVR::OpenVR::_set_IVRScreenshots_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRScreenshots_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRScreenshots_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRResources_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRResources_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRResources_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRResources_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRResources_Version
void OVR::OpenVR::OpenVR::_set_IVRResources_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRResources_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRResources_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRDriverManager_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRDriverManager_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRDriverManager_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRDriverManager_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRDriverManager_Version
void OVR::OpenVR::OpenVR::_set_IVRDriverManager_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRDriverManager_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRDriverManager_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxActionNameLength
uint OVR::OpenVR::OpenVR::_get_k_unMaxActionNameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxActionNameLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxActionNameLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxActionNameLength
void OVR::OpenVR::OpenVR::_set_k_unMaxActionNameLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxActionNameLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxActionNameLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxActionSetNameLength
uint OVR::OpenVR::OpenVR::_get_k_unMaxActionSetNameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxActionSetNameLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxActionSetNameLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxActionSetNameLength
void OVR::OpenVR::OpenVR::_set_k_unMaxActionSetNameLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxActionSetNameLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxActionSetNameLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxActionOriginCount
uint OVR::OpenVR::OpenVR::_get_k_unMaxActionOriginCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_unMaxActionOriginCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_unMaxActionOriginCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxActionOriginCount
void OVR::OpenVR::OpenVR::_set_k_unMaxActionOriginCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_unMaxActionOriginCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_unMaxActionOriginCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRInput_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRInput_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRInput_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRInput_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRInput_Version
void OVR::OpenVR::OpenVR::_set_IVRInput_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRInput_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRInput_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidIOBufferHandle
uint64_t OVR::OpenVR::OpenVR::_get_k_ulInvalidIOBufferHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidIOBufferHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("OVR.OpenVR", "OpenVR", "k_ulInvalidIOBufferHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidIOBufferHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidIOBufferHandle(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidIOBufferHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidIOBufferHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRIOBuffer_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRIOBuffer_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRIOBuffer_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRIOBuffer_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRIOBuffer_Version
void OVR::OpenVR::OpenVR::_set_IVRIOBuffer_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRIOBuffer_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRIOBuffer_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_ulInvalidSpatialAnchorHandle
uint OVR::OpenVR::OpenVR::_get_k_ulInvalidSpatialAnchorHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_k_ulInvalidSpatialAnchorHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "k_ulInvalidSpatialAnchorHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_ulInvalidSpatialAnchorHandle
void OVR::OpenVR::OpenVR::_set_k_ulInvalidSpatialAnchorHandle(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_k_ulInvalidSpatialAnchorHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "k_ulInvalidSpatialAnchorHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRSpatialAnchors_Version
::StringW OVR::OpenVR::OpenVR::_get_IVRSpatialAnchors_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_IVRSpatialAnchors_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "IVRSpatialAnchors_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRSpatialAnchors_Version
void OVR::OpenVR::OpenVR::_set_IVRSpatialAnchors_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_IVRSpatialAnchors_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "IVRSpatialAnchors_Version", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 <VRToken>k__BackingField
uint OVR::OpenVR::OpenVR::_get_$VRToken$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_$VRToken$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<uint>("OVR.OpenVR", "OpenVR", "<VRToken>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 <VRToken>k__BackingField
void OVR::OpenVR::OpenVR::_set_$VRToken$k__BackingField(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_$VRToken$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "<VRToken>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FnTable_Prefix
::StringW OVR::OpenVR::OpenVR::_get_FnTable_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get_FnTable_Prefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OVR.OpenVR", "OpenVR", "FnTable_Prefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String FnTable_Prefix
void OVR::OpenVR::OpenVR::_set_FnTable_Prefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set_FnTable_Prefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "FnTable_Prefix", value));
}
// Autogenerated static field getter
// Get static field: static private OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext _OpenVRInternal_ModuleContext
::OVR::OpenVR::OpenVR::COpenVRContext* OVR::OpenVR::OpenVR::_get__OpenVRInternal_ModuleContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_get__OpenVRInternal_ModuleContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::OpenVR::COpenVRContext*>("OVR.OpenVR", "OpenVR", "_OpenVRInternal_ModuleContext"));
}
// Autogenerated static field setter
// Set static field: static private OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext _OpenVRInternal_ModuleContext
void OVR::OpenVR::OpenVR::_set__OpenVRInternal_ModuleContext(::OVR::OpenVR::OpenVR::COpenVRContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::_set__OpenVRInternal_ModuleContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "OpenVR", "_OpenVRInternal_ModuleContext", value));
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_VRToken
uint OVR::OpenVR::OpenVR::get_VRToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_VRToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_VRToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.set_VRToken
void OVR::OpenVR::OpenVR::set_VRToken(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::set_VRToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "set_VRToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_OpenVRInternal_ModuleContext
::OVR::OpenVR::OpenVR::COpenVRContext* OVR::OpenVR::OpenVR::get_OpenVRInternal_ModuleContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_OpenVRInternal_ModuleContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_OpenVRInternal_ModuleContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::OpenVR::COpenVRContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_System
::OVR::OpenVR::CVRSystem* OVR::OpenVR::OpenVR::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_System");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_System", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Chaperone
::OVR::OpenVR::CVRChaperone* OVR::OpenVR::OpenVR::get_Chaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Chaperone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Chaperone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRChaperone*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_ChaperoneSetup
::OVR::OpenVR::CVRChaperoneSetup* OVR::OpenVR::OpenVR::get_ChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_ChaperoneSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_ChaperoneSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRChaperoneSetup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Compositor
::OVR::OpenVR::CVRCompositor* OVR::OpenVR::OpenVR::get_Compositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Compositor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Compositor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRCompositor*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Overlay
::OVR::OpenVR::CVROverlay* OVR::OpenVR::OpenVR::get_Overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Overlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Overlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVROverlay*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_RenderModels
::OVR::OpenVR::CVRRenderModels* OVR::OpenVR::OpenVR::get_RenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_RenderModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_RenderModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRRenderModels*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_ExtendedDisplay
::OVR::OpenVR::CVRExtendedDisplay* OVR::OpenVR::OpenVR::get_ExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_ExtendedDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_ExtendedDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRExtendedDisplay*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Settings
::OVR::OpenVR::CVRSettings* OVR::OpenVR::OpenVR::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Applications
::OVR::OpenVR::CVRApplications* OVR::OpenVR::OpenVR::get_Applications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Applications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Applications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRApplications*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Screenshots
::OVR::OpenVR::CVRScreenshots* OVR::OpenVR::OpenVR::get_Screenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Screenshots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Screenshots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRScreenshots*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_TrackedCamera
::OVR::OpenVR::CVRTrackedCamera* OVR::OpenVR::OpenVR::get_TrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_TrackedCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_TrackedCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRTrackedCamera*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_Input
::OVR::OpenVR::CVRInput* OVR::OpenVR::OpenVR::get_Input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_Input");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_Input", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRInput*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.get_SpatialAnchors
::OVR::OpenVR::CVRSpatialAnchors* OVR::OpenVR::OpenVR::get_SpatialAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::get_SpatialAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "get_SpatialAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSpatialAnchors*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR..cctor
void OVR::OpenVR::OpenVR::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.InitInternal
uint OVR::OpenVR::OpenVR::InitInternal(ByRef<::OVR::OpenVR::EVRInitError> peError, ::OVR::OpenVR::EVRApplicationType eApplicationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::InitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "InitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType);
}
// Autogenerated method: OVR.OpenVR.OpenVR.InitInternal2
uint OVR::OpenVR::OpenVR::InitInternal2(ByRef<::OVR::OpenVR::EVRInitError> peError, ::OVR::OpenVR::EVRApplicationType eApplicationType, ::StringW pchStartupInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::InitInternal2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "InitInternal2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType), ::il2cpp_utils::ExtractType(pchStartupInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType, pchStartupInfo);
}
// Autogenerated method: OVR.OpenVR.OpenVR.ShutdownInternal
void OVR::OpenVR::OpenVR::ShutdownInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::ShutdownInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "ShutdownInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.IsHmdPresent
bool OVR::OpenVR::OpenVR::IsHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::IsHmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "IsHmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.IsRuntimeInstalled
bool OVR::OpenVR::OpenVR::IsRuntimeInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::IsRuntimeInstalled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "IsRuntimeInstalled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.GetStringForHmdError
::StringW OVR::OpenVR::OpenVR::GetStringForHmdError(::OVR::OpenVR::EVRInitError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::GetStringForHmdError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "GetStringForHmdError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: OVR.OpenVR.OpenVR.GetGenericInterface
::System::IntPtr OVR::OpenVR::OpenVR::GetGenericInterface(::StringW pchInterfaceVersion, ByRef<::OVR::OpenVR::EVRInitError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::GetGenericInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "GetGenericInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchInterfaceVersion, byref(peError));
}
// Autogenerated method: OVR.OpenVR.OpenVR.IsInterfaceVersionValid
bool OVR::OpenVR::OpenVR::IsInterfaceVersionValid(::StringW pchInterfaceVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::IsInterfaceVersionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "IsInterfaceVersionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchInterfaceVersion);
}
// Autogenerated method: OVR.OpenVR.OpenVR.GetInitToken
uint OVR::OpenVR::OpenVR::GetInitToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::GetInitToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "GetInitToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR.Init
::OVR::OpenVR::CVRSystem* OVR::OpenVR::OpenVR::Init(ByRef<::OVR::OpenVR::EVRInitError> peError, ::OVR::OpenVR::EVRApplicationType eApplicationType, ::StringW pchStartupInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType), ::il2cpp_utils::ExtractType(pchStartupInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType, pchStartupInfo);
}
// Autogenerated method: OVR.OpenVR.OpenVR.Shutdown
void OVR::OpenVR::OpenVR::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVR", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext
#include "OVR/OpenVR/OpenVR_COpenVRContext.hpp"
// Including type: OVR.OpenVR.CVRSystem
#include "OVR/OpenVR/CVRSystem.hpp"
// Including type: OVR.OpenVR.CVRChaperone
#include "OVR/OpenVR/CVRChaperone.hpp"
// Including type: OVR.OpenVR.CVRChaperoneSetup
#include "OVR/OpenVR/CVRChaperoneSetup.hpp"
// Including type: OVR.OpenVR.CVRCompositor
#include "OVR/OpenVR/CVRCompositor.hpp"
// Including type: OVR.OpenVR.CVROverlay
#include "OVR/OpenVR/CVROverlay.hpp"
// Including type: OVR.OpenVR.CVRRenderModels
#include "OVR/OpenVR/CVRRenderModels.hpp"
// Including type: OVR.OpenVR.CVRExtendedDisplay
#include "OVR/OpenVR/CVRExtendedDisplay.hpp"
// Including type: OVR.OpenVR.CVRSettings
#include "OVR/OpenVR/CVRSettings.hpp"
// Including type: OVR.OpenVR.CVRApplications
#include "OVR/OpenVR/CVRApplications.hpp"
// Including type: OVR.OpenVR.CVRScreenshots
#include "OVR/OpenVR/CVRScreenshots.hpp"
// Including type: OVR.OpenVR.CVRTrackedCamera
#include "OVR/OpenVR/CVRTrackedCamera.hpp"
// Including type: OVR.OpenVR.CVRInput
#include "OVR/OpenVR/CVRInput.hpp"
// Including type: OVR.OpenVR.CVRSpatialAnchors
#include "OVR/OpenVR/CVRSpatialAnchors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRSystem m_pVRSystem
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRSystem*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRSystem"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRChaperone m_pVRChaperone
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRChaperone*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRChaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRChaperone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRChaperone"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRChaperone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRChaperoneSetup m_pVRChaperoneSetup
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRChaperoneSetup*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRChaperoneSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRChaperoneSetup"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRChaperoneSetup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRCompositor m_pVRCompositor
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRCompositor*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRCompositor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRCompositor"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRCompositor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVROverlay m_pVROverlay
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVROverlay*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVROverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVROverlay"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRRenderModels m_pVRRenderModels
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRRenderModels*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRRenderModels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRRenderModels"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRRenderModels**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRExtendedDisplay m_pVRExtendedDisplay
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRExtendedDisplay*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRExtendedDisplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRExtendedDisplay"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRExtendedDisplay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRSettings m_pVRSettings
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRSettings*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRSettings"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRApplications m_pVRApplications
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRApplications*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRApplications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRApplications"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRApplications**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRScreenshots m_pVRScreenshots
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRScreenshots*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRScreenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRScreenshots"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRScreenshots**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRTrackedCamera m_pVRTrackedCamera
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRTrackedCamera*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRTrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRTrackedCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRTrackedCamera"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRTrackedCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRInput m_pVRInput
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRInput*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRInput"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRInput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.CVRSpatialAnchors m_pVRSpatialAnchors
[[deprecated("Use field access instead!")]] ::OVR::OpenVR::CVRSpatialAnchors*& OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSpatialAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::dyn_m_pVRSpatialAnchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRSpatialAnchors"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::CVRSpatialAnchors**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.Clear
void OVR::OpenVR::OpenVR::COpenVRContext::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.CheckClear
void OVR::OpenVR::OpenVR::COpenVRContext::CheckClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::CheckClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRSystem
::OVR::OpenVR::CVRSystem* OVR::OpenVR::OpenVR::COpenVRContext::VRSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSystem*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRChaperone
::OVR::OpenVR::CVRChaperone* OVR::OpenVR::OpenVR::COpenVRContext::VRChaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRChaperone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRChaperone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRChaperone*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRChaperoneSetup
::OVR::OpenVR::CVRChaperoneSetup* OVR::OpenVR::OpenVR::COpenVRContext::VRChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRChaperoneSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRChaperoneSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRChaperoneSetup*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRCompositor
::OVR::OpenVR::CVRCompositor* OVR::OpenVR::OpenVR::COpenVRContext::VRCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRCompositor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRCompositor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRCompositor*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VROverlay
::OVR::OpenVR::CVROverlay* OVR::OpenVR::OpenVR::COpenVRContext::VROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VROverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VROverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVROverlay*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRRenderModels
::OVR::OpenVR::CVRRenderModels* OVR::OpenVR::OpenVR::COpenVRContext::VRRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRRenderModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRRenderModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRRenderModels*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRExtendedDisplay
::OVR::OpenVR::CVRExtendedDisplay* OVR::OpenVR::OpenVR::COpenVRContext::VRExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRExtendedDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRExtendedDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRExtendedDisplay*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRSettings
::OVR::OpenVR::CVRSettings* OVR::OpenVR::OpenVR::COpenVRContext::VRSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSettings*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRApplications
::OVR::OpenVR::CVRApplications* OVR::OpenVR::OpenVR::COpenVRContext::VRApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRApplications*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRScreenshots
::OVR::OpenVR::CVRScreenshots* OVR::OpenVR::OpenVR::COpenVRContext::VRScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRScreenshots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRScreenshots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRScreenshots*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRTrackedCamera
::OVR::OpenVR::CVRTrackedCamera* OVR::OpenVR::OpenVR::COpenVRContext::VRTrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRTrackedCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRTrackedCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRTrackedCamera*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRInput
::OVR::OpenVR::CVRInput* OVR::OpenVR::OpenVR::COpenVRContext::VRInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRInput*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/OVR.OpenVR.COpenVRContext.VRSpatialAnchors
::OVR::OpenVR::CVRSpatialAnchors* OVR::OpenVR::OpenVR::COpenVRContext::VRSpatialAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVR::COpenVRContext::VRSpatialAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRSpatialAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::CVRSpatialAnchors*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType Array
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType Array
void OVRSimpleJSON::JSONNodeType::_set_Array(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType Object
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType Object
void OVRSimpleJSON::JSONNodeType::_set_Object(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType String
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "String"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType String
void OVRSimpleJSON::JSONNodeType::_set_String(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType Number
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "Number"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType Number
void OVRSimpleJSON::JSONNodeType::_set_Number(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType NullValue
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_NullValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_NullValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "NullValue"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType NullValue
void OVRSimpleJSON::JSONNodeType::_set_NullValue(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_NullValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "NullValue", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType Boolean
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType Boolean
void OVRSimpleJSON::JSONNodeType::_set_Boolean(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType None
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType None
void OVRSimpleJSON::JSONNodeType::_set_None(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNodeType Custom
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNodeType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNodeType>("OVRSimpleJSON", "JSONNodeType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNodeType Custom
void OVRSimpleJSON::JSONNodeType::_set_Custom(::OVRSimpleJSON::JSONNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNodeType", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONNodeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNodeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONTextMode Compact
::OVRSimpleJSON::JSONTextMode OVRSimpleJSON::JSONTextMode::_get_Compact() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONTextMode::_get_Compact");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONTextMode>("OVRSimpleJSON", "JSONTextMode", "Compact"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONTextMode Compact
void OVRSimpleJSON::JSONTextMode::_set_Compact(::OVRSimpleJSON::JSONTextMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONTextMode::_set_Compact");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONTextMode", "Compact", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONTextMode Indent
::OVRSimpleJSON::JSONTextMode OVRSimpleJSON::JSONTextMode::_get_Indent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONTextMode::_get_Indent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONTextMode>("OVRSimpleJSON", "JSONTextMode", "Indent"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONTextMode Indent
void OVRSimpleJSON::JSONTextMode::_set_Indent(::OVRSimpleJSON::JSONTextMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONTextMode::_set_Indent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONTextMode", "Indent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONTextMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONTextMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator
#include "OVRSimpleJSON/JSONNode_ValueEnumerator.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator
#include "OVRSimpleJSON/JSONNode_KeyEnumerator.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator
#include "OVRSimpleJSON/JSONNode_LinqEnumerator.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40
#include "OVRSimpleJSON/JSONNode_-get_Children-d__40.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42
#include "OVRSimpleJSON/JSONNode_-get_DeepChildren-d__42.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: OVRSimpleJSON.JSONArray
#include "OVRSimpleJSON/JSONArray.hpp"
// Including type: OVRSimpleJSON.JSONObject
#include "OVRSimpleJSON/JSONObject.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.RectOffset
#include "UnityEngine/RectOffset.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean forceASCII
bool OVRSimpleJSON::JSONNode::_get_forceASCII() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_forceASCII");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVRSimpleJSON", "JSONNode", "forceASCII"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean forceASCII
void OVRSimpleJSON::JSONNode::_set_forceASCII(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_forceASCII");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "forceASCII", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean longAsString
bool OVRSimpleJSON::JSONNode::_get_longAsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_longAsString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVRSimpleJSON", "JSONNode", "longAsString"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean longAsString
void OVRSimpleJSON::JSONNode::_set_longAsString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_longAsString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "longAsString", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.StringBuilder m_EscapeBuilder
::System::Text::StringBuilder* OVRSimpleJSON::JSONNode::_get_m_EscapeBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_m_EscapeBuilder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::StringBuilder*>("OVRSimpleJSON", "JSONNode", "m_EscapeBuilder"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.StringBuilder m_EscapeBuilder
void OVRSimpleJSON::JSONNode::_set_m_EscapeBuilder(::System::Text::StringBuilder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_m_EscapeBuilder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "m_EscapeBuilder", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType VectorContainerType
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONNode::_get_VectorContainerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_VectorContainerType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONNode", "VectorContainerType"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType VectorContainerType
void OVRSimpleJSON::JSONNode::_set_VectorContainerType(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_VectorContainerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "VectorContainerType", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType QuaternionContainerType
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONNode::_get_QuaternionContainerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_QuaternionContainerType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONNode", "QuaternionContainerType"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType QuaternionContainerType
void OVRSimpleJSON::JSONNode::_set_QuaternionContainerType(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_QuaternionContainerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "QuaternionContainerType", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType RectContainerType
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONNode::_get_RectContainerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_get_RectContainerType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONNode", "RectContainerType"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType RectContainerType
void OVRSimpleJSON::JSONNode::_set_RectContainerType(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::_set_RectContainerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode", "RectContainerType", value));
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNode::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::get_Item(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_Item
void OVRSimpleJSON::JSONNode::set_Item(int aIndex, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aIndex, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::get_Item(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_Item
void OVRSimpleJSON::JSONNode::set_Item(::StringW aKey, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Value
::StringW OVRSimpleJSON::JSONNode::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_Value
void OVRSimpleJSON::JSONNode::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Count
int OVRSimpleJSON::JSONNode::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsNumber
bool OVRSimpleJSON::JSONNode::get_IsNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsString
bool OVRSimpleJSON::JSONNode::get_IsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsBoolean
bool OVRSimpleJSON::JSONNode::get_IsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsNull
bool OVRSimpleJSON::JSONNode::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsNull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsArray
bool OVRSimpleJSON::JSONNode::get_IsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_IsObject
bool OVRSimpleJSON::JSONNode::get_IsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_IsObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Inline
bool OVRSimpleJSON::JSONNode::get_Inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Inline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Inline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_Inline
void OVRSimpleJSON::JSONNode::set_Inline(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_Inline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Inline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Children
::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONNode::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Children");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_DeepChildren
::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONNode::get_DeepChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_DeepChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeepChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Linq
::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>>* OVRSimpleJSON::JSONNode::get_Linq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Linq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Linq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Keys
::OVRSimpleJSON::JSONNode::KeyEnumerator OVRSimpleJSON::JSONNode::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Keys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::KeyEnumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_Values
::OVRSimpleJSON::JSONNode::ValueEnumerator OVRSimpleJSON::JSONNode::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::ValueEnumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsDouble
double OVRSimpleJSON::JSONNode::get_AsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_AsDouble
void OVRSimpleJSON::JSONNode::set_AsDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_AsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsInt
int OVRSimpleJSON::JSONNode::get_AsInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsInt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_AsInt
void OVRSimpleJSON::JSONNode::set_AsInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_AsInt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsFloat
float OVRSimpleJSON::JSONNode::get_AsFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsFloat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_AsFloat
void OVRSimpleJSON::JSONNode::set_AsFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_AsFloat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsBool
bool OVRSimpleJSON::JSONNode::get_AsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_AsBool
void OVRSimpleJSON::JSONNode::set_AsBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsLong
int64_t OVRSimpleJSON::JSONNode::get_AsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.set_AsLong
void OVRSimpleJSON::JSONNode::set_AsLong(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::set_AsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsArray
::OVRSimpleJSON::JSONArray* OVRSimpleJSON::JSONNode::get_AsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONArray*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_AsObject
::OVRSimpleJSON::JSONObject* OVRSimpleJSON::JSONNode::get_AsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_AsObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.get_EscapeBuilder
::System::Text::StringBuilder* OVRSimpleJSON::JSONNode::get_EscapeBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::get_EscapeBuilder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "get_EscapeBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode..cctor
void OVRSimpleJSON::JSONNode::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Add
void OVRSimpleJSON::JSONNode::Add(::StringW aKey, ::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(aItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Add
void OVRSimpleJSON::JSONNode::Add(::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::Remove(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::Remove(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::Remove(::OVRSimpleJSON::JSONNode* aNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aNode);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ToString
::StringW OVRSimpleJSON::JSONNode::ToString(int aIndent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndent)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, aIndent);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteToStringBuilder
void OVRSimpleJSON::JSONNode::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONNode::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Escape
::StringW OVRSimpleJSON::JSONNode::Escape(::StringW aText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Escape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "Escape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aText)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aText);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ParseElement
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::ParseElement(::StringW token, bool quoted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "ParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(quoted)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token, quoted);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Parse
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::Parse(::StringW aJSON) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aJSON)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aJSON);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.GetContainer
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::GetContainer(::OVRSimpleJSON::JSONContainerType aType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::GetContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "GetContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aType)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aType);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector2
::UnityEngine::Vector2 OVRSimpleJSON::JSONNode::ReadVector2(::UnityEngine::Vector2 aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector2
::UnityEngine::Vector2 OVRSimpleJSON::JSONNode::ReadVector2(::StringW aXName, ::StringW aYName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aXName), ::il2cpp_utils::ExtractType(aYName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, aXName, aYName);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector2
::UnityEngine::Vector2 OVRSimpleJSON::JSONNode::ReadVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteVector2
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteVector2(::UnityEngine::Vector2 aVec, ::StringW aXName, ::StringW aYName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aVec), ::il2cpp_utils::ExtractType(aXName), ::il2cpp_utils::ExtractType(aYName)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aVec, aXName, aYName);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector3
::UnityEngine::Vector3 OVRSimpleJSON::JSONNode::ReadVector3(::UnityEngine::Vector3 aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector3
::UnityEngine::Vector3 OVRSimpleJSON::JSONNode::ReadVector3(::StringW aXName, ::StringW aYName, ::StringW aZName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aXName), ::il2cpp_utils::ExtractType(aYName), ::il2cpp_utils::ExtractType(aZName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, aXName, aYName, aZName);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector3
::UnityEngine::Vector3 OVRSimpleJSON::JSONNode::ReadVector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteVector3
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteVector3(::UnityEngine::Vector3 aVec, ::StringW aXName, ::StringW aYName, ::StringW aZName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aVec), ::il2cpp_utils::ExtractType(aXName), ::il2cpp_utils::ExtractType(aYName), ::il2cpp_utils::ExtractType(aZName)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aVec, aXName, aYName, aZName);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector4
::UnityEngine::Vector4 OVRSimpleJSON::JSONNode::ReadVector4(::UnityEngine::Vector4 aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadVector4
::UnityEngine::Vector4 OVRSimpleJSON::JSONNode::ReadVector4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteVector4
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteVector4(::UnityEngine::Vector4 aVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aVec)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aVec);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadQuaternion
::UnityEngine::Quaternion OVRSimpleJSON::JSONNode::ReadQuaternion(::UnityEngine::Quaternion aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadQuaternion
::UnityEngine::Quaternion OVRSimpleJSON::JSONNode::ReadQuaternion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteQuaternion
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteQuaternion(::UnityEngine::Quaternion aRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aRot)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aRot);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadRect
::UnityEngine::Rect OVRSimpleJSON::JSONNode::ReadRect(::UnityEngine::Rect aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadRect
::UnityEngine::Rect OVRSimpleJSON::JSONNode::ReadRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteRect
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteRect(::UnityEngine::Rect aRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aRect)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aRect);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadRectOffset
::UnityEngine::RectOffset* OVRSimpleJSON::JSONNode::ReadRectOffset(::UnityEngine::RectOffset* aDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadRectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDefault)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectOffset*, false>(this, ___internal__method, aDefault);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadRectOffset
::UnityEngine::RectOffset* OVRSimpleJSON::JSONNode::ReadRectOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadRectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectOffset*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteRectOffset
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteRectOffset(::UnityEngine::RectOffset* aRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteRectOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRectOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aRect)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aRect);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ReadMatrix
::UnityEngine::Matrix4x4 OVRSimpleJSON::JSONNode::ReadMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ReadMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.WriteMatrix
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::WriteMatrix(::UnityEngine::Matrix4x4 aMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::WriteMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aMatrix)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aMatrix);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.ToString
::StringW OVRSimpleJSON::JSONNode::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.Equals
bool OVRSimpleJSON::JSONNode::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.GetHashCode
int OVRSimpleJSON::JSONNode::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.op_Equality
bool OVRSimpleJSON::operator ==(::OVRSimpleJSON::JSONNode* a, ::Il2CppObject& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated method: OVRSimpleJSON.JSONNode.op_Inequality
bool OVRSimpleJSON::operator !=(::OVRSimpleJSON::JSONNode* a, ::Il2CppObject& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNode", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type type
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode::Enumerator::Type& OVRSimpleJSON::JSONNode::Enumerator::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode::Enumerator::Type*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.String,OVRSimpleJSON.JSONNode> m_Object
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator& OVRSimpleJSON::JSONNode::Enumerator::dyn_m_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::dyn_m_Object");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Object"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<OVRSimpleJSON.JSONNode> m_Array
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator& OVRSimpleJSON::JSONNode::Enumerator::dyn_m_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::dyn_m_Array");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Array"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator.get_IsValid
bool OVRSimpleJSON::JSONNode::Enumerator::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator.get_Current
::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*> OVRSimpleJSON::JSONNode::Enumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator..ctor
OVRSimpleJSON::JSONNode::Enumerator::Enumerator(typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator aArrayEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aArrayEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aArrayEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator..ctor
OVRSimpleJSON::JSONNode::Enumerator::Enumerator(typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator aDictEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDictEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aDictEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator.MoveNext
bool OVRSimpleJSON::JSONNode::Enumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type None
::OVRSimpleJSON::JSONNode::Enumerator::Type OVRSimpleJSON::JSONNode::Enumerator::Type::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNode::Enumerator::Type>("OVRSimpleJSON", "JSONNode/Enumerator/Type", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type None
void OVRSimpleJSON::JSONNode::Enumerator::Type::_set_None(::OVRSimpleJSON::JSONNode::Enumerator::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode/Enumerator/Type", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type Array
::OVRSimpleJSON::JSONNode::Enumerator::Type OVRSimpleJSON::JSONNode::Enumerator::Type::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNode::Enumerator::Type>("OVRSimpleJSON", "JSONNode/Enumerator/Type", "Array"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type Array
void OVRSimpleJSON::JSONNode::Enumerator::Type::_set_Array(::OVRSimpleJSON::JSONNode::Enumerator::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode/Enumerator/Type", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type Object
::OVRSimpleJSON::JSONNode::Enumerator::Type OVRSimpleJSON::JSONNode::Enumerator::Type::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNode::Enumerator::Type>("OVRSimpleJSON", "JSONNode/Enumerator/Type", "Object"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator/OVRSimpleJSON.Type Object
void OVRSimpleJSON::JSONNode::Enumerator::Type::_set_Object(::OVRSimpleJSON::JSONNode::Enumerator::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNode/Enumerator/Type", "Object", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONNode::Enumerator::Type::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::Enumerator::Type::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator
#include "OVRSimpleJSON/JSONNode_ValueEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator m_Enumerator
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode::Enumerator& OVRSimpleJSON::JSONNode::ValueEnumerator::dyn_m_Enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::dyn_m_Enumerator");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Enumerator"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::ValueEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator..ctor
OVRSimpleJSON::JSONNode::ValueEnumerator::ValueEnumerator(typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator aArrayEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aArrayEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aArrayEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator..ctor
OVRSimpleJSON::JSONNode::ValueEnumerator::ValueEnumerator(typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator aDictEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDictEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aDictEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator..ctor
// ABORTED elsewhere.  OVRSimpleJSON::JSONNode::ValueEnumerator::ValueEnumerator(::OVRSimpleJSON::JSONNode::Enumerator aEnumerator)
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator.MoveNext
bool OVRSimpleJSON::JSONNode::ValueEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.ValueEnumerator.GetEnumerator
::OVRSimpleJSON::JSONNode::ValueEnumerator OVRSimpleJSON::JSONNode::ValueEnumerator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::ValueEnumerator::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::ValueEnumerator, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator
#include "OVRSimpleJSON/JSONNode_KeyEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator m_Enumerator
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode::Enumerator& OVRSimpleJSON::JSONNode::KeyEnumerator::dyn_m_Enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::dyn_m_Enumerator");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Enumerator"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator.get_Current
::StringW OVRSimpleJSON::JSONNode::KeyEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator..ctor
OVRSimpleJSON::JSONNode::KeyEnumerator::KeyEnumerator(typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator aArrayEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aArrayEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aArrayEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator..ctor
OVRSimpleJSON::JSONNode::KeyEnumerator::KeyEnumerator(typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator aDictEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aDictEnum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aDictEnum);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator..ctor
// ABORTED elsewhere.  OVRSimpleJSON::JSONNode::KeyEnumerator::KeyEnumerator(::OVRSimpleJSON::JSONNode::Enumerator aEnumerator)
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator.MoveNext
bool OVRSimpleJSON::JSONNode::KeyEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.KeyEnumerator.GetEnumerator
::OVRSimpleJSON::JSONNode::KeyEnumerator OVRSimpleJSON::JSONNode::KeyEnumerator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::KeyEnumerator::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::KeyEnumerator, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator
#include "OVRSimpleJSON/JSONNode_LinqEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode m_Node
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONNode::LinqEnumerator::dyn_m_Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::dyn_m_Node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Node"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator m_Enumerator
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode::Enumerator& OVRSimpleJSON::JSONNode::LinqEnumerator::dyn_m_Enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::dyn_m_Enumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Enumerator"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.get_Current
::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*> OVRSimpleJSON::JSONNode::LinqEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONNode::LinqEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.MoveNext
bool OVRSimpleJSON::JSONNode::LinqEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.Dispose
void OVRSimpleJSON::JSONNode::LinqEnumerator::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>>* OVRSimpleJSON::JSONNode::LinqEnumerator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*>>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.Reset
void OVRSimpleJSON::JSONNode::LinqEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.LinqEnumerator.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONNode::LinqEnumerator::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::LinqEnumerator::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40
#include "OVRSimpleJSON/JSONNode_-get_Children-d__40.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode <>2__current
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_Generic_IEnumerator$OVRSimpleJSON_JSONNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.IDisposable.Dispose
void OVRSimpleJSON::JSONNode::$get_Children$d__40::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.MoveNext
bool OVRSimpleJSON::JSONNode::$get_Children$d__40::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.IEnumerator.Reset
void OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_Generic_IEnumerable$OVRSimpleJSON_JSONNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_Children>d__40.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONNode::$get_Children$d__40::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_Children$d__40::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42
#include "OVRSimpleJSON/JSONNode_-get_DeepChildren-d__42.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode <>2__current
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSimpleJSON.JSONNode <>4__this
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<OVRSimpleJSON.JSONNode> <>7__wrap1
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<OVRSimpleJSON.JSONNode> <>7__wrap2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*& OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_Generic_IEnumerator$OVRSimpleJSON_JSONNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.IDisposable.Dispose
void OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.MoveNext
bool OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.<>m__Finally1
void OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.<>m__Finally2
void OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.IEnumerator.Reset
void OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_Generic_IEnumerable$OVRSimpleJSON_JSONNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNode/OVRSimpleJSON.<get_DeepChildren>d__42.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNode::$get_DeepChildren$d__42::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONArray
#include "OVRSimpleJSON/JSONArray.hpp"
// Including type: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22
#include "OVRSimpleJSON/JSONArray_-get_Children-d__22.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<OVRSimpleJSON.JSONNode> m_List
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>*& OVRSimpleJSON::JSONArray::dyn_m_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::dyn_m_List");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_List"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inline
[[deprecated("Use field access instead!")]] bool& OVRSimpleJSON::JSONArray::dyn_inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::dyn_inline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Inline
bool OVRSimpleJSON::JSONArray::get_Inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Inline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Inline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.set_Inline
void OVRSimpleJSON::JSONArray::set_Inline(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::set_Inline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Inline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONArray::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_IsArray
bool OVRSimpleJSON::JSONArray::get_IsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_IsArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::get_Item(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.set_Item
void OVRSimpleJSON::JSONArray::set_Item(int aIndex, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aIndex, value);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::get_Item(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.set_Item
void OVRSimpleJSON::JSONArray::set_Item(::StringW aKey, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, value);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Count
int OVRSimpleJSON::JSONArray::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.get_Children
::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONArray::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::get_Children");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONArray::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.Add
void OVRSimpleJSON::JSONArray::Add(::StringW aKey, ::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(aItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::Remove(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::Remove(::OVRSimpleJSON::JSONNode* aNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aNode);
}
// Autogenerated method: OVRSimpleJSON.JSONArray.WriteToStringBuilder
void OVRSimpleJSON::JSONArray::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22
#include "OVRSimpleJSON/JSONArray_-get_Children-d__22.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode <>2__current
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSimpleJSON.JSONArray <>4__this
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONArray*& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONArray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<OVRSimpleJSON.JSONNode> <>7__wrap1
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator& OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::OVRSimpleJSON::JSONNode*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_Generic_IEnumerator$OVRSimpleJSON_JSONNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.IDisposable.Dispose
void OVRSimpleJSON::JSONArray::$get_Children$d__22::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.MoveNext
bool OVRSimpleJSON::JSONArray::$get_Children$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.<>m__Finally1
void OVRSimpleJSON::JSONArray::$get_Children$d__22::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.IEnumerator.Reset
void OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_Generic_IEnumerable$OVRSimpleJSON_JSONNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONArray/OVRSimpleJSON.<get_Children>d__22.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONArray::$get_Children$d__22::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONArray::$get_Children$d__22::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONObject
#include "OVRSimpleJSON/JSONObject.hpp"
// Including type: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<>c__DisplayClass21_0
#include "OVRSimpleJSON/JSONObject_--c__DisplayClass21_0.hpp"
// Including type: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23
#include "OVRSimpleJSON/JSONObject_-get_Children-d__23.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,OVRSimpleJSON.JSONNode> m_Dict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>*& OVRSimpleJSON::JSONObject::dyn_m_Dict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::dyn_m_Dict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Dict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inline
[[deprecated("Use field access instead!")]] bool& OVRSimpleJSON::JSONObject::dyn_inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::dyn_inline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inline"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Inline
bool OVRSimpleJSON::JSONObject::get_Inline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Inline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Inline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.set_Inline
void OVRSimpleJSON::JSONObject::set_Inline(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::set_Inline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Inline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONObject::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_IsObject
bool OVRSimpleJSON::JSONObject::get_IsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_IsObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::get_Item(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.set_Item
void OVRSimpleJSON::JSONObject::set_Item(::StringW aKey, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, value);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::get_Item(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.set_Item
void OVRSimpleJSON::JSONObject::set_Item(int aIndex, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aIndex, value);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Count
int OVRSimpleJSON::JSONObject::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.get_Children
::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONObject::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::get_Children");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONObject::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.Add
void OVRSimpleJSON::JSONObject::Add(::StringW aKey, ::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(aItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::Remove(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::Remove(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.Remove
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::Remove(::OVRSimpleJSON::JSONNode* aNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aNode);
}
// Autogenerated method: OVRSimpleJSON.JSONObject.WriteToStringBuilder
void OVRSimpleJSON::JSONObject::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<>c__DisplayClass21_0
#include "OVRSimpleJSON/JSONObject_--c__DisplayClass21_0.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRSimpleJSON.JSONNode aNode
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONObject::$$c__DisplayClass21_0::dyn_aNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$$c__DisplayClass21_0::dyn_aNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aNode"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<>c__DisplayClass21_0.<Remove>b__0
bool OVRSimpleJSON::JSONObject::$$c__DisplayClass21_0::$Remove$b__0(::System::Collections::Generic::KeyValuePair_2<::StringW, ::OVRSimpleJSON::JSONNode*> k) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$$c__DisplayClass21_0::<Remove>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Remove>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, k);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23
#include "OVRSimpleJSON/JSONObject_-get_Children-d__23.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode <>2__current
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRSimpleJSON.JSONObject <>4__this
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONObject*& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.String,OVRSimpleJSON.JSONNode> <>7__wrap1
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator& OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<::StringW, ::OVRSimpleJSON::JSONNode*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_Generic_IEnumerator$OVRSimpleJSON_JSONNode$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<OVRSimpleJSON.JSONNode>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.IDisposable.Dispose
void OVRSimpleJSON::JSONObject::$get_Children$d__23::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.MoveNext
bool OVRSimpleJSON::JSONObject::$get_Children$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.<>m__Finally1
void OVRSimpleJSON::JSONObject::$get_Children$d__23::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.IEnumerator.Reset
void OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>* OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_Generic_IEnumerable$OVRSimpleJSON_JSONNode$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<OVRSimpleJSON.JSONNode>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::OVRSimpleJSON::JSONNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONObject/OVRSimpleJSON.<get_Children>d__23.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* OVRSimpleJSON::JSONObject::$get_Children$d__23::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONObject::$get_Children$d__23::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONString
#include "OVRSimpleJSON/JSONString.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_Data
[[deprecated("Use field access instead!")]] ::StringW& OVRSimpleJSON::JSONString::dyn_m_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::dyn_m_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Data"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONString.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONString::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONString.get_IsString
bool OVRSimpleJSON::JSONString::get_IsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::get_IsString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONString.get_Value
::StringW OVRSimpleJSON::JSONString::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONString.set_Value
void OVRSimpleJSON::JSONString::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONString.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONString::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONString.WriteToStringBuilder
void OVRSimpleJSON::JSONString::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONString.Equals
bool OVRSimpleJSON::JSONString::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONString.GetHashCode
int OVRSimpleJSON::JSONString::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONString::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNumber
#include "OVRSimpleJSON/JSONNumber.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Double m_Data
[[deprecated("Use field access instead!")]] double& OVRSimpleJSON::JSONNumber::dyn_m_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::dyn_m_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Data"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.IsNumeric
bool OVRSimpleJSON::JSONNumber::IsNumeric(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::IsNumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNumber", "IsNumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNumber::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_IsNumber
bool OVRSimpleJSON::JSONNumber::get_IsNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_IsNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_Value
::StringW OVRSimpleJSON::JSONNumber::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.set_Value
void OVRSimpleJSON::JSONNumber::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_AsDouble
double OVRSimpleJSON::JSONNumber::get_AsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_AsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.set_AsDouble
void OVRSimpleJSON::JSONNumber::set_AsDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::set_AsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.get_AsLong
int64_t OVRSimpleJSON::JSONNumber::get_AsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::get_AsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.set_AsLong
void OVRSimpleJSON::JSONNumber::set_AsLong(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::set_AsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONNumber::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.WriteToStringBuilder
void OVRSimpleJSON::JSONNumber::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.Equals
bool OVRSimpleJSON::JSONNumber::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONNumber.GetHashCode
int OVRSimpleJSON::JSONNumber::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNumber::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONBool
#include "OVRSimpleJSON/JSONBool.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Data
[[deprecated("Use field access instead!")]] bool& OVRSimpleJSON::JSONBool::dyn_m_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::dyn_m_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Data"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONBool::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.get_IsBoolean
bool OVRSimpleJSON::JSONBool::get_IsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::get_IsBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.get_Value
::StringW OVRSimpleJSON::JSONBool::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.set_Value
void OVRSimpleJSON::JSONBool::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.get_AsBool
bool OVRSimpleJSON::JSONBool::get_AsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::get_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.set_AsBool
void OVRSimpleJSON::JSONBool::set_AsBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::set_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONBool::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.WriteToStringBuilder
void OVRSimpleJSON::JSONBool::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.Equals
bool OVRSimpleJSON::JSONBool::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONBool.GetHashCode
int OVRSimpleJSON::JSONBool::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONBool::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONNull
#include "OVRSimpleJSON/JSONNull.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRSimpleJSON.JSONNull m_StaticInstance
::OVRSimpleJSON::JSONNull* OVRSimpleJSON::JSONNull::_get_m_StaticInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::_get_m_StaticInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONNull*>("OVRSimpleJSON", "JSONNull", "m_StaticInstance"));
}
// Autogenerated static field setter
// Set static field: static private OVRSimpleJSON.JSONNull m_StaticInstance
void OVRSimpleJSON::JSONNull::_set_m_StaticInstance(::OVRSimpleJSON::JSONNull* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::_set_m_StaticInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNull", "m_StaticInstance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean reuseSameInstance
bool OVRSimpleJSON::JSONNull::_get_reuseSameInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::_get_reuseSameInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVRSimpleJSON", "JSONNull", "reuseSameInstance"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean reuseSameInstance
void OVRSimpleJSON::JSONNull::_set_reuseSameInstance(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::_set_reuseSameInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONNull", "reuseSameInstance", value));
}
// Autogenerated method: OVRSimpleJSON.JSONNull.CreateOrGet
::OVRSimpleJSON::JSONNull* OVRSimpleJSON::JSONNull::CreateOrGet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::CreateOrGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNull", "CreateOrGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNull*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONNull::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.get_IsNull
bool OVRSimpleJSON::JSONNull::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::get_IsNull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.get_Value
::StringW OVRSimpleJSON::JSONNull::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.set_Value
void OVRSimpleJSON::JSONNull::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.get_AsBool
bool OVRSimpleJSON::JSONNull::get_AsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::get_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.set_AsBool
void OVRSimpleJSON::JSONNull::set_AsBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::set_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONNull..cctor
void OVRSimpleJSON::JSONNull::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONNull", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONNull::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.Equals
bool OVRSimpleJSON::JSONNull::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.GetHashCode
int OVRSimpleJSON::JSONNull::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONNull.WriteToStringBuilder
void OVRSimpleJSON::JSONNull::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONNull::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSimpleJSON.JSONLazyCreator
#include "OVRSimpleJSON/JSONLazyCreator.hpp"
// Including type: OVRSimpleJSON.JSONNode/OVRSimpleJSON.Enumerator
#include "OVRSimpleJSON/JSONNode_Enumerator.hpp"
// Including type: OVRSimpleJSON.JSONNodeType
#include "OVRSimpleJSON/JSONNodeType.hpp"
// Including type: OVRSimpleJSON.JSONArray
#include "OVRSimpleJSON/JSONArray.hpp"
// Including type: OVRSimpleJSON.JSONObject
#include "OVRSimpleJSON/JSONObject.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRSimpleJSON.JSONTextMode
#include "OVRSimpleJSON/JSONTextMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVRSimpleJSON.JSONNode m_Node
[[deprecated("Use field access instead!")]] ::OVRSimpleJSON::JSONNode*& OVRSimpleJSON::JSONLazyCreator::dyn_m_Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::dyn_m_Node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Node"))->offset;
  return *reinterpret_cast<::OVRSimpleJSON::JSONNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_Key
[[deprecated("Use field access instead!")]] ::StringW& OVRSimpleJSON::JSONLazyCreator::dyn_m_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::dyn_m_Key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_Tag
::OVRSimpleJSON::JSONNodeType OVRSimpleJSON::JSONLazyCreator::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_Tag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNodeType, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONLazyCreator::get_Item(int aIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aIndex);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_Item
void OVRSimpleJSON::JSONLazyCreator::set_Item(int aIndex, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aIndex), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aIndex, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_Item
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSONLazyCreator::get_Item(::StringW aKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(this, ___internal__method, aKey);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_Item
void OVRSimpleJSON::JSONLazyCreator::set_Item(::StringW aKey, ::OVRSimpleJSON::JSONNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsInt
int OVRSimpleJSON::JSONLazyCreator::get_AsInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsInt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsInt
void OVRSimpleJSON::JSONLazyCreator::set_AsInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsInt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsFloat
float OVRSimpleJSON::JSONLazyCreator::get_AsFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsFloat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsFloat
void OVRSimpleJSON::JSONLazyCreator::set_AsFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsFloat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsDouble
double OVRSimpleJSON::JSONLazyCreator::get_AsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsDouble
void OVRSimpleJSON::JSONLazyCreator::set_AsDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsLong
int64_t OVRSimpleJSON::JSONLazyCreator::get_AsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsLong
void OVRSimpleJSON::JSONLazyCreator::set_AsLong(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsLong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsBool
bool OVRSimpleJSON::JSONLazyCreator::get_AsBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.set_AsBool
void OVRSimpleJSON::JSONLazyCreator::set_AsBool(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::set_AsBool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsArray
::OVRSimpleJSON::JSONArray* OVRSimpleJSON::JSONLazyCreator::get_AsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONArray*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.get_AsObject
::OVRSimpleJSON::JSONObject* OVRSimpleJSON::JSONLazyCreator::get_AsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::get_AsObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.GetEnumerator
::OVRSimpleJSON::JSONNode::Enumerator OVRSimpleJSON::JSONLazyCreator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode::Enumerator, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.Add
void OVRSimpleJSON::JSONLazyCreator::Add(::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.Add
void OVRSimpleJSON::JSONLazyCreator::Add(::StringW aKey, ::OVRSimpleJSON::JSONNode* aItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(aItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, aItem);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.Equals
bool OVRSimpleJSON::JSONLazyCreator::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.GetHashCode
int OVRSimpleJSON::JSONLazyCreator::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.WriteToStringBuilder
void OVRSimpleJSON::JSONLazyCreator::WriteToStringBuilder(::System::Text::StringBuilder* aSB, int aIndent, int aIndentInc, ::OVRSimpleJSON::JSONTextMode aMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::WriteToStringBuilder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteToStringBuilder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aSB), ::il2cpp_utils::ExtractType(aIndent), ::il2cpp_utils::ExtractType(aIndentInc), ::il2cpp_utils::ExtractType(aMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aSB, aIndent, aIndentInc, aMode);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.op_Equality
bool OVRSimpleJSON::operator ==(::OVRSimpleJSON::JSONLazyCreator* a, ::Il2CppObject& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONLazyCreator", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated method: OVRSimpleJSON.JSONLazyCreator.op_Inequality
bool OVRSimpleJSON::operator !=(::OVRSimpleJSON::JSONLazyCreator* a, ::Il2CppObject& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONLazyCreator::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSONLazyCreator", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSON
#include "OVRSimpleJSON/JSON.hpp"
// Including type: OVRSimpleJSON.JSONNode
#include "OVRSimpleJSON/JSONNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRSimpleJSON.JSON.Parse
::OVRSimpleJSON::JSONNode* OVRSimpleJSON::JSON::Parse(::StringW aJSON) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSON::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVRSimpleJSON", "JSON", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aJSON)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVRSimpleJSON::JSONNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aJSON);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRSimpleJSON.JSONContainerType
#include "OVRSimpleJSON/JSONContainerType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType Array
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONContainerType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONContainerType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType Array
void OVRSimpleJSON::JSONContainerType::_set_Array(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONContainerType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public OVRSimpleJSON.JSONContainerType Object
::OVRSimpleJSON::JSONContainerType OVRSimpleJSON::JSONContainerType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVRSimpleJSON::JSONContainerType>("OVRSimpleJSON", "JSONContainerType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public OVRSimpleJSON.JSONContainerType Object
void OVRSimpleJSON::JSONContainerType::_set_Object(::OVRSimpleJSON::JSONContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVRSimpleJSON", "JSONContainerType", "Object", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OVRSimpleJSON::JSONContainerType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVRSimpleJSON::JSONContainerType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Assets.OVR.Scripts.Record
#include "Assets/OVR/Scripts/Record.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String category
[[deprecated("Use field access instead!")]] ::StringW& Assets::OVR::Scripts::Record::dyn_category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::Record::dyn_category");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "category"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String message
[[deprecated("Use field access instead!")]] ::StringW& Assets::OVR::Scripts::Record::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::Record::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Assets.OVR.Scripts.RangedRecord
#include "Assets/OVR/Scripts/RangedRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single value
[[deprecated("Use field access instead!")]] float& Assets::OVR::Scripts::RangedRecord::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::RangedRecord::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single min
[[deprecated("Use field access instead!")]] float& Assets::OVR::Scripts::RangedRecord::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::RangedRecord::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single max
[[deprecated("Use field access instead!")]] float& Assets::OVR::Scripts::RangedRecord::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::RangedRecord::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Assets.OVR.Scripts.FixMethodDelegate
#include "Assets/OVR/Scripts/FixMethodDelegate.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Assets.OVR.Scripts.FixMethodDelegate.Invoke
void Assets::OVR::Scripts::FixMethodDelegate::Invoke(::UnityEngine::Object* obj, bool isLastInSet, int selectedIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixMethodDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(isLastInSet), ::il2cpp_utils::ExtractType(selectedIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, isLastInSet, selectedIndex);
}
// Autogenerated method: Assets.OVR.Scripts.FixMethodDelegate.BeginInvoke
::System::IAsyncResult* Assets::OVR::Scripts::FixMethodDelegate::BeginInvoke(::UnityEngine::Object* obj, bool isLastInSet, int selectedIndex, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixMethodDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(isLastInSet), ::il2cpp_utils::ExtractType(selectedIndex), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, obj, isLastInSet, selectedIndex, callback, object);
}
// Autogenerated method: Assets.OVR.Scripts.FixMethodDelegate.EndInvoke
void Assets::OVR::Scripts::FixMethodDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixMethodDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Assets.OVR.Scripts.FixRecord
#include "Assets/OVR/Scripts/FixRecord.hpp"
// Including type: Assets.OVR.Scripts.FixMethodDelegate
#include "Assets/OVR/Scripts/FixMethodDelegate.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Assets.OVR.Scripts.FixMethodDelegate fixMethod
[[deprecated("Use field access instead!")]] ::Assets::OVR::Scripts::FixMethodDelegate*& Assets::OVR::Scripts::FixRecord::dyn_fixMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_fixMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixMethod"))->offset;
  return *reinterpret_cast<::Assets::OVR::Scripts::FixMethodDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Object targetObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Assets::OVR::Scripts::FixRecord::dyn_targetObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_targetObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] buttonNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Assets::OVR::Scripts::FixRecord::dyn_buttonNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_buttonNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean editModeRequired
[[deprecated("Use field access instead!")]] bool& Assets::OVR::Scripts::FixRecord::dyn_editModeRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_editModeRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editModeRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean complete
[[deprecated("Use field access instead!")]] bool& Assets::OVR::Scripts::FixRecord::dyn_complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Assets::OVR::Scripts::FixRecord::dyn_complete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "complete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRInputModule
#include "UnityEngine/EventSystems/OVRInputModule.hpp"
// Including type: UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode
#include "UnityEngine/EventSystems/OVRInputModule_InputMode.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OVRCursor
#include "GlobalNamespace/OVRCursor.hpp"
// Including type: OVRRaycaster
#include "GlobalNamespace/OVRRaycaster.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.EventSystems.OVRPointerEventData
#include "UnityEngine/EventSystems/OVRPointerEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerInputModule/UnityEngine.EventSystems.MouseState
#include "UnityEngine/EventSystems/PointerInputModule_MouseState.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.EventSystems.PointerInputModule/UnityEngine.EventSystems.MouseButtonEventData
#include "UnityEngine/EventSystems/PointerInputModule_MouseButtonEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData/UnityEngine.EventSystems.FramePressState
#include "UnityEngine/EventSystems/PointerEventData_FramePressState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rayTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::EventSystems::OVRInputModule::dyn_rayTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_rayTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRCursor m_Cursor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRCursor*& UnityEngine::EventSystems::OVRInputModule::dyn_m_Cursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_Cursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Cursor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRCursor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRInput/Button joyPadClickButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRInput::Button& UnityEngine::EventSystems::OVRInputModule::dyn_joyPadClickButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_joyPadClickButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joyPadClickButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRInput::Button*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode gazeClickKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& UnityEngine::EventSystems::OVRInputModule::dyn_gazeClickKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_gazeClickKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gazeClickKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean performSphereCastForGazepointer
[[deprecated("Use field access instead!")]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_performSphereCastForGazepointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_performSphereCastForGazepointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "performSphereCastForGazepointer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useRightStickScroll
[[deprecated("Use field access instead!")]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_useRightStickScroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_useRightStickScroll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useRightStickScroll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rightStickDeadZone
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_rightStickDeadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_rightStickDeadZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightStickDeadZone"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useSwipeScroll
[[deprecated("Use field access instead!")]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_useSwipeScroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_useSwipeScroll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useSwipeScroll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single swipeDragThreshold
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swipeDragThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single swipeDragScale
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_swipeDragScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swipeDragScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean InvertSwipeXAxis
[[deprecated("Use field access instead!")]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_InvertSwipeXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_InvertSwipeXAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvertSwipeXAxis"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRRaycaster activeGraphicRaycaster
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRRaycaster*& UnityEngine::EventSystems::OVRInputModule::dyn_activeGraphicRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_activeGraphicRaycaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activeGraphicRaycaster"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRRaycaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angleDragThreshold
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_angleDragThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_angleDragThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angleDragThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SpherecastRadius
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_m_SpherecastRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_SpherecastRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SpherecastRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_NextAction
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_m_NextAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_NextAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NextAction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_LastMousePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::EventSystems::OVRInputModule::dyn_m_LastMousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_LastMousePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastMousePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_MousePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::EventSystems::OVRInputModule::dyn_m_MousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_MousePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MousePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_HorizontalAxis
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_HorizontalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_HorizontalAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HorizontalAxis"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_VerticalAxis
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_VerticalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_VerticalAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalAxis"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_SubmitButton
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_SubmitButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_SubmitButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubmitButton"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_CancelButton
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::EventSystems::OVRInputModule::dyn_m_CancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_CancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CancelButton"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_InputActionsPerSecond
[[deprecated("Use field access instead!")]] float& UnityEngine::EventSystems::OVRInputModule::dyn_m_InputActionsPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_InputActionsPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputActionsPerSecond"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowActivationOnMobileDevice
[[deprecated("Use field access instead!")]] bool& UnityEngine::EventSystems::OVRInputModule::dyn_m_AllowActivationOnMobileDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_AllowActivationOnMobileDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowActivationOnMobileDevice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.EventSystems.OVRPointerEventData> m_VRRayPointerData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::EventSystems::OVRPointerEventData*>*& UnityEngine::EventSystems::OVRInputModule::dyn_m_VRRayPointerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_VRRayPointerData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VRRayPointerData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::EventSystems::OVRPointerEventData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.EventSystems.PointerInputModule/UnityEngine.EventSystems.MouseState m_MouseState
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerInputModule::MouseState*& UnityEngine::EventSystems::OVRInputModule::dyn_m_MouseState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::dyn_m_MouseState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MouseState"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::PointerInputModule::MouseState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_inputMode
::UnityEngine::EventSystems::OVRInputModule::InputMode UnityEngine::EventSystems::OVRInputModule::get_inputMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_inputMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::OVRInputModule::InputMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_allowActivationOnMobileDevice
bool UnityEngine::EventSystems::OVRInputModule::get_allowActivationOnMobileDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_allowActivationOnMobileDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowActivationOnMobileDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_allowActivationOnMobileDevice
void UnityEngine::EventSystems::OVRInputModule::set_allowActivationOnMobileDevice(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_allowActivationOnMobileDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowActivationOnMobileDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_inputActionsPerSecond
float UnityEngine::EventSystems::OVRInputModule::get_inputActionsPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_inputActionsPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputActionsPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_inputActionsPerSecond
void UnityEngine::EventSystems::OVRInputModule::set_inputActionsPerSecond(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_inputActionsPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inputActionsPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_horizontalAxis
::StringW UnityEngine::EventSystems::OVRInputModule::get_horizontalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_horizontalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_horizontalAxis
void UnityEngine::EventSystems::OVRInputModule::set_horizontalAxis(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_horizontalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_verticalAxis
::StringW UnityEngine::EventSystems::OVRInputModule::get_verticalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_verticalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_verticalAxis
void UnityEngine::EventSystems::OVRInputModule::set_verticalAxis(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_verticalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_submitButton
::StringW UnityEngine::EventSystems::OVRInputModule::get_submitButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_submitButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_submitButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_submitButton
void UnityEngine::EventSystems::OVRInputModule::set_submitButton(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_submitButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_submitButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.get_cancelButton
::StringW UnityEngine::EventSystems::OVRInputModule::get_cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::get_cancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.set_cancelButton
void UnityEngine::EventSystems::OVRInputModule::set_cancelButton(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::set_cancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SendSubmitEventToSelectedObject
bool UnityEngine::EventSystems::OVRInputModule::SendSubmitEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SendSubmitEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendSubmitEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.AllowMoveEventProcessing
bool UnityEngine::EventSystems::OVRInputModule::AllowMoveEventProcessing(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::AllowMoveEventProcessing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllowMoveEventProcessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetRawMoveVector
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRInputModule::GetRawMoveVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetRawMoveVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawMoveVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SendMoveEventToSelectedObject
bool UnityEngine::EventSystems::OVRInputModule::SendMoveEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SendMoveEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMoveEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SendUpdateEventToSelectedObject
bool UnityEngine::EventSystems::OVRInputModule::SendUpdateEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SendUpdateEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUpdateEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ProcessMousePress
void UnityEngine::EventSystems::OVRInputModule::ProcessMousePress(::UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ProcessMousePress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMousePress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ProcessMouseEvent
void UnityEngine::EventSystems::OVRInputModule::ProcessMouseEvent(::UnityEngine::EventSystems::PointerInputModule::MouseState* mouseData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ProcessMouseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMouseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mouseData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mouseData);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.UseMouse
bool UnityEngine::EventSystems::OVRInputModule::UseMouse(bool pressed, bool released, ::UnityEngine::EventSystems::PointerEventData* pointerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::UseMouse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRInputModule", "UseMouse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressed), ::il2cpp_utils::ExtractType(released), ::il2cpp_utils::ExtractType(pointerData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pressed, released, pointerData);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.CopyFromTo
void UnityEngine::EventSystems::OVRInputModule::CopyFromTo(::UnityEngine::EventSystems::OVRPointerEventData* from, ::UnityEngine::EventSystems::OVRPointerEventData* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::CopyFromTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFromTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.CopyFromTo
void UnityEngine::EventSystems::OVRInputModule::CopyFromTo(::UnityEngine::EventSystems::PointerEventData* from, ::UnityEngine::EventSystems::PointerEventData* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::CopyFromTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFromTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetPointerData
bool UnityEngine::EventSystems::OVRInputModule::GetPointerData(int id, ByRef<::UnityEngine::EventSystems::OVRPointerEventData*> data, bool create) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetPointerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::EventSystems::OVRPointerEventData*&>(), ::il2cpp_utils::ExtractType(create)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id, byref(data), create);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ClearSelection
void UnityEngine::EventSystems::OVRInputModule::ClearSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetRectTransformNormal
::UnityEngine::Vector3 UnityEngine::EventSystems::OVRInputModule::GetRectTransformNormal(::UnityEngine::RectTransform* rectTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetRectTransformNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRInputModule", "GetRectTransformNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rectTransform);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetGazePointerData
::UnityEngine::EventSystems::PointerInputModule::MouseState* UnityEngine::EventSystems::OVRInputModule::GetGazePointerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetGazePointerData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGazePointerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerInputModule::MouseState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetCanvasPointerData
::UnityEngine::EventSystems::PointerInputModule::MouseState* UnityEngine::EventSystems::OVRInputModule::GetCanvasPointerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetCanvasPointerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanvasPointerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerInputModule::MouseState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ShouldStartDrag
bool UnityEngine::EventSystems::OVRInputModule::ShouldStartDrag(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ShouldStartDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldStartDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.IsPointerMoving
bool UnityEngine::EventSystems::OVRInputModule::IsPointerMoving(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::IsPointerMoving");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRInputModule", "IsPointerMoving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.SwipeAdjustedPosition
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRInputModule::SwipeAdjustedPosition(::UnityEngine::Vector2 originalPosition, ::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::SwipeAdjustedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwipeAdjustedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPosition), ::il2cpp_utils::ExtractType(pointerEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, originalPosition, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetGazeButtonState
::UnityEngine::EventSystems::PointerEventData::FramePressState UnityEngine::EventSystems::OVRInputModule::GetGazeButtonState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetGazeButtonState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGazeButtonState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::PointerEventData::FramePressState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.GetExtraScrollDelta
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRInputModule::GetExtraScrollDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::GetExtraScrollDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtraScrollDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.UpdateModule
void UnityEngine::EventSystems::OVRInputModule::UpdateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::UpdateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.IsModuleSupported
bool UnityEngine::EventSystems::OVRInputModule::IsModuleSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::IsModuleSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsModuleSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ShouldActivateModule
bool UnityEngine::EventSystems::OVRInputModule::ShouldActivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ShouldActivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldActivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ActivateModule
void UnityEngine::EventSystems::OVRInputModule::ActivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ActivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.DeactivateModule
void UnityEngine::EventSystems::OVRInputModule::DeactivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::DeactivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.Process
void UnityEngine::EventSystems::OVRInputModule::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::Process");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRInputModule.ProcessDrag
void UnityEngine::EventSystems::OVRInputModule::ProcessDrag(::UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::ProcessDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointerEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode
#include "UnityEngine/EventSystems/OVRInputModule_InputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode Mouse
::UnityEngine::EventSystems::OVRInputModule::InputMode UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Mouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Mouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::OVRInputModule::InputMode>("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Mouse"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode Mouse
void UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Mouse(::UnityEngine::EventSystems::OVRInputModule::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Mouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Mouse", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode Buttons
::UnityEngine::EventSystems::OVRInputModule::InputMode UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_get_Buttons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::OVRInputModule::InputMode>("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Buttons"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.OVRInputModule/UnityEngine.EventSystems.InputMode Buttons
void UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Buttons(::UnityEngine::EventSystems::OVRInputModule::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::_set_Buttons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRInputModule/InputMode", "Buttons", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::EventSystems::OVRInputModule::InputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRInputModule::InputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster.hpp"
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster_--c.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Int32 kNoEventMaskSet
int UnityEngine::EventSystems::OVRPhysicsRaycaster::_get_kNoEventMaskSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::_get_kNoEventMaskSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.EventSystems", "OVRPhysicsRaycaster", "kNoEventMaskSet"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 kNoEventMaskSet
void UnityEngine::EventSystems::OVRPhysicsRaycaster::_set_kNoEventMaskSet(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::_set_kNoEventMaskSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster", "kNoEventMaskSet", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.LayerMask m_EventMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_m_EventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_m_EventMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EventMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sortOrder
[[deprecated("Use field access instead!")]] int& UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_sortOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::dyn_sortOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortOrder"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_depth
int UnityEngine::EventSystems::OVRPhysicsRaycaster::get_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_depth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_finalEventMask
int UnityEngine::EventSystems::OVRPhysicsRaycaster::get_finalEventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_finalEventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_finalEventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_eventMask
::UnityEngine::LayerMask UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.set_eventMask
void UnityEngine::EventSystems::OVRPhysicsRaycaster::set_eventMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::set_eventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.Spherecast
void UnityEngine::EventSystems::OVRPhysicsRaycaster::Spherecast(::UnityEngine::EventSystems::PointerEventData* eventData, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList, float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::Spherecast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Spherecast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList), ::il2cpp_utils::ExtractType(radius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, resultAppendList, radius);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.GetScreenPos
::UnityEngine::Vector2 UnityEngine::EventSystems::OVRPhysicsRaycaster::GetScreenPos(::UnityEngine::Vector3 worldPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::GetScreenPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScreenPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, worldPosition);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_eventCamera
::UnityEngine::Camera* UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_eventCamera");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.get_sortOrderPriority
int UnityEngine::EventSystems::OVRPhysicsRaycaster::get_sortOrderPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::get_sortOrderPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortOrderPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster.Raycast
void UnityEngine::EventSystems::OVRPhysicsRaycaster::Raycast(::UnityEngine::EventSystems::PointerEventData* eventData, ::System::Collections::Generic::List_1<::UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::Raycast");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c
#include "UnityEngine/EventSystems/OVRPhysicsRaycaster_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c <>9
::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c* UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c*>("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c <>9
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9(::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__15_0
::System::Comparison_1<::UnityEngine::RaycastHit>* UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__15_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::RaycastHit>*>("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__15_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__15_0
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__15_0(::System::Comparison_1<::UnityEngine::RaycastHit>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__15_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__15_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__16_0
::System::Comparison_1<::UnityEngine::RaycastHit>* UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__16_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_get_$$9__16_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::RaycastHit>*>("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__16_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.RaycastHit> <>9__16_0
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__16_0(::System::Comparison_1<::UnityEngine::RaycastHit>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_set_$$9__16_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", "<>9__16_0", value)));
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c..cctor
void UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "OVRPhysicsRaycaster/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c.<Raycast>b__15_0
int UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::$Raycast$b__15_0(::UnityEngine::RaycastHit r1, ::UnityEngine::RaycastHit r2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::<Raycast>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Raycast>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r1), ::il2cpp_utils::ExtractType(r2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r1, r2);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPhysicsRaycaster/UnityEngine.EventSystems.<>c.<Spherecast>b__16_0
int UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::$Spherecast$b__16_0(::UnityEngine::RaycastHit r1, ::UnityEngine::RaycastHit r2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPhysicsRaycaster::$$c::<Spherecast>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Spherecast>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r1), ::il2cpp_utils::ExtractType(r2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r1, r2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.OVRPointerEventData
#include "UnityEngine/EventSystems/OVRPointerEventData.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Ray worldSpaceRay
[[deprecated("Use field access instead!")]] ::UnityEngine::Ray& UnityEngine::EventSystems::OVRPointerEventData::dyn_worldSpaceRay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPointerEventData::dyn_worldSpaceRay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldSpaceRay"))->offset;
  return *reinterpret_cast<::UnityEngine::Ray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 swipeStart
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::EventSystems::OVRPointerEventData::dyn_swipeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPointerEventData::dyn_swipeStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swipeStart"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.EventSystems.OVRPointerEventData.ToString
::StringW UnityEngine::EventSystems::OVRPointerEventData::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::OVRPointerEventData::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.PointerEventDataExtension
#include "UnityEngine/EventSystems/PointerEventDataExtension.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.IsVRPointer
bool UnityEngine::EventSystems::PointerEventDataExtension::IsVRPointer(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::IsVRPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "IsVRPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.GetRay
::UnityEngine::Ray UnityEngine::EventSystems::PointerEventDataExtension::GetRay(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::GetRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "GetRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Ray, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.GetSwipeStart
::UnityEngine::Vector2 UnityEngine::EventSystems::PointerEventDataExtension::GetSwipeStart(::UnityEngine::EventSystems::PointerEventData* pointerEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::GetSwipeStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "GetSwipeStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventDataExtension.SetSwipeStart
void UnityEngine::EventSystems::PointerEventDataExtension::SetSwipeStart(::UnityEngine::EventSystems::PointerEventData* pointerEventData, ::UnityEngine::Vector2 start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::EventSystems::PointerEventDataExtension::SetSwipeStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerEventDataExtension", "SetSwipeStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEventData), ::il2cpp_utils::ExtractType(start)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointerEventData, start);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizationKeyAttribute
#include "GlobalNamespace/LocalizationKeyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizationProvider
#include "GlobalNamespace/LocalizationProvider.hpp"
// Including type: Polyglot.Localization
#include "Polyglot/Localization.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private LocalizationProvider _instance
::GlobalNamespace::LocalizationProvider* GlobalNamespace::LocalizationProvider::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizationProvider::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalizationProvider*>("", "LocalizationProvider", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private LocalizationProvider _instance
void GlobalNamespace::LocalizationProvider::_set__instance(::GlobalNamespace::LocalizationProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizationProvider::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalizationProvider", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.Localization _localization
[[deprecated("Use field access instead!")]] ::Polyglot::Localization*& GlobalNamespace::LocalizationProvider::dyn__localization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizationProvider::dyn__localization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localization"))->offset;
  return *reinterpret_cast<::Polyglot::Localization**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalizationProvider.get_localization
::Polyglot::Localization* GlobalNamespace::LocalizationProvider::get_localization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizationProvider::get_localization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::Localization*, false>(this, ___internal__method);
}
// Autogenerated method: LocalizationProvider.get_Instance
::GlobalNamespace::LocalizationProvider* GlobalNamespace::LocalizationProvider::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizationProvider::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalizationProvider", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocalizationProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LocalizationProvider.set_Instance
void GlobalNamespace::LocalizationProvider::set_Instance(::GlobalNamespace::LocalizationProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizationProvider::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalizationProvider", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LocalizationProvider.get_HasInstance
bool GlobalNamespace::LocalizationProvider::get_HasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizationProvider::get_HasInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalizationProvider", "get_HasInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.CsvReader
#include "Polyglot/CsvReader.hpp"
// Including type: Polyglot.CsvReader/Polyglot.ParsingMode
#include "Polyglot/CsvReader_ParsingMode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.CsvReader.Parse
::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::StringW>*>* Polyglot::CsvReader::Parse(::StringW src) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvReader::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "CsvReader", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::StringW>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.CsvReader/Polyglot.ParsingMode
#include "Polyglot/CsvReader_ParsingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Polyglot.CsvReader/Polyglot.ParsingMode None
::Polyglot::CsvReader::ParsingMode Polyglot::CsvReader::ParsingMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvReader::ParsingMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::CsvReader::ParsingMode>("Polyglot", "CsvReader/ParsingMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.CsvReader/Polyglot.ParsingMode None
void Polyglot::CsvReader::ParsingMode::_set_None(::Polyglot::CsvReader::ParsingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvReader::ParsingMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "CsvReader/ParsingMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.CsvReader/Polyglot.ParsingMode OutQuote
::Polyglot::CsvReader::ParsingMode Polyglot::CsvReader::ParsingMode::_get_OutQuote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvReader::ParsingMode::_get_OutQuote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::CsvReader::ParsingMode>("Polyglot", "CsvReader/ParsingMode", "OutQuote"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.CsvReader/Polyglot.ParsingMode OutQuote
void Polyglot::CsvReader::ParsingMode::_set_OutQuote(::Polyglot::CsvReader::ParsingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvReader::ParsingMode::_set_OutQuote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "CsvReader/ParsingMode", "OutQuote", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.CsvReader/Polyglot.ParsingMode InQuote
::Polyglot::CsvReader::ParsingMode Polyglot::CsvReader::ParsingMode::_get_InQuote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvReader::ParsingMode::_get_InQuote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::CsvReader::ParsingMode>("Polyglot", "CsvReader/ParsingMode", "InQuote"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.CsvReader/Polyglot.ParsingMode InQuote
void Polyglot::CsvReader::ParsingMode::_set_InQuote(::Polyglot::CsvReader::ParsingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvReader::ParsingMode::_set_InQuote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "CsvReader/ParsingMode", "InQuote", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Polyglot::CsvReader::ParsingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvReader::ParsingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.CsvWriter
#include "Polyglot/CsvWriter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.CsvWriter.AppendRow
void Polyglot::CsvWriter::AppendRow(::StringW filePath, ::System::Collections::Generic::List_1<::StringW>* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvWriter::AppendRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "CsvWriter", "AppendRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, row);
}
// Autogenerated method: Polyglot.CsvWriter.AppendElement
void Polyglot::CsvWriter::AppendElement(::System::Text::StringBuilder* buffer, ::StringW element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvWriter::AppendElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "CsvWriter", "AppendElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, element);
}
// Autogenerated method: Polyglot.CsvWriter.HasEscapeChars
bool Polyglot::CsvWriter::HasEscapeChars(::StringW element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::CsvWriter::HasEscapeChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "CsvWriter", "HasEscapeChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.TsvReader
#include "Polyglot/TsvReader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.TsvReader.Parse
::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::StringW>*>* Polyglot::TsvReader::Parse(::StringW src) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::TsvReader::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "TsvReader", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Collections::Generic::List_1<::StringW>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.GoogleDownload
#include "Polyglot/GoogleDownload.hpp"
// Including type: Polyglot.GoogleDownload/Polyglot.<DownloadSheet>d__0
#include "Polyglot/GoogleDownload_-DownloadSheet-d__0.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Polyglot.GoogleDriveDownloadFormat
#include "Polyglot/GoogleDriveDownloadFormat.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.GoogleDownload.DownloadSheet
::System::Collections::IEnumerator* Polyglot::GoogleDownload::DownloadSheet(::StringW docsId, ::StringW sheetId, ::System::Action_1<::StringW>* done, ::Polyglot::GoogleDriveDownloadFormat format, ::System::Func_2<float, bool>* progressbar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::DownloadSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "GoogleDownload", "DownloadSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(docsId), ::il2cpp_utils::ExtractType(sheetId), ::il2cpp_utils::ExtractType(done), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(progressbar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, docsId, sheetId, done, format, progressbar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.GoogleDownload/Polyglot.<DownloadSheet>d__0
#include "Polyglot/GoogleDownload_-DownloadSheet-d__0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<System.Single,System.Boolean> progressbar
[[deprecated("Use field access instead!")]] ::System::Func_2<float, bool>*& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_progressbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_progressbar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressbar"))->offset;
  return *reinterpret_cast<::System::Func_2<float, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> done
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_done");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "done"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String docsId
[[deprecated("Use field access instead!")]] ::StringW& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_docsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_docsId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "docsId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sheetId
[[deprecated("Use field access instead!")]] ::StringW& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_sheetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_sheetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sheetId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Polyglot.GoogleDriveDownloadFormat format
[[deprecated("Use field access instead!")]] ::Polyglot::GoogleDriveDownloadFormat& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_format");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "format"))->offset;
  return *reinterpret_cast<::Polyglot::GoogleDriveDownloadFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <url>5__2
[[deprecated("Use field access instead!")]] ::StringW& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_$url$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_$url$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<url>5__2"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_$www$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::dyn_$www$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.GoogleDownload/Polyglot.<DownloadSheet>d__0.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* Polyglot::GoogleDownload::$DownloadSheet$d__0::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.GoogleDownload/Polyglot.<DownloadSheet>d__0.System.Collections.IEnumerator.get_Current
::Il2CppObject* Polyglot::GoogleDownload::$DownloadSheet$d__0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.GoogleDownload/Polyglot.<DownloadSheet>d__0.System.IDisposable.Dispose
void Polyglot::GoogleDownload::$DownloadSheet$d__0::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.GoogleDownload/Polyglot.<DownloadSheet>d__0.MoveNext
bool Polyglot::GoogleDownload::$DownloadSheet$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.GoogleDownload/Polyglot.<DownloadSheet>d__0.System.Collections.IEnumerator.Reset
void Polyglot::GoogleDownload::$DownloadSheet$d__0::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDownload::$DownloadSheet$d__0::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.GoogleDriveDownloadFormat
#include "Polyglot/GoogleDriveDownloadFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Polyglot.GoogleDriveDownloadFormat CSV
::Polyglot::GoogleDriveDownloadFormat Polyglot::GoogleDriveDownloadFormat::_get_CSV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDriveDownloadFormat::_get_CSV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::GoogleDriveDownloadFormat>("Polyglot", "GoogleDriveDownloadFormat", "CSV"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.GoogleDriveDownloadFormat CSV
void Polyglot::GoogleDriveDownloadFormat::_set_CSV(::Polyglot::GoogleDriveDownloadFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDriveDownloadFormat::_set_CSV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "GoogleDriveDownloadFormat", "CSV", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.GoogleDriveDownloadFormat TSV
::Polyglot::GoogleDriveDownloadFormat Polyglot::GoogleDriveDownloadFormat::_get_TSV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDriveDownloadFormat::_get_TSV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::GoogleDriveDownloadFormat>("Polyglot", "GoogleDriveDownloadFormat", "TSV"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.GoogleDriveDownloadFormat TSV
void Polyglot::GoogleDriveDownloadFormat::_set_TSV(::Polyglot::GoogleDriveDownloadFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDriveDownloadFormat::_set_TSV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "GoogleDriveDownloadFormat", "TSV", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Polyglot::GoogleDriveDownloadFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::GoogleDriveDownloadFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.ILocalize
#include "Polyglot/ILocalize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.ILocalize.OnLocalize
void Polyglot::ILocalize::OnLocalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::ILocalize::OnLocalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLocalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.Language
#include "Polyglot/Language.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Polyglot.Language English
::Polyglot::Language Polyglot::Language::_get_English() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_English");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "English"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language English
void Polyglot::Language::_set_English(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_English");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "English", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language French
::Polyglot::Language Polyglot::Language::_get_French() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_French");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "French"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language French
void Polyglot::Language::_set_French(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_French");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "French", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Spanish
::Polyglot::Language Polyglot::Language::_get_Spanish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Spanish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Spanish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Spanish
void Polyglot::Language::_set_Spanish(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Spanish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Spanish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language German
::Polyglot::Language Polyglot::Language::_get_German() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_German");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "German"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language German
void Polyglot::Language::_set_German(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_German");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "German", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Italian
::Polyglot::Language Polyglot::Language::_get_Italian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Italian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Italian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Italian
void Polyglot::Language::_set_Italian(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Italian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Italian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Portuguese_Brazil
::Polyglot::Language Polyglot::Language::_get_Portuguese_Brazil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Portuguese_Brazil");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Portuguese_Brazil"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Portuguese_Brazil
void Polyglot::Language::_set_Portuguese_Brazil(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Portuguese_Brazil");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Portuguese_Brazil", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Portuguese
::Polyglot::Language Polyglot::Language::_get_Portuguese() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Portuguese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Portuguese"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Portuguese
void Polyglot::Language::_set_Portuguese(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Portuguese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Portuguese", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Russian
::Polyglot::Language Polyglot::Language::_get_Russian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Russian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Russian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Russian
void Polyglot::Language::_set_Russian(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Russian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Russian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Greek
::Polyglot::Language Polyglot::Language::_get_Greek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Greek");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Greek"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Greek
void Polyglot::Language::_set_Greek(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Greek");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Greek", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Turkish
::Polyglot::Language Polyglot::Language::_get_Turkish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Turkish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Turkish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Turkish
void Polyglot::Language::_set_Turkish(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Turkish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Turkish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Danish
::Polyglot::Language Polyglot::Language::_get_Danish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Danish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Danish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Danish
void Polyglot::Language::_set_Danish(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Danish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Danish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Norwegian
::Polyglot::Language Polyglot::Language::_get_Norwegian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Norwegian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Norwegian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Norwegian
void Polyglot::Language::_set_Norwegian(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Norwegian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Norwegian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Swedish
::Polyglot::Language Polyglot::Language::_get_Swedish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Swedish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Swedish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Swedish
void Polyglot::Language::_set_Swedish(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Swedish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Swedish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Dutch
::Polyglot::Language Polyglot::Language::_get_Dutch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Dutch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Dutch"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Dutch
void Polyglot::Language::_set_Dutch(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Dutch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Dutch", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Polish
::Polyglot::Language Polyglot::Language::_get_Polish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Polish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Polish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Polish
void Polyglot::Language::_set_Polish(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Polish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Polish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Finnish
::Polyglot::Language Polyglot::Language::_get_Finnish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Finnish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Finnish"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Finnish
void Polyglot::Language::_set_Finnish(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Finnish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Finnish", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Japanese
::Polyglot::Language Polyglot::Language::_get_Japanese() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Japanese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Japanese"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Japanese
void Polyglot::Language::_set_Japanese(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Japanese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Japanese", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Simplified_Chinese
::Polyglot::Language Polyglot::Language::_get_Simplified_Chinese() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Simplified_Chinese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Simplified_Chinese"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Simplified_Chinese
void Polyglot::Language::_set_Simplified_Chinese(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Simplified_Chinese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Simplified_Chinese", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Traditional_Chinese
::Polyglot::Language Polyglot::Language::_get_Traditional_Chinese() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Traditional_Chinese");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Traditional_Chinese"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Traditional_Chinese
void Polyglot::Language::_set_Traditional_Chinese(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Traditional_Chinese");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Traditional_Chinese", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Korean
::Polyglot::Language Polyglot::Language::_get_Korean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Korean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Korean"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Korean
void Polyglot::Language::_set_Korean(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Korean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Korean", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Czech
::Polyglot::Language Polyglot::Language::_get_Czech() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Czech");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Czech"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Czech
void Polyglot::Language::_set_Czech(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Czech");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Czech", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Hungarian
::Polyglot::Language Polyglot::Language::_get_Hungarian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Hungarian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Hungarian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Hungarian
void Polyglot::Language::_set_Hungarian(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Hungarian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Hungarian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Romanian
::Polyglot::Language Polyglot::Language::_get_Romanian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Romanian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Romanian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Romanian
void Polyglot::Language::_set_Romanian(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Romanian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Romanian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Thai
::Polyglot::Language Polyglot::Language::_get_Thai() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Thai");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Thai"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Thai
void Polyglot::Language::_set_Thai(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Thai");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Thai", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Bulgarian
::Polyglot::Language Polyglot::Language::_get_Bulgarian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Bulgarian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Bulgarian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Bulgarian
void Polyglot::Language::_set_Bulgarian(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Bulgarian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Bulgarian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Hebrew
::Polyglot::Language Polyglot::Language::_get_Hebrew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Hebrew");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Hebrew"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Hebrew
void Polyglot::Language::_set_Hebrew(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Hebrew");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Hebrew", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Arabic
::Polyglot::Language Polyglot::Language::_get_Arabic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Arabic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Arabic"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Arabic
void Polyglot::Language::_set_Arabic(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Arabic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Arabic", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Bosnian
::Polyglot::Language Polyglot::Language::_get_Bosnian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Bosnian");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Bosnian"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Bosnian
void Polyglot::Language::_set_Bosnian(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Bosnian");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Bosnian", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Debug_Keys
::Polyglot::Language Polyglot::Language::_get_Debug_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Debug_Keys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Debug_Keys"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Debug_Keys
void Polyglot::Language::_set_Debug_Keys(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Debug_Keys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Debug_Keys", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Debug_English_Reverted
::Polyglot::Language Polyglot::Language::_get_Debug_English_Reverted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Debug_English_Reverted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Debug_English_Reverted"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Debug_English_Reverted
void Polyglot::Language::_set_Debug_English_Reverted(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Debug_English_Reverted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Debug_English_Reverted", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.Language Debug_Word_With_Max_Lenght
::Polyglot::Language Polyglot::Language::_get_Debug_Word_With_Max_Lenght() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_get_Debug_Word_With_Max_Lenght");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Language>("Polyglot", "Language", "Debug_Word_With_Max_Lenght"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.Language Debug_Word_With_Max_Lenght
void Polyglot::Language::_set_Debug_Word_With_Max_Lenght(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::_set_Debug_Word_With_Max_Lenght");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Language", "Debug_Word_With_Max_Lenght", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Polyglot::Language::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Language::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LanguageExtensions
#include "Polyglot/LanguageExtensions.hpp"
// Including type: Polyglot.Language
#include "Polyglot/Language.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LanguageExtensions.ToSerializedName
::StringW Polyglot::LanguageExtensions::ToSerializedName(::Polyglot::Language lang) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageExtensions::ToSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LanguageExtensions", "ToSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lang)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lang);
}
// Autogenerated method: Polyglot.LanguageExtensions.ToCultureInfoName
::StringW Polyglot::LanguageExtensions::ToCultureInfoName(::Polyglot::Language lang) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageExtensions::ToCultureInfoName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LanguageExtensions", "ToCultureInfoName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lang)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lang);
}
// Autogenerated method: Polyglot.LanguageExtensions.ToLanguage
::Polyglot::Language Polyglot::LanguageExtensions::ToLanguage(::StringW serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageExtensions::ToLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LanguageExtensions", "ToLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::Language, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, serializedName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LanguageDirection
#include "Polyglot/LanguageDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Polyglot.LanguageDirection LeftToRight
::Polyglot::LanguageDirection Polyglot::LanguageDirection::_get_LeftToRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDirection::_get_LeftToRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::LanguageDirection>("Polyglot", "LanguageDirection", "LeftToRight"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.LanguageDirection LeftToRight
void Polyglot::LanguageDirection::_set_LeftToRight(::Polyglot::LanguageDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDirection::_set_LeftToRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "LanguageDirection", "LeftToRight", value));
}
// Autogenerated static field getter
// Get static field: static public Polyglot.LanguageDirection RightToLeft
::Polyglot::LanguageDirection Polyglot::LanguageDirection::_get_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDirection::_get_RightToLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::LanguageDirection>("Polyglot", "LanguageDirection", "RightToLeft"));
}
// Autogenerated static field setter
// Set static field: static public Polyglot.LanguageDirection RightToLeft
void Polyglot::LanguageDirection::_set_RightToLeft(::Polyglot::LanguageDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDirection::_set_RightToLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "LanguageDirection", "RightToLeft", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Polyglot::LanguageDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LanguageDropdown
#include "Polyglot/LanguageDropdown.hpp"
// Including type: UnityEngine.UI.Dropdown
#include "UnityEngine/UI/Dropdown.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Dropdown dropdown
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Dropdown*& Polyglot::LanguageDropdown::dyn_dropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDropdown::dyn_dropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dropdown"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Dropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.LanguageDropdown.Reset
void Polyglot::LanguageDropdown::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDropdown::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LanguageDropdown.Start
void Polyglot::LanguageDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LanguageDropdown.CreateDropdown
void Polyglot::LanguageDropdown::CreateDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDropdown::CreateDropdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDropdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LanguageDropdown.OnLocalize
void Polyglot::LanguageDropdown::OnLocalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LanguageDropdown::OnLocalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLocalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.Localization
#include "Polyglot/Localization.hpp"
// Including type: Polyglot.LocalizationDocument
#include "Polyglot/LocalizationDocument.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Polyglot.LocalizationAsset
#include "Polyglot/LocalizationAsset.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Polyglot.LanguageDirection
#include "Polyglot/LanguageDirection.hpp"
// Including type: UnityEngine.SystemLanguage
#include "UnityEngine/SystemLanguage.hpp"
// Including type: Polyglot.ILocalize
#include "Polyglot/ILocalize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String KeyNotFound
::StringW Polyglot::Localization::_get_KeyNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::_get_KeyNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Polyglot", "Localization", "KeyNotFound"));
}
// Autogenerated static field setter
// Set static field: static private System.String KeyNotFound
void Polyglot::Localization::_set_KeyNotFound(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::_set_KeyNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Localization", "KeyNotFound", value));
}
// Autogenerated static field getter
// Get static field: static private Polyglot.Localization instance
::Polyglot::Localization* Polyglot::Localization::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Polyglot::Localization*>("Polyglot", "Localization", "instance"));
}
// Autogenerated static field setter
// Set static field: static private Polyglot.Localization instance
void Polyglot::Localization::_set_instance(::Polyglot::Localization* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "Localization", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.LocalizationDocument customDocument
[[deprecated("Use field access instead!")]] ::Polyglot::LocalizationDocument*& Polyglot::Localization::dyn_customDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::dyn_customDocument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customDocument"))->offset;
  return *reinterpret_cast<::Polyglot::LocalizationDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Polyglot.LocalizationAsset> inputFiles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Polyglot::LocalizationAsset*>*& Polyglot::Localization::dyn_inputFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::dyn_inputFiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputFiles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Polyglot::LocalizationAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Polyglot.Language> supportedLanguages
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Polyglot::Language>*& Polyglot::Localization::dyn_supportedLanguages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::dyn_supportedLanguages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportedLanguages"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Polyglot::Language>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.Language selectedLanguage
[[deprecated("Use field access instead!")]] ::Polyglot::Language& Polyglot::Localization::dyn_selectedLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::dyn_selectedLanguage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedLanguage"))->offset;
  return *reinterpret_cast<::Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.Language fallbackLanguage
[[deprecated("Use field access instead!")]] ::Polyglot::Language& Polyglot::Localization::dyn_fallbackLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::dyn_fallbackLanguage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackLanguage"))->offset;
  return *reinterpret_cast<::Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent Localize
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Polyglot::Localization::dyn_Localize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::dyn_Localize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Localize"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo selectedCultureInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& Polyglot::Localization::dyn_selectedCultureInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::dyn_selectedCultureInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedCultureInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.Localization.get_CustomDocument
::Polyglot::LocalizationDocument* Polyglot::Localization::get_CustomDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_CustomDocument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::LocalizationDocument*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_InputFiles
::System::Collections::Generic::List_1<::Polyglot::LocalizationAsset*>* Polyglot::Localization::get_InputFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_InputFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Polyglot::LocalizationAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_Instance
::Polyglot::Localization* Polyglot::Localization::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "Localization", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::Localization*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.Localization.set_Instance
void Polyglot::Localization::set_Instance(::Polyglot::Localization* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::set_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "Localization", "set_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Polyglot.Localization.get_HasInstance
bool Polyglot::Localization::get_HasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_HasInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "Localization", "get_HasInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_SupportedLanguages
::System::Collections::Generic::List_1<::Polyglot::Language>* Polyglot::Localization::get_SupportedLanguages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_SupportedLanguages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportedLanguages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Polyglot::Language>*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_SelectedLanguageDirection
::Polyglot::LanguageDirection Polyglot::Localization::get_SelectedLanguageDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_SelectedLanguageDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectedLanguageDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::LanguageDirection, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_SelectedLanguageIndex
int Polyglot::Localization::get_SelectedLanguageIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_SelectedLanguageIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectedLanguageIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_SelectedCultureInfo
::System::Globalization::CultureInfo* Polyglot::Localization::get_SelectedCultureInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_SelectedCultureInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectedCultureInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_SelectedLanguage
::Polyglot::Language Polyglot::Localization::get_SelectedLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_SelectedLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelectedLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::Language, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.set_SelectedLanguage
void Polyglot::Localization::set_SelectedLanguage(::Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::set_SelectedLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SelectedLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.Localization.get_EnglishLanguageNames
::System::Collections::Generic::List_1<::StringW>* Polyglot::Localization::get_EnglishLanguageNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_EnglishLanguageNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnglishLanguageNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_LocalizedLanguageNames
::System::Collections::Generic::List_1<::StringW>* Polyglot::Localization::get_LocalizedLanguageNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_LocalizedLanguageNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalizedLanguageNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_EnglishLanguageName
::StringW Polyglot::Localization::get_EnglishLanguageName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_EnglishLanguageName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnglishLanguageName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.get_LocalizedLanguageName
::StringW Polyglot::Localization::get_LocalizedLanguageName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::get_LocalizedLanguageName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalizedLanguageName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.GetLanguageDirection
::Polyglot::LanguageDirection Polyglot::Localization::GetLanguageDirection(::Polyglot::Language language) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::GetLanguageDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLanguageDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(language)})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::LanguageDirection, false>(this, ___internal__method, language);
}
// Autogenerated method: Polyglot.Localization.IsLanguageSupported
bool Polyglot::Localization::IsLanguageSupported(::Polyglot::Language language) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::IsLanguageSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLanguageSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(language)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, language);
}
// Autogenerated method: Polyglot.Localization.InvokeOnLocalize
void Polyglot::Localization::InvokeOnLocalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::InvokeOnLocalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnLocalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.Localization.SelectLanguage
void Polyglot::Localization::SelectLanguage(int selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::SelectLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selected);
}
// Autogenerated method: Polyglot.Localization.SelectLanguage
void Polyglot::Localization::SelectLanguage(::Polyglot::Language selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::SelectLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selected);
}
// Autogenerated method: Polyglot.Localization.ConvertSystemLanguage
::Polyglot::Language Polyglot::Localization::ConvertSystemLanguage(::UnityEngine::SystemLanguage selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::ConvertSystemLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertSystemLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selected)})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::Language, false>(this, ___internal__method, selected);
}
// Autogenerated method: Polyglot.Localization.AddOnLocalizeEvent
void Polyglot::Localization::AddOnLocalizeEvent(::Polyglot::ILocalize* localize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::AddOnLocalizeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOnLocalizeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localize);
}
// Autogenerated method: Polyglot.Localization.RemoveOnLocalizeEvent
void Polyglot::Localization::RemoveOnLocalizeEvent(::Polyglot::ILocalize* localize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::RemoveOnLocalizeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveOnLocalizeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localize);
}
// Autogenerated method: Polyglot.Localization.Get
::StringW Polyglot::Localization::Get(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "Localization", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Polyglot.Localization.Get
::StringW Polyglot::Localization::Get(::StringW key, ::Polyglot::Language language) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "Localization", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(language)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, language);
}
// Autogenerated method: Polyglot.Localization.KeyExist
bool Polyglot::Localization::KeyExist(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::KeyExist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "Localization", "KeyExist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Polyglot.Localization.GetKeys
::System::Collections::Generic::List_1<::StringW>* Polyglot::Localization::GetKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::GetKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "Localization", "GetKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.Localization.GetFormat
::StringW Polyglot::Localization::GetFormat(::StringW key, ::ArrayW<::Il2CppObject*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::GetFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "Localization", "GetFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, arguments);
}
// Autogenerated method: Polyglot.Localization.InputFilesContains
bool Polyglot::Localization::InputFilesContains(::Polyglot::LocalizationDocument* doc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::Localization::InputFilesContains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InputFilesContains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, doc);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizationAsset
#include "Polyglot/LocalizationAsset.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextAsset textAsset
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& Polyglot::LocalizationAsset::dyn_textAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationAsset::dyn_textAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textAsset"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.GoogleDriveDownloadFormat format
[[deprecated("Use field access instead!")]] ::Polyglot::GoogleDriveDownloadFormat& Polyglot::LocalizationAsset::dyn_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationAsset::dyn_format");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "format"))->offset;
  return *reinterpret_cast<::Polyglot::GoogleDriveDownloadFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.LocalizationAsset.get_TextAsset
::UnityEngine::TextAsset* Polyglot::LocalizationAsset::get_TextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationAsset::get_TextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextAsset*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationAsset.set_TextAsset
void Polyglot::LocalizationAsset::set_TextAsset(::UnityEngine::TextAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationAsset::set_TextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.LocalizationAsset.get_Format
::Polyglot::GoogleDriveDownloadFormat Polyglot::LocalizationAsset::get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationAsset::get_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::GoogleDriveDownloadFormat, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationAsset.set_Format
void Polyglot::LocalizationAsset::set_Format(::Polyglot::GoogleDriveDownloadFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationAsset::set_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizationDocument
#include "Polyglot/LocalizationDocument.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String docsId
[[deprecated("Use field access instead!")]] ::StringW& Polyglot::LocalizationDocument::dyn_docsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::dyn_docsId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "docsId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sheetId
[[deprecated("Use field access instead!")]] ::StringW& Polyglot::LocalizationDocument::dyn_sheetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::dyn_sheetId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sheetId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.GoogleDriveDownloadFormat format
[[deprecated("Use field access instead!")]] ::Polyglot::GoogleDriveDownloadFormat& Polyglot::LocalizationDocument::dyn_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::dyn_format");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "format"))->offset;
  return *reinterpret_cast<::Polyglot::GoogleDriveDownloadFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextAsset textAsset
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& Polyglot::LocalizationDocument::dyn_textAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::dyn_textAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textAsset"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean downloadOnStart
[[deprecated("Use field access instead!")]] bool& Polyglot::LocalizationDocument::dyn_downloadOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::dyn_downloadOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "downloadOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.LocalizationDocument.get_TextAsset
::UnityEngine::TextAsset* Polyglot::LocalizationDocument::get_TextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::get_TextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextAsset*, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationDocument.set_TextAsset
void Polyglot::LocalizationDocument::set_TextAsset(::UnityEngine::TextAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::set_TextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.LocalizationDocument.get_DocsId
::StringW Polyglot::LocalizationDocument::get_DocsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::get_DocsId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocsId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationDocument.set_DocsId
void Polyglot::LocalizationDocument::set_DocsId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::set_DocsId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DocsId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.LocalizationDocument.get_SheetId
::StringW Polyglot::LocalizationDocument::get_SheetId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::get_SheetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SheetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationDocument.set_SheetId
void Polyglot::LocalizationDocument::set_SheetId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::set_SheetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SheetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.LocalizationDocument.get_Format
::Polyglot::GoogleDriveDownloadFormat Polyglot::LocalizationDocument::get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::get_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Polyglot::GoogleDriveDownloadFormat, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationDocument.set_Format
void Polyglot::LocalizationDocument::set_Format(::Polyglot::GoogleDriveDownloadFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::set_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Polyglot.LocalizationDocument.get_DownloadOnStart
bool Polyglot::LocalizationDocument::get_DownloadOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::get_DownloadOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DownloadOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationDocument.set_DownloadOnStart
void Polyglot::LocalizationDocument::set_DownloadOnStart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationDocument::set_DownloadOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DownloadOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizationImporter
#include "Polyglot/LocalizationImporter.hpp"
// Including type: Polyglot.LocalizationImporter/Polyglot.<>c__DisplayClass5_0
#include "Polyglot/LocalizationImporter_--c__DisplayClass5_0.hpp"
// Including type: Polyglot.LocalizationImporter/Polyglot.<>c__DisplayClass8_0
#include "Polyglot/LocalizationImporter_--c__DisplayClass8_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Polyglot.LocalizationAsset
#include "Polyglot/LocalizationAsset.hpp"
// Including type: Polyglot.Localization
#include "Polyglot/Localization.hpp"
// Including type: Polyglot.GoogleDriveDownloadFormat
#include "Polyglot/GoogleDriveDownloadFormat.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Polyglot.LocalizationDocument
#include "Polyglot/LocalizationDocument.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<System.String>> languageStrings
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::StringW>*>* Polyglot::LocalizationImporter::_get_languageStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::_get_languageStrings");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::StringW>*>*>("Polyglot", "LocalizationImporter", "languageStrings")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<System.String>> languageStrings
void Polyglot::LocalizationImporter::_set_languageStrings(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::_set_languageStrings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "LocalizationImporter", "languageStrings", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.String> EmptyList
::System::Collections::Generic::List_1<::StringW>* Polyglot::LocalizationImporter::_get_EmptyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::_get_EmptyList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::StringW>*>("Polyglot", "LocalizationImporter", "EmptyList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.String> EmptyList
void Polyglot::LocalizationImporter::_set_EmptyList(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::_set_EmptyList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "LocalizationImporter", "EmptyList", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Polyglot.LocalizationAsset> InputFiles
::System::Collections::Generic::List_1<::Polyglot::LocalizationAsset*>* Polyglot::LocalizationImporter::_get_InputFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::_get_InputFiles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Polyglot::LocalizationAsset*>*>("Polyglot", "LocalizationImporter", "InputFiles"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Polyglot.LocalizationAsset> InputFiles
void Polyglot::LocalizationImporter::_set_InputFiles(::System::Collections::Generic::List_1<::Polyglot::LocalizationAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::_set_InputFiles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Polyglot", "LocalizationImporter", "InputFiles", value));
}
// Autogenerated method: Polyglot.LocalizationImporter..cctor
void Polyglot::LocalizationImporter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationImporter.Initialize
void Polyglot::LocalizationImporter::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationImporter.ImportFromGoogle
void Polyglot::LocalizationImporter::ImportFromGoogle(::Polyglot::Localization* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::ImportFromGoogle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "ImportFromGoogle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, settings);
}
// Autogenerated method: Polyglot.LocalizationImporter.Import
void Polyglot::LocalizationImporter::Import(::StringW text, ::Polyglot::GoogleDriveDownloadFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::Import");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "Import", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, format);
}
// Autogenerated method: Polyglot.LocalizationImporter.Download
::System::Collections::IEnumerator* Polyglot::LocalizationImporter::Download(::Polyglot::LocalizationDocument* document, ::System::Action_1<::StringW>* done, ::System::Func_2<float, bool>* progressbar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::Download");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "Download", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(done), ::il2cpp_utils::ExtractType(progressbar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, document, done, progressbar);
}
// Autogenerated method: Polyglot.LocalizationImporter.DownloadCustomSheet
::System::Collections::IEnumerator* Polyglot::LocalizationImporter::DownloadCustomSheet(::System::Func_2<float, bool>* progressbar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::DownloadCustomSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "DownloadCustomSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progressbar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, progressbar);
}
// Autogenerated method: Polyglot.LocalizationImporter.ImportFromFiles
void Polyglot::LocalizationImporter::ImportFromFiles(::Polyglot::Localization* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::ImportFromFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "ImportFromFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, settings);
}
// Autogenerated method: Polyglot.LocalizationImporter.ImportInputFiles
void Polyglot::LocalizationImporter::ImportInputFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::ImportInputFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "ImportInputFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationImporter.ImportTextFile
void Polyglot::LocalizationImporter::ImportTextFile(::StringW text, ::Polyglot::GoogleDriveDownloadFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::ImportTextFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "ImportTextFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(format)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, format);
}
// Autogenerated method: Polyglot.LocalizationImporter.IsLineBreak
bool Polyglot::LocalizationImporter::IsLineBreak(::StringW currentString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::IsLineBreak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "IsLineBreak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentString)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentString);
}
// Autogenerated method: Polyglot.LocalizationImporter.GetLanguages
::System::Collections::Generic::List_1<::StringW>* Polyglot::LocalizationImporter::GetLanguages(::StringW key, ::System::Collections::Generic::List_1<::Polyglot::Language>* supportedLanguages) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::GetLanguages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "GetLanguages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(supportedLanguages)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, supportedLanguages);
}
// Autogenerated method: Polyglot.LocalizationImporter.GetLanguagesStartsWith
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::StringW>*>* Polyglot::LocalizationImporter::GetLanguagesStartsWith(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::GetLanguagesStartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "GetLanguagesStartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::StringW>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Polyglot.LocalizationImporter.GetLanguagesContains
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::StringW>*>* Polyglot::LocalizationImporter::GetLanguagesContains(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::GetLanguagesContains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "GetLanguagesContains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::StringW>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Polyglot.LocalizationImporter.Refresh
void Polyglot::LocalizationImporter::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Polyglot.LocalizationImporter.GetKeys
::System::Collections::Generic::List_1<::StringW>* Polyglot::LocalizationImporter::GetKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::GetKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Polyglot", "LocalizationImporter", "GetKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizationImporter/Polyglot.<>c__DisplayClass5_0
#include "Polyglot/LocalizationImporter_--c__DisplayClass5_0.hpp"
// Including type: Polyglot.Localization
#include "Polyglot/Localization.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Polyglot.Localization settings
[[deprecated("Use field access instead!")]] ::Polyglot::Localization*& Polyglot::LocalizationImporter::$$c__DisplayClass5_0::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::$$c__DisplayClass5_0::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::Polyglot::Localization**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.LocalizationImporter/Polyglot.<>c__DisplayClass5_0.<ImportFromGoogle>b__0
void Polyglot::LocalizationImporter::$$c__DisplayClass5_0::$ImportFromGoogle$b__0(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::$$c__DisplayClass5_0::<ImportFromGoogle>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ImportFromGoogle>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizationImporter/Polyglot.<>c__DisplayClass8_0
#include "Polyglot/LocalizationImporter_--c__DisplayClass8_0.hpp"
// Including type: Polyglot.Localization
#include "Polyglot/Localization.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Polyglot.Localization settings
[[deprecated("Use field access instead!")]] ::Polyglot::Localization*& Polyglot::LocalizationImporter::$$c__DisplayClass8_0::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::$$c__DisplayClass8_0::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::Polyglot::Localization**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.LocalizationImporter/Polyglot.<>c__DisplayClass8_0.<DownloadCustomSheet>b__0
void Polyglot::LocalizationImporter::$$c__DisplayClass8_0::$DownloadCustomSheet$b__0(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizationImporter::$$c__DisplayClass8_0::<DownloadCustomSheet>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadCustomSheet>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizedText
#include "Polyglot/LocalizedText.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.TextAnchor
#include "UnityEngine/TextAnchor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LocalizedText.SetText
void Polyglot::LocalizedText::SetText(::UnityEngine::UI::Text* text, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedText::SetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, value);
}
// Autogenerated method: Polyglot.LocalizedText.UpdateAlignment
void Polyglot::LocalizedText::UpdateAlignment(::UnityEngine::UI::Text* text, ::Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedText::UpdateAlignment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(direction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, direction);
}
// Autogenerated method: Polyglot.LocalizedText.IsOppositeDirection
bool Polyglot::LocalizedText::IsOppositeDirection(::UnityEngine::TextAnchor alignment, ::Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedText::IsOppositeDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOppositeDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment, direction);
}
// Autogenerated method: Polyglot.LocalizedText.IsAlignmentRight
bool Polyglot::LocalizedText::IsAlignmentRight(::UnityEngine::TextAnchor alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedText::IsAlignmentRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlignmentRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated method: Polyglot.LocalizedText.IsAlignmentLeft
bool Polyglot::LocalizedText::IsAlignmentLeft(::UnityEngine::TextAnchor alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedText::IsAlignmentLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlignmentLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizedTextMesh
#include "Polyglot/LocalizedTextMesh.hpp"
// Including type: UnityEngine.TextMesh
#include "UnityEngine/TextMesh.hpp"
// Including type: UnityEngine.TextAlignment
#include "UnityEngine/TextAlignment.hpp"
// Including type: Polyglot.LanguageDirection
#include "Polyglot/LanguageDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextMesh text
[[deprecated("Use field access instead!")]] ::UnityEngine::TextMesh*& Polyglot::LocalizedTextMesh::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::UnityEngine::TextMesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String key
[[deprecated("Use field access instead!")]] ::StringW& Polyglot::LocalizedTextMesh::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.get_Key
::StringW Polyglot::LocalizedTextMesh::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::get_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.Reset
void Polyglot::LocalizedTextMesh::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.Start
void Polyglot::LocalizedTextMesh::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.OnLocalize
void Polyglot::LocalizedTextMesh::OnLocalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::OnLocalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLocalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.IsOppositeDirection
bool Polyglot::LocalizedTextMesh::IsOppositeDirection(::UnityEngine::TextAlignment alignment, ::Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::IsOppositeDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOppositeDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment, direction);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.IsAlignmentRight
bool Polyglot::LocalizedTextMesh::IsAlignmentRight(::UnityEngine::TextAlignment alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::IsAlignmentRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlignmentRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated method: Polyglot.LocalizedTextMesh.IsAlignmentLeft
bool Polyglot::LocalizedTextMesh::IsAlignmentLeft(::UnityEngine::TextAlignment alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMesh::IsAlignmentLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlignmentLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizedTextMeshPro
#include "Polyglot/LocalizedTextMeshPro.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: TMPro.TextAlignmentOptions
#include "TMPro/TextAlignmentOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LocalizedTextMeshPro.SetText
void Polyglot::LocalizedTextMeshPro::SetText(::TMPro::TextMeshPro* text, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshPro::SetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, value);
}
// Autogenerated method: Polyglot.LocalizedTextMeshPro.UpdateAlignment
void Polyglot::LocalizedTextMeshPro::UpdateAlignment(::TMPro::TextMeshPro* text, ::Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshPro::UpdateAlignment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(direction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, direction);
}
// Autogenerated method: Polyglot.LocalizedTextMeshPro.IsOppositeDirection
bool Polyglot::LocalizedTextMeshPro::IsOppositeDirection(::TMPro::TextAlignmentOptions alignment, ::Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshPro::IsOppositeDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOppositeDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment, direction);
}
// Autogenerated method: Polyglot.LocalizedTextMeshPro.IsAlignmentRight
bool Polyglot::LocalizedTextMeshPro::IsAlignmentRight(::TMPro::TextAlignmentOptions alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshPro::IsAlignmentRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlignmentRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated method: Polyglot.LocalizedTextMeshPro.IsAlignmentLeft
bool Polyglot::LocalizedTextMeshPro::IsAlignmentLeft(::TMPro::TextAlignmentOptions alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshPro::IsAlignmentLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlignmentLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.LocalizedTextMeshProUGUI
#include "Polyglot/LocalizedTextMeshProUGUI.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: Polyglot.LanguageDirection
#include "Polyglot/LanguageDirection.hpp"
// Including type: TMPro.TextAlignmentOptions
#include "TMPro/TextAlignmentOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LocalizedTextMeshProUGUI.SetText
void Polyglot::LocalizedTextMeshProUGUI::SetText(::TMPro::TextMeshProUGUI* text, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshProUGUI::SetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, value);
}
// Autogenerated method: Polyglot.LocalizedTextMeshProUGUI.UpdateAlignment
void Polyglot::LocalizedTextMeshProUGUI::UpdateAlignment(::TMPro::TextMeshProUGUI* text, ::Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshProUGUI::UpdateAlignment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(direction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, direction);
}
// Autogenerated method: Polyglot.LocalizedTextMeshProUGUI.IsOppositeDirection
bool Polyglot::LocalizedTextMeshProUGUI::IsOppositeDirection(::TMPro::TextAlignmentOptions alignment, ::Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshProUGUI::IsOppositeDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOppositeDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment, direction);
}
// Autogenerated method: Polyglot.LocalizedTextMeshProUGUI.IsAlignmentRight
bool Polyglot::LocalizedTextMeshProUGUI::IsAlignmentRight(::TMPro::TextAlignmentOptions alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshProUGUI::IsAlignmentRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlignmentRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated method: Polyglot.LocalizedTextMeshProUGUI.IsAlignmentLeft
bool Polyglot::LocalizedTextMeshProUGUI::IsAlignmentLeft(::TMPro::TextAlignmentOptions alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::LocalizedTextMeshProUGUI::IsAlignmentLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlignmentLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alignment)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Polyglot.SaveLanguagePreference
#include "Polyglot/SaveLanguagePreference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String preferenceKey
[[deprecated("Use field access instead!")]] ::StringW& Polyglot::SaveLanguagePreference::dyn_preferenceKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::SaveLanguagePreference::dyn_preferenceKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preferenceKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Polyglot.SaveLanguagePreference.Start
void Polyglot::SaveLanguagePreference::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::SaveLanguagePreference::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Polyglot.SaveLanguagePreference.OnLocalize
void Polyglot::SaveLanguagePreference::OnLocalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Polyglot::SaveLanguagePreference::OnLocalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLocalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AlwaysVisibleQuad
#include "GlobalNamespace/AlwaysVisibleQuad.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::AlwaysVisibleQuad::dyn__mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysVisibleQuad::dyn__mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AlwaysVisibleQuad.OnEnable
void GlobalNamespace::AlwaysVisibleQuad::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysVisibleQuad::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AlwaysVisibleQuad.OnDisable
void GlobalNamespace::AlwaysVisibleQuad::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysVisibleQuad::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BakedLightWithIdBase
#include "GlobalNamespace/BakedLightWithIdBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BakedLightWithIdBase.get_id
int GlobalNamespace::BakedLightWithIdBase::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightWithIdBase::get_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BakedLightWithIdBase.SetupLightSource
void GlobalNamespace::BakedLightWithIdBase::SetupLightSource(float intensityMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightWithIdBase::SetupLightSource");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupLightSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(intensityMultiplier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, intensityMultiplier);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBakedLightWithRenderer
#include "GlobalNamespace/IBakedLightWithRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBakedLightWithRenderer.get_bakingMaterial
::UnityEngine::Material* GlobalNamespace::IBakedLightWithRenderer::get_bakingMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBakedLightWithRenderer::get_bakingMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bakingMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CommandBufferBlurryScreenGrab
#include "GlobalNamespace/CommandBufferBlurryScreenGrab.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: CommandBufferOwners
#include "GlobalNamespace/CommandBufferOwners.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Camera,CommandBufferOwners> _cameras
::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>* GlobalNamespace::CommandBufferBlurryScreenGrab::_get__cameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::_get__cameras");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>*>("", "CommandBufferBlurryScreenGrab", "_cameras")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Camera,CommandBufferOwners> _cameras
void GlobalNamespace::CommandBufferBlurryScreenGrab::_set__cameras(::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::_set__cameras");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CommandBufferBlurryScreenGrab", "_cameras", value));
}
// Autogenerated instance field getter
// Get instance field: private KawaseBlurRendererSO _kawaseBlurRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::KawaseBlurRendererSO*& GlobalNamespace::CommandBufferBlurryScreenGrab::dyn__kawaseBlurRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::dyn__kawaseBlurRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kawaseBlurRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::KawaseBlurRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private KawaseBlurRendererSO/KernelSize _kernelSize
[[deprecated("Use field access instead!")]] ::GlobalNamespace::KawaseBlurRendererSO::KernelSize& GlobalNamespace::CommandBufferBlurryScreenGrab::dyn__kernelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::dyn__kernelSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kernelSize"))->offset;
  return *reinterpret_cast<::GlobalNamespace::KawaseBlurRendererSO::KernelSize*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _cameraEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CameraEvent& GlobalNamespace::CommandBufferBlurryScreenGrab::dyn__cameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::dyn__cameraEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _downsample
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CommandBufferBlurryScreenGrab::dyn__downsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::dyn__downsample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downsample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CommandBufferBlurryScreenGrab..cctor
void GlobalNamespace::CommandBufferBlurryScreenGrab::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CommandBufferBlurryScreenGrab", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CommandBufferBlurryScreenGrab.CreateCommandBuffer
::UnityEngine::Rendering::CommandBuffer* GlobalNamespace::CommandBufferBlurryScreenGrab::CreateCommandBuffer(::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::CreateCommandBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CommandBuffer*, false>(this, ___internal__method, camera);
}
// Autogenerated method: CommandBufferBlurryScreenGrab.CamerasDict
::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>* GlobalNamespace::CommandBufferBlurryScreenGrab::CamerasDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::CamerasDict");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CamerasDict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>*, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferBlurryScreenGrab.CommandBufferCameraEvent
::UnityEngine::Rendering::CameraEvent GlobalNamespace::CommandBufferBlurryScreenGrab::CommandBufferCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferBlurryScreenGrab::CommandBufferCameraEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CommandBufferCameraEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CameraEvent, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CommandBufferGrabPass
#include "GlobalNamespace/CommandBufferGrabPass.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: CommandBufferOwners
#include "GlobalNamespace/CommandBufferOwners.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Camera,CommandBufferOwners> _cameras
::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>* GlobalNamespace::CommandBufferGrabPass::_get__cameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGrabPass::_get__cameras");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>*>("", "CommandBufferGrabPass", "_cameras")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Camera,CommandBufferOwners> _cameras
void GlobalNamespace::CommandBufferGrabPass::_set__cameras(::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGrabPass::_set__cameras");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CommandBufferGrabPass", "_cameras", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _textureName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CommandBufferGrabPass::dyn__textureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGrabPass::dyn__textureName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textureName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _cameraEvent
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CameraEvent& GlobalNamespace::CommandBufferGrabPass::dyn__cameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGrabPass::dyn__cameraEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CommandBufferGrabPass..cctor
void GlobalNamespace::CommandBufferGrabPass::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGrabPass::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CommandBufferGrabPass", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CommandBufferGrabPass.CreateCommandBuffer
::UnityEngine::Rendering::CommandBuffer* GlobalNamespace::CommandBufferGrabPass::CreateCommandBuffer(::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGrabPass::CreateCommandBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CommandBuffer*, false>(this, ___internal__method, camera);
}
// Autogenerated method: CommandBufferGrabPass.CamerasDict
::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>* GlobalNamespace::CommandBufferGrabPass::CamerasDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGrabPass::CamerasDict");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CamerasDict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>*, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferGrabPass.CommandBufferCameraEvent
::UnityEngine::Rendering::CameraEvent GlobalNamespace::CommandBufferGrabPass::CommandBufferCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGrabPass::CommandBufferCameraEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CommandBufferCameraEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CameraEvent, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CommandBufferGOCore
#include "GlobalNamespace/CommandBufferGOCore.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: CommandBufferOwners
#include "GlobalNamespace/CommandBufferOwners.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Rendering.CameraEvent
#include "UnityEngine/Rendering/CameraEvent.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1111970
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material _material
::UnityEngine::Material* GlobalNamespace::CommandBufferGOCore::_get__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::_get__material");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Material*>("", "CommandBufferGOCore", "_material"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material _material
void GlobalNamespace::CommandBufferGOCore::_set__material(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::_set__material");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CommandBufferGOCore", "_material", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Camera,CommandBufferOwners> _cameras
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>*& GlobalNamespace::CommandBufferGOCore::dyn__cameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::dyn__cameras");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameras"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _mesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GlobalNamespace::CommandBufferGOCore::dyn__mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::dyn__mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CommandBufferGOCore.OnEnable
void GlobalNamespace::CommandBufferGOCore::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferGOCore.OnDisable
void GlobalNamespace::CommandBufferGOCore::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferGOCore.OnWillRenderObject
void GlobalNamespace::CommandBufferGOCore::OnWillRenderObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::OnWillRenderObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnWillRenderObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferGOCore.CommandBufferCameraEvent
::UnityEngine::Rendering::CameraEvent GlobalNamespace::CommandBufferGOCore::CommandBufferCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::CommandBufferCameraEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CommandBufferCameraEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CameraEvent, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferGOCore.CreateCommandBuffer
::UnityEngine::Rendering::CommandBuffer* GlobalNamespace::CommandBufferGOCore::CreateCommandBuffer(::UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::CreateCommandBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::CommandBuffer*, false>(this, ___internal__method, camera);
}
// Autogenerated method: CommandBufferGOCore.CamerasDict
::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>* GlobalNamespace::CommandBufferGOCore::CamerasDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferGOCore::CamerasDict");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CamerasDict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::UnityEngine::Camera*, ::GlobalNamespace::CommandBufferOwners*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CommandBufferOwners
#include "GlobalNamespace/CommandBufferOwners.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<UnityEngine.Object> _owners
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::UnityEngine::Object*>*& GlobalNamespace::CommandBufferOwners::dyn__owners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferOwners::dyn__owners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_owners"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::Object*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rendering.CommandBuffer commandBuffer
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::CommandBuffer*& GlobalNamespace::CommandBufferOwners::dyn_commandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferOwners::dyn_commandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "commandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CommandBufferOwners.get_NumberOfOwners
int GlobalNamespace::CommandBufferOwners::get_NumberOfOwners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferOwners::get_NumberOfOwners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberOfOwners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CommandBufferOwners.AddOwner
void GlobalNamespace::CommandBufferOwners::AddOwner(::UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferOwners::AddOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(owner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, owner);
}
// Autogenerated method: CommandBufferOwners.RemoveOwner
void GlobalNamespace::CommandBufferOwners::RemoveOwner(::UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferOwners::RemoveOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(owner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, owner);
}
// Autogenerated method: CommandBufferOwners.ContainsOwner
bool GlobalNamespace::CommandBufferOwners::ContainsOwner(::UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandBufferOwners::ContainsOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(owner)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, owner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisableDepthTexturePS4
#include "GlobalNamespace/DisableDepthTexturePS4.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BoolSO _depthTextureEnabled
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BoolSO*& GlobalNamespace::DisableDepthTexturePS4::dyn__depthTextureEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableDepthTexturePS4::dyn__depthTextureEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depthTextureEnabled"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ExternalCamerasManager
#include "GlobalNamespace/ExternalCamerasManager.hpp"
// Including type: OculusMRCManager
#include "GlobalNamespace/OculusMRCManager.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OculusMRCManager _oculusMRCManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusMRCManager*& GlobalNamespace::ExternalCamerasManager::dyn__oculusMRCManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExternalCamerasManager::dyn__oculusMRCManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusMRCManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusMRCManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _mrcBackgroundCameraPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::ExternalCamerasManager::dyn__mrcBackgroundCameraPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExternalCamerasManager::dyn__mrcBackgroundCameraPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mrcBackgroundCameraPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _mrcForegroundCameraPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::ExternalCamerasManager::dyn__mrcForegroundCameraPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExternalCamerasManager::dyn__mrcForegroundCameraPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mrcForegroundCameraPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ExternalCamerasManager.OnEnable
void GlobalNamespace::ExternalCamerasManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExternalCamerasManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ExternalCamerasManager.InstantiateMixedRealityBackgroundCameraGameObject
::UnityEngine::GameObject* GlobalNamespace::ExternalCamerasManager::InstantiateMixedRealityBackgroundCameraGameObject(::UnityEngine::GameObject* mainCameraGameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExternalCamerasManager::InstantiateMixedRealityBackgroundCameraGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateMixedRealityBackgroundCameraGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainCameraGameObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, mainCameraGameObject);
}
// Autogenerated method: ExternalCamerasManager.InstantiateMixedRealityForegroundCameraGameObject
::UnityEngine::GameObject* GlobalNamespace::ExternalCamerasManager::InstantiateMixedRealityForegroundCameraGameObject(::UnityEngine::GameObject* mainCameraGameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ExternalCamerasManager::InstantiateMixedRealityForegroundCameraGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateMixedRealityForegroundCameraGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainCameraGameObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, mainCameraGameObject);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FadeInOnSceneTransitionFinished
#include "GlobalNamespace/FadeInOnSceneTransitionFinished.hpp"
// Including type: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3
#include "GlobalNamespace/FadeInOnSceneTransitionFinished_-FadeInAfterSceneTransitionCoroutine-d__3.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FadeInOutController _fadeInOut
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FadeInOutController*& GlobalNamespace::FadeInOnSceneTransitionFinished::dyn__fadeInOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::dyn__fadeInOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInOut"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FadeInOutController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameScenesManager _gameScenesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameScenesManager*& GlobalNamespace::FadeInOnSceneTransitionFinished::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FadeInOnSceneTransitionFinished.OnEnable
void GlobalNamespace::FadeInOnSceneTransitionFinished::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeInOnSceneTransitionFinished.FadeInAfterSceneTransitionCoroutine
::System::Collections::IEnumerator* GlobalNamespace::FadeInOnSceneTransitionFinished::FadeInAfterSceneTransitionCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::FadeInAfterSceneTransitionCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeInAfterSceneTransitionCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3
#include "GlobalNamespace/FadeInOnSceneTransitionFinished_-FadeInAfterSceneTransitionCoroutine-d__3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FadeInOnSceneTransitionFinished <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FadeInOnSceneTransitionFinished*& GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FadeInOnSceneTransitionFinished**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3.System.IDisposable.Dispose
void GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3.MoveNext
bool GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FadeInOnSceneTransitionFinished/<FadeInAfterSceneTransitionCoroutine>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeInOnSceneTransitionFinished::$FadeInAfterSceneTransitionCoroutine$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FadeOutInstantly
#include "GlobalNamespace/FadeOutInstantly.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FadeInOutController _fadeInOut
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FadeInOutController*& GlobalNamespace::FadeOutInstantly::dyn__fadeInOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutInstantly::dyn__fadeInOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInOut"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FadeInOutController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FadeOutInstantly.Start
void GlobalNamespace::FadeOutInstantly::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutInstantly::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FadeOutOnSceneTransitionStart
#include "GlobalNamespace/FadeOutOnSceneTransitionStart.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly FadeInOutController _fadeInOut
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FadeInOutController*& GlobalNamespace::FadeOutOnSceneTransitionStart::dyn__fadeInOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutOnSceneTransitionStart::dyn__fadeInOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInOut"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FadeInOutController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameScenesManager*& GlobalNamespace::FadeOutOnSceneTransitionStart::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutOnSceneTransitionStart::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FadeOutOnSceneTransitionStart.Start
void GlobalNamespace::FadeOutOnSceneTransitionStart::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutOnSceneTransitionStart::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeOutOnSceneTransitionStart.OnDestroy
void GlobalNamespace::FadeOutOnSceneTransitionStart::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutOnSceneTransitionStart::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FadeOutOnSceneTransitionStart.HandleGameScenesManagerTransitionDidStart
void GlobalNamespace::FadeOutOnSceneTransitionStart::HandleGameScenesManagerTransitionDidStart(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FadeOutOnSceneTransitionStart::HandleGameScenesManagerTransitionDidStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameScenesManagerTransitionDidStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FakeMirrorSettings
#include "GlobalNamespace/FakeMirrorSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1111D24
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _fakeMirrorTransparencyId
int GlobalNamespace::FakeMirrorSettings::_get__fakeMirrorTransparencyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_get__fakeMirrorTransparencyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FakeMirrorSettings", "_fakeMirrorTransparencyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _fakeMirrorTransparencyId
void GlobalNamespace::FakeMirrorSettings::_set__fakeMirrorTransparencyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_set__fakeMirrorTransparencyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FakeMirrorSettings", "_fakeMirrorTransparencyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1111D34
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _vertexDistortionNoiseScaleId
int GlobalNamespace::FakeMirrorSettings::_get__vertexDistortionNoiseScaleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_get__vertexDistortionNoiseScaleId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FakeMirrorSettings", "_vertexDistortionNoiseScaleId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _vertexDistortionNoiseScaleId
void GlobalNamespace::FakeMirrorSettings::_set__vertexDistortionNoiseScaleId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_set__vertexDistortionNoiseScaleId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FakeMirrorSettings", "_vertexDistortionNoiseScaleId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1111D44
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _vertexDistortionStrengthId
int GlobalNamespace::FakeMirrorSettings::_get__vertexDistortionStrengthId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_get__vertexDistortionStrengthId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FakeMirrorSettings", "_vertexDistortionStrengthId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _vertexDistortionStrengthId
void GlobalNamespace::FakeMirrorSettings::_set__vertexDistortionStrengthId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_set__vertexDistortionStrengthId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FakeMirrorSettings", "_vertexDistortionStrengthId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1111D54
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _vertexDistortionDirectionalityId
int GlobalNamespace::FakeMirrorSettings::_get__vertexDistortionDirectionalityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_get__vertexDistortionDirectionalityId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FakeMirrorSettings", "_vertexDistortionDirectionalityId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _vertexDistortionDirectionalityId
void GlobalNamespace::FakeMirrorSettings::_set__vertexDistortionDirectionalityId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_set__vertexDistortionDirectionalityId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FakeMirrorSettings", "_vertexDistortionDirectionalityId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1111D64
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _vertexDistortionZposMultiplierId
int GlobalNamespace::FakeMirrorSettings::_get__vertexDistortionZposMultiplierId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_get__vertexDistortionZposMultiplierId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "FakeMirrorSettings", "_vertexDistortionZposMultiplierId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _vertexDistortionZposMultiplierId
void GlobalNamespace::FakeMirrorSettings::_set__vertexDistortionZposMultiplierId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::_set__vertexDistortionZposMultiplierId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FakeMirrorSettings", "_vertexDistortionZposMultiplierId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fakeMirrorTransparency
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FakeMirrorSettings::dyn__fakeMirrorTransparency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::dyn__fakeMirrorTransparency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fakeMirrorTransparency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useVertexDistortion
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FakeMirrorSettings::dyn__useVertexDistortion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::dyn__useVertexDistortion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useVertexDistortion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _vertexDistortionNoiseScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FakeMirrorSettings::dyn__vertexDistortionNoiseScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::dyn__vertexDistortionNoiseScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertexDistortionNoiseScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _vertexDistortionStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FakeMirrorSettings::dyn__vertexDistortionStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::dyn__vertexDistortionStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertexDistortionStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _vertexDistortionDirectionality
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::FakeMirrorSettings::dyn__vertexDistortionDirectionality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::dyn__vertexDistortionDirectionality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertexDistortionDirectionality"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _vertexDistortionZposMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FakeMirrorSettings::dyn__vertexDistortionZposMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::dyn__vertexDistortionZposMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertexDistortionZposMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FakeMirrorSettings.get_fakeMirrorTransparency
float GlobalNamespace::FakeMirrorSettings::get_fakeMirrorTransparency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::get_fakeMirrorTransparency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fakeMirrorTransparency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: FakeMirrorSettings.set_fakeMirrorTransparency
void GlobalNamespace::FakeMirrorSettings::set_fakeMirrorTransparency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::set_fakeMirrorTransparency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fakeMirrorTransparency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FakeMirrorSettings..cctor
void GlobalNamespace::FakeMirrorSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FakeMirrorSettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FakeMirrorSettings.Start
void GlobalNamespace::FakeMirrorSettings::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FakeMirrorSettings.OnEnable
void GlobalNamespace::FakeMirrorSettings::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FakeMirrorSettings.OnValidate
void GlobalNamespace::FakeMirrorSettings::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FakeMirrorSettings.SetGlobalParameters
void GlobalNamespace::FakeMirrorSettings::SetGlobalParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorSettings::SetGlobalParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGlobalParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainCameraCullingMask
#include "GlobalNamespace/MainCameraCullingMask.hpp"
// Including type: MainCameraCullingMask/InitData
#include "GlobalNamespace/MainCameraCullingMask_InitData.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::MainCameraCullingMask::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCameraCullingMask::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MainCameraCullingMask/InitData _initData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainCameraCullingMask::InitData*& GlobalNamespace::MainCameraCullingMask::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCameraCullingMask::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainCameraCullingMask::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainCameraCullingMask.Start
void GlobalNamespace::MainCameraCullingMask::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCameraCullingMask::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainCameraCullingMask/InitData
#include "GlobalNamespace/MainCameraCullingMask_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean showDebris
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MainCameraCullingMask::InitData::dyn_showDebris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCameraCullingMask::InitData::dyn_showDebris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showDebris"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: KawaseBloomMainEffectSO
#include "GlobalNamespace/KawaseBloomMainEffectSO.hpp"
// Including type: KawaseBlurRendererSO
#include "GlobalNamespace/KawaseBlurRendererSO.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1111EDC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _bloomTexID
int GlobalNamespace::KawaseBloomMainEffectSO::_get__bloomTexID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::_get__bloomTexID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "KawaseBloomMainEffectSO", "_bloomTexID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _bloomTexID
void GlobalNamespace::KawaseBloomMainEffectSO::_set__bloomTexID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::_set__bloomTexID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBloomMainEffectSO", "_bloomTexID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1111EEC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _bloomIntensityID
int GlobalNamespace::KawaseBloomMainEffectSO::_get__bloomIntensityID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::_get__bloomIntensityID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "KawaseBloomMainEffectSO", "_bloomIntensityID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _bloomIntensityID
void GlobalNamespace::KawaseBloomMainEffectSO::_set__bloomIntensityID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::_set__bloomIntensityID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBloomMainEffectSO", "_bloomIntensityID", value));
}
// Autogenerated instance field getter
// Get instance field: private KawaseBlurRendererSO _kawaseBlurRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::KawaseBlurRendererSO*& GlobalNamespace::KawaseBloomMainEffectSO::dyn__kawaseBlurRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__kawaseBlurRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kawaseBlurRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::KawaseBlurRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _fadeShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::KawaseBloomMainEffectSO::dyn__fadeShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__fadeShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _mainEffectShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::KawaseBloomMainEffectSO::dyn__mainEffectShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__mainEffectShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bloomIterations
[[deprecated("Use field access instead!")]] int& GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomIterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomIterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomBoost
[[deprecated("Use field access instead!")]] float& GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomBoost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomBoost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomAlphaWeights
[[deprecated("Use field access instead!")]] float& GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomAlphaWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomAlphaWeights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomAlphaWeights"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bloomTextureWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__bloomTextureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomTextureWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _baseColorBoost
[[deprecated("Use field access instead!")]] float& GlobalNamespace::KawaseBloomMainEffectSO::dyn__baseColorBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__baseColorBoost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseColorBoost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _baseColorBoostThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::KawaseBloomMainEffectSO::dyn__baseColorBoostThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__baseColorBoostThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseColorBoostThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _fadeMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::KawaseBloomMainEffectSO::dyn__fadeMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__fadeMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _mainEffectMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::KawaseBloomMainEffectSO::dyn__mainEffectMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::dyn__mainEffectMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: KawaseBloomMainEffectSO..cctor
void GlobalNamespace::KawaseBloomMainEffectSO::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "KawaseBloomMainEffectSO", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.OnDisable
void GlobalNamespace::KawaseBloomMainEffectSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.LazyInitializeMaterials
void GlobalNamespace::KawaseBloomMainEffectSO::LazyInitializeMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::LazyInitializeMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInitializeMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.get_hasPostProcessEffect
bool GlobalNamespace::KawaseBloomMainEffectSO::get_hasPostProcessEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::get_hasPostProcessEffect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasPostProcessEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.OnEnable
void GlobalNamespace::KawaseBloomMainEffectSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.PreRender
void GlobalNamespace::KawaseBloomMainEffectSO::PreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::PreRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KawaseBloomMainEffectSO.Render
void GlobalNamespace::KawaseBloomMainEffectSO::Render(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dest, float fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KawaseBloomMainEffectSO::Render");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(fade)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dest, fade);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainEffectContainerSO
#include "GlobalNamespace/MainEffectContainerSO.hpp"
// Including type: MainEffectSO
#include "GlobalNamespace/MainEffectSO.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MainEffectSO _mainEffect
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainEffectSO*& GlobalNamespace::MainEffectContainerSO::dyn__mainEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectContainerSO::dyn__mainEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _postProcessEnabled
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BoolSO*& GlobalNamespace::MainEffectContainerSO::dyn__postProcessEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectContainerSO::dyn__postProcessEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_postProcessEnabled"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainEffectContainerSO.get_mainEffect
::GlobalNamespace::MainEffectSO* GlobalNamespace::MainEffectContainerSO::get_mainEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectContainerSO::get_mainEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MainEffectSO*, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectContainerSO.Init
void GlobalNamespace::MainEffectContainerSO::Init(::GlobalNamespace::MainEffectSO* mainEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectContainerSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainEffect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainEffect);
}
// Autogenerated method: MainEffectContainerSO.OnEnable
void GlobalNamespace::MainEffectContainerSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectContainerSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainEffectController
#include "GlobalNamespace/MainEffectController.hpp"
// Including type: MainEffectContainerSO
#include "GlobalNamespace/MainEffectContainerSO.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: ImageEffectController
#include "GlobalNamespace/ImageEffectController.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kMainEffectEnabledKeyword
::StringW GlobalNamespace::MainEffectController::_get_kMainEffectEnabledKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::_get_kMainEffectEnabledKeyword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MainEffectController", "kMainEffectEnabledKeyword"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMainEffectEnabledKeyword
void GlobalNamespace::MainEffectController::_set_kMainEffectEnabledKeyword(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::_set_kMainEffectEnabledKeyword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainEffectController", "kMainEffectEnabledKeyword", value));
}
// Autogenerated instance field getter
// Get instance field: private MainEffectContainerSO _mainEffectContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainEffectContainerSO*& GlobalNamespace::MainEffectController::dyn__mainEffectContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::dyn__mainEffectContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainEffectContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FloatSO _fadeValue
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FloatSO*& GlobalNamespace::MainEffectController::dyn__fadeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::dyn__fadeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeValue"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.RenderTexture> afterImageEffectEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::RenderTexture*>*& GlobalNamespace::MainEffectController::dyn_afterImageEffectEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::dyn_afterImageEffectEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "afterImageEffectEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::RenderTexture*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ImageEffectController _imageEffectController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ImageEffectController*& GlobalNamespace::MainEffectController::dyn__imageEffectController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::dyn__imageEffectController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_imageEffectController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ImageEffectController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainEffectController.add_afterImageEffectEvent
void GlobalNamespace::MainEffectController::add_afterImageEffectEvent(::System::Action_1<::UnityEngine::RenderTexture*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::add_afterImageEffectEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_afterImageEffectEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainEffectController.remove_afterImageEffectEvent
void GlobalNamespace::MainEffectController::remove_afterImageEffectEvent(::System::Action_1<::UnityEngine::RenderTexture*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::remove_afterImageEffectEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_afterImageEffectEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainEffectController.OnEnable
void GlobalNamespace::MainEffectController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectController.OnDisable
void GlobalNamespace::MainEffectController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectController.OnValidate
void GlobalNamespace::MainEffectController::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectController.LazySetupImageEffectController
void GlobalNamespace::MainEffectController::LazySetupImageEffectController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::LazySetupImageEffectController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazySetupImageEffectController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectController.ImageEffectControllerCallback
void GlobalNamespace::MainEffectController::ImageEffectControllerCallback(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::ImageEffectControllerCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImageEffectControllerCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dest);
}
// Autogenerated method: MainEffectController.OnPreRender
void GlobalNamespace::MainEffectController::OnPreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::OnPreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectController.OnPostRender
void GlobalNamespace::MainEffectController::OnPostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectController::OnPostRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainEffectCore
#include "GlobalNamespace/MainEffectCore.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1111F4C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _baseColorBoostID
int GlobalNamespace::MainEffectCore::_get__baseColorBoostID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectCore::_get__baseColorBoostID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainEffectCore", "_baseColorBoostID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _baseColorBoostID
void GlobalNamespace::MainEffectCore::_set__baseColorBoostID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectCore::_set__baseColorBoostID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainEffectCore", "_baseColorBoostID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1111F5C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _baseColorBoostThresholdID
int GlobalNamespace::MainEffectCore::_get__baseColorBoostThresholdID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectCore::_get__baseColorBoostThresholdID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainEffectCore", "_baseColorBoostThresholdID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _baseColorBoostThresholdID
void GlobalNamespace::MainEffectCore::_set__baseColorBoostThresholdID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectCore::_set__baseColorBoostThresholdID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainEffectCore", "_baseColorBoostThresholdID", value));
}
// Autogenerated method: MainEffectCore..cctor
void GlobalNamespace::MainEffectCore::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectCore::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MainEffectCore", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MainEffectCore.SetGlobalShaderValues
void GlobalNamespace::MainEffectCore::SetGlobalShaderValues(float baseColorBoost, float baseColorBoostThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectCore::SetGlobalShaderValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MainEffectCore", "SetGlobalShaderValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseColorBoost), ::il2cpp_utils::ExtractType(baseColorBoostThreshold)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseColorBoost, baseColorBoostThreshold);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainEffectSO
#include "GlobalNamespace/MainEffectSO.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainEffectSO.get_hasPostProcessEffect
bool GlobalNamespace::MainEffectSO::get_hasPostProcessEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectSO::get_hasPostProcessEffect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasPostProcessEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectSO.PreRender
void GlobalNamespace::MainEffectSO::PreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectSO::PreRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectSO.Render
void GlobalNamespace::MainEffectSO::Render(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dest, float fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectSO::Render");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(fade)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dest, fade);
}
// Autogenerated method: MainEffectSO.PostRender
void GlobalNamespace::MainEffectSO::PostRender(float fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectSO::PostRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fade)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fade);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoPostProcessMainEffectSO
#include "GlobalNamespace/NoPostProcessMainEffectSO.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _fadeShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::NoPostProcessMainEffectSO::dyn__fadeShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::dyn__fadeShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _baseColorBoost
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoPostProcessMainEffectSO::dyn__baseColorBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::dyn__baseColorBoost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseColorBoost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _baseColorBoostThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoPostProcessMainEffectSO::dyn__baseColorBoostThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::dyn__baseColorBoostThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseColorBoostThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _fadeMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::NoPostProcessMainEffectSO::dyn__fadeMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::dyn__fadeMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoPostProcessMainEffectSO.OnDisable
void GlobalNamespace::NoPostProcessMainEffectSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoPostProcessMainEffectSO.DrawFadeQuad
void GlobalNamespace::NoPostProcessMainEffectSO::DrawFadeQuad(float alpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::DrawFadeQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawFadeQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alpha)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alpha);
}
// Autogenerated method: NoPostProcessMainEffectSO.get_hasPostProcessEffect
bool GlobalNamespace::NoPostProcessMainEffectSO::get_hasPostProcessEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::get_hasPostProcessEffect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasPostProcessEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NoPostProcessMainEffectSO.OnEnable
void GlobalNamespace::NoPostProcessMainEffectSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoPostProcessMainEffectSO.PreRender
void GlobalNamespace::NoPostProcessMainEffectSO::PreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::PreRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoPostProcessMainEffectSO.PostRender
void GlobalNamespace::NoPostProcessMainEffectSO::PostRender(float fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoPostProcessMainEffectSO::PostRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fade)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fade);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PyramidBloomMainEffectSO
#include "GlobalNamespace/PyramidBloomMainEffectSO.hpp"
// Including type: BloomFogSO
#include "GlobalNamespace/BloomFogSO.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1112194
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _bloomTexID
int GlobalNamespace::PyramidBloomMainEffectSO::_get__bloomTexID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::_get__bloomTexID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PyramidBloomMainEffectSO", "_bloomTexID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _bloomTexID
void GlobalNamespace::PyramidBloomMainEffectSO::_set__bloomTexID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::_set__bloomTexID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomMainEffectSO", "_bloomTexID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x11121A4
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _bloomIntensityID
int GlobalNamespace::PyramidBloomMainEffectSO::_get__bloomIntensityID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::_get__bloomIntensityID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PyramidBloomMainEffectSO", "_bloomIntensityID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _bloomIntensityID
void GlobalNamespace::PyramidBloomMainEffectSO::_set__bloomIntensityID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::_set__bloomIntensityID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomMainEffectSO", "_bloomIntensityID", value));
}
// Autogenerated instance field getter
// Get instance field: private PyramidBloomRendererSO _bloomRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PyramidBloomRendererSO*& GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PyramidBloomRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomFogSO _bloomFog
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomFogSO*& GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomFog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomFog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFog"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomFogSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _fadeShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::PyramidBloomMainEffectSO::dyn__fadeShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__fadeShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _mainEffectShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::PyramidBloomMainEffectSO::dyn__mainEffectShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__mainEffectShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomBlendFactor
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomBlendFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomBlendFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomBlendFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _downBloomIntensityOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PyramidBloomMainEffectSO::dyn__downBloomIntensityOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__downBloomIntensityOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downBloomIntensityOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _pyramidWeightsParam
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PyramidBloomMainEffectSO::dyn__pyramidWeightsParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__pyramidWeightsParam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pyramidWeightsParam"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _alphaWeights
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PyramidBloomMainEffectSO::dyn__alphaWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__alphaWeights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alphaWeights"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PyramidBloomRendererSO/Pass _preFilterPass
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PyramidBloomRendererSO::Pass& GlobalNamespace::PyramidBloomMainEffectSO::dyn__preFilterPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__preFilterPass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preFilterPass"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PyramidBloomRendererSO::Pass*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PyramidBloomRendererSO/Pass _downsamplePass
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PyramidBloomRendererSO::Pass& GlobalNamespace::PyramidBloomMainEffectSO::dyn__downsamplePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__downsamplePass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downsamplePass"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PyramidBloomRendererSO::Pass*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PyramidBloomRendererSO/Pass _upsamplePass
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PyramidBloomRendererSO::Pass& GlobalNamespace::PyramidBloomMainEffectSO::dyn__upsamplePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__upsamplePass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_upsamplePass"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PyramidBloomRendererSO::Pass*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PyramidBloomRendererSO/Pass _finalUpsamplePass
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PyramidBloomRendererSO::Pass& GlobalNamespace::PyramidBloomMainEffectSO::dyn__finalUpsamplePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__finalUpsamplePass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalUpsamplePass"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PyramidBloomRendererSO::Pass*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bloomTextureWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__bloomTextureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomTextureWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _baseColorBoost
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PyramidBloomMainEffectSO::dyn__baseColorBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__baseColorBoost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseColorBoost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _baseColorBoostThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PyramidBloomMainEffectSO::dyn__baseColorBoostThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__baseColorBoostThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseColorBoostThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _fadeMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::PyramidBloomMainEffectSO::dyn__fadeMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__fadeMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _mainEffectMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::PyramidBloomMainEffectSO::dyn__mainEffectMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::dyn__mainEffectMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PyramidBloomMainEffectSO..cctor
void GlobalNamespace::PyramidBloomMainEffectSO::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PyramidBloomMainEffectSO", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.OnDisable
void GlobalNamespace::PyramidBloomMainEffectSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.LazyInitializeMaterials
void GlobalNamespace::PyramidBloomMainEffectSO::LazyInitializeMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::LazyInitializeMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInitializeMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.get_hasPostProcessEffect
bool GlobalNamespace::PyramidBloomMainEffectSO::get_hasPostProcessEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::get_hasPostProcessEffect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasPostProcessEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.OnEnable
void GlobalNamespace::PyramidBloomMainEffectSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.PreRender
void GlobalNamespace::PyramidBloomMainEffectSO::PreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::PreRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PyramidBloomMainEffectSO.Render
void GlobalNamespace::PyramidBloomMainEffectSO::Render(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dest, float fade) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PyramidBloomMainEffectSO::Render");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(fade)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dest, fade);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mirror
#include "GlobalNamespace/Mirror.hpp"
// Including type: MirrorRendererSO
#include "GlobalNamespace/MirrorRendererSO.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x11121F4
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _texturePropertyID
int GlobalNamespace::Mirror::_get__texturePropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::_get__texturePropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "Mirror", "_texturePropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _texturePropertyID
void GlobalNamespace::Mirror::_set__texturePropertyID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::_set__texturePropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Mirror", "_texturePropertyID", value));
}
// Autogenerated instance field getter
// Get instance field: private MirrorRendererSO _mirrorRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MirrorRendererSO*& GlobalNamespace::Mirror::dyn__mirrorRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::dyn__mirrorRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirrorRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _renderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::Mirror::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _mirrorMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::Mirror::dyn__mirrorMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::dyn__mirrorMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _noMirrorMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::Mirror::dyn__noMirrorMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::dyn__noMirrorMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noMirrorMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isEnabled>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Mirror::dyn_$isEnabled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::dyn_$isEnabled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isEnabled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> mirrorDidChangeEnabledStateEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& GlobalNamespace::Mirror::dyn_mirrorDidChangeEnabledStateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::dyn_mirrorDidChangeEnabledStateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mirrorDidChangeEnabledStateEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mirror.get_mirrorMaterial
::UnityEngine::Material* GlobalNamespace::Mirror::get_mirrorMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::get_mirrorMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mirrorMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: Mirror.get_noMirrorMaterial
::UnityEngine::Material* GlobalNamespace::Mirror::get_noMirrorMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::get_noMirrorMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noMirrorMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: Mirror.get_isEnabled
bool GlobalNamespace::Mirror::get_isEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::get_isEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mirror.set_isEnabled
void GlobalNamespace::Mirror::set_isEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::set_isEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mirror.add_mirrorDidChangeEnabledStateEvent
void GlobalNamespace::Mirror::add_mirrorDidChangeEnabledStateEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::add_mirrorDidChangeEnabledStateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_mirrorDidChangeEnabledStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mirror.remove_mirrorDidChangeEnabledStateEvent
void GlobalNamespace::Mirror::remove_mirrorDidChangeEnabledStateEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::remove_mirrorDidChangeEnabledStateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_mirrorDidChangeEnabledStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mirror..cctor
void GlobalNamespace::Mirror::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Mirror", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mirror.Update
void GlobalNamespace::Mirror::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mirror.OnWillRenderObject
void GlobalNamespace::Mirror::OnWillRenderObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::OnWillRenderObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnWillRenderObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mirror.ChangeMirrorEnabledState
void GlobalNamespace::Mirror::ChangeMirrorEnabledState(bool newIsEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Mirror::ChangeMirrorEnabledState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeMirrorEnabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newIsEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newIsEnabled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirrorRendererSO
#include "GlobalNamespace/MirrorRendererSO.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: BloomPrePassRendererSO
#include "GlobalNamespace/BloomPrePassRendererSO.hpp"
// Including type: BloomPrePassEffectSO
#include "GlobalNamespace/BloomPrePassEffectSO.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kWaterLayer
int GlobalNamespace::MirrorRendererSO::_get_kWaterLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::_get_kWaterLayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MirrorRendererSO", "kWaterLayer"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kWaterLayer
void GlobalNamespace::MirrorRendererSO::_set_kWaterLayer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::_set_kWaterLayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MirrorRendererSO", "kWaterLayer", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _reflectLayers
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::MirrorRendererSO::dyn__reflectLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__reflectLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectLayers"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _stereoTextureWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MirrorRendererSO::dyn__stereoTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__stereoTextureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stereoTextureWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _stereoTextureHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MirrorRendererSO::dyn__stereoTextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__stereoTextureHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stereoTextureHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _monoTextureWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MirrorRendererSO::dyn__monoTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__monoTextureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_monoTextureWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _monoTextureHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MirrorRendererSO::dyn__monoTextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__monoTextureHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_monoTextureHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxAntiAliasing
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MirrorRendererSO::dyn__maxAntiAliasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__maxAntiAliasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAntiAliasing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disableDepthTexture
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MirrorRendererSO::dyn__disableDepthTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__disableDepthTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disableDepthTexture"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _enableBloomPrePass
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MirrorRendererSO::dyn__enableBloomPrePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__enableBloomPrePass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enableBloomPrePass"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassRendererSO _bloomPrePassRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassRendererSO*& GlobalNamespace::MirrorRendererSO::dyn__bloomPrePassRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__bloomPrePassRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassEffectSO _bloomPrePassEffect
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassEffectSO*& GlobalNamespace::MirrorRendererSO::dyn__bloomPrePassEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__bloomPrePassEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _clearDepthShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::MirrorRendererSO::dyn__clearDepthShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__clearDepthShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearDepthShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _bloomPrePassRenderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::MirrorRendererSO::dyn__bloomPrePassRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__bloomPrePassRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _mirrorCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::MirrorRendererSO::dyn__mirrorCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__mirrorCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _antialiasing
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MirrorRendererSO::dyn__antialiasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__antialiasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_antialiasing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<MirrorRendererSO/CameraTransformData,UnityEngine.RenderTexture> _renderTextures
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::MirrorRendererSO::CameraTransformData, ::UnityEngine::RenderTexture*>*& GlobalNamespace::MirrorRendererSO::dyn__renderTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn__renderTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderTextures"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::MirrorRendererSO::CameraTransformData, ::UnityEngine::RenderTexture*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Rect kLeftRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::MirrorRendererSO::dyn_kLeftRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn_kLeftRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kLeftRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Rect kRightRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::MirrorRendererSO::dyn_kRightRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn_kRightRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kRightRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Rect kFullRect
[[deprecated("Use field access instead!")]] ::UnityEngine::Rect& GlobalNamespace::MirrorRendererSO::dyn_kFullRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::dyn_kFullRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kFullRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MirrorRendererSO.OnValidate
void GlobalNamespace::MirrorRendererSO::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MirrorRendererSO.Awake
void GlobalNamespace::MirrorRendererSO::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MirrorRendererSO.ValidateParams
void GlobalNamespace::MirrorRendererSO::ValidateParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::ValidateParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MirrorRendererSO.Init
void GlobalNamespace::MirrorRendererSO::Init(::UnityEngine::LayerMask reflectLayers, int stereoTextureWidth, int stereoTextureHeight, int monoTextureWidth, int monoTextureHeight, int maxAntiAliasing, bool enableBloomPrePass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reflectLayers), ::il2cpp_utils::ExtractType(stereoTextureWidth), ::il2cpp_utils::ExtractType(stereoTextureHeight), ::il2cpp_utils::ExtractType(monoTextureWidth), ::il2cpp_utils::ExtractType(monoTextureHeight), ::il2cpp_utils::ExtractType(maxAntiAliasing), ::il2cpp_utils::ExtractType(enableBloomPrePass)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reflectLayers, stereoTextureWidth, stereoTextureHeight, monoTextureWidth, monoTextureHeight, maxAntiAliasing, enableBloomPrePass);
}
// Autogenerated method: MirrorRendererSO.PrepareForNextFrame
void GlobalNamespace::MirrorRendererSO::PrepareForNextFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::PrepareForNextFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareForNextFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MirrorRendererSO.GetMirrorTexture
::UnityEngine::Texture* GlobalNamespace::MirrorRendererSO::GetMirrorTexture(::UnityEngine::Vector3 reflectionPlanePos, ::UnityEngine::Vector3 reflectionPlaneNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::GetMirrorTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMirrorTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reflectionPlanePos), ::il2cpp_utils::ExtractType(reflectionPlaneNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture*, false>(this, ___internal__method, reflectionPlanePos, reflectionPlaneNormal);
}
// Autogenerated method: MirrorRendererSO.RenderMirror
void GlobalNamespace::MirrorRendererSO::RenderMirror(::UnityEngine::Vector3 camPosition, ::UnityEngine::Quaternion camRotation, ::UnityEngine::Matrix4x4 camProjectionMatrix, ::UnityEngine::Rect screenRect, ::UnityEngine::Vector3 reclectionPlanePos, ::UnityEngine::Vector3 reflectionPlaneNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::RenderMirror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderMirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camPosition), ::il2cpp_utils::ExtractType(camRotation), ::il2cpp_utils::ExtractType(camProjectionMatrix), ::il2cpp_utils::ExtractType(screenRect), ::il2cpp_utils::ExtractType(reclectionPlanePos), ::il2cpp_utils::ExtractType(reflectionPlaneNormal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, camPosition, camRotation, camProjectionMatrix, screenRect, reclectionPlanePos, reflectionPlaneNormal);
}
// Autogenerated method: MirrorRendererSO.OnDisable
void GlobalNamespace::MirrorRendererSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MirrorRendererSO.CreateOrUpdateMirrorCamera
void GlobalNamespace::MirrorRendererSO::CreateOrUpdateMirrorCamera(::UnityEngine::Camera* currentCamera, ::UnityEngine::RenderTexture* renderTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CreateOrUpdateMirrorCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOrUpdateMirrorCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentCamera), ::il2cpp_utils::ExtractType(renderTexture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentCamera, renderTexture);
}
// Autogenerated method: MirrorRendererSO.Plane
::UnityEngine::Vector4 GlobalNamespace::MirrorRendererSO::Plane(::UnityEngine::Vector3 pos, ::UnityEngine::Vector3 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::Plane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MirrorRendererSO", "Plane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(normal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pos, normal);
}
// Autogenerated method: MirrorRendererSO.CameraSpacePlane
::UnityEngine::Vector4 GlobalNamespace::MirrorRendererSO::CameraSpacePlane(::UnityEngine::Matrix4x4 worldToCameraMatrix, ::UnityEngine::Vector3 pos, ::UnityEngine::Vector3 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CameraSpacePlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MirrorRendererSO", "CameraSpacePlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldToCameraMatrix), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(normal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, worldToCameraMatrix, pos, normal);
}
// Autogenerated method: MirrorRendererSO.CalculateReflectionMatrix
::UnityEngine::Matrix4x4 GlobalNamespace::MirrorRendererSO::CalculateReflectionMatrix(::UnityEngine::Vector4 plane) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CalculateReflectionMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MirrorRendererSO", "CalculateReflectionMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plane)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, plane);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MirrorRendererSO/CameraTransformData
#include "GlobalNamespace/MirrorRendererSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MirrorRendererSO::CameraTransformData::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CameraTransformData::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Quaternion rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::MirrorRendererSO::CameraTransformData::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CameraTransformData::dyn_rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single fov
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MirrorRendererSO::CameraTransformData::dyn_fov() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CameraTransformData::dyn_fov");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fov"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean stereoEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MirrorRendererSO::CameraTransformData::dyn_stereoEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CameraTransformData::dyn_stereoEnabled");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stereoEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MirrorRendererSO/CameraTransformData..ctor
// ABORTED elsewhere.  GlobalNamespace::MirrorRendererSO::CameraTransformData::CameraTransformData(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, float fov, bool stereoEnabled)
// Autogenerated method: MirrorRendererSO/CameraTransformData.Equals
bool GlobalNamespace::MirrorRendererSO::CameraTransformData::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CameraTransformData::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: MirrorRendererSO/CameraTransformData.GetHashCode
int GlobalNamespace::MirrorRendererSO::CameraTransformData::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererSO::CameraTransformData::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RenderTextureFromPostEffect
#include "GlobalNamespace/RenderTextureFromPostEffect.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RenderTexture _targetTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::RenderTextureFromPostEffect::dyn__targetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RenderTextureFromPostEffect::dyn__targetTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::RenderTextureFromPostEffect::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RenderTextureFromPostEffect::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RenderTextureFromPostEffect.get_targetTexture
::UnityEngine::RenderTexture* GlobalNamespace::RenderTextureFromPostEffect::get_targetTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RenderTextureFromPostEffect::get_targetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(this, ___internal__method);
}
// Autogenerated method: RenderTextureFromPostEffect.Awake
void GlobalNamespace::RenderTextureFromPostEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RenderTextureFromPostEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RenderTextureFromPostEffect.OnRenderImage
void GlobalNamespace::RenderTextureFromPostEffect::OnRenderImage(::UnityEngine::RenderTexture* src, ::UnityEngine::RenderTexture* dst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RenderTextureFromPostEffect::OnRenderImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRenderImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dst);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Noise3DTexturesGenerator
#include "GlobalNamespace/Noise3DTexturesGenerator.hpp"
// Including type: UnityEngine.Texture3D
#include "UnityEngine/Texture3D.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Texture3D _texture
::UnityEngine::Texture3D* GlobalNamespace::Noise3DTexturesGenerator::_get__texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Noise3DTexturesGenerator::_get__texture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Texture3D*>("", "Noise3DTexturesGenerator", "_texture"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Texture3D _texture
void GlobalNamespace::Noise3DTexturesGenerator::_set__texture(::UnityEngine::Texture3D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Noise3DTexturesGenerator::_set__texture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Noise3DTexturesGenerator", "_texture", value));
}
// Autogenerated instance field getter
// Get instance field: private Noise3DTexturesGenerator/MaterialTextureParamsCouple[] _data
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::Noise3DTexturesGenerator::MaterialTextureParamsCouple>& GlobalNamespace::Noise3DTexturesGenerator::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Noise3DTexturesGenerator::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::Noise3DTexturesGenerator::MaterialTextureParamsCouple>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Noise3DTexturesGenerator..cctor
void GlobalNamespace::Noise3DTexturesGenerator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Noise3DTexturesGenerator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Noise3DTexturesGenerator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Noise3DTexturesGenerator.Awake
void GlobalNamespace::Noise3DTexturesGenerator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Noise3DTexturesGenerator::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Noise3DTexturesGenerator.CreateNoisePixels
::ArrayW<::UnityEngine::Color32> GlobalNamespace::Noise3DTexturesGenerator::CreateNoisePixels(int width, int height, int depth, float scale, int repeat, float contrast) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Noise3DTexturesGenerator::CreateNoisePixels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Noise3DTexturesGenerator", "CreateNoisePixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(repeat), ::il2cpp_utils::ExtractType(contrast)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Color32>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, width, height, depth, scale, repeat, contrast);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScreenCaptureAfterDelay
#include "GlobalNamespace/ScreenCaptureAfterDelay.hpp"
// Including type: ScreenCaptureAfterDelay/InitData
#include "GlobalNamespace/ScreenCaptureAfterDelay_InitData.hpp"
// Including type: ScreenCaptureAfterDelay/<Start>d__6
#include "GlobalNamespace/ScreenCaptureAfterDelay_-Start-d__6.hpp"
// Including type: MainEffectController
#include "GlobalNamespace/MainEffectController.hpp"
// Including type: ScreenCaptureCache
#include "GlobalNamespace/ScreenCaptureCache.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MainEffectController _mainEffectController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainEffectController*& GlobalNamespace::ScreenCaptureAfterDelay::dyn__mainEffectController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::dyn__mainEffectController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainEffectController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ScreenCaptureCache _screenCaptureCache
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ScreenCaptureCache*& GlobalNamespace::ScreenCaptureAfterDelay::dyn__screenCaptureCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::dyn__screenCaptureCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screenCaptureCache"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScreenCaptureCache**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ScreenCaptureAfterDelay/InitData _initData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ScreenCaptureAfterDelay::InitData*& GlobalNamespace::ScreenCaptureAfterDelay::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScreenCaptureAfterDelay::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _captureTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::ScreenCaptureAfterDelay::dyn__captureTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::dyn__captureTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captureTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _captureRenderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::ScreenCaptureAfterDelay::dyn__captureRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::dyn__captureRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captureRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScreenCaptureAfterDelay.Start
::System::Collections::IEnumerator* GlobalNamespace::ScreenCaptureAfterDelay::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: ScreenCaptureAfterDelay.OnDestroy
void GlobalNamespace::ScreenCaptureAfterDelay::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScreenCaptureAfterDelay.HandleMainEffectControllerAfterImageEffectEvent
void GlobalNamespace::ScreenCaptureAfterDelay::HandleMainEffectControllerAfterImageEffectEvent(::UnityEngine::RenderTexture* renderTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::HandleMainEffectControllerAfterImageEffectEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMainEffectControllerAfterImageEffectEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderTexture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderTexture);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScreenCaptureAfterDelay/InitData
#include "GlobalNamespace/ScreenCaptureAfterDelay_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ScreenCaptureCache/ScreenshotType screenshotType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ScreenCaptureCache::ScreenshotType& GlobalNamespace::ScreenCaptureAfterDelay::InitData::dyn_screenshotType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::InitData::dyn_screenshotType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScreenCaptureCache::ScreenshotType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single screenCaptureTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ScreenCaptureAfterDelay::InitData::dyn_screenCaptureTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::InitData::dyn_screenCaptureTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenCaptureTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 pixelsWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScreenCaptureAfterDelay::InitData::dyn_pixelsWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::InitData::dyn_pixelsWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pixelsWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 pixelsHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScreenCaptureAfterDelay::InitData::dyn_pixelsHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::InitData::dyn_pixelsHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pixelsHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ScreenCaptureAfterDelay/<Start>d__6
#include "GlobalNamespace/ScreenCaptureAfterDelay_-Start-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ScreenCaptureAfterDelay <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ScreenCaptureAfterDelay*& GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScreenCaptureAfterDelay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScreenCaptureAfterDelay/<Start>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ScreenCaptureAfterDelay/<Start>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ScreenCaptureAfterDelay/<Start>d__6.System.IDisposable.Dispose
void GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScreenCaptureAfterDelay/<Start>d__6.MoveNext
bool GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ScreenCaptureAfterDelay/<Start>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureAfterDelay::$Start$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScreenCaptureCache
#include "GlobalNamespace/ScreenCaptureCache.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<ScreenCaptureCache/ScreenshotType,UnityEngine.Texture2D> _cache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::ScreenCaptureCache::ScreenshotType, ::UnityEngine::Texture2D*>*& GlobalNamespace::ScreenCaptureCache::dyn__cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::dyn__cache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::ScreenCaptureCache::ScreenshotType, ::UnityEngine::Texture2D*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScreenCaptureCache.GetLastScreenshot
::UnityEngine::Texture2D* GlobalNamespace::ScreenCaptureCache::GetLastScreenshot(::GlobalNamespace::ScreenCaptureCache::ScreenshotType screenshotType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::GetLastScreenshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastScreenshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method, screenshotType);
}
// Autogenerated method: ScreenCaptureCache.StoreScreenshot
void GlobalNamespace::ScreenCaptureCache::StoreScreenshot(::GlobalNamespace::ScreenCaptureCache::ScreenshotType screenshotType, ::UnityEngine::Texture2D* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::StoreScreenshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreScreenshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotType), ::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, screenshotType, texture);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScreenCaptureCache/ScreenshotType
#include "GlobalNamespace/ScreenCaptureCache.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ScreenCaptureCache/ScreenshotType Game
::GlobalNamespace::ScreenCaptureCache::ScreenshotType GlobalNamespace::ScreenCaptureCache::ScreenshotType::_get_Game() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::ScreenshotType::_get_Game");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScreenCaptureCache::ScreenshotType>("", "ScreenCaptureCache/ScreenshotType", "Game"));
}
// Autogenerated static field setter
// Set static field: static public ScreenCaptureCache/ScreenshotType Game
void GlobalNamespace::ScreenCaptureCache::ScreenshotType::_set_Game(::GlobalNamespace::ScreenCaptureCache::ScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::ScreenshotType::_set_Game");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScreenCaptureCache/ScreenshotType", "Game", value));
}
// Autogenerated static field getter
// Get static field: static public ScreenCaptureCache/ScreenshotType Menu
::GlobalNamespace::ScreenCaptureCache::ScreenshotType GlobalNamespace::ScreenCaptureCache::ScreenshotType::_get_Menu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::ScreenshotType::_get_Menu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScreenCaptureCache::ScreenshotType>("", "ScreenCaptureCache/ScreenshotType", "Menu"));
}
// Autogenerated static field setter
// Set static field: static public ScreenCaptureCache/ScreenshotType Menu
void GlobalNamespace::ScreenCaptureCache::ScreenshotType::_set_Menu(::GlobalNamespace::ScreenCaptureCache::ScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::ScreenshotType::_set_Menu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScreenCaptureCache/ScreenshotType", "Menu", value));
}
// Autogenerated static field getter
// Get static field: static public ScreenCaptureCache/ScreenshotType Other
::GlobalNamespace::ScreenCaptureCache::ScreenshotType GlobalNamespace::ScreenCaptureCache::ScreenshotType::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::ScreenshotType::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScreenCaptureCache::ScreenshotType>("", "ScreenCaptureCache/ScreenshotType", "Other"));
}
// Autogenerated static field setter
// Set static field: static public ScreenCaptureCache/ScreenshotType Other
void GlobalNamespace::ScreenCaptureCache::ScreenshotType::_set_Other(::GlobalNamespace::ScreenCaptureCache::ScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::ScreenshotType::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScreenCaptureCache/ScreenshotType", "Other", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScreenCaptureCache::ScreenshotType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScreenCaptureCache::ScreenshotType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShaderVariantsSO
#include "GlobalNamespace/ShaderVariantsSO.hpp"
// Including type: ShaderVariantsSO/ShaderVariant
#include "GlobalNamespace/ShaderVariantsSO_ShaderVariant.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ShaderVariantsSO/ShaderVariant[] _shaderVariants
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant*>& GlobalNamespace::ShaderVariantsSO::dyn__shaderVariants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::dyn__shaderVariants");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shaderVariants"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ShaderVariantsSO.get_shaderVariants
::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant*> GlobalNamespace::ShaderVariantsSO::get_shaderVariants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::get_shaderVariants");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shaderVariants", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant*>, false>(this, ___internal__method);
}
// Autogenerated method: ShaderVariantsSO.Init
void GlobalNamespace::ShaderVariantsSO::Init(::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant*> shaderVariants) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shaderVariants)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shaderVariants);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShaderVariantsSO/ShaderVariant
#include "GlobalNamespace/ShaderVariantsSO_ShaderVariant.hpp"
// Including type: ShaderVariantsSO/ShaderVariant/Variant
#include "GlobalNamespace/ShaderVariantsSO_ShaderVariant_Variant.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ShaderVariantsSO/ShaderVariant/Variant[] _variants
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant*>& GlobalNamespace::ShaderVariantsSO::ShaderVariant::dyn__variants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::ShaderVariant::dyn__variants");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_variants"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _shader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::ShaderVariantsSO::ShaderVariant::dyn__shader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::ShaderVariant::dyn__shader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ShaderVariantsSO/ShaderVariant.get_variants
::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant*> GlobalNamespace::ShaderVariantsSO::ShaderVariant::get_variants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::ShaderVariant::get_variants");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_variants", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant*>, false>(this, ___internal__method);
}
// Autogenerated method: ShaderVariantsSO/ShaderVariant.get_shader
::UnityEngine::Shader* GlobalNamespace::ShaderVariantsSO::ShaderVariant::get_shader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::ShaderVariant::get_shader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShaderVariantsSO/ShaderVariant/Variant
#include "GlobalNamespace/ShaderVariantsSO_ShaderVariant_Variant.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.PassType _passType
[[deprecated("Use field access instead!")]] ::UnityEngine::Rendering::PassType& GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::dyn__passType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::dyn__passType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_passType"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::PassType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _keywords
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::dyn__keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::dyn__keywords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keywords"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ShaderVariantsSO/ShaderVariant/Variant.get_passType
::UnityEngine::Rendering::PassType GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::get_passType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::get_passType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_passType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::PassType, false>(this, ___internal__method);
}
// Autogenerated method: ShaderVariantsSO/ShaderVariant/Variant.get_keywords
::StringW GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::get_keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::get_keywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
