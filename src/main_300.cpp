// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IUnconnectedConnectionManager
#include "GlobalNamespace/IUnconnectedConnectionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IUnconnectedConnectionManager.PollUpdate
void GlobalNamespace::IUnconnectedConnectionManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnconnectedConnectionManager::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IUnconnectedMessageReceiver
#include "GlobalNamespace/IUnconnectedMessageReceiver.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IUnconnectedMessageReceiver.ReceiveUnconnectedMessage
void GlobalNamespace::IUnconnectedMessageReceiver::ReceiveUnconnectedMessage(::System::Net::IPEndPoint* endPoint, ::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnconnectedMessageReceiver::ReceiveUnconnectedMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveUnconnectedMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, endPoint, reader);
}
// Autogenerated method: IUnconnectedMessageReceiver.PollUpdate
void GlobalNamespace::IUnconnectedMessageReceiver::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnconnectedMessageReceiver::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IUnconnectedMessageSender
#include "GlobalNamespace/IUnconnectedMessageSender.hpp"
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: IUnconnectedMessageReceiver
#include "GlobalNamespace/IUnconnectedMessageReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IUnconnectedMessageSender.get_unconnectedPacketHeader
::ArrayW<uint8_t> GlobalNamespace::IUnconnectedMessageSender::get_unconnectedPacketHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnconnectedMessageSender::get_unconnectedPacketHeader");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unconnectedPacketHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: IUnconnectedMessageSender.get_encryptionLayer
::GlobalNamespace::PacketEncryptionLayer* GlobalNamespace::IUnconnectedMessageSender::get_encryptionLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnconnectedMessageSender::get_encryptionLayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_encryptionLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketEncryptionLayer*, false>(this, ___internal__method);
}
// Autogenerated method: IUnconnectedMessageSender.SendUnconnectedMessage
void GlobalNamespace::IUnconnectedMessageSender::SendUnconnectedMessage(::System::Net::IPEndPoint* remoteEndPoint, ::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnconnectedMessageSender::SendUnconnectedMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUnconnectedMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteEndPoint, writer);
}
// Autogenerated method: IUnconnectedMessageSender.RegisterReceiver
void GlobalNamespace::IUnconnectedMessageSender::RegisterReceiver(::GlobalNamespace::IUnconnectedMessageReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnconnectedMessageSender::RegisterReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: IUnconnectedMessageSender.UnregisterReceiver
void GlobalNamespace::IUnconnectedMessageSender::UnregisterReceiver(::GlobalNamespace::IUnconnectedMessageReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnconnectedMessageSender::UnregisterReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLevelCompletionResults
#include "GlobalNamespace/MultiplayerLevelCompletionResults.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndState _playerLevelEndState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState& GlobalNamespace::MultiplayerLevelCompletionResults::dyn__playerLevelEndState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::dyn__playerLevelEndState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerLevelEndState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason _playerLevelEndReason
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason& GlobalNamespace::MultiplayerLevelCompletionResults::dyn__playerLevelEndReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::dyn__playerLevelEndReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerLevelEndReason"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LevelCompletionResults _levelCompletionResults
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelCompletionResults*& GlobalNamespace::MultiplayerLevelCompletionResults::dyn__levelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::dyn__levelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelCompletionResults"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLevelCompletionResults.get_playerLevelEndState
::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::get_playerLevelEndState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::get_playerLevelEndState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerLevelEndState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelCompletionResults.get_playerLevelEndReason
::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason GlobalNamespace::MultiplayerLevelCompletionResults::get_playerLevelEndReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::get_playerLevelEndReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerLevelEndReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelCompletionResults.get_levelCompletionResults
::GlobalNamespace::LevelCompletionResults* GlobalNamespace::MultiplayerLevelCompletionResults::get_levelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::get_levelCompletionResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelCompletionResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LevelCompletionResults*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelCompletionResults.get_hasAnyResults
bool GlobalNamespace::MultiplayerLevelCompletionResults::get_hasAnyResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::get_hasAnyResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasAnyResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelCompletionResults.get_failedOrGivenUp
bool GlobalNamespace::MultiplayerLevelCompletionResults::get_failedOrGivenUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::get_failedOrGivenUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_failedOrGivenUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelCompletionResults.Serialize
void GlobalNamespace::MultiplayerLevelCompletionResults::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MultiplayerLevelCompletionResults.CreateFromSerializedData
::GlobalNamespace::MultiplayerLevelCompletionResults* GlobalNamespace::MultiplayerLevelCompletionResults::CreateFromSerializedData(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::CreateFromSerializedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerLevelCompletionResults*, false>(this, ___internal__method, reader);
}
// Autogenerated method: MultiplayerLevelCompletionResults.CompareTo
int GlobalNamespace::MultiplayerLevelCompletionResults::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: MultiplayerLevelCompletionResults.HasAnyResult
bool GlobalNamespace::MultiplayerLevelCompletionResults::HasAnyResult(::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState playerLevelEndState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::HasAnyResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerLevelCompletionResults", "HasAnyResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerLevelEndState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerLevelEndState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndState
#include "GlobalNamespace/MultiplayerLevelCompletionResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndState SongFinished
::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState::_get_SongFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState::_get_SongFinished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndState", "SongFinished"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndState SongFinished
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState::_set_SongFinished(::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState::_set_SongFinished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndState", "SongFinished", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndState NotFinished
::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState::_get_NotFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState::_get_NotFinished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndState", "NotFinished"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndState NotFinished
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState::_set_NotFinished(::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState::_set_NotFinished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndState", "NotFinished", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndState NotStarted
::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState::_get_NotStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState::_get_NotStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndState", "NotStarted"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndState NotStarted
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState::_set_NotStarted(::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState::_set_NotStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndState", "NotStarted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason
#include "GlobalNamespace/MultiplayerLevelCompletionResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason Cleared
::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_get_Cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_get_Cleared");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason>("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason", "Cleared"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason Cleared
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_set_Cleared(::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_set_Cleared");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason", "Cleared", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason Failed
::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason>("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason Failed
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_set_Failed(::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason", "Failed", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason GivenUp
::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_get_GivenUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_get_GivenUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason>("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason", "GivenUp"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason GivenUp
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_set_GivenUp(::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_set_GivenUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason", "GivenUp", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason Quit
::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_get_Quit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_get_Quit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason>("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason", "Quit"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason Quit
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_set_Quit(::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_set_Quit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason", "Quit", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason HostEndedLevel
::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_get_HostEndedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_get_HostEndedLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason>("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason", "HostEndedLevel"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason HostEndedLevel
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_set_HostEndedLevel(::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_set_HostEndedLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason", "HostEndedLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason WasInactive
::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_get_WasInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_get_WasInactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason>("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason", "WasInactive"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason WasInactive
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_set_WasInactive(::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_set_WasInactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason", "WasInactive", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason StartupFailed
::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_get_StartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_get_StartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason>("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason", "StartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason StartupFailed
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_set_StartupFailed(::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_set_StartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason", "StartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason ConnectedAfterLevelEnded
::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_get_ConnectedAfterLevelEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_get_ConnectedAfterLevelEnded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason>("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason", "ConnectedAfterLevelEnded"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason ConnectedAfterLevelEnded
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_set_ConnectedAfterLevelEnded(::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::_set_ConnectedAfterLevelEnded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerPlayerLevelEndReason", "ConnectedAfterLevelEnded", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerPlayerLevelEndReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyState
#include "GlobalNamespace/MultiplayerLobbyState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState None
::GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState None
void GlobalNamespace::MultiplayerLobbyState::_set_None(::GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState LobbySetup
::GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_LobbySetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyState::_get_LobbySetup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "LobbySetup"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState LobbySetup
void GlobalNamespace::MultiplayerLobbyState::_set_LobbySetup(::GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyState::_set_LobbySetup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "LobbySetup", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState LobbyCountdown
::GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_LobbyCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyState::_get_LobbyCountdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "LobbyCountdown"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState LobbyCountdown
void GlobalNamespace::MultiplayerLobbyState::_set_LobbyCountdown(::GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyState::_set_LobbyCountdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "LobbyCountdown", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState GameStarting
::GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_GameStarting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyState::_get_GameStarting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "GameStarting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState GameStarting
void GlobalNamespace::MultiplayerLobbyState::_set_GameStarting(::GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyState::_set_GameStarting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "GameStarting", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState GameRunning
::GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_GameRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyState::_get_GameRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "GameRunning"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState GameRunning
void GlobalNamespace::MultiplayerLobbyState::_set_GameRunning(::GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyState::_set_GameRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "GameRunning", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState Error
::GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState Error
void GlobalNamespace::MultiplayerLobbyState::_set_Error(::GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerLobbyState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerGameState
#include "GlobalNamespace/MultiplayerGameState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerGameState None
::GlobalNamespace::MultiplayerGameState GlobalNamespace::MultiplayerGameState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerGameState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerGameState>("", "MultiplayerGameState", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameState None
void GlobalNamespace::MultiplayerGameState::_set_None(::GlobalNamespace::MultiplayerGameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerGameState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerGameState Lobby
::GlobalNamespace::MultiplayerGameState GlobalNamespace::MultiplayerGameState::_get_Lobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerGameState::_get_Lobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerGameState>("", "MultiplayerGameState", "Lobby"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameState Lobby
void GlobalNamespace::MultiplayerGameState::_set_Lobby(::GlobalNamespace::MultiplayerGameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerGameState::_set_Lobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameState", "Lobby", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerGameState Game
::GlobalNamespace::MultiplayerGameState GlobalNamespace::MultiplayerGameState::_get_Game() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerGameState::_get_Game");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerGameState>("", "MultiplayerGameState", "Game"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameState Game
void GlobalNamespace::MultiplayerGameState::_set_Game(::GlobalNamespace::MultiplayerGameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerGameState::_set_Game");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameState", "Game", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerGameState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerGameState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSessionManager
#include "GlobalNamespace/MultiplayerSessionManager.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: MultiplayerSessionManager/<>c__DisplayClass96_0
#include "GlobalNamespace/MultiplayerSessionManager_--c__DisplayClass96_0.hpp"
// Including type: MultiplayerSessionManager/<>c
#include "GlobalNamespace/MultiplayerSessionManager_--c.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: SynchronizedActionQueue
#include "GlobalNamespace/SynchronizedActionQueue.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: INetworkPacketSubSerializer`1
#include "GlobalNamespace/INetworkPacketSubSerializer_1.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: MultiplayerSessionManager/SessionType
#include "GlobalNamespace/MultiplayerSessionManager_SessionType.hpp"
// Including type: UpdateConnectionStateReason
#include "GlobalNamespace/UpdateConnectionStateReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerSessionState
::StringW GlobalNamespace::MultiplayerSessionManager::_get_kMultiplayerSessionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::_get_kMultiplayerSessionState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MultiplayerSessionManager", "kMultiplayerSessionState"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerSessionState
void GlobalNamespace::MultiplayerSessionManager::_set_kMultiplayerSessionState(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::_set_kMultiplayerSessionState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager", "kMultiplayerSessionState", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly NetworkPacketSerializer`2<MultiplayerSessionManager/MessageType,IConnectedPlayer> _packetSerializer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkPacketSerializer_2<::GlobalNamespace::MultiplayerSessionManager_MessageType, ::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::MultiplayerSessionManager::dyn__packetSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn__packetSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetSerializer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkPacketSerializer_2<::GlobalNamespace::MultiplayerSessionManager_MessageType, ::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<IConnectedPlayer> _connectedPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::MultiplayerSessionManager::dyn__connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn__connectedPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _localPlayerState
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::MultiplayerSessionManager::dyn__localPlayerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn__localPlayerState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerState"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SynchronizedActionQueue _synchronizedActionQueue
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SynchronizedActionQueue*& GlobalNamespace::MultiplayerSessionManager::dyn__synchronizedActionQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn__synchronizedActionQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_synchronizedActionQueue"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SynchronizedActionQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxPlayerCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerSessionManager::dyn__maxPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn__maxPlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxPlayerCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerSessionManager/ConnectionState _connectionState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerSessionManager::ConnectionState& GlobalNamespace::MultiplayerSessionManager::dyn__connectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn__connectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerSessionManager::ConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<System.Int32> _freeSortIndices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<int>*& GlobalNamespace::MultiplayerSessionManager::dyn__freeSortIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn__freeSortIndices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_freeSortIndices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action connectedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::MultiplayerSessionManager::dyn_connectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn_connectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ConnectionFailedReason> connectionFailedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::ConnectionFailedReason>*& GlobalNamespace::MultiplayerSessionManager::dyn_connectionFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn_connectionFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionFailedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ConnectionFailedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerConnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::MultiplayerSessionManager::dyn_playerConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn_playerConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerConnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerDisconnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::MultiplayerSessionManager::dyn_playerDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn_playerDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerDisconnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerAvatarChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::MultiplayerSessionManager::dyn_playerAvatarChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn_playerAvatarChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerAvatarChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerStateChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::MultiplayerSessionManager::dyn_playerStateChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn_playerStateChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerStateChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> connectionOwnerStateChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::MultiplayerSessionManager::dyn_connectionOwnerStateChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn_connectionOwnerStateChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionOwnerStateChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<DisconnectedReason> disconnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::DisconnectedReason>*& GlobalNamespace::MultiplayerSessionManager::dyn_disconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn_disconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disconnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IConnectedPlayer <connectionOwner>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::MultiplayerSessionManager::dyn_$connectionOwner$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn_$connectionOwner$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<connectionOwner>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ConnectedPlayerManager _connectedPlayerManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ConnectedPlayerManager*& GlobalNamespace::MultiplayerSessionManager::dyn__connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::dyn__connectedPlayerManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ConnectedPlayerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerSessionManager.get_isConnectionOwner
bool GlobalNamespace::MultiplayerSessionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_connectionOwner
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::get_connectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::get_connectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.set_connectionOwner
void GlobalNamespace::MultiplayerSessionManager::set_connectionOwner(::GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::set_connectionOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.get_isSpectating
bool GlobalNamespace::MultiplayerSessionManager::get_isSpectating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::get_isSpectating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSpectating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isConnectingOrConnected
bool GlobalNamespace::MultiplayerSessionManager::get_isConnectingOrConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::get_isConnectingOrConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectingOrConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isConnected
bool GlobalNamespace::MultiplayerSessionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isConnecting
bool GlobalNamespace::MultiplayerSessionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::get_isConnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isDisconnecting
bool GlobalNamespace::MultiplayerSessionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::get_isDisconnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_connectedPlayers
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::MultiplayerSessionManager::get_connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::get_connectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_connectedPlayerCount
int GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_syncTime
float GlobalNamespace::MultiplayerSessionManager::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::get_syncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isSyncTimeInitialized
bool GlobalNamespace::MultiplayerSessionManager::get_isSyncTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::get_isSyncTimeInitialized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSyncTimeInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_localPlayer
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::get_localPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_connectedPlayerManager
::GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_maxPlayerCount
int GlobalNamespace::MultiplayerSessionManager::get_maxPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::get_maxPlayerCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.add_connectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_connectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::add_connectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_connectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_connectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::remove_connectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_connectionFailedEvent
void GlobalNamespace::MultiplayerSessionManager::add_connectionFailedEvent(::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::add_connectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_connectionFailedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_connectionFailedEvent(::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::remove_connectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_playerConnectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerConnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::add_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_playerConnectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerConnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::remove_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_playerDisconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerDisconnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::add_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_playerDisconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerDisconnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::remove_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_playerAvatarChangedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerAvatarChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::add_playerAvatarChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerAvatarChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_playerAvatarChangedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerAvatarChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::remove_playerAvatarChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerAvatarChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_playerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerStateChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::add_playerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_playerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerStateChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::remove_playerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_connectionOwnerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::add_connectionOwnerStateChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::add_connectionOwnerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionOwnerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_connectionOwnerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_connectionOwnerStateChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::remove_connectionOwnerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionOwnerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_disconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_disconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::add_disconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_disconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_disconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_disconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::remove_disconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_disconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.LateUpdate
void GlobalNamespace::MultiplayerSessionManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.RegisterSerializer
void GlobalNamespace::MultiplayerSessionManager::RegisterSerializer(::GlobalNamespace::MultiplayerSessionManager_MessageType serializerType, ::GlobalNamespace::INetworkPacketSubSerializer_1<::GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::RegisterSerializer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializerType), ::il2cpp_utils::ExtractType(subSerializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializerType, subSerializer);
}
// Autogenerated method: MultiplayerSessionManager.UnregisterSerializer
void GlobalNamespace::MultiplayerSessionManager::UnregisterSerializer(::GlobalNamespace::MultiplayerSessionManager_MessageType serializerType, ::GlobalNamespace::INetworkPacketSubSerializer_1<::GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::UnregisterSerializer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializerType), ::il2cpp_utils::ExtractType(subSerializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializerType, subSerializer);
}
// Autogenerated method: MultiplayerSessionManager.StartSession
void GlobalNamespace::MultiplayerSessionManager::StartSession(::GlobalNamespace::MultiplayerSessionManager_SessionType sessionType, ::GlobalNamespace::ConnectedPlayerManager* connectedPlayerManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::StartSession");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionType), ::il2cpp_utils::ExtractType(connectedPlayerManager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionType, connectedPlayerManager);
}
// Autogenerated method: MultiplayerSessionManager.SetMaxPlayerCount
void GlobalNamespace::MultiplayerSessionManager::SetMaxPlayerCount(int maxPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::SetMaxPlayerCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaxPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxPlayerCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, maxPlayerCount);
}
// Autogenerated method: MultiplayerSessionManager.EndSession
void GlobalNamespace::MultiplayerSessionManager::EndSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::EndSession");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.Disconnect
void GlobalNamespace::MultiplayerSessionManager::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.PerformAtSyncTime
void GlobalNamespace::MultiplayerSessionManager::PerformAtSyncTime(float syncTime, ::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::PerformAtSyncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformAtSyncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncTime), ::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, syncTime, action);
}
// Autogenerated method: MultiplayerSessionManager.UpdateSynchronizedActions
void GlobalNamespace::MultiplayerSessionManager::UpdateSynchronizedActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::UpdateSynchronizedActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSynchronizedActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.HandleInitialized
void GlobalNamespace::MultiplayerSessionManager::HandleInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::HandleInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.HandleConnected
void GlobalNamespace::MultiplayerSessionManager::HandleConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::HandleConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.HandleDisconnected
void GlobalNamespace::MultiplayerSessionManager::HandleDisconnected(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::HandleDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: MultiplayerSessionManager.HandleConnectionFailed
void GlobalNamespace::MultiplayerSessionManager::HandleConnectionFailed(::GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::HandleConnectionFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: MultiplayerSessionManager.HandleSyncTimeInitialized
void GlobalNamespace::MultiplayerSessionManager::HandleSyncTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::HandleSyncTimeInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSyncTimeInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerConnected
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerConnected(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::HandlePlayerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerDisconnected
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerDisconnected(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::HandlePlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerStateChanged
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerStateChanged(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::HandlePlayerStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerAvatarChanged
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerAvatarChanged(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::HandlePlayerAvatarChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerAvatarChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerOrderChanged
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerOrderChanged(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::HandlePlayerOrderChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerOrderChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerLatencyInitialized
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerLatencyInitialized(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::HandlePlayerLatencyInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerLatencyInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.GetPlayerByUserId
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::GetPlayerByUserId(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::GetPlayerByUserId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerByUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated method: MultiplayerSessionManager.GetConnectedPlayer
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::GetConnectedPlayer(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::GetConnectedPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, i);
}
// Autogenerated method: MultiplayerSessionManager.SetLocalPlayerState
void GlobalNamespace::MultiplayerSessionManager::SetLocalPlayerState(::StringW state, bool hasState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::SetLocalPlayerState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(hasState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, hasState);
}
// Autogenerated method: MultiplayerSessionManager.KickPlayer
void GlobalNamespace::MultiplayerSessionManager::KickPlayer(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::KickPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MultiplayerSessionManager.LocalPlayerHasState
bool GlobalNamespace::MultiplayerSessionManager::LocalPlayerHasState(::StringW state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::LocalPlayerHasState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalPlayerHasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, state);
}
// Autogenerated method: MultiplayerSessionManager.UpdateConnectionState
void GlobalNamespace::MultiplayerSessionManager::UpdateConnectionState(::GlobalNamespace::UpdateConnectionStateReason updateReason, ::GlobalNamespace::DisconnectedReason disconnectedReason, ::GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::UpdateConnectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConnectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateReason), ::il2cpp_utils::ExtractType(disconnectedReason), ::il2cpp_utils::ExtractType(connectionFailedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateReason, disconnectedReason, connectionFailedReason);
}
// Autogenerated method: MultiplayerSessionManager.TryUpdateConnectedPlayer
bool GlobalNamespace::MultiplayerSessionManager::TryUpdateConnectedPlayer(::GlobalNamespace::IConnectedPlayer* player, bool isPlayerConnected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::TryUpdateConnectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryUpdateConnectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(isPlayerConnected)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player, isPlayerConnected);
}
// Autogenerated method: MultiplayerSessionManager.GetNextAvailableSortIndex
int GlobalNamespace::MultiplayerSessionManager::GetNextAvailableSortIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::GetNextAvailableSortIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextAvailableSortIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.Start
void GlobalNamespace::MultiplayerSessionManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.Update
void GlobalNamespace::MultiplayerSessionManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.OnDestroy
void GlobalNamespace::MultiplayerSessionManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.OnApplicationPause
void GlobalNamespace::MultiplayerSessionManager::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::OnApplicationPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pauseStatus);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSessionManager/ConnectionState
#include "GlobalNamespace/MultiplayerSessionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/ConnectionState Disconnected
::GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerSessionManager::ConnectionState>("", "MultiplayerSessionManager/ConnectionState", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/ConnectionState Disconnected
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Disconnected(::GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/ConnectionState", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/ConnectionState Connecting
::GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerSessionManager::ConnectionState>("", "MultiplayerSessionManager/ConnectionState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/ConnectionState Connecting
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Connecting(::GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/ConnectionState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/ConnectionState Connected
::GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerSessionManager::ConnectionState>("", "MultiplayerSessionManager/ConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/ConnectionState Connected
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Connected(::GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/ConnectionState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/ConnectionState Disconnecting
::GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Disconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Disconnecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerSessionManager::ConnectionState>("", "MultiplayerSessionManager/ConnectionState", "Disconnecting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/ConnectionState Disconnecting
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Disconnecting(::GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Disconnecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/ConnectionState", "Disconnecting", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerSessionManager::ConnectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::ConnectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSessionManager/<>c__DisplayClass96_0
#include "GlobalNamespace/MultiplayerSessionManager_--c__DisplayClass96_0.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass96_0::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass96_0::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerSessionManager/<>c__DisplayClass96_0.<GetPlayerByUserId>b__0
bool GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass96_0::$GetPlayerByUserId$b__0(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass96_0::<GetPlayerByUserId>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPlayerByUserId>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSessionManager/<>c
#include "GlobalNamespace/MultiplayerSessionManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MultiplayerSessionManager/<>c <>9
::GlobalNamespace::MultiplayerSessionManager::$$c* GlobalNamespace::MultiplayerSessionManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerSessionManager::$$c*>("", "MultiplayerSessionManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MultiplayerSessionManager/<>c <>9
void GlobalNamespace::MultiplayerSessionManager::$$c::_set_$$9(::GlobalNamespace::MultiplayerSessionManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IConnectedPlayer,System.Int32> <>9__102_0
::System::Func_2<::GlobalNamespace::IConnectedPlayer*, int>* GlobalNamespace::MultiplayerSessionManager::$$c::_get_$$9__102_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::$$c::_get_$$9__102_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::IConnectedPlayer*, int>*>("", "MultiplayerSessionManager/<>c", "<>9__102_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IConnectedPlayer,System.Int32> <>9__102_0
void GlobalNamespace::MultiplayerSessionManager::$$c::_set_$$9__102_0(::System::Func_2<::GlobalNamespace::IConnectedPlayer*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::$$c::_set_$$9__102_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/<>c", "<>9__102_0", value)));
}
// Autogenerated method: MultiplayerSessionManager/<>c..cctor
void GlobalNamespace::MultiplayerSessionManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerSessionManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager/<>c.<TryUpdateConnectedPlayer>b__102_0
int GlobalNamespace::MultiplayerSessionManager::$$c::$TryUpdateConnectedPlayer$b__102_0(::GlobalNamespace::IConnectedPlayer* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerSessionManager::$$c::<TryUpdateConnectedPlayer>b__102_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryUpdateConnectedPlayer>b__102_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetLogger
#include "GlobalNamespace/NetLogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetLogger.WriteNet
void GlobalNamespace::NetLogger::WriteNet(::LiteNetLib::NetLogLevel level, ::StringW str, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetLogger::WriteNet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, str, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkConstants
#include "GlobalNamespace/NetworkConstants.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 kProtocolVersion
uint GlobalNamespace::NetworkConstants::_get_kProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_get_kProtocolVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "NetworkConstants", "kProtocolVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 kProtocolVersion
void GlobalNamespace::NetworkConstants::_set_kProtocolVersion(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_set_kProtocolVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "kProtocolVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 kHandshakeMessageType
uint GlobalNamespace::NetworkConstants::_get_kHandshakeMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_get_kHandshakeMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "NetworkConstants", "kHandshakeMessageType"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 kHandshakeMessageType
void GlobalNamespace::NetworkConstants::_set_kHandshakeMessageType(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_set_kHandshakeMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "kHandshakeMessageType", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 kUserMasterServerMessageType
uint GlobalNamespace::NetworkConstants::_get_kUserMasterServerMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_get_kUserMasterServerMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "NetworkConstants", "kUserMasterServerMessageType"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 kUserMasterServerMessageType
void GlobalNamespace::NetworkConstants::_set_kUserMasterServerMessageType(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_set_kUserMasterServerMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "kUserMasterServerMessageType", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 kDedicatedServerMasterServerMessageType
uint GlobalNamespace::NetworkConstants::_get_kDedicatedServerMasterServerMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_get_kDedicatedServerMasterServerMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "NetworkConstants", "kDedicatedServerMasterServerMessageType"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 kDedicatedServerMasterServerMessageType
void GlobalNamespace::NetworkConstants::_set_kDedicatedServerMasterServerMessageType(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_set_kDedicatedServerMasterServerMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "kDedicatedServerMasterServerMessageType", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 kGameLiftMessageType
uint GlobalNamespace::NetworkConstants::_get_kGameLiftMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_get_kGameLiftMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "NetworkConstants", "kGameLiftMessageType"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 kGameLiftMessageType
void GlobalNamespace::NetworkConstants::_set_kGameLiftMessageType(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_set_kGameLiftMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "kGameLiftMessageType", value));
}
// Autogenerated static field getter
// Get static field: static public System.String dedicatedServerState
::StringW GlobalNamespace::NetworkConstants::_get_dedicatedServerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_get_dedicatedServerState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "NetworkConstants", "dedicatedServerState"));
}
// Autogenerated static field setter
// Set static field: static public System.String dedicatedServerState
void GlobalNamespace::NetworkConstants::_set_dedicatedServerState(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_set_dedicatedServerState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "dedicatedServerState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String playerState
::StringW GlobalNamespace::NetworkConstants::_get_playerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_get_playerState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "NetworkConstants", "playerState"));
}
// Autogenerated static field setter
// Set static field: static public System.String playerState
void GlobalNamespace::NetworkConstants::_set_playerState(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_set_playerState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "playerState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String spectatingState
::StringW GlobalNamespace::NetworkConstants::_get_spectatingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_get_spectatingState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "NetworkConstants", "spectatingState"));
}
// Autogenerated static field setter
// Set static field: static public System.String spectatingState
void GlobalNamespace::NetworkConstants::_set_spectatingState(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_set_spectatingState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "spectatingState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String backgroundedState
::StringW GlobalNamespace::NetworkConstants::_get_backgroundedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_get_backgroundedState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "NetworkConstants", "backgroundedState"));
}
// Autogenerated static field setter
// Set static field: static public System.String backgroundedState
void GlobalNamespace::NetworkConstants::_set_backgroundedState(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_set_backgroundedState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "backgroundedState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String terminatingState
::StringW GlobalNamespace::NetworkConstants::_get_terminatingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_get_terminatingState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "NetworkConstants", "terminatingState"));
}
// Autogenerated static field setter
// Set static field: static public System.String terminatingState
void GlobalNamespace::NetworkConstants::_set_terminatingState(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_set_terminatingState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "terminatingState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String wantsToPlayNextLevel
::StringW GlobalNamespace::NetworkConstants::_get_wantsToPlayNextLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_get_wantsToPlayNextLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "NetworkConstants", "wantsToPlayNextLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.String wantsToPlayNextLevel
void GlobalNamespace::NetworkConstants::_set_wantsToPlayNextLevel(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_set_wantsToPlayNextLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "wantsToPlayNextLevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.String wasActiveAtLevelStart
::StringW GlobalNamespace::NetworkConstants::_get_wasActiveAtLevelStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_get_wasActiveAtLevelStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "NetworkConstants", "wasActiveAtLevelStart"));
}
// Autogenerated static field setter
// Set static field: static public System.String wasActiveAtLevelStart
void GlobalNamespace::NetworkConstants::_set_wasActiveAtLevelStart(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_set_wasActiveAtLevelStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "wasActiveAtLevelStart", value));
}
// Autogenerated static field getter
// Get static field: static public System.String isActive
::StringW GlobalNamespace::NetworkConstants::_get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_get_isActive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "NetworkConstants", "isActive"));
}
// Autogenerated static field setter
// Set static field: static public System.String isActive
void GlobalNamespace::NetworkConstants::_set_isActive(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_set_isActive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "isActive", value));
}
// Autogenerated static field getter
// Get static field: static public System.String finishedLevel
::StringW GlobalNamespace::NetworkConstants::_get_finishedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_get_finishedLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "NetworkConstants", "finishedLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.String finishedLevel
void GlobalNamespace::NetworkConstants::_set_finishedLevel(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConstants::_set_finishedLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "finishedLevel", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkStatisticsState
#include "GlobalNamespace/NetworkStatisticsState.hpp"
// Including type: NetworkStatisticsState/NetworkStatisticsUpdateDelegate
#include "GlobalNamespace/NetworkStatisticsState_NetworkStatisticsUpdateDelegate.hpp"
// Including type: NetworkStatisticsDelta
#include "GlobalNamespace/NetworkStatisticsDelta.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsSent
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsState::dyn_packetsSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::dyn_packetsSent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsSent"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsReceived
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsState::dyn_packetsReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::dyn_packetsReceived");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsReceived"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 bytesSent
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsState::dyn_bytesSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::dyn_bytesSent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytesSent"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 bytesReceived
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsState::dyn_bytesReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::dyn_bytesReceived");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytesReceived"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsLost
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsState::dyn_packetsLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::dyn_packetsLost");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsLost"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsSentEncrypted
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsState::dyn_packetsSentEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::dyn_packetsSentEncrypted");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsSentEncrypted"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsSentPlaintext
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsState::dyn_packetsSentPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::dyn_packetsSentPlaintext");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsSentPlaintext"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsSentRejected
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsState::dyn_packetsSentRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::dyn_packetsSentRejected");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsSentRejected"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsReceivedEncrypted
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsState::dyn_packetsReceivedEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::dyn_packetsReceivedEncrypted");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsReceivedEncrypted"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsReceivedPlaintext
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsState::dyn_packetsReceivedPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::dyn_packetsReceivedPlaintext");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsReceivedPlaintext"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsReceivedRejected
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsState::dyn_packetsReceivedRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::dyn_packetsReceivedRejected");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsReceivedRejected"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 encryptionProcessingTime
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsState::dyn_encryptionProcessingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::dyn_encryptionProcessingTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encryptionProcessingTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 decryptionProcessingTime
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsState::dyn_decryptionProcessingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::dyn_decryptionProcessingTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decryptionProcessingTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkStatisticsState..ctor
// ABORTED elsewhere.  GlobalNamespace::NetworkStatisticsState::NetworkStatisticsState(int64_t packetsSent, int64_t packetsReceived, int64_t bytesSent, int64_t bytesReceived, int64_t packetsLost, int64_t packetsSentEncrypted, int64_t packetsSentPlaintext, int64_t packetsSentRejected, int64_t packetsReceivedEncrypted, int64_t packetsReceivedPlaintext, int64_t packetsReceivedRejected, int64_t encryptionProcessingTime, int64_t decryptionProcessingTime)
// Autogenerated method: NetworkStatisticsState.op_Subtraction
::GlobalNamespace::NetworkStatisticsDelta GlobalNamespace::operator-(const ::GlobalNamespace::NetworkStatisticsState&& a, const ::GlobalNamespace::NetworkStatisticsState&& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkStatisticsState", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NetworkStatisticsDelta, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(b));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkStatisticsState/NetworkStatisticsUpdateDelegate
#include "GlobalNamespace/NetworkStatisticsState_NetworkStatisticsUpdateDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetworkStatisticsState/NetworkStatisticsUpdateDelegate.Invoke
void GlobalNamespace::NetworkStatisticsState::NetworkStatisticsUpdateDelegate::Invoke(ByRef<::GlobalNamespace::NetworkStatisticsState> statisticsState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::NetworkStatisticsUpdateDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statisticsState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(statisticsState));
}
// Autogenerated method: NetworkStatisticsState/NetworkStatisticsUpdateDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::NetworkStatisticsState::NetworkStatisticsUpdateDelegate::BeginInvoke(ByRef<::GlobalNamespace::NetworkStatisticsState> statisticsState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::NetworkStatisticsUpdateDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statisticsState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, byref(statisticsState), callback, object);
}
// Autogenerated method: NetworkStatisticsState/NetworkStatisticsUpdateDelegate.EndInvoke
void GlobalNamespace::NetworkStatisticsState::NetworkStatisticsUpdateDelegate::EndInvoke(ByRef<::GlobalNamespace::NetworkStatisticsState> statisticsState, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsState::NetworkStatisticsUpdateDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statisticsState), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(statisticsState), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkStatisticsDelta
#include "GlobalNamespace/NetworkStatisticsDelta.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsSentDelta
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsDelta::dyn_packetsSentDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsDelta::dyn_packetsSentDelta");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsSentDelta"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsReceivedDelta
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsDelta::dyn_packetsReceivedDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsDelta::dyn_packetsReceivedDelta");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsReceivedDelta"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 bytesSentDelta
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsDelta::dyn_bytesSentDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsDelta::dyn_bytesSentDelta");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytesSentDelta"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 bytesReceivedDelta
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsDelta::dyn_bytesReceivedDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsDelta::dyn_bytesReceivedDelta");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytesReceivedDelta"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsLostDelta
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsDelta::dyn_packetsLostDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsDelta::dyn_packetsLostDelta");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsLostDelta"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsSentEncryptedDelta
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsDelta::dyn_packetsSentEncryptedDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsDelta::dyn_packetsSentEncryptedDelta");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsSentEncryptedDelta"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsSentPlaintextDelta
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsDelta::dyn_packetsSentPlaintextDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsDelta::dyn_packetsSentPlaintextDelta");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsSentPlaintextDelta"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsSentRejectedDelta
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsDelta::dyn_packetsSentRejectedDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsDelta::dyn_packetsSentRejectedDelta");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsSentRejectedDelta"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsReceivedEncryptedDelta
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsDelta::dyn_packetsReceivedEncryptedDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsDelta::dyn_packetsReceivedEncryptedDelta");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsReceivedEncryptedDelta"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsReceivedPlaintextDelta
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsDelta::dyn_packetsReceivedPlaintextDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsDelta::dyn_packetsReceivedPlaintextDelta");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsReceivedPlaintextDelta"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 packetsReceivedRejectedDelta
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsDelta::dyn_packetsReceivedRejectedDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsDelta::dyn_packetsReceivedRejectedDelta");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packetsReceivedRejectedDelta"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 encryptionProcessingTimeDelta
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsDelta::dyn_encryptionProcessingTimeDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsDelta::dyn_encryptionProcessingTimeDelta");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encryptionProcessingTimeDelta"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int64 decryptionProcessingTimeDelta
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::NetworkStatisticsDelta::dyn_decryptionProcessingTimeDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkStatisticsDelta::dyn_decryptionProcessingTimeDelta");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decryptionProcessingTimeDelta"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkStatisticsDelta..ctor
// ABORTED elsewhere.  GlobalNamespace::NetworkStatisticsDelta::NetworkStatisticsDelta(int64_t packetsSentDelta, int64_t packetsReceivedDelta, int64_t bytesSentDelta, int64_t bytesReceivedDelta, int64_t packetsLostDelta, int64_t packetsSentEncryptedDelta, int64_t packetsSentPlaintextDelta, int64_t packetsSentRejectedDelta, int64_t packetsReceivedEncryptedDelta, int64_t packetsReceivedPlaintextDelta, int64_t packetsReceivedRejectedDelta, int64_t encryptionProcessingTimeDelta, int64_t decryptionProcessingTimeDelta)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkUtility
#include "GlobalNamespace/NetworkUtility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] _nameEncryptionKey
::ArrayW<uint8_t> GlobalNamespace::NetworkUtility::_get__nameEncryptionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkUtility::_get__nameEncryptionKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("", "NetworkUtility", "_nameEncryptionKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _nameEncryptionKey
void GlobalNamespace::NetworkUtility::_set__nameEncryptionKey(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkUtility::_set__nameEncryptionKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkUtility", "_nameEncryptionKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] _nameEncryptionIv
::ArrayW<uint8_t> GlobalNamespace::NetworkUtility::_get__nameEncryptionIv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkUtility::_get__nameEncryptionIv");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("", "NetworkUtility", "_nameEncryptionIv"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _nameEncryptionIv
void GlobalNamespace::NetworkUtility::_set__nameEncryptionIv(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkUtility::_set__nameEncryptionIv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkUtility", "_nameEncryptionIv", value));
}
// Autogenerated method: NetworkUtility..cctor
void GlobalNamespace::NetworkUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NetworkUtility.Init
void GlobalNamespace::NetworkUtility::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkUtility::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NetworkUtility.GetHashedUserId
::StringW GlobalNamespace::NetworkUtility::GetHashedUserId(::StringW userId, ::GlobalNamespace::AuthenticationToken::Platform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkUtility::GetHashedUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "GetHashedUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userId, platform);
}
// Autogenerated method: NetworkUtility.EncryptName
::StringW GlobalNamespace::NetworkUtility::EncryptName(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkUtility::EncryptName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "EncryptName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text);
}
// Autogenerated method: NetworkUtility.DecryptName
::StringW GlobalNamespace::NetworkUtility::DecryptName(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkUtility::DecryptName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "DecryptName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text);
}
// Autogenerated method: NetworkUtility.GenerateId
::StringW GlobalNamespace::NetworkUtility::GenerateId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkUtility::GenerateId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "GenerateId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NetworkUtility.GetHashBase64
::StringW GlobalNamespace::NetworkUtility::GetHashBase64(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkUtility::GetHashBase64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "GetHashBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: PacketEncryptionLayer/EncryptionStatistics
#include "GlobalNamespace/PacketEncryptionLayer_EncryptionStatistics.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList.hpp"
// Including type: PacketEncryptionLayer/<AddEncryptedEndpointAsync>d__24
#include "GlobalNamespace/PacketEncryptionLayer_-AddEncryptedEndpointAsync-d__24.hpp"
// Including type: PacketEncryptionLayer/<AddPendingEncryptedEndpointAsync>d__26
#include "GlobalNamespace/PacketEncryptionLayer_-AddPendingEncryptedEndpointAsync-d__26.hpp"
// Including type: ExpiringDictionary`2
#include "GlobalNamespace/ExpiringDictionary_2.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: BGNet.Core.ITimeProvider
#include "BGNet/Core/ITimeProvider.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte kEncryptedPacketType
uint8_t GlobalNamespace::PacketEncryptionLayer::_get_kEncryptedPacketType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::_get_kEncryptedPacketType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "PacketEncryptionLayer", "kEncryptedPacketType"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kEncryptedPacketType
void GlobalNamespace::PacketEncryptionLayer::_set_kEncryptedPacketType(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::_set_kEncryptedPacketType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kEncryptedPacketType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte kPlaintextPacketType
uint8_t GlobalNamespace::PacketEncryptionLayer::_get_kPlaintextPacketType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::_get_kPlaintextPacketType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "PacketEncryptionLayer", "kPlaintextPacketType"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kPlaintextPacketType
void GlobalNamespace::PacketEncryptionLayer::_set_kPlaintextPacketType(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::_set_kPlaintextPacketType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kPlaintextPacketType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kEncryptionStateTimeoutMs
int64_t GlobalNamespace::PacketEncryptionLayer::_get_kEncryptionStateTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::_get_kEncryptionStateTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "PacketEncryptionLayer", "kEncryptionStateTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kEncryptionStateTimeoutMs
void GlobalNamespace::PacketEncryptionLayer::_set_kEncryptionStateTimeoutMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::_set_kEncryptionStateTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kEncryptionStateTimeoutMs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kPendingEncryptionStateTimeoutMs
int64_t GlobalNamespace::PacketEncryptionLayer::_get_kPendingEncryptionStateTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::_get_kPendingEncryptionStateTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "PacketEncryptionLayer", "kPendingEncryptionStateTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kPendingEncryptionStateTimeoutMs
void GlobalNamespace::PacketEncryptionLayer::_set_kPendingEncryptionStateTimeoutMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::_set_kPendingEncryptionStateTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kPendingEncryptionStateTimeoutMs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Diagnostics.Stopwatch _stopwatch
::System::Diagnostics::Stopwatch* GlobalNamespace::PacketEncryptionLayer::_get__stopwatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::_get__stopwatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Stopwatch*>("", "PacketEncryptionLayer", "_stopwatch"));
}
// Autogenerated static field setter
// Set static field: static private System.Diagnostics.Stopwatch _stopwatch
void GlobalNamespace::PacketEncryptionLayer::_set__stopwatch(::System::Diagnostics::Stopwatch* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::_set__stopwatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "_stopwatch", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly PacketEncryptionLayer/EncryptionStatistics statistics
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics*& GlobalNamespace::PacketEncryptionLayer::dyn_statistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::dyn_statistics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statistics"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ExpiringDictionary`2<System.Net.IPEndPoint,EncryptionUtility/IEncryptionState> _encryptionStates
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ExpiringDictionary_2<::System::Net::IPEndPoint*, ::GlobalNamespace::EncryptionUtility::IEncryptionState*>*& GlobalNamespace::PacketEncryptionLayer::dyn__encryptionStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::dyn__encryptionStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encryptionStates"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ExpiringDictionary_2<::System::Net::IPEndPoint*, ::GlobalNamespace::EncryptionUtility::IEncryptionState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ExpiringDictionary`2<System.Net.IPAddress,PacketEncryptionLayer/PendingEncryptionStateList> _pendingEncryptionStates
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ExpiringDictionary_2<::System::Net::IPAddress*, ::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList*>*& GlobalNamespace::PacketEncryptionLayer::dyn__pendingEncryptionStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::dyn__pendingEncryptionStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingEncryptionStates"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ExpiringDictionary_2<::System::Net::IPAddress*, ::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _unencryptedTrafficFilter
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::PacketEncryptionLayer::dyn__unencryptedTrafficFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::dyn__unencryptedTrafficFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unencryptedTrafficFilter"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <filterUnencryptedTraffic>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PacketEncryptionLayer::dyn_$filterUnencryptedTraffic$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::dyn_$filterUnencryptedTraffic$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterUnencryptedTraffic>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <enableStatistics>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PacketEncryptionLayer::dyn_$enableStatistics$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::dyn_$enableStatistics$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<enableStatistics>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PacketEncryptionLayer.get_filterUnencryptedTraffic
bool GlobalNamespace::PacketEncryptionLayer::get_filterUnencryptedTraffic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::get_filterUnencryptedTraffic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filterUnencryptedTraffic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.set_filterUnencryptedTraffic
void GlobalNamespace::PacketEncryptionLayer::set_filterUnencryptedTraffic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::set_filterUnencryptedTraffic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filterUnencryptedTraffic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PacketEncryptionLayer.get_enableStatistics
bool GlobalNamespace::PacketEncryptionLayer::get_enableStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::get_enableStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.set_enableStatistics
void GlobalNamespace::PacketEncryptionLayer::set_enableStatistics(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::set_enableStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PacketEncryptionLayer.SetUnencryptedTrafficFilter
void GlobalNamespace::PacketEncryptionLayer::SetUnencryptedTrafficFilter(::ArrayW<uint8_t> unencryptedTrafficFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::SetUnencryptedTrafficFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUnencryptedTrafficFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unencryptedTrafficFilter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unencryptedTrafficFilter);
}
// Autogenerated method: PacketEncryptionLayer.AddEncryptedEndpoint
::GlobalNamespace::EncryptionUtility::IEncryptionState* GlobalNamespace::PacketEncryptionLayer::AddEncryptedEndpoint(::System::Net::IPEndPoint* endPoint, ::ArrayW<uint8_t> preMasterSecret, ::ArrayW<uint8_t> serverRandom, ::ArrayW<uint8_t> clientRandom, bool isClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::AddEncryptedEndpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEncryptedEndpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(serverRandom), ::il2cpp_utils::ExtractType(clientRandom), ::il2cpp_utils::ExtractType(isClient)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EncryptionUtility::IEncryptionState*, false>(this, ___internal__method, endPoint, preMasterSecret, serverRandom, clientRandom, isClient);
}
// Autogenerated method: PacketEncryptionLayer.AddEncryptedEndpointAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::EncryptionUtility::IEncryptionState*>* GlobalNamespace::PacketEncryptionLayer::AddEncryptedEndpointAsync(::System::Net::IPEndPoint* endPoint, ::ArrayW<uint8_t> preMasterSecret, ::ArrayW<uint8_t> serverRandom, ::ArrayW<uint8_t> clientRandom, bool isClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::AddEncryptedEndpointAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEncryptedEndpointAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(serverRandom), ::il2cpp_utils::ExtractType(clientRandom), ::il2cpp_utils::ExtractType(isClient)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::EncryptionUtility::IEncryptionState*>*, false>(this, ___internal__method, endPoint, preMasterSecret, serverRandom, clientRandom, isClient);
}
// Autogenerated method: PacketEncryptionLayer.RemoveEncryptedEndpoint
bool GlobalNamespace::PacketEncryptionLayer::RemoveEncryptedEndpoint(::System::Net::IPEndPoint* endPoint, ::GlobalNamespace::EncryptionUtility::IEncryptionState* encryptedState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::RemoveEncryptedEndpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEncryptedEndpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(encryptedState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, endPoint, encryptedState);
}
// Autogenerated method: PacketEncryptionLayer.AddPendingEncryptedEndpointAsync
::System::Threading::Tasks::Task* GlobalNamespace::PacketEncryptionLayer::AddPendingEncryptedEndpointAsync(::System::Net::IPEndPoint* endPoint, ::ArrayW<uint8_t> preMasterSecret, ::ArrayW<uint8_t> serverRandom, ::ArrayW<uint8_t> clientRandom, bool isClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::AddPendingEncryptedEndpointAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPendingEncryptedEndpointAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(serverRandom), ::il2cpp_utils::ExtractType(clientRandom), ::il2cpp_utils::ExtractType(isClient)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, endPoint, preMasterSecret, serverRandom, clientRandom, isClient);
}
// Autogenerated method: PacketEncryptionLayer.PollUpdate
void GlobalNamespace::PacketEncryptionLayer::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PollUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.RemoveAllEndpoints
void GlobalNamespace::PacketEncryptionLayer::RemoveAllEndpoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::RemoveAllEndpoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAllEndpoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.TryGetEncryptionState
bool GlobalNamespace::PacketEncryptionLayer::TryGetEncryptionState(::System::Net::IPEndPoint* endPoint, ByRef<::GlobalNamespace::EncryptionUtility::IEncryptionState*> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::TryGetEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::EncryptionUtility::IEncryptionState*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, endPoint, byref(state));
}
// Autogenerated method: PacketEncryptionLayer.TryGetPendingEncryptionState
bool GlobalNamespace::PacketEncryptionLayer::TryGetPendingEncryptionState(::System::Net::IPEndPoint* endPoint, ByRef<::GlobalNamespace::EncryptionUtility::IEncryptionState*> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::TryGetPendingEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetPendingEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::EncryptionUtility::IEncryptionState*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, endPoint, byref(state));
}
// Autogenerated method: PacketEncryptionLayer.TryGetPotentialPendingEncryptionStates
bool GlobalNamespace::PacketEncryptionLayer::TryGetPotentialPendingEncryptionStates(::System::Net::IPEndPoint* endPoint, ByRef<::ArrayW<::GlobalNamespace::EncryptionUtility::IEncryptionState*>> encryptionStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::TryGetPotentialPendingEncryptionStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetPotentialPendingEncryptionStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::GlobalNamespace::EncryptionUtility::IEncryptionState*>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, endPoint, byref(encryptionStates));
}
// Autogenerated method: PacketEncryptionLayer.PromotePendingEncryptionState
void GlobalNamespace::PacketEncryptionLayer::PromotePendingEncryptionState(::System::Net::IPEndPoint* endPoint, ::GlobalNamespace::EncryptionUtility::IEncryptionState* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PromotePendingEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PromotePendingEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, endPoint, state);
}
// Autogenerated method: PacketEncryptionLayer.MatchesFilter
bool GlobalNamespace::PacketEncryptionLayer::MatchesFilter(::ArrayW<uint8_t> data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::MatchesFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchesFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, offset, length);
}
// Autogenerated method: PacketEncryptionLayer.ProcessInboundPacketInternal
bool GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacketInternal(::System::Net::IPEndPoint* remoteEndPoint, ByRef<::ArrayW<uint8_t>> data, ByRef<int> offset, ByRef<int> length, ByRef<bool> encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacketInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInboundPacketInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, remoteEndPoint, byref(data), byref(offset), byref(length), byref(encrypted));
}
// Autogenerated method: PacketEncryptionLayer.ProcessOutBoundPacketInternal
bool GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacketInternal(::System::Net::IPEndPoint* remoteEndPoint, ByRef<::ArrayW<uint8_t>> data, ByRef<int> offset, ByRef<int> length, ByRef<bool> encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacketInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOutBoundPacketInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, remoteEndPoint, byref(data), byref(offset), byref(length), byref(encrypted));
}
// Autogenerated method: PacketEncryptionLayer.Log
void GlobalNamespace::PacketEncryptionLayer::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PacketEncryptionLayer", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: PacketEncryptionLayer.LogV
void GlobalNamespace::PacketEncryptionLayer::LogV(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::LogV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PacketEncryptionLayer", "LogV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: PacketEncryptionLayer.ProcessInboundPacket
void GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacket(::System::Net::IPEndPoint* remoteEndPoint, ByRef<::ArrayW<uint8_t>> data, ByRef<int> offset, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInboundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteEndPoint, byref(data), byref(offset), byref(length));
}
// Autogenerated method: PacketEncryptionLayer.ProcessOutBoundPacket
void GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacket(::System::Net::IPEndPoint* remoteEndPoint, ByRef<::ArrayW<uint8_t>> data, ByRef<int> offset, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOutBoundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteEndPoint, byref(data), byref(offset), byref(length));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/EncryptionStatistics
#include "GlobalNamespace/PacketEncryptionLayer_EncryptionStatistics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsReceivedPlaintext
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsReceivedPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsReceivedPlaintext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetsReceivedPlaintext"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsReceivedEncrypted
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsReceivedEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsReceivedEncrypted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetsReceivedEncrypted"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsReceivedRejected
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsReceivedRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsReceivedRejected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetsReceivedRejected"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsSentPlaintext
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsSentPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsSentPlaintext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetsSentPlaintext"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsSentEncrypted
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsSentEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsSentEncrypted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetsSentEncrypted"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsSentRejected
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsSentRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsSentRejected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetsSentRejected"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _encryptionProcessingTime
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__encryptionProcessingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__encryptionProcessingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encryptionProcessingTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _decryptionProcessingTime
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__decryptionProcessingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__decryptionProcessingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decryptionProcessingTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsReceivedPlaintext
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedPlaintext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsReceivedPlaintext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsReceivedEncrypted
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsReceivedEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsReceivedRejected
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedRejected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsReceivedRejected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsSentPlaintext
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentPlaintext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsSentPlaintext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsSentEncrypted
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsSentEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsSentRejected
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentRejected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsSentRejected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_encryptionProcessingTime
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_encryptionProcessingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_encryptionProcessingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_encryptionProcessingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_decryptionProcessingTime
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_decryptionProcessingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_decryptionProcessingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_decryptionProcessingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsReceivedPlaintext
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedPlaintext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsReceivedPlaintext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsReceivedEncrypted
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsReceivedEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsReceivedRejected
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedRejected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsReceivedRejected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsSentPlaintext
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentPlaintext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsSentPlaintext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsSentEncrypted
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsSentEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsSentRejected
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentRejected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsSentRejected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.AddEncryptionProcessingTime
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::AddEncryptionProcessingTime(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::AddEncryptionProcessingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEncryptionProcessingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.AddDecryptionProcessingTime
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::AddDecryptionProcessingTime(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::AddDecryptionProcessingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDecryptionProcessingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/PendingEncryptionStateList
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass4_0
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c__DisplayClass4_0.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass8_0
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c__DisplayClass8_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Int32,EncryptionUtility/IEncryptionState> _pendingStatesByPort
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::EncryptionUtility::IEncryptionState*>*& GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::dyn__pendingStatesByPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::dyn__pendingStatesByPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingStatesByPort"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::EncryptionUtility::IEncryptionState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.get_isEmpty
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::get_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::get_isEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.Dispose
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.GetSortedEncryptionStates
::ArrayW<::GlobalNamespace::EncryptionUtility::IEncryptionState*> GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::GetSortedEncryptionStates(int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::GetSortedEncryptionStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSortedEncryptionStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::EncryptionUtility::IEncryptionState*>, false>(this, ___internal__method, port);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.TryGetEncryptionState
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::TryGetEncryptionState(int port, ByRef<::GlobalNamespace::EncryptionUtility::IEncryptionState*> encryptionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::TryGetEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::EncryptionUtility::IEncryptionState*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, port, byref(encryptionState));
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.Add
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Add(int port, ::GlobalNamespace::EncryptionUtility::IEncryptionState* encryptionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(encryptionState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, port, encryptionState);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.Remove
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Remove(int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, port);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.Remove
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Remove(int port, ::GlobalNamespace::EncryptionUtility::IEncryptionState* encryptionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(encryptionState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, port, encryptionState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass4_0
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c__DisplayClass4_0.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 port
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass4_0::dyn_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass4_0::dyn_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass4_0.<GetSortedEncryptionStates>b__0
int GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass4_0::$GetSortedEncryptionStates$b__0(::System::Collections::Generic::KeyValuePair_2<int, ::GlobalNamespace::EncryptionUtility::IEncryptionState*> kvp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass4_0::<GetSortedEncryptionStates>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSortedEncryptionStates>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kvp)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, kvp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly PacketEncryptionLayer/PendingEncryptionStateList/<>c <>9
::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c*>("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly PacketEncryptionLayer/PendingEncryptionStateList/<>c <>9
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_set_$$9(::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.Int32,EncryptionUtility/IEncryptionState>,EncryptionUtility/IEncryptionState> <>9__4_1
::System::Func_2<::System::Collections::Generic::KeyValuePair_2<int, ::GlobalNamespace::EncryptionUtility::IEncryptionState*>, ::GlobalNamespace::EncryptionUtility::IEncryptionState*>* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_get_$$9__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_get_$$9__4_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::KeyValuePair_2<int, ::GlobalNamespace::EncryptionUtility::IEncryptionState*>, ::GlobalNamespace::EncryptionUtility::IEncryptionState*>*>("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", "<>9__4_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.Int32,EncryptionUtility/IEncryptionState>,EncryptionUtility/IEncryptionState> <>9__4_1
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_set_$$9__4_1(::System::Func_2<::System::Collections::Generic::KeyValuePair_2<int, ::GlobalNamespace::EncryptionUtility::IEncryptionState*>, ::GlobalNamespace::EncryptionUtility::IEncryptionState*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_set_$$9__4_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", "<>9__4_1", value)));
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList/<>c..cctor
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList/<>c.<GetSortedEncryptionStates>b__4_1
::GlobalNamespace::EncryptionUtility::IEncryptionState* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::$GetSortedEncryptionStates$b__4_1(::System::Collections::Generic::KeyValuePair_2<int, ::GlobalNamespace::EncryptionUtility::IEncryptionState*> kvp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::<GetSortedEncryptionStates>b__4_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSortedEncryptionStates>b__4_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kvp)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EncryptionUtility::IEncryptionState*, false>(this, ___internal__method, kvp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass8_0
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c__DisplayClass8_0.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public EncryptionUtility/IEncryptionState encryptionState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EncryptionUtility::IEncryptionState*& GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass8_0::dyn_encryptionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass8_0::dyn_encryptionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encryptionState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EncryptionUtility::IEncryptionState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass8_0.<Remove>b__0
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass8_0::$Remove$b__0(::System::Collections::Generic::KeyValuePair_2<int, ::GlobalNamespace::EncryptionUtility::IEncryptionState*> kvp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass8_0::<Remove>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Remove>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kvp)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, kvp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/<AddEncryptedEndpointAsync>d__24
#include "GlobalNamespace/PacketEncryptionLayer_-AddEncryptedEndpointAsync-d__24.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<EncryptionUtility/IEncryptionState> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::EncryptionUtility::IEncryptionState*>& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::EncryptionUtility::IEncryptionState*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] preMasterSecret
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_preMasterSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_preMasterSecret");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preMasterSecret"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverRandom
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_serverRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_serverRandom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverRandom"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] clientRandom
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_clientRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_clientRandom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientRandom"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isClient
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_isClient");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isClient"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PacketEncryptionLayer <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PacketEncryptionLayer*& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PacketEncryptionLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint endPoint
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_endPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPoint"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EncryptionUtility/IEncryptionState> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::EncryptionUtility::IEncryptionState*>& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::EncryptionUtility::IEncryptionState*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PacketEncryptionLayer/<AddEncryptedEndpointAsync>d__24.MoveNext
void GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/<AddEncryptedEndpointAsync>d__24.SetStateMachine
void GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/<AddPendingEncryptedEndpointAsync>d__26
#include "GlobalNamespace/PacketEncryptionLayer_-AddPendingEncryptedEndpointAsync-d__26.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] preMasterSecret
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_preMasterSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_preMasterSecret");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preMasterSecret"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverRandom
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_serverRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_serverRandom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverRandom"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] clientRandom
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_clientRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_clientRandom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientRandom"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isClient
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_isClient");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isClient"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PacketEncryptionLayer <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PacketEncryptionLayer*& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PacketEncryptionLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint endPoint
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_endPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPoint"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EncryptionUtility/IEncryptionState> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::EncryptionUtility::IEncryptionState*>& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::EncryptionUtility::IEncryptionState*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PacketEncryptionLayer/<AddPendingEncryptedEndpointAsync>d__26.MoveNext
void GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/<AddPendingEncryptedEndpointAsync>d__26.SetStateMachine
void GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PartyMessageHandler
#include "GlobalNamespace/PartyMessageHandler.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: PartyMessageHandler/ServerStatusUpdatedDelegate
#include "GlobalNamespace/PartyMessageHandler_ServerStatusUpdatedDelegate.hpp"
// Including type: PartyMessageHandler/ConnectToMasterServerDelegate
#include "GlobalNamespace/PartyMessageHandler_ConnectToMasterServerDelegate.hpp"
// Including type: PartyMessageHandler/ConnectToMasterServerMessage
#include "GlobalNamespace/PartyMessageHandler_ConnectToMasterServerMessage.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly NetworkPacketSerializer`2<PartyMessageHandler/MessageType,IConnectedPlayer> _serializer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkPacketSerializer_2<::GlobalNamespace::PartyMessageHandler::MessageType, ::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::PartyMessageHandler::dyn__serializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::dyn__serializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serializer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkPacketSerializer_2<::GlobalNamespace::PartyMessageHandler::MessageType, ::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ConnectedPlayerManager _connectedPlayerManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ConnectedPlayerManager*& GlobalNamespace::PartyMessageHandler::dyn__connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::dyn__connectedPlayerManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ConnectedPlayerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PartyMessageHandler/ConnectToMasterServerDelegate connectToMasterServerEvent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate*& GlobalNamespace::PartyMessageHandler::dyn_connectToMasterServerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::dyn_connectToMasterServerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectToMasterServerEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PartyMessageHandler.add_connectToMasterServerEvent
void GlobalNamespace::PartyMessageHandler::add_connectToMasterServerEvent(::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::add_connectToMasterServerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectToMasterServerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PartyMessageHandler.remove_connectToMasterServerEvent
void GlobalNamespace::PartyMessageHandler::remove_connectToMasterServerEvent(::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::remove_connectToMasterServerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectToMasterServerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PartyMessageHandler.Dispose
void GlobalNamespace::PartyMessageHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PartyMessageHandler.ConnectToMasterServer
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServer(::StringW secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::ConnectToMasterServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToMasterServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, secret);
}
// Autogenerated method: PartyMessageHandler.HandleConnectToMasterServer
void GlobalNamespace::PartyMessageHandler::HandleConnectToMasterServer(::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::HandleConnectToMasterServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectToMasterServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PartyMessageHandler/MessageType
#include "GlobalNamespace/PartyMessageHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PartyMessageHandler/MessageType ConnectToMasterServer
::GlobalNamespace::PartyMessageHandler::MessageType GlobalNamespace::PartyMessageHandler::MessageType::_get_ConnectToMasterServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::MessageType::_get_ConnectToMasterServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PartyMessageHandler::MessageType>("", "PartyMessageHandler/MessageType", "ConnectToMasterServer"));
}
// Autogenerated static field setter
// Set static field: static public PartyMessageHandler/MessageType ConnectToMasterServer
void GlobalNamespace::PartyMessageHandler::MessageType::_set_ConnectToMasterServer(::GlobalNamespace::PartyMessageHandler::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::MessageType::_set_ConnectToMasterServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PartyMessageHandler/MessageType", "ConnectToMasterServer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PartyMessageHandler::MessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::MessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyMessageHandler/ServerStatusUpdatedDelegate
#include "GlobalNamespace/PartyMessageHandler_ServerStatusUpdatedDelegate.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PartyMessageHandler/ServerStatusUpdatedDelegate.Invoke
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::Invoke(::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectionMask, configuration);
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdatedDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::BeginInvoke(::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, selectionMask, configuration, callback, object);
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdatedDelegate.EndInvoke
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyMessageHandler/ConnectToMasterServerDelegate
#include "GlobalNamespace/PartyMessageHandler_ConnectToMasterServerDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerDelegate.Invoke
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::Invoke(::StringW secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, secret);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::BeginInvoke(::StringW secret, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, secret, callback, object);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerDelegate.EndInvoke
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PartyMessageHandler/ConnectToMasterServerMessage
#include "GlobalNamespace/PartyMessageHandler_ConnectToMasterServerMessage.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String secret
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::dyn_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.get_pool
::GlobalNamespace::PacketPool_1<::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage*>* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PartyMessageHandler/ConnectToMasterServerMessage", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.Init
::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Init(::StringW secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage*, false>(this, ___internal__method, secret);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.Serialize
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.Deserialize
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.Release
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PingUtility
#include "GlobalNamespace/PingUtility.hpp"
// Including type: PingUtility/<>c
#include "GlobalNamespace/PingUtility_--c.hpp"
// Including type: PingUtility/<PingAsync>d__0
#include "GlobalNamespace/PingUtility_-PingAsync-d__0.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PingUtility.PingAsync
::System::Threading::Tasks::Task_1<int64_t>* GlobalNamespace::PingUtility::PingAsync(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::PingAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PingUtility", "PingAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int64_t>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PingUtility/<>c
#include "GlobalNamespace/PingUtility_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: UnityEngine.Ping
#include "UnityEngine/Ping.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly PingUtility/<>c <>9
::GlobalNamespace::PingUtility::$$c* GlobalNamespace::PingUtility::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::PingUtility::$$c*>("", "PingUtility/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly PingUtility/<>c <>9
void GlobalNamespace::PingUtility::$$c::_set_$$9(::GlobalNamespace::PingUtility::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PingUtility/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Net.IPAddress,UnityEngine.Ping> <>9__0_0
::System::Func_2<::System::Net::IPAddress*, ::UnityEngine::Ping*>* GlobalNamespace::PingUtility::$$c::_get_$$9__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$$c::_get_$$9__0_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Net::IPAddress*, ::UnityEngine::Ping*>*>("", "PingUtility/<>c", "<>9__0_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Net.IPAddress,UnityEngine.Ping> <>9__0_0
void GlobalNamespace::PingUtility::$$c::_set_$$9__0_0(::System::Func_2<::System::Net::IPAddress*, ::UnityEngine::Ping*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$$c::_set_$$9__0_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PingUtility/<>c", "<>9__0_0", value)));
}
// Autogenerated method: PingUtility/<>c..cctor
void GlobalNamespace::PingUtility::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PingUtility/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PingUtility/<>c.<PingAsync>b__0_0
::UnityEngine::Ping* GlobalNamespace::PingUtility::$$c::$PingAsync$b__0_0(::System::Net::IPAddress* ip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$$c::<PingAsync>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PingAsync>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ip)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Ping*, false>(this, ___internal__method, ip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PingUtility/<PingAsync>d__0
#include "GlobalNamespace/PingUtility_-PingAsync-d__0.hpp"
// Including type: UnityEngine.Ping
#include "UnityEngine/Ping.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Int64> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int64_t>& GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String url
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_url");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "url"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Ping[] <pings>5__2
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Ping*>& GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_$pings$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_$pings$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pings>5__2"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Ping*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <ping>5__3
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_$ping$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_$ping$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ping>5__3"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <found>5__4
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_$found$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_$found$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<found>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Net.IPAddress[]> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::ArrayW<::System::Net::IPAddress*>>& GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::ArrayW<::System::Net::IPAddress*>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <t>5__5
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_$t$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_$t$5__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<t>5__5"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$PingAsync$d__0::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PingUtility/<PingAsync>d__0.MoveNext
void GlobalNamespace::PingUtility::$PingAsync$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$PingAsync$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PingUtility/<PingAsync>d__0.SetStateMachine
void GlobalNamespace::PingUtility::$PingAsync$d__0::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PingUtility::$PingAsync$d__0::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSpecificSettingsAtStartNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsAtStartNetSerializable.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<PlayerSpecificSettingsNetSerializable> <activePlayerSpecificSettingsAtGameStart>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>*& GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::dyn_$activePlayerSpecificSettingsAtGameStart$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::dyn_$activePlayerSpecificSettingsAtGameStart$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<activePlayerSpecificSettingsAtGameStart>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<IConnectedPlayer> _activePlayersAtGameStart
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::dyn__activePlayersAtGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::dyn__activePlayersAtGameStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activePlayersAtGameStart"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.get_activePlayersAtGameStart
::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::get_activePlayersAtGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::get_activePlayersAtGameStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activePlayersAtGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.get_activePlayerSpecificSettingsAtGameStart
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::get_activePlayerSpecificSettingsAtGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::get_activePlayerSpecificSettingsAtGameStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activePlayerSpecificSettingsAtGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.set_activePlayerSpecificSettingsAtGameStart
void GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::set_activePlayerSpecificSettingsAtGameStart(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::set_activePlayerSpecificSettingsAtGameStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_activePlayerSpecificSettingsAtGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.Serialize
void GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.Deserialize
void GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftHanded
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_leftHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_leftHanded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHanded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean automaticPlayerHeight
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_automaticPlayerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_automaticPlayerHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "automaticPlayerHeight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single playerHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_playerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_playerHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single headPosToPlayerHeightOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_headPosToPlayerHeightOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_headPosToPlayerHeightOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headPosToPlayerHeightOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ColorSchemeNetSerializable colorScheme
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorSchemeNetSerializable& GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorScheme"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeNetSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerSpecificSettingsNetSerializable.Serialize
void GlobalNamespace::PlayerSpecificSettingsNetSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettingsNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: PlayerSpecificSettingsNetSerializable.Deserialize
void GlobalNamespace::PlayerSpecificSettingsNetSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettingsNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerStateHash
#include "GlobalNamespace/PlayerStateHash.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kToStringPrefix
::StringW GlobalNamespace::PlayerStateHash::_get_kToStringPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::_get_kToStringPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PlayerStateHash", "kToStringPrefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String kToStringPrefix
void GlobalNamespace::PlayerStateHash::_set_kToStringPrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::_set_kToStringPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerStateHash", "kToStringPrefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kToStringSuffix
::StringW GlobalNamespace::PlayerStateHash::_get_kToStringSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::_get_kToStringSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PlayerStateHash", "kToStringSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String kToStringSuffix
void GlobalNamespace::PlayerStateHash::_set_kToStringSuffix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::_set_kToStringSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerStateHash", "kToStringSuffix", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly BitMask128 _bloomFilter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BitMask128& GlobalNamespace::PlayerStateHash::dyn__bloomFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::dyn__bloomFilter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFilter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BitMask128*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerStateHash..ctor
// ABORTED elsewhere.  GlobalNamespace::PlayerStateHash::PlayerStateHash(::GlobalNamespace::BitMask128 bloomFilter)
// Autogenerated method: PlayerStateHash..ctor
GlobalNamespace::PlayerStateHash::PlayerStateHash(::StringW state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: PlayerStateHash..ctor
GlobalNamespace::PlayerStateHash::PlayerStateHash(::System::Collections::Generic::HashSet_1<::StringW>* stateHashSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateHashSet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateHashSet);
}
// Autogenerated method: PlayerStateHash.Contains
bool GlobalNamespace::PlayerStateHash::Contains(::StringW state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, state);
}
// Autogenerated method: PlayerStateHash.AddState
::GlobalNamespace::PlayerStateHash GlobalNamespace::PlayerStateHash::AddState(::StringW state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::AddState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerStateHash, false>(this, ___internal__method, state);
}
// Autogenerated method: PlayerStateHash.Serialize
void GlobalNamespace::PlayerStateHash::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: PlayerStateHash.CreateFromSerializedData
::GlobalNamespace::PlayerStateHash GlobalNamespace::PlayerStateHash::CreateFromSerializedData(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::CreateFromSerializedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerStateHash, false>(this, ___internal__method, reader);
}
// Autogenerated method: PlayerStateHash.Deserialize
::GlobalNamespace::PlayerStateHash GlobalNamespace::PlayerStateHash::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerStateHash", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerStateHash, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: PlayerStateHash.ToShortString
::StringW GlobalNamespace::PlayerStateHash::ToShortString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::ToShortString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToShortString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayerStateHash.ToBytes
::ArrayW<uint8_t> GlobalNamespace::PlayerStateHash::ToBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::ToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: PlayerStateHash.Equals
bool GlobalNamespace::PlayerStateHash::Equals(::GlobalNamespace::PlayerStateHash other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: PlayerStateHash.TryParse
bool GlobalNamespace::PlayerStateHash::TryParse(::StringW stringSerializedMask, ByRef<::GlobalNamespace::PlayerStateHash> playerStateHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerStateHash", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringSerializedMask), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::PlayerStateHash&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringSerializedMask, byref(playerStateHash));
}
// Autogenerated method: PlayerStateHash.Parse
::GlobalNamespace::PlayerStateHash GlobalNamespace::PlayerStateHash::Parse(::StringW stringSerializedMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerStateHash", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringSerializedMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerStateHash, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringSerializedMask);
}
// Autogenerated method: PlayerStateHash.FromBytes
::GlobalNamespace::PlayerStateHash GlobalNamespace::PlayerStateHash::FromBytes(::ArrayW<uint8_t> bytes, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::FromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerStateHash", "FromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerStateHash, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, offset);
}
// Autogenerated method: PlayerStateHash.ToString
::StringW GlobalNamespace::PlayerStateHash::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayerStateHash.GetHashCode
int GlobalNamespace::PlayerStateHash::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerStateHash.Equals
bool GlobalNamespace::PlayerStateHash::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerStateHash::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayersSpecificSettingsAtGameStartModel
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel.hpp"
// Including type: PlayersSpecificSettingsAtGameStartModel/<>c__DisplayClass13_0
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel_--c__DisplayClass13_0.hpp"
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
// Including type: PlayerSpecificSettingsAtStartNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsAtStartNetSerializable.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PlayerSpecificSettingsNetSerializable <localPlayerSpecificSettings>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*& GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::dyn_$localPlayerSpecificSettings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::dyn_$localPlayerSpecificSettings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<localPlayerSpecificSettings>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettingsNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerSpecificSettingsAtStartNetSerializable <playersAtGameStartNetSerializable>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*& GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::dyn_$playersAtGameStartNetSerializable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::dyn_$playersAtGameStartNetSerializable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playersAtGameStartNetSerializable>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.get_playersAtGameStart
::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_playersAtGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_playersAtGameStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playersAtGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.get_localPlayerSpecificSettings
::GlobalNamespace::PlayerSpecificSettingsNetSerializable* GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_localPlayerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_localPlayerSpecificSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerSpecificSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerSpecificSettingsNetSerializable*, false>(this, ___internal__method);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.set_localPlayerSpecificSettings
void GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::set_localPlayerSpecificSettings(::GlobalNamespace::PlayerSpecificSettingsNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::set_localPlayerSpecificSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localPlayerSpecificSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.get_playersAtGameStartNetSerializable
::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_playersAtGameStartNetSerializable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_playersAtGameStartNetSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playersAtGameStartNetSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, false>(this, ___internal__method);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.set_playersAtGameStartNetSerializable
void GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::set_playersAtGameStartNetSerializable(::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::set_playersAtGameStartNetSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playersAtGameStartNetSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.GetPlayerSpecificSettingsForUserId
::GlobalNamespace::PlayerSpecificSettingsNetSerializable* GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::GetPlayerSpecificSettingsForUserId(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::GetPlayerSpecificSettingsForUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerSpecificSettingsForUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerSpecificSettingsNetSerializable*, false>(this, ___internal__method, userId);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.SaveFromNetSerializable
void GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::SaveFromNetSerializable(::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStartNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::SaveFromNetSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveFromNetSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersAtGameStartNetSerializable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playersAtGameStartNetSerializable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayersSpecificSettingsAtGameStartModel/<>c__DisplayClass13_0
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel_--c__DisplayClass13_0.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public IConnectedPlayer player
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::$$c__DisplayClass13_0::dyn_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::$$c__DisplayClass13_0::dyn_player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel/<>c__DisplayClass13_0.<SaveFromNetSerializable>b__0
bool GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::$$c__DisplayClass13_0::$SaveFromNetSerializable$b__0(::GlobalNamespace::IConnectedPlayer* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::$$c__DisplayClass13_0::<SaveFromNetSerializable>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SaveFromNetSerializable>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProfanityFilter
#include "GlobalNamespace/ProfanityFilter.hpp"
// Including type: ProfanityFilter/TrieNode
#include "GlobalNamespace/ProfanityFilter_TrieNode.hpp"
// Including type: ProfanityFilter/<GetLookalikeLetters>d__4
#include "GlobalNamespace/ProfanityFilter_-GetLookalikeLetters-d__4.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ProfanityFilter/TrieNode _trie
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ProfanityFilter::TrieNode*& GlobalNamespace::ProfanityFilter::dyn__trie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::dyn__trie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trie"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ProfanityFilter::TrieNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProfanityFilter.IsProfane
bool GlobalNamespace::ProfanityFilter::IsProfane(::StringW word) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::IsProfane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsProfane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, word);
}
// Autogenerated method: ProfanityFilter.GetLookalikeLetters
::System::Collections::Generic::IEnumerable_1<::Il2CppChar>* GlobalNamespace::ProfanityFilter::GetLookalikeLetters(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::GetLookalikeLetters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ProfanityFilter", "GetLookalikeLetters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Il2CppChar>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: ProfanityFilter.GetLeetEquivalent
::Il2CppChar GlobalNamespace::ProfanityFilter::GetLeetEquivalent(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::GetLeetEquivalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ProfanityFilter", "GetLeetEquivalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProfanityFilter/TrieNode
#include "GlobalNamespace/ProfanityFilter_TrieNode.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Char,ProfanityFilter/TrieNode> _children
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Il2CppChar, ::GlobalNamespace::ProfanityFilter::TrieNode*>*& GlobalNamespace::ProfanityFilter::TrieNode::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::TrieNode::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::Il2CppChar, ::GlobalNamespace::ProfanityFilter::TrieNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _shortestWord
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProfanityFilter::TrieNode::dyn__shortestWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::TrieNode::dyn__shortestWord");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shortestWord"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProfanityFilter/TrieNode.AddWord
void GlobalNamespace::ProfanityFilter::TrieNode::AddWord(::StringW word, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::TrieNode::AddWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, word, index);
}
// Autogenerated method: ProfanityFilter/TrieNode.IsMatch
bool GlobalNamespace::ProfanityFilter::TrieNode::IsMatch(::StringW word, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::TrieNode::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, word, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ProfanityFilter/<GetLookalikeLetters>d__4
#include "GlobalNamespace/ProfanityFilter_-GetLookalikeLetters-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppChar& GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char c
[[deprecated("Use field access instead!")]] ::Il2CppChar& GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char <>3__c
[[deprecated("Use field access instead!")]] ::Il2CppChar& GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_$$3__c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_$$3__c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__c"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.Collections.Generic.IEnumerator<System.Char>.get_Current
::Il2CppChar GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_Generic_IEnumerator$System_Char$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.Collections.Generic.IEnumerator<System.Char>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Char>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.IDisposable.Dispose
void GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.MoveNext
bool GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.Collections.IEnumerator.Reset
void GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Il2CppChar>* GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_Generic_IEnumerable$System_Char$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Il2CppChar>*, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RemoteProcedureCall
#include "GlobalNamespace/RemoteProcedureCall.hpp"
// Including type: RemoteProcedureCall/TypeWrapper`1
#include "GlobalNamespace/RemoteProcedureCall_TypeWrapper_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <syncTime>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RemoteProcedureCall::dyn_$syncTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteProcedureCall::dyn_$syncTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<syncTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RemoteProcedureCall.get_syncTime
float GlobalNamespace::RemoteProcedureCall::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteProcedureCall::get_syncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RemoteProcedureCall.set_syncTime
void GlobalNamespace::RemoteProcedureCall::set_syncTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteProcedureCall::set_syncTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RemoteProcedureCall.SerializeData
void GlobalNamespace::RemoteProcedureCall::SerializeData(::LiteNetLib::Utils::NetDataWriter* writer, uint protocolVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteProcedureCall::SerializeData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(protocolVersion)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, protocolVersion);
}
// Autogenerated method: RemoteProcedureCall.DeserializeData
void GlobalNamespace::RemoteProcedureCall::DeserializeData(::LiteNetLib::Utils::NetDataReader* reader, uint protocolVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteProcedureCall::DeserializeData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(protocolVersion)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, protocolVersion);
}
// Autogenerated method: RemoteProcedureCall.LiteNetLib.Utils.INetSerializable.Serialize
void GlobalNamespace::RemoteProcedureCall::LiteNetLib_Utils_INetSerializable_Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteProcedureCall::LiteNetLib.Utils.INetSerializable.Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.Utils.INetSerializable.Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: RemoteProcedureCall.LiteNetLib.Utils.INetSerializable.Deserialize
void GlobalNamespace::RemoteProcedureCall::LiteNetLib_Utils_INetSerializable_Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteProcedureCall::LiteNetLib.Utils.INetSerializable.Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.Utils.INetSerializable.Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: RemoteProcedureCall.Release
void GlobalNamespace::RemoteProcedureCall::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteProcedureCall::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RemoteProcedureCall.Init
::GlobalNamespace::IRemoteProcedureCall* GlobalNamespace::RemoteProcedureCall::Init(float syncTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RemoteProcedureCall::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IRemoteProcedureCall*, false>(this, ___internal__method, syncTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RollingAverage
#include "GlobalNamespace/RollingAverage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 kGranularity
int64_t GlobalNamespace::RollingAverage::_get_kGranularity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RollingAverage::_get_kGranularity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "RollingAverage", "kGranularity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kGranularity
void GlobalNamespace::RollingAverage::_set_kGranularity(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RollingAverage::_set_kGranularity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RollingAverage", "kGranularity", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _currentTotal
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::RollingAverage::dyn__currentTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RollingAverage::dyn__currentTotal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentTotal"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentAverage
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RollingAverage::dyn__currentAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RollingAverage::dyn__currentAverage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentAverage"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<int64_t>& GlobalNamespace::RollingAverage::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RollingAverage::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RollingAverage::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RollingAverage::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _length
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RollingAverage::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RollingAverage::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RollingAverage.get_currentAverage
float GlobalNamespace::RollingAverage::get_currentAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RollingAverage::get_currentAverage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentAverage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RollingAverage.get_hasValue
bool GlobalNamespace::RollingAverage::get_hasValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RollingAverage::get_hasValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RollingAverage.Update
void GlobalNamespace::RollingAverage::Update(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RollingAverage::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RollingAverage.Reset
void GlobalNamespace::RollingAverage::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RollingAverage::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RpcPool
#include "GlobalNamespace/RpcPool.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: IPacketPool
#include "GlobalNamespace/IPacketPool.hpp"
// Including type: IRemoteProcedureCall
#include "GlobalNamespace/IRemoteProcedureCall.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,IPacketPool> _pools
::System::Collections::Generic::Dictionary_2<::System::Type*, ::GlobalNamespace::IPacketPool*>* GlobalNamespace::RpcPool::_get__pools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RpcPool::_get__pools");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::GlobalNamespace::IPacketPool*>*>("", "RpcPool", "_pools")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,IPacketPool> _pools
void GlobalNamespace::RpcPool::_set__pools(::System::Collections::Generic::Dictionary_2<::System::Type*, ::GlobalNamespace::IPacketPool*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RpcPool::_set__pools");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RpcPool", "_pools", value));
}
// Autogenerated method: RpcPool.Release
void GlobalNamespace::RpcPool::Release(::GlobalNamespace::IRemoteProcedureCall* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RpcPool::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RpcPool", "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SceneStartHandler
#include "GlobalNamespace/SceneStartHandler.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: PlayersSpecificSettingsAtGameStartModel
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayerSpecificSettingsAtStartNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsAtStartNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::SceneStartHandler::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IGameplayRpcManager _gameplayRpcManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IGameplayRpcManager*& GlobalNamespace::SceneStartHandler::dyn__gameplayRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::dyn__gameplayRpcManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayRpcManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IGameplayRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayersSpecificSettingsAtGameStartModel _playersAtGameStartModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel*& GlobalNamespace::SceneStartHandler::dyn__playersAtGameStartModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::dyn__playersAtGameStartModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersAtGameStartModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _readyPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::SceneStartHandler::dyn__readyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::dyn__readyPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readyPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,PlayerSpecificSettingsNetSerializable> _playersSpecificSettings
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>*& GlobalNamespace::SceneStartHandler::dyn__playersSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::dyn__playersSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersSpecificSettings"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SceneStartHandler::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _sessionGameId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SceneStartHandler::dyn__sessionGameId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::dyn__sessionGameId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sessionGameId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> sceneSetupDidFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::SceneStartHandler::dyn_sceneSetupDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::dyn_sceneSetupDidFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneSetupDidFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> sceneSetupDidReceiveTooLateEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::SceneStartHandler::dyn_sceneSetupDidReceiveTooLateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::dyn_sceneSetupDidReceiveTooLateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneSetupDidReceiveTooLateEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SceneStartHandler.add_sceneSetupDidFinishEvent
void GlobalNamespace::SceneStartHandler::add_sceneSetupDidFinishEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::add_sceneSetupDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_sceneSetupDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartHandler.remove_sceneSetupDidFinishEvent
void GlobalNamespace::SceneStartHandler::remove_sceneSetupDidFinishEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::remove_sceneSetupDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_sceneSetupDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartHandler.add_sceneSetupDidReceiveTooLateEvent
void GlobalNamespace::SceneStartHandler::add_sceneSetupDidReceiveTooLateEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::add_sceneSetupDidReceiveTooLateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_sceneSetupDidReceiveTooLateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartHandler.remove_sceneSetupDidReceiveTooLateEvent
void GlobalNamespace::SceneStartHandler::remove_sceneSetupDidReceiveTooLateEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::remove_sceneSetupDidReceiveTooLateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_sceneSetupDidReceiveTooLateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartHandler.Dispose
void GlobalNamespace::SceneStartHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SceneStartHandler.GetSceneLoadStatus
void GlobalNamespace::SceneStartHandler::GetSceneLoadStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::GetSceneLoadStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSceneLoadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SceneStartHandler.ForceStart
void GlobalNamespace::SceneStartHandler::ForceStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::ForceStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SceneStartHandler.HandleSetGameplaySceneReady
void GlobalNamespace::SceneStartHandler::HandleSetGameplaySceneReady(::StringW userId, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::HandleSetGameplaySceneReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetGameplaySceneReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, playerSpecificSettings);
}
// Autogenerated method: SceneStartHandler.HandleGetGameplaySceneReady
void GlobalNamespace::SceneStartHandler::HandleGetGameplaySceneReady(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::HandleGetGameplaySceneReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGetGameplaySceneReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: SceneStartHandler.HandleSetGameplaySceneSyncFinished
void GlobalNamespace::SceneStartHandler::HandleSetGameplaySceneSyncFinished(::StringW userId, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStart, ::StringW sessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::HandleSetGameplaySceneSyncFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetGameplaySceneSyncFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersAtGameStart), ::il2cpp_utils::ExtractType(sessionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, playersAtGameStart, sessionId);
}
// Autogenerated method: SceneStartHandler.HandleSetPlayerDidConnectLate
void GlobalNamespace::SceneStartHandler::HandleSetPlayerDidConnectLate(::StringW userId, ::StringW failedUserId, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStart, ::StringW sessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::HandleSetPlayerDidConnectLate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetPlayerDidConnectLate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(failedUserId), ::il2cpp_utils::ExtractType(playersAtGameStart), ::il2cpp_utils::ExtractType(sessionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, failedUserId, playersAtGameStart, sessionId);
}
// Autogenerated method: SceneStartHandler.AddPlayerSpecificSettingsToDictionary
void GlobalNamespace::SceneStartHandler::AddPlayerSpecificSettingsToDictionary(::GlobalNamespace::PlayerSpecificSettingsNetSerializable* playerSpecificSettingsNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::AddPlayerSpecificSettingsToDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPlayerSpecificSettingsToDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerSpecificSettingsNetSerializable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerSpecificSettingsNetSerializable);
}
// Autogenerated method: SceneStartHandler.CreatePlayersSpecificSettingsAtGameStartData
::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* GlobalNamespace::SceneStartHandler::CreatePlayersSpecificSettingsAtGameStartData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartHandler::CreatePlayersSpecificSettingsAtGameStartData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayersSpecificSettingsAtGameStartData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SecureRandomProvider
#include "GlobalNamespace/SecureRandomProvider.hpp"
// Including type: SecureRandomProvider/SecureRandomState
#include "GlobalNamespace/SecureRandomProvider_SecureRandomState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private SecureRandomProvider/SecureRandomState _secureRandomState
::GlobalNamespace::SecureRandomProvider::SecureRandomState* GlobalNamespace::SecureRandomProvider::_get__secureRandomState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SecureRandomProvider::_get__secureRandomState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SecureRandomProvider::SecureRandomState*>("", "SecureRandomProvider", "_secureRandomState"));
}
// Autogenerated static field setter
// Set static field: static private SecureRandomProvider/SecureRandomState _secureRandomState
void GlobalNamespace::SecureRandomProvider::_set__secureRandomState(::GlobalNamespace::SecureRandomProvider::SecureRandomState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SecureRandomProvider::_set__secureRandomState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SecureRandomProvider", "_secureRandomState", value));
}
// Autogenerated method: SecureRandomProvider..cctor
void GlobalNamespace::SecureRandomProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SecureRandomProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SecureRandomProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SecureRandomProvider.GetBytes
::ArrayW<uint8_t> GlobalNamespace::SecureRandomProvider::GetBytes(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SecureRandomProvider::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SecureRandomProvider", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: SecureRandomProvider.GetByte
uint8_t GlobalNamespace::SecureRandomProvider::GetByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SecureRandomProvider::GetByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SecureRandomProvider", "GetByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SecureRandomProvider.GetBytes
void GlobalNamespace::SecureRandomProvider::GetBytes(::ArrayW<uint8_t> buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SecureRandomProvider::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SecureRandomProvider", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, offset, length);
}
// Autogenerated method: SecureRandomProvider.GetBytes
void GlobalNamespace::SecureRandomProvider::GetBytes(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SecureRandomProvider::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SecureRandomProvider", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SecureRandomProvider/SecureRandomState
#include "GlobalNamespace/SecureRandomProvider_SecureRandomState.hpp"
// Including type: System.Security.Cryptography.RNGCryptoServiceProvider
#include "System/Security/Cryptography/RNGCryptoServiceProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kBufferSize
int GlobalNamespace::SecureRandomProvider::SecureRandomState::_get_kBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SecureRandomProvider::SecureRandomState::_get_kBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SecureRandomProvider/SecureRandomState", "kBufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kBufferSize
void GlobalNamespace::SecureRandomProvider::SecureRandomState::_set_kBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SecureRandomProvider::SecureRandomState::_set_kBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SecureRandomProvider/SecureRandomState", "kBufferSize", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Security.Cryptography.RNGCryptoServiceProvider _random
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RNGCryptoServiceProvider*& GlobalNamespace::SecureRandomProvider::SecureRandomState::dyn__random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SecureRandomProvider::SecureRandomState::dyn__random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_random"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RNGCryptoServiceProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _randomBuffer0
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::SecureRandomProvider::SecureRandomState::dyn__randomBuffer0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SecureRandomProvider::SecureRandomState::dyn__randomBuffer0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomBuffer0"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _randomBuffer1
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::SecureRandomProvider::SecureRandomState::dyn__randomBuffer1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SecureRandomProvider::SecureRandomState::dyn__randomBuffer1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomBuffer1"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SecureRandomProvider::SecureRandomState::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SecureRandomProvider::SecureRandomState::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SecureRandomProvider/SecureRandomState.GetBytes
void GlobalNamespace::SecureRandomProvider::SecureRandomState::GetBytes(::ArrayW<uint8_t> buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SecureRandomProvider::SecureRandomState::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, length);
}
// Autogenerated method: SecureRandomProvider/SecureRandomState.GetByte
uint8_t GlobalNamespace::SecureRandomProvider::SecureRandomState::GetByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SecureRandomProvider::SecureRandomState::GetByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: SecureRandomProvider/SecureRandomState.FillBuffer
void GlobalNamespace::SecureRandomProvider::SecureRandomState::FillBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SecureRandomProvider::SecureRandomState::FillBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SmallBufferPool
#include "GlobalNamespace/SmallBufferPool.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheSmallSize
int GlobalNamespace::SmallBufferPool::_get_kCacheSmallSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::_get_kCacheSmallSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheSmallSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheSmallSize
void GlobalNamespace::SmallBufferPool::_set_kCacheSmallSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::_set_kCacheSmallSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheSmallSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheMediumSize
int GlobalNamespace::SmallBufferPool::_get_kCacheMediumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::_get_kCacheMediumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheMediumSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheMediumSize
void GlobalNamespace::SmallBufferPool::_set_kCacheMediumSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::_set_kCacheMediumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheMediumSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheLargeSize
int GlobalNamespace::SmallBufferPool::_get_kCacheLargeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::_get_kCacheLargeSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheLargeSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheLargeSize
void GlobalNamespace::SmallBufferPool::_set_kCacheLargeSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::_set_kCacheLargeSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheLargeSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheMaxSize
int GlobalNamespace::SmallBufferPool::_get_kCacheMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::_get_kCacheMaxSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheMaxSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheMaxSize
void GlobalNamespace::SmallBufferPool::_set_kCacheMaxSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::_set_kCacheMaxSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheMaxSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheSmallMaxCapacity
int GlobalNamespace::SmallBufferPool::_get_kCacheSmallMaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::_get_kCacheSmallMaxCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheSmallMaxCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheSmallMaxCapacity
void GlobalNamespace::SmallBufferPool::_set_kCacheSmallMaxCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::_set_kCacheSmallMaxCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheSmallMaxCapacity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheMediumMaxCapacity
int GlobalNamespace::SmallBufferPool::_get_kCacheMediumMaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::_get_kCacheMediumMaxCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheMediumMaxCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheMediumMaxCapacity
void GlobalNamespace::SmallBufferPool::_set_kCacheMediumMaxCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::_set_kCacheMediumMaxCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheMediumMaxCapacity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheLargeMaxCapacity
int GlobalNamespace::SmallBufferPool::_get_kCacheLargeMaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::_get_kCacheLargeMaxCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheLargeMaxCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheLargeMaxCapacity
void GlobalNamespace::SmallBufferPool::_set_kCacheLargeMaxCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::_set_kCacheLargeMaxCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheLargeMaxCapacity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheMaxMaxCapacity
int GlobalNamespace::SmallBufferPool::_get_kCacheMaxMaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::_get_kCacheMaxMaxCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheMaxMaxCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheMaxMaxCapacity
void GlobalNamespace::SmallBufferPool::_set_kCacheMaxMaxCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::_set_kCacheMaxMaxCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheMaxMaxCapacity", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Byte[]> _cacheSmall
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::ArrayW<uint8_t>>*& GlobalNamespace::SmallBufferPool::dyn__cacheSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::dyn__cacheSmall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cacheSmall"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::ArrayW<uint8_t>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Byte[]> _cacheMedium
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::ArrayW<uint8_t>>*& GlobalNamespace::SmallBufferPool::dyn__cacheMedium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::dyn__cacheMedium");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cacheMedium"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::ArrayW<uint8_t>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Byte[]> _cacheLarge
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::ArrayW<uint8_t>>*& GlobalNamespace::SmallBufferPool::dyn__cacheLarge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::dyn__cacheLarge");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cacheLarge"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::ArrayW<uint8_t>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Byte[]> _cacheMax
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::ArrayW<uint8_t>>*& GlobalNamespace::SmallBufferPool::dyn__cacheMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::dyn__cacheMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cacheMax"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::ArrayW<uint8_t>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SmallBufferPool.GetBuffer
::ArrayW<uint8_t> GlobalNamespace::SmallBufferPool::GetBuffer(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::GetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, length);
}
// Autogenerated method: SmallBufferPool.ReleaseBuffer
void GlobalNamespace::SmallBufferPool::ReleaseBuffer(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmallBufferPool::ReleaseBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongSelectionMode
#include "GlobalNamespace/SongSelectionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SongSelectionMode Vote
::GlobalNamespace::SongSelectionMode GlobalNamespace::SongSelectionMode::_get_Vote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongSelectionMode::_get_Vote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongSelectionMode>("", "SongSelectionMode", "Vote"));
}
// Autogenerated static field setter
// Set static field: static public SongSelectionMode Vote
void GlobalNamespace::SongSelectionMode::_set_Vote(::GlobalNamespace::SongSelectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongSelectionMode::_set_Vote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongSelectionMode", "Vote", value));
}
// Autogenerated static field getter
// Get static field: static public SongSelectionMode Random
::GlobalNamespace::SongSelectionMode GlobalNamespace::SongSelectionMode::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongSelectionMode::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongSelectionMode>("", "SongSelectionMode", "Random"));
}
// Autogenerated static field setter
// Set static field: static public SongSelectionMode Random
void GlobalNamespace::SongSelectionMode::_set_Random(::GlobalNamespace::SongSelectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongSelectionMode::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongSelectionMode", "Random", value));
}
// Autogenerated static field getter
// Get static field: static public SongSelectionMode OwnerPicks
::GlobalNamespace::SongSelectionMode GlobalNamespace::SongSelectionMode::_get_OwnerPicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongSelectionMode::_get_OwnerPicks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongSelectionMode>("", "SongSelectionMode", "OwnerPicks"));
}
// Autogenerated static field setter
// Set static field: static public SongSelectionMode OwnerPicks
void GlobalNamespace::SongSelectionMode::_set_OwnerPicks(::GlobalNamespace::SongSelectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongSelectionMode::_set_OwnerPicks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongSelectionMode", "OwnerPicks", value));
}
// Autogenerated static field getter
// Get static field: static public SongSelectionMode RandomPlayerPicks
::GlobalNamespace::SongSelectionMode GlobalNamespace::SongSelectionMode::_get_RandomPlayerPicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongSelectionMode::_get_RandomPlayerPicks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongSelectionMode>("", "SongSelectionMode", "RandomPlayerPicks"));
}
// Autogenerated static field setter
// Set static field: static public SongSelectionMode RandomPlayerPicks
void GlobalNamespace::SongSelectionMode::_set_RandomPlayerPicks(::GlobalNamespace::SongSelectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongSelectionMode::_set_RandomPlayerPicks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongSelectionMode", "RandomPlayerPicks", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SongSelectionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongSelectionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongStartHandler
#include "GlobalNamespace/SongStartHandler.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: PlayersSpecificSettingsAtGameStartModel
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kFixedStartDelay
float GlobalNamespace::SongStartHandler::_get_kFixedStartDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::_get_kFixedStartDelay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SongStartHandler", "kFixedStartDelay"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kFixedStartDelay
void GlobalNamespace::SongStartHandler::_set_kFixedStartDelay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::_set_kFixedStartDelay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongStartHandler", "kFixedStartDelay", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::SongStartHandler::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IGameplayRpcManager _gameplayRpcManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IGameplayRpcManager*& GlobalNamespace::SongStartHandler::dyn__gameplayRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::dyn__gameplayRpcManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayRpcManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IGameplayRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayersSpecificSettingsAtGameStartModel _playersAtGameStartModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel*& GlobalNamespace::SongStartHandler::dyn__playersAtGameStartModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::dyn__playersAtGameStartModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersAtGameStartModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _readyPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::SongStartHandler::dyn__readyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::dyn__readyPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readyPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SongStartHandler::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongStartHandler::dyn__startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::dyn__startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> setSongStartSyncTimeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& GlobalNamespace::SongStartHandler::dyn_setSongStartSyncTimeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::dyn_setSongStartSyncTimeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setSongStartSyncTimeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongStartHandler.get_songStartSyncTime
float GlobalNamespace::SongStartHandler::get_songStartSyncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::get_songStartSyncTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songStartSyncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SongStartHandler.add_setSongStartSyncTimeEvent
void GlobalNamespace::SongStartHandler::add_setSongStartSyncTimeEvent(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::add_setSongStartSyncTimeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setSongStartSyncTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongStartHandler.remove_setSongStartSyncTimeEvent
void GlobalNamespace::SongStartHandler::remove_setSongStartSyncTimeEvent(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::remove_setSongStartSyncTimeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setSongStartSyncTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongStartHandler.GetLevelStartTimeOffset
void GlobalNamespace::SongStartHandler::GetLevelStartTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::GetLevelStartTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelStartTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongStartHandler.Dispose
void GlobalNamespace::SongStartHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongStartHandler.ForceStart
void GlobalNamespace::SongStartHandler::ForceStart(::StringW sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::ForceStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionGameId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionGameId);
}
// Autogenerated method: SongStartHandler.StartSong
void GlobalNamespace::SongStartHandler::StartSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::StartSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongStartHandler.HandleSetGameplaySongReady
void GlobalNamespace::SongStartHandler::HandleSetGameplaySongReady(::StringW user) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::HandleSetGameplaySongReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetGameplaySongReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, user);
}
// Autogenerated method: SongStartHandler.HandleGetGameplaySongReady
void GlobalNamespace::SongStartHandler::HandleGetGameplaySongReady(::StringW user) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::HandleGetGameplaySongReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGetGameplaySongReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, user);
}
// Autogenerated method: SongStartHandler.HandleSetSongStartTime
void GlobalNamespace::SongStartHandler::HandleSetSongStartTime(::StringW user, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::HandleSetSongStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetSongStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, user, time);
}
// Autogenerated method: SongStartHandler.Log
void GlobalNamespace::SongStartHandler::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartHandler::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SortExtensions
#include "GlobalNamespace/SortExtensions.hpp"
// Including type: SortExtensions/<>c__DisplayClass1_0`1
#include "GlobalNamespace/SortExtensions_--c__DisplayClass1_0_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandaloneMonobehavior
#include "GlobalNamespace/StandaloneMonobehavior.hpp"
// Including type: StandaloneMonobehavior/<WhenReady>d__20
#include "GlobalNamespace/StandaloneMonobehavior_-WhenReady-d__20.hpp"
// Including type: StandaloneMonobehavior/<WhenReadyAsync>d__21
#include "GlobalNamespace/StandaloneMonobehavior_-WhenReadyAsync-d__21.hpp"
// Including type: StandaloneMonobehavior/<RunAsyncCoroutine>d__25
#include "GlobalNamespace/StandaloneMonobehavior_-RunAsyncCoroutine-d__25.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> _readyTcs
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<bool>*& GlobalNamespace::StandaloneMonobehavior::dyn__readyTcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::dyn__readyTcs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readyTcs"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isRunning
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::StandaloneMonobehavior::dyn__isRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::dyn__isRunning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRunning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::StandaloneMonobehavior::dyn__startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::dyn__startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.FrameTiming[] _lastFrameTimings
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::FrameTiming>& GlobalNamespace::StandaloneMonobehavior::dyn__lastFrameTimings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::dyn__lastFrameTimings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFrameTimings"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::FrameTiming>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastFrameTimeCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StandaloneMonobehavior::dyn__lastFrameTimeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::dyn__lastFrameTimeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFrameTimeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandaloneMonobehavior.get_objectLifeTime
float GlobalNamespace::StandaloneMonobehavior::get_objectLifeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::get_objectLifeTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectLifeTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.get_deltaTime
float GlobalNamespace::StandaloneMonobehavior::get_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::get_deltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.get_lastFrameTime
float GlobalNamespace::StandaloneMonobehavior::get_lastFrameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::get_lastFrameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastFrameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.get_frameCount
int GlobalNamespace::StandaloneMonobehavior::get_frameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::get_frameCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frameCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.get_isReady
bool GlobalNamespace::StandaloneMonobehavior::get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::get_isReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.Awake
void GlobalNamespace::StandaloneMonobehavior::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.Start
void GlobalNamespace::StandaloneMonobehavior::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.Update
void GlobalNamespace::StandaloneMonobehavior::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.OnDestroy
void GlobalNamespace::StandaloneMonobehavior::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.OnApplicationPause
void GlobalNamespace::StandaloneMonobehavior::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::OnApplicationPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pauseStatus);
}
// Autogenerated method: StandaloneMonobehavior.WhenReady
void GlobalNamespace::StandaloneMonobehavior::WhenReady(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::WhenReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WhenReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: StandaloneMonobehavior.WhenReadyAsync
::System::Threading::Tasks::Task* GlobalNamespace::StandaloneMonobehavior::WhenReadyAsync(::System::Func_1<::System::Threading::Tasks::Task*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::WhenReadyAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WhenReadyAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, action);
}
// Autogenerated method: StandaloneMonobehavior.RunAsync
::System::Threading::Tasks::Task* GlobalNamespace::StandaloneMonobehavior::RunAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::RunAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: StandaloneMonobehavior.Stop
void GlobalNamespace::StandaloneMonobehavior::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.RunAsyncCoroutine
::System::Collections::IEnumerator* GlobalNamespace::StandaloneMonobehavior::RunAsyncCoroutine(::System::Threading::Tasks::TaskCompletionSource_1<bool>* tcs, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::RunAsyncCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunAsyncCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tcs), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, tcs, cancellationToken);
}
// Autogenerated method: StandaloneMonobehavior.GetLastFrameTime
float GlobalNamespace::StandaloneMonobehavior::GetLastFrameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::GetLastFrameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastFrameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandaloneMonobehavior/<WhenReady>d__20
#include "GlobalNamespace/StandaloneMonobehavior_-WhenReady-d__20.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StandaloneMonobehavior::$WhenReady$d__20::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$WhenReady$d__20::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::StandaloneMonobehavior::$WhenReady$d__20::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$WhenReady$d__20::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public StandaloneMonobehavior <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StandaloneMonobehavior*& GlobalNamespace::StandaloneMonobehavior::$WhenReady$d__20::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$WhenReady$d__20::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandaloneMonobehavior**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action action
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::StandaloneMonobehavior::$WhenReady$d__20::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$WhenReady$d__20::dyn_action");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::StandaloneMonobehavior::$WhenReady$d__20::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$WhenReady$d__20::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandaloneMonobehavior/<WhenReady>d__20.MoveNext
void GlobalNamespace::StandaloneMonobehavior::$WhenReady$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$WhenReady$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<WhenReady>d__20.SetStateMachine
void GlobalNamespace::StandaloneMonobehavior::$WhenReady$d__20::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$WhenReady$d__20::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandaloneMonobehavior/<WhenReadyAsync>d__21
#include "GlobalNamespace/StandaloneMonobehavior_-WhenReadyAsync-d__21.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StandaloneMonobehavior::$WhenReadyAsync$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$WhenReadyAsync$d__21::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::StandaloneMonobehavior::$WhenReadyAsync$d__21::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$WhenReadyAsync$d__21::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public StandaloneMonobehavior <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StandaloneMonobehavior*& GlobalNamespace::StandaloneMonobehavior::$WhenReadyAsync$d__21::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$WhenReadyAsync$d__21::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandaloneMonobehavior**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`1<System.Threading.Tasks.Task> action
[[deprecated("Use field access instead!")]] ::System::Func_1<::System::Threading::Tasks::Task*>*& GlobalNamespace::StandaloneMonobehavior::$WhenReadyAsync$d__21::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$WhenReadyAsync$d__21::dyn_action");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Func_1<::System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::StandaloneMonobehavior::$WhenReadyAsync$d__21::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$WhenReadyAsync$d__21::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::StandaloneMonobehavior::$WhenReadyAsync$d__21::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$WhenReadyAsync$d__21::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandaloneMonobehavior/<WhenReadyAsync>d__21.MoveNext
void GlobalNamespace::StandaloneMonobehavior::$WhenReadyAsync$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$WhenReadyAsync$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<WhenReadyAsync>d__21.SetStateMachine
void GlobalNamespace::StandaloneMonobehavior::$WhenReadyAsync$d__21::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$WhenReadyAsync$d__21::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandaloneMonobehavior/<RunAsyncCoroutine>d__25
#include "GlobalNamespace/StandaloneMonobehavior_-RunAsyncCoroutine-d__25.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public StandaloneMonobehavior <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StandaloneMonobehavior*& GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandaloneMonobehavior**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::dyn_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> tcs
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<bool>*& GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::dyn_tcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::dyn_tcs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tcs"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandaloneMonobehavior/<RunAsyncCoroutine>d__25.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<RunAsyncCoroutine>d__25.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<RunAsyncCoroutine>d__25.System.IDisposable.Dispose
void GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<RunAsyncCoroutine>d__25.MoveNext
bool GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<RunAsyncCoroutine>d__25.System.Collections.IEnumerator.Reset
void GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__25::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodePoseSyncState
#include "GlobalNamespace/NodePoseSyncState.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PoseSerializable _head
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PoseSerializable& GlobalNamespace::NodePoseSyncState::dyn__head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncState::dyn__head");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_head"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PoseSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PoseSerializable _leftController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PoseSerializable& GlobalNamespace::NodePoseSyncState::dyn__leftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncState::dyn__leftController");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PoseSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PoseSerializable _rightController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PoseSerializable& GlobalNamespace::NodePoseSyncState::dyn__rightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncState::dyn__rightController");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PoseSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NodePoseSyncState.Serialize
void GlobalNamespace::NodePoseSyncState::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncState::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: NodePoseSyncState.Deserialize
void GlobalNamespace::NodePoseSyncState::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncState::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: NodePoseSyncState.SetState
void GlobalNamespace::NodePoseSyncState::SetState(::GlobalNamespace::NodePoseSyncState_NodePose nodePose, ::GlobalNamespace::PoseSerializable pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncState::SetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodePose), ::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodePose, pose);
}
// Autogenerated method: NodePoseSyncState.GetState
::GlobalNamespace::PoseSerializable GlobalNamespace::NodePoseSyncState::GetState(::GlobalNamespace::NodePoseSyncState_NodePose nodePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncState::GetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodePose)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PoseSerializable, false>(this, ___internal__method, nodePose);
}
// Autogenerated method: NodePoseSyncState.Equals
bool GlobalNamespace::NodePoseSyncState::Equals(ByRef<::GlobalNamespace::NodePoseSyncState> other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncState::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(other));
}
// Autogenerated method: NodePoseSyncState.GetDelta
::GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncState::GetDelta(ByRef<::GlobalNamespace::NodePoseSyncState> latest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncState::GetDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(latest)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NodePoseSyncState, false>(this, ___internal__method, byref(latest));
}
// Autogenerated method: NodePoseSyncState.ApplyDelta
::GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncState::ApplyDelta(ByRef<::GlobalNamespace::NodePoseSyncState> delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncState::ApplyDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NodePoseSyncState, false>(this, ___internal__method, byref(delta));
}
// Autogenerated method: NodePoseSyncState.GetSize
int GlobalNamespace::NodePoseSyncState::GetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncState::GetSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncState.IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.GetDelta
::GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncState::IStateTable$NodePoseSyncState_NodePoseSyncState_NodePose_PoseSerializable$_GetDelta(ByRef<::GlobalNamespace::NodePoseSyncState> stateTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncState::IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.GetDelta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.GetDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateTable)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NodePoseSyncState, false>(this, ___internal__method, byref(stateTable));
}
// Autogenerated method: NodePoseSyncState.IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.ApplyDelta
::GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncState::IStateTable$NodePoseSyncState_NodePoseSyncState_NodePose_PoseSerializable$_ApplyDelta(ByRef<::GlobalNamespace::NodePoseSyncState> delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncState::IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.ApplyDelta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.ApplyDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NodePoseSyncState, false>(this, ___internal__method, byref(delta));
}
// Autogenerated method: NodePoseSyncState.IEquatableByReference<NodePoseSyncState>.Equals
bool GlobalNamespace::NodePoseSyncState::IEquatableByReference$NodePoseSyncState$_Equals(ByRef<::GlobalNamespace::NodePoseSyncState> other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncState::IEquatableByReference<NodePoseSyncState>.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IEquatableByReference<NodePoseSyncState>.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(other));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodePoseSyncStateDeltaNetSerializable
#include "GlobalNamespace/NodePoseSyncStateDeltaNetSerializable.hpp"
// Including type: IPacketPool`1
#include "GlobalNamespace/IPacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NodePoseSyncState _delta
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NodePoseSyncState& GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::dyn__delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::dyn__delta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delta"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NodePoseSyncState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SyncStateId <baseId>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SyncStateId& GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::dyn_$baseId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::dyn_$baseId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<baseId>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SyncStateId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <timeOffsetMs>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::dyn_$timeOffsetMs$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::dyn_$timeOffsetMs$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timeOffsetMs>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.get_pool
::GlobalNamespace::IPacketPool_1<::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable*>* GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NodePoseSyncStateDeltaNetSerializable", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPacketPool_1<::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.get_baseId
::GlobalNamespace::SyncStateId GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_baseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_baseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_baseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SyncStateId, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.set_baseId
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_baseId(::GlobalNamespace::SyncStateId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_baseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_baseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.get_timeOffsetMs
int GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_timeOffsetMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_timeOffsetMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeOffsetMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.set_timeOffsetMs
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_timeOffsetMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_timeOffsetMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeOffsetMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.get_delta
::GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_delta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NodePoseSyncState, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.set_delta
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_delta(::GlobalNamespace::NodePoseSyncState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_delta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.Serialize
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.Deserialize
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.Release
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodePoseSyncStateNetSerializable
#include "GlobalNamespace/NodePoseSyncStateNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NodePoseSyncState _state
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NodePoseSyncState& GlobalNamespace::NodePoseSyncStateNetSerializable::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateNetSerializable::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NodePoseSyncState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SyncStateId <id>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SyncStateId& GlobalNamespace::NodePoseSyncStateNetSerializable::dyn_$id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateNetSerializable::dyn_$id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<id>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SyncStateId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <time>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NodePoseSyncStateNetSerializable::dyn_$time$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateNetSerializable::dyn_$time$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.get_pool
::GlobalNamespace::PacketPool_1<::GlobalNamespace::NodePoseSyncStateNetSerializable*>* GlobalNamespace::NodePoseSyncStateNetSerializable::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateNetSerializable::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NodePoseSyncStateNetSerializable", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::GlobalNamespace::NodePoseSyncStateNetSerializable*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.get_id
::GlobalNamespace::SyncStateId GlobalNamespace::NodePoseSyncStateNetSerializable::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateNetSerializable::get_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SyncStateId, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.set_id
void GlobalNamespace::NodePoseSyncStateNetSerializable::set_id(::GlobalNamespace::SyncStateId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateNetSerializable::set_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.get_time
float GlobalNamespace::NodePoseSyncStateNetSerializable::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateNetSerializable::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.set_time
void GlobalNamespace::NodePoseSyncStateNetSerializable::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateNetSerializable::set_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.get_state
::GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncStateNetSerializable::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateNetSerializable::get_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NodePoseSyncState, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.set_state
void GlobalNamespace::NodePoseSyncStateNetSerializable::set_state(::GlobalNamespace::NodePoseSyncState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateNetSerializable::set_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.Serialize
void GlobalNamespace::NodePoseSyncStateNetSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.Deserialize
void GlobalNamespace::NodePoseSyncStateNetSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.Release
void GlobalNamespace::NodePoseSyncStateNetSerializable::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateNetSerializable::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosePrediction
#include "GlobalNamespace/PosePrediction.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: PoseSerializable
#include "GlobalNamespace/PoseSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PosePrediction.PredictPose
::UnityEngine::Pose GlobalNamespace::PosePrediction::PredictPose(::UnityEngine::Pose prev, float prevTime, ::UnityEngine::Pose curr, float currTime, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosePrediction::PredictPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosePrediction", "PredictPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prev), ::il2cpp_utils::ExtractType(prevTime), ::il2cpp_utils::ExtractType(curr), ::il2cpp_utils::ExtractType(currTime), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prev, prevTime, curr, currTime, time);
}
// Autogenerated method: PosePrediction.InterpolatePose
::UnityEngine::Pose GlobalNamespace::PosePrediction::InterpolatePose(::UnityEngine::Pose prev, ::UnityEngine::Pose curr, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosePrediction::InterpolatePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosePrediction", "InterpolatePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prev), ::il2cpp_utils::ExtractType(curr), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Pose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prev, curr, t);
}
// Autogenerated method: PosePrediction.PredictPoseSerializable
::GlobalNamespace::PoseSerializable GlobalNamespace::PosePrediction::PredictPoseSerializable(::GlobalNamespace::PoseSerializable prev, float prevTime, ::GlobalNamespace::PoseSerializable curr, float currTime, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosePrediction::PredictPoseSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosePrediction", "PredictPoseSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prev), ::il2cpp_utils::ExtractType(prevTime), ::il2cpp_utils::ExtractType(curr), ::il2cpp_utils::ExtractType(currTime), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PoseSerializable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prev, prevTime, curr, currTime, time);
}
// Autogenerated method: PosePrediction.InterpolatePoseSerializable
::GlobalNamespace::PoseSerializable GlobalNamespace::PosePrediction::InterpolatePoseSerializable(::GlobalNamespace::PoseSerializable a, ::GlobalNamespace::PoseSerializable b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosePrediction::InterpolatePoseSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosePrediction", "InterpolatePoseSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PoseSerializable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardScoreSyncState
#include "GlobalNamespace/StandardScoreSyncState.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _modifiedScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StandardScoreSyncState::dyn__modifiedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncState::dyn__modifiedScore");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modifiedScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _multipliedScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StandardScoreSyncState::dyn__multipliedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncState::dyn__multipliedScore");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multipliedScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _immediateMaxPossibleMultipliedScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StandardScoreSyncState::dyn__immediateMaxPossibleMultipliedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncState::dyn__immediateMaxPossibleMultipliedScore");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_immediateMaxPossibleMultipliedScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _combo
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StandardScoreSyncState::dyn__combo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncState::dyn__combo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _multiplier
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StandardScoreSyncState::dyn__multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncState::dyn__multiplier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplier"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardScoreSyncState.SetState
void GlobalNamespace::StandardScoreSyncState::SetState(::GlobalNamespace::StandardScoreSyncState_Score s, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncState::SetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, value);
}
// Autogenerated method: StandardScoreSyncState.GetDelta
::GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncState::GetDelta(ByRef<::GlobalNamespace::StandardScoreSyncState> stateTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncState::GetDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateTable)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::StandardScoreSyncState, false>(this, ___internal__method, byref(stateTable));
}
// Autogenerated method: StandardScoreSyncState.ApplyDelta
::GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncState::ApplyDelta(ByRef<::GlobalNamespace::StandardScoreSyncState> delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncState::ApplyDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::StandardScoreSyncState, false>(this, ___internal__method, byref(delta));
}
// Autogenerated method: StandardScoreSyncState.GetState
int GlobalNamespace::StandardScoreSyncState::GetState(::GlobalNamespace::StandardScoreSyncState_Score s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncState::GetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s);
}
// Autogenerated method: StandardScoreSyncState.Serialize
void GlobalNamespace::StandardScoreSyncState::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncState::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: StandardScoreSyncState.Deserialize
void GlobalNamespace::StandardScoreSyncState::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncState::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: StandardScoreSyncState.Equals
bool GlobalNamespace::StandardScoreSyncState::Equals(ByRef<::GlobalNamespace::StandardScoreSyncState> other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncState::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(other));
}
// Autogenerated method: StandardScoreSyncState.GetSize
int GlobalNamespace::StandardScoreSyncState::GetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncState::GetSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: StandardScoreSyncState.IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.GetDelta
::GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncState::IStateTable$StandardScoreSyncState_StandardScoreSyncState_Score_System_Int32$_GetDelta(ByRef<::GlobalNamespace::StandardScoreSyncState> stateTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncState::IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.GetDelta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.GetDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateTable)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::StandardScoreSyncState, false>(this, ___internal__method, byref(stateTable));
}
// Autogenerated method: StandardScoreSyncState.IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.ApplyDelta
::GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncState::IStateTable$StandardScoreSyncState_StandardScoreSyncState_Score_System_Int32$_ApplyDelta(ByRef<::GlobalNamespace::StandardScoreSyncState> delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncState::IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.ApplyDelta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.ApplyDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::StandardScoreSyncState, false>(this, ___internal__method, byref(delta));
}
// Autogenerated method: StandardScoreSyncState.IEquatableByReference<StandardScoreSyncState>.Equals
bool GlobalNamespace::StandardScoreSyncState::IEquatableByReference$StandardScoreSyncState$_Equals(ByRef<::GlobalNamespace::StandardScoreSyncState> other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncState::IEquatableByReference<StandardScoreSyncState>.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IEquatableByReference<StandardScoreSyncState>.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(other));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardScoreSyncStateDeltaNetSerializable
#include "GlobalNamespace/StandardScoreSyncStateDeltaNetSerializable.hpp"
// Including type: IPacketPool`1
#include "GlobalNamespace/IPacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private StandardScoreSyncState _delta
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StandardScoreSyncState& GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::dyn__delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::dyn__delta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delta"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardScoreSyncState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SyncStateId <baseId>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SyncStateId& GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::dyn_$baseId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::dyn_$baseId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<baseId>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SyncStateId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <timeOffsetMs>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::dyn_$timeOffsetMs$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::dyn_$timeOffsetMs$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timeOffsetMs>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.get_pool
::GlobalNamespace::IPacketPool_1<::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable*>* GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StandardScoreSyncStateDeltaNetSerializable", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPacketPool_1<::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.get_baseId
::GlobalNamespace::SyncStateId GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_baseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_baseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_baseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SyncStateId, false>(this, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.set_baseId
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_baseId(::GlobalNamespace::SyncStateId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_baseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_baseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.get_timeOffsetMs
int GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_timeOffsetMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_timeOffsetMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeOffsetMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.set_timeOffsetMs
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_timeOffsetMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_timeOffsetMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeOffsetMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.get_delta
::GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_delta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::StandardScoreSyncState, false>(this, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.set_delta
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_delta(::GlobalNamespace::StandardScoreSyncState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_delta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.Serialize
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.Deserialize
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.Release
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardScoreSyncStateNetSerializable
#include "GlobalNamespace/StandardScoreSyncStateNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private StandardScoreSyncState _state
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StandardScoreSyncState& GlobalNamespace::StandardScoreSyncStateNetSerializable::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateNetSerializable::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardScoreSyncState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SyncStateId <id>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SyncStateId& GlobalNamespace::StandardScoreSyncStateNetSerializable::dyn_$id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateNetSerializable::dyn_$id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<id>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SyncStateId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <time>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::StandardScoreSyncStateNetSerializable::dyn_$time$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateNetSerializable::dyn_$time$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.get_pool
::GlobalNamespace::PacketPool_1<::GlobalNamespace::StandardScoreSyncStateNetSerializable*>* GlobalNamespace::StandardScoreSyncStateNetSerializable::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateNetSerializable::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StandardScoreSyncStateNetSerializable", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::GlobalNamespace::StandardScoreSyncStateNetSerializable*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.get_id
::GlobalNamespace::SyncStateId GlobalNamespace::StandardScoreSyncStateNetSerializable::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateNetSerializable::get_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SyncStateId, false>(this, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.set_id
void GlobalNamespace::StandardScoreSyncStateNetSerializable::set_id(::GlobalNamespace::SyncStateId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateNetSerializable::set_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.get_time
float GlobalNamespace::StandardScoreSyncStateNetSerializable::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateNetSerializable::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.set_time
void GlobalNamespace::StandardScoreSyncStateNetSerializable::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateNetSerializable::set_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.get_state
::GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncStateNetSerializable::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateNetSerializable::get_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::StandardScoreSyncState, false>(this, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.set_state
void GlobalNamespace::StandardScoreSyncStateNetSerializable::set_state(::GlobalNamespace::StandardScoreSyncState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateNetSerializable::set_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.Serialize
void GlobalNamespace::StandardScoreSyncStateNetSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.Deserialize
void GlobalNamespace::StandardScoreSyncStateNetSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.Release
void GlobalNamespace::StandardScoreSyncStateNetSerializable::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardScoreSyncStateNetSerializable::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SyncStateId
#include "GlobalNamespace/SyncStateId.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte kMaxValue
uint8_t GlobalNamespace::SyncStateId::_get_kMaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncStateId::_get_kMaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "SyncStateId", "kMaxValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kMaxValue
void GlobalNamespace::SyncStateId::_set_kMaxValue(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncStateId::_set_kMaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SyncStateId", "kMaxValue", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte _id
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::SyncStateId::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncStateId::dyn__id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SyncStateId..ctor
// ABORTED elsewhere.  GlobalNamespace::SyncStateId::SyncStateId(uint8_t id)
// Autogenerated method: SyncStateId.Equals
bool GlobalNamespace::SyncStateId::Equals(::GlobalNamespace::SyncStateId other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncStateId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: SyncStateId.Increment
::GlobalNamespace::SyncStateId GlobalNamespace::SyncStateId::Increment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncStateId::Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SyncStateId, false>(this, ___internal__method);
}
// Autogenerated method: SyncStateId.Before
bool GlobalNamespace::SyncStateId::Before(::GlobalNamespace::SyncStateId other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncStateId::Before");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Before", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: SyncStateId.Serialize
void GlobalNamespace::SyncStateId::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncStateId::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: SyncStateId.SerializeWithFlag
void GlobalNamespace::SyncStateId::SerializeWithFlag(::LiteNetLib::Utils::NetDataWriter* writer, bool flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncStateId::SerializeWithFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SerializeWithFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(flag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, flag);
}
// Autogenerated method: SyncStateId.Deserialize
::GlobalNamespace::SyncStateId GlobalNamespace::SyncStateId::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncStateId::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SyncStateId", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SyncStateId, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: SyncStateId.DeserializeWithFlag
::GlobalNamespace::SyncStateId GlobalNamespace::SyncStateId::DeserializeWithFlag(::LiteNetLib::Utils::NetDataReader* reader, ByRef<bool> flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncStateId::DeserializeWithFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SyncStateId", "DeserializeWithFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SyncStateId, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, byref(flag));
}
// Autogenerated method: SyncStateId.CreateFromSerializedData
::GlobalNamespace::SyncStateId GlobalNamespace::SyncStateId::CreateFromSerializedData(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncStateId::CreateFromSerializedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SyncStateId, false>(this, ___internal__method, reader);
}
// Autogenerated method: SyncStateId.Equals
bool GlobalNamespace::SyncStateId::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncStateId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: SyncStateId.GetHashCode
int GlobalNamespace::SyncStateId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncStateId::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: SyncStateId.ToString
::StringW GlobalNamespace::SyncStateId::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncStateId::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: SyncStateId.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::SyncStateId& a, const ::GlobalNamespace::SyncStateId& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncStateId::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SyncStateId", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: SyncStateId.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::SyncStateId& a, const ::GlobalNamespace::SyncStateId& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncStateId::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SyncStateId", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SynchronizedActionQueue
#include "GlobalNamespace/SynchronizedActionQueue.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<SynchronizedActionQueue/SynchronizedAction> _synchronizedActionQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::SynchronizedActionQueue::SynchronizedAction>*& GlobalNamespace::SynchronizedActionQueue::dyn__synchronizedActionQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchronizedActionQueue::dyn__synchronizedActionQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_synchronizedActionQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::SynchronizedActionQueue::SynchronizedAction>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SynchronizedActionQueue.Clear
void GlobalNamespace::SynchronizedActionQueue::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchronizedActionQueue::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SynchronizedActionQueue.EnqueueAction
void GlobalNamespace::SynchronizedActionQueue::EnqueueAction(float time, ::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchronizedActionQueue::EnqueueAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnqueueAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, action);
}
// Autogenerated method: SynchronizedActionQueue.Update
void GlobalNamespace::SynchronizedActionQueue::Update(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchronizedActionQueue::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SynchronizedActionQueue/SynchronizedAction
#include "GlobalNamespace/SynchronizedActionQueue.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::dyn_time");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Action action
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::dyn_action");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SynchronizedActionQueue/SynchronizedAction..ctor
// ABORTED elsewhere.  GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::SynchronizedAction(float time, ::System::Action* action)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TaskExtensions
#include "GlobalNamespace/TaskExtensions.hpp"
// Including type: TaskExtensions/<>c__DisplayClass0_0`1
#include "GlobalNamespace/TaskExtensions_--c__DisplayClass0_0_1.hpp"
// Including type: TaskExtensions/<WaitForTask>d__1`1
#include "GlobalNamespace/TaskExtensions_-WaitForTask-d__1_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UpdateConnectionStateReason
#include "GlobalNamespace/UpdateConnectionStateReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason Init
::GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_get_Init");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "Init"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason Init
void GlobalNamespace::UpdateConnectionStateReason::_set_Init(::GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_set_Init");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "Init", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason PlayerOrderChanged
::GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_PlayerOrderChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_get_PlayerOrderChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "PlayerOrderChanged"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason PlayerOrderChanged
void GlobalNamespace::UpdateConnectionStateReason::_set_PlayerOrderChanged(::GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_set_PlayerOrderChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "PlayerOrderChanged", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason Connected
::GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason Connected
void GlobalNamespace::UpdateConnectionStateReason::_set_Connected(::GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason StartSession
::GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_StartSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_get_StartSession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "StartSession"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason StartSession
void GlobalNamespace::UpdateConnectionStateReason::_set_StartSession(::GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_set_StartSession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "StartSession", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason StartDedicatedServer
::GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_StartDedicatedServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_get_StartDedicatedServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "StartDedicatedServer"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason StartDedicatedServer
void GlobalNamespace::UpdateConnectionStateReason::_set_StartDedicatedServer(::GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_set_StartDedicatedServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "StartDedicatedServer", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason SyncTimeInitialized
::GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_SyncTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_get_SyncTimeInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "SyncTimeInitialized"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason SyncTimeInitialized
void GlobalNamespace::UpdateConnectionStateReason::_set_SyncTimeInitialized(::GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_set_SyncTimeInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "SyncTimeInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason ManualDisconnect
::GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_ManualDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_get_ManualDisconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "ManualDisconnect"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason ManualDisconnect
void GlobalNamespace::UpdateConnectionStateReason::_set_ManualDisconnect(::GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_set_ManualDisconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "ManualDisconnect", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason RemoteDisconnect
::GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_RemoteDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_get_RemoteDisconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "RemoteDisconnect"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason RemoteDisconnect
void GlobalNamespace::UpdateConnectionStateReason::_set_RemoteDisconnect(::GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_set_RemoteDisconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "RemoteDisconnect", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason ConnectionFailed
::GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_ConnectionFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_get_ConnectionFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "ConnectionFailed"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason ConnectionFailed
void GlobalNamespace::UpdateConnectionStateReason::_set_ConnectionFailed(::GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_set_ConnectionFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "ConnectionFailed", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason OnDestroy
::GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_get_OnDestroy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "OnDestroy"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason OnDestroy
void GlobalNamespace::UpdateConnectionStateReason::_set_OnDestroy(::GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::_set_OnDestroy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "OnDestroy", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::UpdateConnectionStateReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UpdateConnectionStateReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UtcTimeProvider
#include "GlobalNamespace/UtcTimeProvider.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10C0D28
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime _epoch
::System::DateTime GlobalNamespace::UtcTimeProvider::_get__epoch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UtcTimeProvider::_get__epoch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("", "UtcTimeProvider", "_epoch"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime _epoch
void GlobalNamespace::UtcTimeProvider::_set__epoch(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UtcTimeProvider::_set__epoch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UtcTimeProvider", "_epoch", value));
}
// Autogenerated method: UtcTimeProvider..cctor
void GlobalNamespace::UtcTimeProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UtcTimeProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UtcTimeProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UtcTimeProvider.GetTimeMs
int64_t GlobalNamespace::UtcTimeProvider::GetTimeMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UtcTimeProvider::GetTimeMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimeMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UtcTimeProvider.DelayMs
::System::Threading::Tasks::Task* GlobalNamespace::UtcTimeProvider::DelayMs(int millis, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UtcTimeProvider::DelayMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millis), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, millis, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: X509CertificateUtility
#include "GlobalNamespace/X509CertificateUtility.hpp"
// Including type: X509CertificateUtility/PasswordFinder
#include "GlobalNamespace/X509CertificateUtility_PasswordFinder.hpp"
// Including type: X509CertificateUtility/RSACertificateEncryptionProvider
#include "GlobalNamespace/X509CertificateUtility_RSACertificateEncryptionProvider.hpp"
// Including type: X509CertificateUtility/<GetCertificateList>d__8
#include "GlobalNamespace/X509CertificateUtility_-GetCertificateList-d__8.hpp"
// Including type: X509CertificateUtility/<>c
#include "GlobalNamespace/X509CertificateUtility_--c.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: ICertificateEncryptionProvider
#include "GlobalNamespace/ICertificateEncryptionProvider.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10C0D38
// Autogenerated static field getter
// Get static field: static private readonly System.String kBeatSaberDotComRootCertificate
::StringW GlobalNamespace::X509CertificateUtility::_get_kBeatSaberDotComRootCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::_get_kBeatSaberDotComRootCertificate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "X509CertificateUtility", "kBeatSaberDotComRootCertificate"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String kBeatSaberDotComRootCertificate
void GlobalNamespace::X509CertificateUtility::_set_kBeatSaberDotComRootCertificate(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::_set_kBeatSaberDotComRootCertificate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "X509CertificateUtility", "kBeatSaberDotComRootCertificate", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10C0D48
// Autogenerated static field getter
// Get static field: static private readonly System.String kAwsRootCertificates
::StringW GlobalNamespace::X509CertificateUtility::_get_kAwsRootCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::_get_kAwsRootCertificates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "X509CertificateUtility", "kAwsRootCertificates"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String kAwsRootCertificates
void GlobalNamespace::X509CertificateUtility::_set_kAwsRootCertificates(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::_set_kAwsRootCertificates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "X509CertificateUtility", "kAwsRootCertificates", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.X509Certificates.X509Certificate2[] _rootCertificates
::ArrayW<::System::Security::Cryptography::X509Certificates::X509Certificate2*> GlobalNamespace::X509CertificateUtility::_get__rootCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::_get__rootCertificates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::X509Certificates::X509Certificate2*>>("", "X509CertificateUtility", "_rootCertificates"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.X509Certificates.X509Certificate2[] _rootCertificates
void GlobalNamespace::X509CertificateUtility::_set__rootCertificates(::ArrayW<::System::Security::Cryptography::X509Certificates::X509Certificate2*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::_set__rootCertificates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "X509CertificateUtility", "_rootCertificates", value));
}
// Autogenerated method: X509CertificateUtility..cctor
void GlobalNamespace::X509CertificateUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: X509CertificateUtility.GetRootCertificates
::ArrayW<::System::Security::Cryptography::X509Certificates::X509Certificate2*> GlobalNamespace::X509CertificateUtility::GetRootCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::GetRootCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "GetRootCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Security::Cryptography::X509Certificates::X509Certificate2*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: X509CertificateUtility.GetCertificateEncryptionProvider
::GlobalNamespace::ICertificateEncryptionProvider* GlobalNamespace::X509CertificateUtility::GetCertificateEncryptionProvider(::StringW privateKeyPem, ::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::GetCertificateEncryptionProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "GetCertificateEncryptionProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(privateKeyPem), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ICertificateEncryptionProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, privateKeyPem, password);
}
// Autogenerated method: X509CertificateUtility.GetRSACertificateEncryptionProvider
::GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider* GlobalNamespace::X509CertificateUtility::GetRSACertificateEncryptionProvider(::StringW privateKeyPem, ::GlobalNamespace::X509CertificateUtility::PasswordFinder* passwordFinder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::GetRSACertificateEncryptionProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "GetRSACertificateEncryptionProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(privateKeyPem), ::il2cpp_utils::ExtractType(passwordFinder)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, privateKeyPem, passwordFinder);
}
// Autogenerated method: X509CertificateUtility.GetCertificateList
::System::Collections::Generic::IEnumerable_1<::System::Security::Cryptography::X509Certificates::X509Certificate2*>* GlobalNamespace::X509CertificateUtility::GetCertificateList(::StringW certificatePem, ::StringW certificateChainPem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::GetCertificateList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "GetCertificateList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificatePem), ::il2cpp_utils::ExtractType(certificateChainPem)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Security::Cryptography::X509Certificates::X509Certificate2*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, certificatePem, certificateChainPem);
}
// Autogenerated method: X509CertificateUtility.ValidateCertificateChain
void GlobalNamespace::X509CertificateUtility::ValidateCertificateChain(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::ArrayW<::ArrayW<uint8_t>> certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::ValidateCertificateChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "ValidateCertificateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, certificate, certificateChain);
}
// Autogenerated method: X509CertificateUtility.ValidateCertificateChainUnity
void GlobalNamespace::X509CertificateUtility::ValidateCertificateChainUnity(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::ArrayW<::ArrayW<uint8_t>> certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::ValidateCertificateChainUnity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "ValidateCertificateChainUnity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, certificate, certificateChain);
}
// Autogenerated method: X509CertificateUtility.ValidateCertificateChainDotNet
void GlobalNamespace::X509CertificateUtility::ValidateCertificateChainDotNet(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::ArrayW<::ArrayW<uint8_t>> certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::ValidateCertificateChainDotNet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "ValidateCertificateChainDotNet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, certificate, certificateChain);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: X509CertificateUtility/PasswordFinder
#include "GlobalNamespace/X509CertificateUtility_PasswordFinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Char[] _password
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& GlobalNamespace::X509CertificateUtility::PasswordFinder::dyn__password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::PasswordFinder::dyn__password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_password"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: X509CertificateUtility/PasswordFinder.GetPassword
::ArrayW<::Il2CppChar> GlobalNamespace::X509CertificateUtility::PasswordFinder::GetPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::PasswordFinder::GetPassword");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: X509CertificateUtility/RSACertificateEncryptionProvider
#include "GlobalNamespace/X509CertificateUtility_RSACertificateEncryptionProvider.hpp"
// Including type: Org.BouncyCastle.Crypto.ISigner
#include "Org/BouncyCastle/Crypto/ISigner.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.RsaPrivateCrtKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/RsaPrivateCrtKeyParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Org.BouncyCastle.Crypto.ISigner _signer
[[deprecated("Use field access instead!")]] ::Org::BouncyCastle::Crypto::ISigner*& GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::dyn__signer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::dyn__signer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_signer"))->offset;
  return *reinterpret_cast<::Org::BouncyCastle::Crypto::ISigner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: X509CertificateUtility/RSACertificateEncryptionProvider.Dispose
void GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: X509CertificateUtility/RSACertificateEncryptionProvider.SignData
::ArrayW<uint8_t> GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::SignData(::ArrayW<uint8_t> data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::SignData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SignData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, offset, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: X509CertificateUtility/<GetCertificateList>d__8
#include "GlobalNamespace/X509CertificateUtility_-GetCertificateList-d__8.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: Org.BouncyCastle.X509.X509CertificateParser
#include "Org/BouncyCastle/X509/X509CertificateParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate2 <>2__current
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate2*& GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String certificatePem
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_certificatePem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_certificatePem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificatePem"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String <>3__certificatePem
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_$$3__certificatePem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_$$3__certificatePem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__certificatePem"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String certificateChainPem
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_certificateChainPem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_certificateChainPem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateChainPem"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String <>3__certificateChainPem
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_$$3__certificateChainPem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_$$3__certificateChainPem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__certificateChainPem"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Org.BouncyCastle.X509.X509CertificateParser <x509CertificateParser>5__2
[[deprecated("Use field access instead!")]] ::Org::BouncyCastle::X509::X509CertificateParser*& GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_$x509CertificateParser$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_$x509CertificateParser$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<x509CertificateParser>5__2"))->offset;
  return *reinterpret_cast<::Org::BouncyCastle::X509::X509CertificateParser**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator <>7__wrap2
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: X509CertificateUtility/<GetCertificateList>d__8.System.Collections.Generic.IEnumerator<System.Security.Cryptography.X509Certificates.X509Certificate2>.get_Current
::System::Security::Cryptography::X509Certificates::X509Certificate2* GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::System_Collections_Generic_IEnumerator$System_Security_Cryptography_X509Certificates_X509Certificate2$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::System.Collections.Generic.IEnumerator<System.Security.Cryptography.X509Certificates.X509Certificate2>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Security.Cryptography.X509Certificates.X509Certificate2>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2*, false>(this, ___internal__method);
}
// Autogenerated method: X509CertificateUtility/<GetCertificateList>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: X509CertificateUtility/<GetCertificateList>d__8.System.IDisposable.Dispose
void GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: X509CertificateUtility/<GetCertificateList>d__8.MoveNext
bool GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: X509CertificateUtility/<GetCertificateList>d__8.<>m__Finally1
void GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: X509CertificateUtility/<GetCertificateList>d__8.System.Collections.IEnumerator.Reset
void GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: X509CertificateUtility/<GetCertificateList>d__8.System.Collections.Generic.IEnumerable<System.Security.Cryptography.X509Certificates.X509Certificate2>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Security::Cryptography::X509Certificates::X509Certificate2*>* GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::System_Collections_Generic_IEnumerable$System_Security_Cryptography_X509Certificates_X509Certificate2$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::System.Collections.Generic.IEnumerable<System.Security.Cryptography.X509Certificates.X509Certificate2>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Security.Cryptography.X509Certificates.X509Certificate2>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Security::Cryptography::X509Certificates::X509Certificate2*>*, false>(this, ___internal__method);
}
// Autogenerated method: X509CertificateUtility/<GetCertificateList>d__8.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$GetCertificateList$d__8::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: X509CertificateUtility/<>c
#include "GlobalNamespace/X509CertificateUtility_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly X509CertificateUtility/<>c <>9
::GlobalNamespace::X509CertificateUtility::$$c* GlobalNamespace::X509CertificateUtility::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::X509CertificateUtility::$$c*>("", "X509CertificateUtility/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly X509CertificateUtility/<>c <>9
void GlobalNamespace::X509CertificateUtility::$$c::_set_$$9(::GlobalNamespace::X509CertificateUtility::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "X509CertificateUtility/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Security.Cryptography.X509Certificates.X509ChainStatus,System.String> <>9__10_0
::System::Func_2<::System::Security::Cryptography::X509Certificates::X509ChainStatus, ::StringW>* GlobalNamespace::X509CertificateUtility::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Security::Cryptography::X509Certificates::X509ChainStatus, ::StringW>*>("", "X509CertificateUtility/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Security.Cryptography.X509Certificates.X509ChainStatus,System.String> <>9__10_0
void GlobalNamespace::X509CertificateUtility::$$c::_set_$$9__10_0(::System::Func_2<::System::Security::Cryptography::X509Certificates::X509ChainStatus, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "X509CertificateUtility/<>c", "<>9__10_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Security.Cryptography.X509Certificates.X509ChainStatus,System.String> <>9__11_0
::System::Func_2<::System::Security::Cryptography::X509Certificates::X509ChainStatus, ::StringW>* GlobalNamespace::X509CertificateUtility::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Security::Cryptography::X509Certificates::X509ChainStatus, ::StringW>*>("", "X509CertificateUtility/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Security.Cryptography.X509Certificates.X509ChainStatus,System.String> <>9__11_0
void GlobalNamespace::X509CertificateUtility::$$c::_set_$$9__11_0(::System::Func_2<::System::Security::Cryptography::X509Certificates::X509ChainStatus, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "X509CertificateUtility/<>c", "<>9__11_0", value)));
}
// Autogenerated method: X509CertificateUtility/<>c..cctor
void GlobalNamespace::X509CertificateUtility::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: X509CertificateUtility/<>c.<ValidateCertificateChainUnity>b__10_0
::StringW GlobalNamespace::X509CertificateUtility::$$c::$ValidateCertificateChainUnity$b__10_0(::System::Security::Cryptography::X509Certificates::X509ChainStatus s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$$c::<ValidateCertificateChainUnity>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ValidateCertificateChainUnity>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s);
}
// Autogenerated method: X509CertificateUtility/<>c.<ValidateCertificateChainDotNet>b__11_0
::StringW GlobalNamespace::X509CertificateUtility::$$c::$ValidateCertificateChainDotNet$b__11_0(::System::Security::Cryptography::X509Certificates::X509ChainStatus s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::X509CertificateUtility::$$c::<ValidateCertificateChainDotNet>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ValidateCertificateChainDotNet>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerMasterServerMessageType
#include "MasterServer/DedicatedServerMasterServerMessageType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerMasterServerMessageType AuthenticateDedicatedServerRequest
::MasterServer::DedicatedServerMasterServerMessageType MasterServer::DedicatedServerMasterServerMessageType::_get_AuthenticateDedicatedServerRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_get_AuthenticateDedicatedServerRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::DedicatedServerMasterServerMessageType>("MasterServer", "DedicatedServerMasterServerMessageType", "AuthenticateDedicatedServerRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerMasterServerMessageType AuthenticateDedicatedServerRequest
void MasterServer::DedicatedServerMasterServerMessageType::_set_AuthenticateDedicatedServerRequest(::MasterServer::DedicatedServerMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_set_AuthenticateDedicatedServerRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerMasterServerMessageType", "AuthenticateDedicatedServerRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerMasterServerMessageType AuthenticateDedicatedServerResponse
::MasterServer::DedicatedServerMasterServerMessageType MasterServer::DedicatedServerMasterServerMessageType::_get_AuthenticateDedicatedServerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_get_AuthenticateDedicatedServerResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::DedicatedServerMasterServerMessageType>("MasterServer", "DedicatedServerMasterServerMessageType", "AuthenticateDedicatedServerResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerMasterServerMessageType AuthenticateDedicatedServerResponse
void MasterServer::DedicatedServerMasterServerMessageType::_set_AuthenticateDedicatedServerResponse(::MasterServer::DedicatedServerMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_set_AuthenticateDedicatedServerResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerMasterServerMessageType", "AuthenticateDedicatedServerResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerMasterServerMessageType CreateDedicatedServerInstanceRequest
::MasterServer::DedicatedServerMasterServerMessageType MasterServer::DedicatedServerMasterServerMessageType::_get_CreateDedicatedServerInstanceRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_get_CreateDedicatedServerInstanceRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::DedicatedServerMasterServerMessageType>("MasterServer", "DedicatedServerMasterServerMessageType", "CreateDedicatedServerInstanceRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerMasterServerMessageType CreateDedicatedServerInstanceRequest
void MasterServer::DedicatedServerMasterServerMessageType::_set_CreateDedicatedServerInstanceRequest(::MasterServer::DedicatedServerMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_set_CreateDedicatedServerInstanceRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerMasterServerMessageType", "CreateDedicatedServerInstanceRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerMasterServerMessageType CreateDedicatedServerInstanceResponse
::MasterServer::DedicatedServerMasterServerMessageType MasterServer::DedicatedServerMasterServerMessageType::_get_CreateDedicatedServerInstanceResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_get_CreateDedicatedServerInstanceResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::DedicatedServerMasterServerMessageType>("MasterServer", "DedicatedServerMasterServerMessageType", "CreateDedicatedServerInstanceResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerMasterServerMessageType CreateDedicatedServerInstanceResponse
void MasterServer::DedicatedServerMasterServerMessageType::_set_CreateDedicatedServerInstanceResponse(::MasterServer::DedicatedServerMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_set_CreateDedicatedServerInstanceResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerMasterServerMessageType", "CreateDedicatedServerInstanceResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerInstanceNoLongerAvailableRequest
::MasterServer::DedicatedServerMasterServerMessageType MasterServer::DedicatedServerMasterServerMessageType::_get_DedicatedServerInstanceNoLongerAvailableRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_get_DedicatedServerInstanceNoLongerAvailableRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::DedicatedServerMasterServerMessageType>("MasterServer", "DedicatedServerMasterServerMessageType", "DedicatedServerInstanceNoLongerAvailableRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerInstanceNoLongerAvailableRequest
void MasterServer::DedicatedServerMasterServerMessageType::_set_DedicatedServerInstanceNoLongerAvailableRequest(::MasterServer::DedicatedServerMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_set_DedicatedServerInstanceNoLongerAvailableRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerMasterServerMessageType", "DedicatedServerInstanceNoLongerAvailableRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerHeartbeatRequest
::MasterServer::DedicatedServerMasterServerMessageType MasterServer::DedicatedServerMasterServerMessageType::_get_DedicatedServerHeartbeatRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_get_DedicatedServerHeartbeatRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::DedicatedServerMasterServerMessageType>("MasterServer", "DedicatedServerMasterServerMessageType", "DedicatedServerHeartbeatRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerHeartbeatRequest
void MasterServer::DedicatedServerMasterServerMessageType::_set_DedicatedServerHeartbeatRequest(::MasterServer::DedicatedServerMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_set_DedicatedServerHeartbeatRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerMasterServerMessageType", "DedicatedServerHeartbeatRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerHeartbeatResponse
::MasterServer::DedicatedServerMasterServerMessageType MasterServer::DedicatedServerMasterServerMessageType::_get_DedicatedServerHeartbeatResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_get_DedicatedServerHeartbeatResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::DedicatedServerMasterServerMessageType>("MasterServer", "DedicatedServerMasterServerMessageType", "DedicatedServerHeartbeatResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerHeartbeatResponse
void MasterServer::DedicatedServerMasterServerMessageType::_set_DedicatedServerHeartbeatResponse(::MasterServer::DedicatedServerMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_set_DedicatedServerHeartbeatResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerMasterServerMessageType", "DedicatedServerHeartbeatResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerInstanceStatusUpdateRequest
::MasterServer::DedicatedServerMasterServerMessageType MasterServer::DedicatedServerMasterServerMessageType::_get_DedicatedServerInstanceStatusUpdateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_get_DedicatedServerInstanceStatusUpdateRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::DedicatedServerMasterServerMessageType>("MasterServer", "DedicatedServerMasterServerMessageType", "DedicatedServerInstanceStatusUpdateRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerInstanceStatusUpdateRequest
void MasterServer::DedicatedServerMasterServerMessageType::_set_DedicatedServerInstanceStatusUpdateRequest(::MasterServer::DedicatedServerMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_set_DedicatedServerInstanceStatusUpdateRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerMasterServerMessageType", "DedicatedServerInstanceStatusUpdateRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerShutDownRequest
::MasterServer::DedicatedServerMasterServerMessageType MasterServer::DedicatedServerMasterServerMessageType::_get_DedicatedServerShutDownRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_get_DedicatedServerShutDownRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::DedicatedServerMasterServerMessageType>("MasterServer", "DedicatedServerMasterServerMessageType", "DedicatedServerShutDownRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerShutDownRequest
void MasterServer::DedicatedServerMasterServerMessageType::_set_DedicatedServerShutDownRequest(::MasterServer::DedicatedServerMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_set_DedicatedServerShutDownRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerMasterServerMessageType", "DedicatedServerShutDownRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerPrepareForConnectionRequest
::MasterServer::DedicatedServerMasterServerMessageType MasterServer::DedicatedServerMasterServerMessageType::_get_DedicatedServerPrepareForConnectionRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_get_DedicatedServerPrepareForConnectionRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::DedicatedServerMasterServerMessageType>("MasterServer", "DedicatedServerMasterServerMessageType", "DedicatedServerPrepareForConnectionRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerPrepareForConnectionRequest
void MasterServer::DedicatedServerMasterServerMessageType::_set_DedicatedServerPrepareForConnectionRequest(::MasterServer::DedicatedServerMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_set_DedicatedServerPrepareForConnectionRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerMasterServerMessageType", "DedicatedServerPrepareForConnectionRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerMasterServerMessageType MessageReceivedAcknowledge
::MasterServer::DedicatedServerMasterServerMessageType MasterServer::DedicatedServerMasterServerMessageType::_get_MessageReceivedAcknowledge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_get_MessageReceivedAcknowledge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::DedicatedServerMasterServerMessageType>("MasterServer", "DedicatedServerMasterServerMessageType", "MessageReceivedAcknowledge"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerMasterServerMessageType MessageReceivedAcknowledge
void MasterServer::DedicatedServerMasterServerMessageType::_set_MessageReceivedAcknowledge(::MasterServer::DedicatedServerMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_set_MessageReceivedAcknowledge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerMasterServerMessageType", "MessageReceivedAcknowledge", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerMasterServerMessageType MultipartMessage
::MasterServer::DedicatedServerMasterServerMessageType MasterServer::DedicatedServerMasterServerMessageType::_get_MultipartMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_get_MultipartMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::DedicatedServerMasterServerMessageType>("MasterServer", "DedicatedServerMasterServerMessageType", "MultipartMessage"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerMasterServerMessageType MultipartMessage
void MasterServer::DedicatedServerMasterServerMessageType::_set_MultipartMessage(::MasterServer::DedicatedServerMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_set_MultipartMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerMasterServerMessageType", "MultipartMessage", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerPrepareForConnectionResponse
::MasterServer::DedicatedServerMasterServerMessageType MasterServer::DedicatedServerMasterServerMessageType::_get_DedicatedServerPrepareForConnectionResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_get_DedicatedServerPrepareForConnectionResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::DedicatedServerMasterServerMessageType>("MasterServer", "DedicatedServerMasterServerMessageType", "DedicatedServerPrepareForConnectionResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerMasterServerMessageType DedicatedServerPrepareForConnectionResponse
void MasterServer::DedicatedServerMasterServerMessageType::_set_DedicatedServerPrepareForConnectionResponse(::MasterServer::DedicatedServerMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::_set_DedicatedServerPrepareForConnectionResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerMasterServerMessageType", "DedicatedServerPrepareForConnectionResponse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& MasterServer::DedicatedServerMasterServerMessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.IDedicatedServerMasterServerClientToServerMessage
#include "MasterServer/IDedicatedServerMasterServerClientToServerMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IDedicatedServerMasterServerClientToServerMessage.get_dedicatedServerId
::StringW MasterServer::IDedicatedServerMasterServerClientToServerMessage::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::IDedicatedServerMasterServerClientToServerMessage::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.IDedicatedServerMasterServerClientToServerMessage.get_dedicatedServerCreationTime
int64_t MasterServer::IDedicatedServerMasterServerClientToServerMessage::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::IDedicatedServerMasterServerClientToServerMessage::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.AuthenticateDedicatedServerMasterServerRequest
#include "MasterServer/AuthenticateDedicatedServerMasterServerRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::AuthenticateDedicatedServerMasterServerRequest::dyn_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerRequest::dyn_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable nonce
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ByteArrayNetSerializable*& MasterServer::AuthenticateDedicatedServerMasterServerRequest::dyn_nonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerRequest::dyn_nonce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nonce"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable hash
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ByteArrayNetSerializable*& MasterServer::AuthenticateDedicatedServerMasterServerRequest::dyn_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerRequest::dyn_hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 timestamp
[[deprecated("Use field access instead!")]] int64_t& MasterServer::AuthenticateDedicatedServerMasterServerRequest::dyn_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerRequest::dyn_timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timestamp"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerMasterServerRequest.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::AuthenticateDedicatedServerMasterServerRequest*>* MasterServer::AuthenticateDedicatedServerMasterServerRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "AuthenticateDedicatedServerMasterServerRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::AuthenticateDedicatedServerMasterServerRequest*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerMasterServerRequest.get_dedicatedServerId
::StringW MasterServer::AuthenticateDedicatedServerMasterServerRequest::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerRequest::get_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerMasterServerRequest.set_dedicatedServerId
void MasterServer::AuthenticateDedicatedServerMasterServerRequest::set_dedicatedServerId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerRequest::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerMasterServerRequest.Init
::MasterServer::AuthenticateDedicatedServerMasterServerRequest* MasterServer::AuthenticateDedicatedServerMasterServerRequest::Init(::StringW dedicatedServerId, ::ArrayW<uint8_t> nonce, ::ArrayW<uint8_t> hash, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::AuthenticateDedicatedServerMasterServerRequest*, false>(this, ___internal__method, dedicatedServerId, nonce, hash, timestamp);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerMasterServerRequest.Serialize
void MasterServer::AuthenticateDedicatedServerMasterServerRequest::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerMasterServerRequest.Deserialize
void MasterServer::AuthenticateDedicatedServerMasterServerRequest::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerMasterServerRequest.Release
void MasterServer::AuthenticateDedicatedServerMasterServerRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.AuthenticateDedicatedServerMasterServerServerResponse
#include "MasterServer/AuthenticateDedicatedServerMasterServerServerResponse.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.AuthenticateDedicatedServerMasterServerServerResponse/MasterServer.Result result
[[deprecated("Use field access instead!")]] ::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result& MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerMasterServerServerResponse.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse*>* MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "AuthenticateDedicatedServerMasterServerServerResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerMasterServerServerResponse.get_isAuthenticated
bool MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::get_isAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::get_isAuthenticated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerMasterServerServerResponse.Init
::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse* MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Init(::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse*, false>(this, ___internal__method, result);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerMasterServerServerResponse.get_resultCode
uint8_t MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerMasterServerServerResponse.get_resultCodeString
::StringW MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerMasterServerServerResponse.Serialize
void MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerMasterServerServerResponse.Deserialize
void MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerMasterServerServerResponse.Release
void MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.AuthenticateDedicatedServerMasterServerServerResponse/MasterServer.Result
#include "MasterServer/AuthenticateDedicatedServerMasterServerServerResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.AuthenticateDedicatedServerMasterServerServerResponse/MasterServer.Result Success
::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result>("MasterServer", "AuthenticateDedicatedServerMasterServerServerResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AuthenticateDedicatedServerMasterServerServerResponse/MasterServer.Result Success
void MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result::_set_Success(::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AuthenticateDedicatedServerMasterServerServerResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AuthenticateDedicatedServerMasterServerServerResponse/MasterServer.Result Failed
::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result>("MasterServer", "AuthenticateDedicatedServerMasterServerServerResponse/Result", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AuthenticateDedicatedServerMasterServerServerResponse/MasterServer.Result Failed
void MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result::_set_Failed(::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AuthenticateDedicatedServerMasterServerServerResponse/Result", "Failed", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AuthenticateDedicatedServerMasterServerServerResponse/MasterServer.Result UnknownError
::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result>("MasterServer", "AuthenticateDedicatedServerMasterServerServerResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AuthenticateDedicatedServerMasterServerServerResponse/MasterServer.Result UnknownError
void MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result::_set_UnknownError(::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AuthenticateDedicatedServerMasterServerServerResponse/Result", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateDedicatedServerMasterServerServerResponse::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.CreateDedicatedServerInstanceRequest
#include "MasterServer/CreateDedicatedServerInstanceRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: IPacketPool`1
#include "GlobalNamespace/IPacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String secret
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::CreateDedicatedServerInstanceRequest::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceRequest::dyn_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& MasterServer::CreateDedicatedServerInstanceRequest::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceRequest::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::CreateDedicatedServerInstanceRequest::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceRequest::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::CreateDedicatedServerInstanceRequest::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceRequest::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint userEndPoint
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& MasterServer::CreateDedicatedServerInstanceRequest::dyn_userEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceRequest::dyn_userEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userEndPoint"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable userRandom
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ByteArrayNetSerializable*& MasterServer::CreateDedicatedServerInstanceRequest::dyn_userRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceRequest::dyn_userRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userRandom"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable userPublicKey
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ByteArrayNetSerializable*& MasterServer::CreateDedicatedServerInstanceRequest::dyn_userPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceRequest::dyn_userPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userPublicKey"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& MasterServer::CreateDedicatedServerInstanceRequest::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceRequest::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceRequest.get_pool
::GlobalNamespace::IPacketPool_1<::MasterServer::CreateDedicatedServerInstanceRequest*>* MasterServer::CreateDedicatedServerInstanceRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "CreateDedicatedServerInstanceRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPacketPool_1<::MasterServer::CreateDedicatedServerInstanceRequest*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceRequest.get_version
uint MasterServer::CreateDedicatedServerInstanceRequest::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceRequest::get_version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceRequest.Init
::MasterServer::CreateDedicatedServerInstanceRequest* MasterServer::CreateDedicatedServerInstanceRequest::Init(::StringW secret, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::StringW userId, ::StringW userName, ::System::Net::IPEndPoint* userEndPoint, ::ArrayW<uint8_t> userRandom, ::ArrayW<uint8_t> userPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(userEndPoint), ::il2cpp_utils::ExtractType(userRandom), ::il2cpp_utils::ExtractType(userPublicKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::CreateDedicatedServerInstanceRequest*, false>(this, ___internal__method, secret, selectionMask, configuration, userId, userName, userEndPoint, userRandom, userPublicKey);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceRequest.Release
void MasterServer::CreateDedicatedServerInstanceRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceRequest.Serialize
void MasterServer::CreateDedicatedServerInstanceRequest::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceRequest.Deserialize
void MasterServer::CreateDedicatedServerInstanceRequest::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.CreateDedicatedServerInstanceResponse
#include "MasterServer/CreateDedicatedServerInstanceResponse.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.CreateDedicatedServerInstanceResponse/MasterServer.Result result
[[deprecated("Use field access instead!")]] ::MasterServer::CreateDedicatedServerInstanceResponse::Result& MasterServer::CreateDedicatedServerInstanceResponse::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::MasterServer::CreateDedicatedServerInstanceResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::CreateDedicatedServerInstanceResponse::dyn_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::dyn_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& MasterServer::CreateDedicatedServerInstanceResponse::dyn_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::dyn_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String id
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::CreateDedicatedServerInstanceResponse::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 port
[[deprecated("Use field access instead!")]] int& MasterServer::CreateDedicatedServerInstanceResponse::dyn_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::dyn_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxPlayerCount
[[deprecated("Use field access instead!")]] int& MasterServer::CreateDedicatedServerInstanceResponse::dyn_maxPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::dyn_maxPlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxPlayerCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable random
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ByteArrayNetSerializable*& MasterServer::CreateDedicatedServerInstanceResponse::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable publicKey
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ByteArrayNetSerializable*& MasterServer::CreateDedicatedServerInstanceResponse::dyn_publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::dyn_publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKey"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::CreateDedicatedServerInstanceResponse*>* MasterServer::CreateDedicatedServerInstanceResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "CreateDedicatedServerInstanceResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::CreateDedicatedServerInstanceResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.get_dedicatedServerId
::StringW MasterServer::CreateDedicatedServerInstanceResponse::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.set_dedicatedServerId
void MasterServer::CreateDedicatedServerInstanceResponse::set_dedicatedServerId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.get_dedicatedServerCreationTime
int64_t MasterServer::CreateDedicatedServerInstanceResponse::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.set_dedicatedServerCreationTime
void MasterServer::CreateDedicatedServerInstanceResponse::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.InitForFailure
::MasterServer::CreateDedicatedServerInstanceResponse* MasterServer::CreateDedicatedServerInstanceResponse::InitForFailure(::StringW dedicatedServerId, int64_t dedicatedServerCreationTime, ::MasterServer::CreateDedicatedServerInstanceResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::InitForFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::CreateDedicatedServerInstanceResponse*, false>(this, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, result);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.InitForSuccess
::MasterServer::CreateDedicatedServerInstanceResponse* MasterServer::CreateDedicatedServerInstanceResponse::InitForSuccess(::StringW dedicatedServerId, int64_t dedicatedServerCreationTime, ::StringW id, int port, ::ArrayW<uint8_t> random, ::ArrayW<uint8_t> publicKey, int maxPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::InitForSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(maxPlayerCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::CreateDedicatedServerInstanceResponse*, false>(this, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, id, port, random, publicKey, maxPlayerCount);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.get_resultCode
uint8_t MasterServer::CreateDedicatedServerInstanceResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.get_resultCodeString
::StringW MasterServer::CreateDedicatedServerInstanceResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.Serialize
void MasterServer::CreateDedicatedServerInstanceResponse::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.Deserialize
void MasterServer::CreateDedicatedServerInstanceResponse::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.Release
void MasterServer::CreateDedicatedServerInstanceResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.CreateDedicatedServerInstanceResponse/MasterServer.Result
#include "MasterServer/CreateDedicatedServerInstanceResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.CreateDedicatedServerInstanceResponse/MasterServer.Result Success
::MasterServer::CreateDedicatedServerInstanceResponse::Result MasterServer::CreateDedicatedServerInstanceResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::CreateDedicatedServerInstanceResponse::Result>("MasterServer", "CreateDedicatedServerInstanceResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.CreateDedicatedServerInstanceResponse/MasterServer.Result Success
void MasterServer::CreateDedicatedServerInstanceResponse::Result::_set_Success(::MasterServer::CreateDedicatedServerInstanceResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "CreateDedicatedServerInstanceResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.CreateDedicatedServerInstanceResponse/MasterServer.Result NoAvailableServerSlots
::MasterServer::CreateDedicatedServerInstanceResponse::Result MasterServer::CreateDedicatedServerInstanceResponse::Result::_get_NoAvailableServerSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::Result::_get_NoAvailableServerSlots");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::CreateDedicatedServerInstanceResponse::Result>("MasterServer", "CreateDedicatedServerInstanceResponse/Result", "NoAvailableServerSlots"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.CreateDedicatedServerInstanceResponse/MasterServer.Result NoAvailableServerSlots
void MasterServer::CreateDedicatedServerInstanceResponse::Result::_set_NoAvailableServerSlots(::MasterServer::CreateDedicatedServerInstanceResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::Result::_set_NoAvailableServerSlots");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "CreateDedicatedServerInstanceResponse/Result", "NoAvailableServerSlots", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.CreateDedicatedServerInstanceResponse/MasterServer.Result UnknownError
::MasterServer::CreateDedicatedServerInstanceResponse::Result MasterServer::CreateDedicatedServerInstanceResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::CreateDedicatedServerInstanceResponse::Result>("MasterServer", "CreateDedicatedServerInstanceResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.CreateDedicatedServerInstanceResponse/MasterServer.Result UnknownError
void MasterServer::CreateDedicatedServerInstanceResponse::Result::_set_UnknownError(::MasterServer::CreateDedicatedServerInstanceResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "CreateDedicatedServerInstanceResponse/Result", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& MasterServer::CreateDedicatedServerInstanceResponse::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::CreateDedicatedServerInstanceResponse::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest
#include "MasterServer/DedicatedServerInstanceNoLongerOccupiedRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::dyn_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::dyn_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::dyn_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::dyn_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String id
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest*>* MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerInstanceNoLongerOccupiedRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.get_dedicatedServerId
::StringW MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.set_dedicatedServerId
void MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::set_dedicatedServerId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.get_dedicatedServerCreationTime
int64_t MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.set_dedicatedServerCreationTime
void MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.Init
::MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest* MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::Init(::StringW dedicatedServerId, ::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest*, false>(this, ___internal__method, dedicatedServerId, id);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.Serialize
void MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.Deserialize
void MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.Release
void MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerInstanceStatusUpdateRequest
#include "MasterServer/DedicatedServerInstanceStatusUpdateRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String id
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentPlayerCount
[[deprecated("Use field access instead!")]] int& MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_currentPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_currentPlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPlayerCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameStateType gameState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameStateType& MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_gameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_gameState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameStateType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerInstanceStatusUpdateRequest*>* MasterServer::DedicatedServerInstanceStatusUpdateRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceStatusUpdateRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerInstanceStatusUpdateRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerInstanceStatusUpdateRequest*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.get_dedicatedServerId
::StringW MasterServer::DedicatedServerInstanceStatusUpdateRequest::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceStatusUpdateRequest::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.set_dedicatedServerId
void MasterServer::DedicatedServerInstanceStatusUpdateRequest::set_dedicatedServerId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceStatusUpdateRequest::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.get_dedicatedServerCreationTime
int64_t MasterServer::DedicatedServerInstanceStatusUpdateRequest::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceStatusUpdateRequest::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.set_dedicatedServerCreationTime
void MasterServer::DedicatedServerInstanceStatusUpdateRequest::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceStatusUpdateRequest::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.Init
::MasterServer::DedicatedServerInstanceStatusUpdateRequest* MasterServer::DedicatedServerInstanceStatusUpdateRequest::Init(::StringW dedicatedServerId, int64_t dedicatedServerCreationTime, ::StringW id, ::GlobalNamespace::GameStateType gameState, int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceStatusUpdateRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(gameState), ::il2cpp_utils::ExtractType(currentPlayerCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::DedicatedServerInstanceStatusUpdateRequest*, false>(this, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, id, gameState, currentPlayerCount);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.Serialize
void MasterServer::DedicatedServerInstanceStatusUpdateRequest::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceStatusUpdateRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.Deserialize
void MasterServer::DedicatedServerInstanceStatusUpdateRequest::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceStatusUpdateRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.Release
void MasterServer::DedicatedServerInstanceStatusUpdateRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerInstanceStatusUpdateRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerHeartbeatRequest
#include "MasterServer/DedicatedServerHeartbeatRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::DedicatedServerHeartbeatRequest::dyn_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatRequest::dyn_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& MasterServer::DedicatedServerHeartbeatRequest::dyn_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatRequest::dyn_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 cpuUtilization
[[deprecated("Use field access instead!")]] int& MasterServer::DedicatedServerHeartbeatRequest::dyn_cpuUtilization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatRequest::dyn_cpuUtilization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cpuUtilization"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 occupiedServerSlots
[[deprecated("Use field access instead!")]] int& MasterServer::DedicatedServerHeartbeatRequest::dyn_occupiedServerSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatRequest::dyn_occupiedServerSlots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "occupiedServerSlots"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 unoccupiedServerSlots
[[deprecated("Use field access instead!")]] int& MasterServer::DedicatedServerHeartbeatRequest::dyn_unoccupiedServerSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatRequest::dyn_unoccupiedServerSlots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unoccupiedServerSlots"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerHeartbeatRequest*>* MasterServer::DedicatedServerHeartbeatRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerHeartbeatRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerHeartbeatRequest*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.get_dedicatedServerId
::StringW MasterServer::DedicatedServerHeartbeatRequest::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatRequest::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.set_dedicatedServerId
void MasterServer::DedicatedServerHeartbeatRequest::set_dedicatedServerId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatRequest::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.get_dedicatedServerCreationTime
int64_t MasterServer::DedicatedServerHeartbeatRequest::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatRequest::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.set_dedicatedServerCreationTime
void MasterServer::DedicatedServerHeartbeatRequest::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatRequest::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.Init
::MasterServer::DedicatedServerHeartbeatRequest* MasterServer::DedicatedServerHeartbeatRequest::Init(::StringW dedicatedServerId, int64_t dedicatedServerCreationTime, int cpuUtilization, int occupiedServerSlots, int unoccupiedServerSlots) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(cpuUtilization), ::il2cpp_utils::ExtractType(occupiedServerSlots), ::il2cpp_utils::ExtractType(unoccupiedServerSlots)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::DedicatedServerHeartbeatRequest*, false>(this, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, cpuUtilization, occupiedServerSlots, unoccupiedServerSlots);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.Serialize
void MasterServer::DedicatedServerHeartbeatRequest::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.Deserialize
void MasterServer::DedicatedServerHeartbeatRequest::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.Release
void MasterServer::DedicatedServerHeartbeatRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerHeartbeatResponse
#include "MasterServer/DedicatedServerHeartbeatResponse.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.DedicatedServerHeartbeatResponse.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerHeartbeatResponse*>* MasterServer::DedicatedServerHeartbeatResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerHeartbeatResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerHeartbeatResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatResponse.Serialize
void MasterServer::DedicatedServerHeartbeatResponse::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatResponse.Deserialize
void MasterServer::DedicatedServerHeartbeatResponse::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatResponse.Release
void MasterServer::DedicatedServerHeartbeatResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerHeartbeatResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerShutDownRequest
#include "MasterServer/DedicatedServerShutDownRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::DedicatedServerShutDownRequest::dyn_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerShutDownRequest::dyn_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& MasterServer::DedicatedServerShutDownRequest::dyn_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerShutDownRequest::dyn_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerShutDownRequest*>* MasterServer::DedicatedServerShutDownRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerShutDownRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerShutDownRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerShutDownRequest*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.get_dedicatedServerId
::StringW MasterServer::DedicatedServerShutDownRequest::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerShutDownRequest::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.set_dedicatedServerId
void MasterServer::DedicatedServerShutDownRequest::set_dedicatedServerId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerShutDownRequest::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.get_dedicatedServerCreationTime
int64_t MasterServer::DedicatedServerShutDownRequest::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerShutDownRequest::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.set_dedicatedServerCreationTime
void MasterServer::DedicatedServerShutDownRequest::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerShutDownRequest::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.Init
::MasterServer::DedicatedServerShutDownRequest* MasterServer::DedicatedServerShutDownRequest::Init(::StringW dedicatedServerId, int64_t dedicatedServerCreationTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerShutDownRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::DedicatedServerShutDownRequest*, false>(this, ___internal__method, dedicatedServerId, dedicatedServerCreationTime);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.Serialize
void MasterServer::DedicatedServerShutDownRequest::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerShutDownRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.Deserialize
void MasterServer::DedicatedServerShutDownRequest::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerShutDownRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.Release
void MasterServer::DedicatedServerShutDownRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerShutDownRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerPrepareForConnectionRequest
#include "MasterServer/DedicatedServerPrepareForConnectionRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String id
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint remoteEndPoint
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_remoteEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable random
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ByteArrayNetSerializable*& MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable publicKey
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ByteArrayNetSerializable*& MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKey"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionRequest.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerPrepareForConnectionRequest*>* MasterServer::DedicatedServerPrepareForConnectionRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerPrepareForConnectionRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerPrepareForConnectionRequest*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionRequest.Init
::MasterServer::DedicatedServerPrepareForConnectionRequest* MasterServer::DedicatedServerPrepareForConnectionRequest::Init(::StringW id, ::StringW userId, ::StringW userName, ::System::Net::IPEndPoint* remoteEndPoint, ::ArrayW<uint8_t> random, ::ArrayW<uint8_t> publicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::DedicatedServerPrepareForConnectionRequest*, false>(this, ___internal__method, id, userId, userName, remoteEndPoint, random, publicKey);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionRequest.Serialize
void MasterServer::DedicatedServerPrepareForConnectionRequest::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionRequest.Deserialize
void MasterServer::DedicatedServerPrepareForConnectionRequest::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionRequest.Release
void MasterServer::DedicatedServerPrepareForConnectionRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerPrepareForConnectionResponse
#include "MasterServer/DedicatedServerPrepareForConnectionResponse.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result result
[[deprecated("Use field access instead!")]] ::MasterServer::DedicatedServerPrepareForConnectionResponse::Result& MasterServer::DedicatedServerPrepareForConnectionResponse::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::MasterServer::DedicatedServerPrepareForConnectionResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::DedicatedServerPrepareForConnectionResponse::dyn_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::dyn_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& MasterServer::DedicatedServerPrepareForConnectionResponse::dyn_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::dyn_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerPrepareForConnectionResponse*>* MasterServer::DedicatedServerPrepareForConnectionResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerPrepareForConnectionResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerPrepareForConnectionResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.get_dedicatedServerId
::StringW MasterServer::DedicatedServerPrepareForConnectionResponse::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.set_dedicatedServerId
void MasterServer::DedicatedServerPrepareForConnectionResponse::set_dedicatedServerId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.get_dedicatedServerCreationTime
int64_t MasterServer::DedicatedServerPrepareForConnectionResponse::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.set_dedicatedServerCreationTime
void MasterServer::DedicatedServerPrepareForConnectionResponse::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.InitForFailure
::MasterServer::DedicatedServerPrepareForConnectionResponse* MasterServer::DedicatedServerPrepareForConnectionResponse::InitForFailure(::StringW dedicatedServerId, int64_t dedicatedServerCreationTime, ::MasterServer::DedicatedServerPrepareForConnectionResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::InitForFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::DedicatedServerPrepareForConnectionResponse*, false>(this, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, result);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.InitForSuccess
::MasterServer::DedicatedServerPrepareForConnectionResponse* MasterServer::DedicatedServerPrepareForConnectionResponse::InitForSuccess(::StringW dedicatedServerId, int64_t dedicatedServerCreationTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::InitForSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::DedicatedServerPrepareForConnectionResponse*, false>(this, ___internal__method, dedicatedServerId, dedicatedServerCreationTime);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.get_resultCode
uint8_t MasterServer::DedicatedServerPrepareForConnectionResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.get_resultCodeString
::StringW MasterServer::DedicatedServerPrepareForConnectionResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.Serialize
void MasterServer::DedicatedServerPrepareForConnectionResponse::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.Deserialize
void MasterServer::DedicatedServerPrepareForConnectionResponse::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.Release
void MasterServer::DedicatedServerPrepareForConnectionResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result
#include "MasterServer/DedicatedServerPrepareForConnectionResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result Success
::MasterServer::DedicatedServerPrepareForConnectionResponse::Result MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::DedicatedServerPrepareForConnectionResponse::Result>("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result Success
void MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_Success(::MasterServer::DedicatedServerPrepareForConnectionResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result UnknownServer
::MasterServer::DedicatedServerPrepareForConnectionResponse::Result MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_UnknownServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_UnknownServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::DedicatedServerPrepareForConnectionResponse::Result>("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "UnknownServer"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result UnknownServer
void MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_UnknownServer(::MasterServer::DedicatedServerPrepareForConnectionResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_UnknownServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "UnknownServer", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result UnknownError
::MasterServer::DedicatedServerPrepareForConnectionResponse::Result MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::DedicatedServerPrepareForConnectionResponse::Result>("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result UnknownError
void MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_UnknownError(::MasterServer::DedicatedServerPrepareForConnectionResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& MasterServer::DedicatedServerPrepareForConnectionResponse::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerPrepareForConnectionResponse::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerMasterServerMessageReceivedAcknowledge
#include "MasterServer/DedicatedServerMasterServerMessageReceivedAcknowledge.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.DedicatedServerMasterServerMessageReceivedAcknowledge.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerMasterServerMessageReceivedAcknowledge*>* MasterServer::DedicatedServerMasterServerMessageReceivedAcknowledge::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageReceivedAcknowledge::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerMasterServerMessageReceivedAcknowledge", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerMasterServerMessageReceivedAcknowledge*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerMasterServerMessageReceivedAcknowledge.Release
void MasterServer::DedicatedServerMasterServerMessageReceivedAcknowledge::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMessageReceivedAcknowledge::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerMasterServerMultipartMessage
#include "MasterServer/DedicatedServerMasterServerMultipartMessage.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.DedicatedServerMasterServerMultipartMessage.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerMasterServerMultipartMessage*>* MasterServer::DedicatedServerMasterServerMultipartMessage::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMultipartMessage::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerMasterServerMultipartMessage", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::DedicatedServerMasterServerMultipartMessage*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerMasterServerMultipartMessage.Release
void MasterServer::DedicatedServerMasterServerMultipartMessage::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::DedicatedServerMasterServerMultipartMessage::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.IMasterServer
#include "MasterServer/IMasterServer.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: AuthenticationToken
#include "GlobalNamespace/AuthenticationToken.hpp"
// Including type: MasterServer.ConnectToServerResponse
#include "MasterServer/ConnectToServerResponse.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: MasterServer.GetPublicServersResponse
#include "MasterServer/GetPublicServersResponse.hpp"
// Including type: GameStateType
#include "GlobalNamespace/GameStateType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServer.ShouldHandleMessageFromEndPoint
bool MasterServer::IMasterServer::ShouldHandleMessageFromEndPoint(::System::Net::IPEndPoint* remoteEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::IMasterServer::ShouldHandleMessageFromEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessageFromEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, remoteEndPoint);
}
// Autogenerated method: MasterServer.IMasterServer.ReportExceptionForEndPoint
void MasterServer::IMasterServer::ReportExceptionForEndPoint(::System::Net::IPEndPoint* remoteEndPoint, ::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::IMasterServer::ReportExceptionForEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportExceptionForEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteEndPoint, exception);
}
// Autogenerated method: MasterServer.IMasterServer.TryAuthenticateUser
::System::Threading::Tasks::Task_1<bool>* MasterServer::IMasterServer::TryAuthenticateUser(uint protocolVersion, ::System::Net::IPEndPoint* endPoint, ::GlobalNamespace::AuthenticationToken authenticationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::IMasterServer::TryAuthenticateUser");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAuthenticateUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(authenticationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, protocolVersion, endPoint, authenticationToken);
}
// Autogenerated method: MasterServer.IMasterServer.ConnectToServer
::System::Threading::Tasks::Task_1<::MasterServer::ConnectToServerResponse*>* MasterServer::IMasterServer::ConnectToServer(uint protocolVersion, ::System::Net::IPEndPoint* endPoint, ::StringW userId, ::StringW userName, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::ArrayW<uint8_t> random, ::ArrayW<uint8_t> publicKey, ::StringW secret, ::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::IMasterServer::ConnectToServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::MasterServer::ConnectToServerResponse*>*, false>(this, ___internal__method, protocolVersion, endPoint, userId, userName, selectionMask, configuration, random, publicKey, secret, code);
}
// Autogenerated method: MasterServer.IMasterServer.GetPublicServers
::System::Threading::Tasks::Task_1<::MasterServer::GetPublicServersResponse*>* MasterServer::IMasterServer::GetPublicServers(uint protocolVersion, ::System::Net::IPEndPoint* endPoint, ::StringW userId, ::StringW userName, int skip, int count, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::IMasterServer::GetPublicServers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPublicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(skip), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::MasterServer::GetPublicServersResponse*>*, false>(this, ___internal__method, protocolVersion, endPoint, userId, userName, skip, count, selectionMask, configuration);
}
// Autogenerated method: MasterServer.IMasterServer.TryAuthenticateDedicatedServer
bool MasterServer::IMasterServer::TryAuthenticateDedicatedServer(uint protocolVersion, ::System::Net::IPEndPoint* endPoint, ::StringW id, ::ArrayW<uint8_t> nonce, ::ArrayW<uint8_t> hash, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::IMasterServer::TryAuthenticateDedicatedServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAuthenticateDedicatedServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, protocolVersion, endPoint, id, nonce, hash, timestamp);
}
// Autogenerated method: MasterServer.IMasterServer.HeartbeatDedicatedServer
void MasterServer::IMasterServer::HeartbeatDedicatedServer(uint protocolVersion, ::StringW dedicatedServerId, int64_t dedicatedServerCreationTime, ::System::Net::IPEndPoint* endPoint, int cpuUtilization, int occupiedServerSlotCount, int unoccupiedServerSlotCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::IMasterServer::HeartbeatDedicatedServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HeartbeatDedicatedServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(cpuUtilization), ::il2cpp_utils::ExtractType(occupiedServerSlotCount), ::il2cpp_utils::ExtractType(unoccupiedServerSlotCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, cpuUtilization, occupiedServerSlotCount, unoccupiedServerSlotCount);
}
// Autogenerated method: MasterServer.IMasterServer.UpdateDedicatedServerInstanceStatus
void MasterServer::IMasterServer::UpdateDedicatedServerInstanceStatus(uint protocolVersion, ::StringW dedicatedServerId, int64_t dedicatedServerCreationTime, ::System::Net::IPEndPoint* endPoint, ::StringW id, ::GlobalNamespace::GameStateType gameState, int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::IMasterServer::UpdateDedicatedServerInstanceStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDedicatedServerInstanceStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(gameState), ::il2cpp_utils::ExtractType(currentPlayerCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, id, gameState, currentPlayerCount);
}
// Autogenerated method: MasterServer.IMasterServer.SetDedicatedServerInstanceNoLongerOccupied
void MasterServer::IMasterServer::SetDedicatedServerInstanceNoLongerOccupied(uint protocolVersion, ::StringW dedicatedServerId, int64_t dedicatedServerCreationTime, ::System::Net::IPEndPoint* endPoint, ::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::IMasterServer::SetDedicatedServerInstanceNoLongerOccupied");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDedicatedServerInstanceNoLongerOccupied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, id);
}
// Autogenerated method: MasterServer.IMasterServer.RemoveDedicatedServer
void MasterServer::IMasterServer::RemoveDedicatedServer(uint protocolVersion, ::StringW dedicatedServerId, int64_t dedicatedServerCreationTime, ::System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::IMasterServer::RemoveDedicatedServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveDedicatedServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMasterServerMessageHandler
#include "MasterServer/UserMasterServerMessageHandler.hpp"
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.ConnectToServerDelegate
#include "MasterServer/UserMasterServerMessageHandler_ConnectToServerDelegate.hpp"
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.<GetAuthenticationRequest>d__17
#include "MasterServer/UserMasterServerMessageHandler_-GetAuthenticationRequest-d__17.hpp"
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.<GetUserIdAndNameAsync>d__18
#include "MasterServer/UserMasterServerMessageHandler_-GetUserIdAndNameAsync-d__18.hpp"
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.<>c__DisplayClass21_0
#include "MasterServer/UserMasterServerMessageHandler_--c__DisplayClass21_0.hpp"
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.<>c__DisplayClass22_0
#include "MasterServer/UserMasterServerMessageHandler_--c__DisplayClass22_0.hpp"
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.<WithFailureHandler>d__23
#include "MasterServer/UserMasterServerMessageHandler_-WithFailureHandler-d__23.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
// Including type: IUnconnectedMessageSender
#include "GlobalNamespace/IUnconnectedMessageSender.hpp"
// Including type: DnsEndPoint
#include "GlobalNamespace/DnsEndPoint.hpp"
// Including type: BGNet.Core.ITimeProvider
#include "BGNet/Core/ITimeProvider.hpp"
// Including type: ICertificateValidator
#include "GlobalNamespace/ICertificateValidator.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: MasterServer.BaseConnectToServerRequest
#include "MasterServer/BaseConnectToServerRequest.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedMessage
#include "BGNet/Core/Messages/IUnconnectedMessage.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedAuthenticateRequest
#include "BGNet/Core/Messages/IUnconnectedAuthenticateRequest.hpp"
// Including type: BGNet.Core.Messages.UnconnectedMessageHandler/BGNet.Core.Messages.MessageOrigin
#include "BGNet/Core/Messages/UnconnectedMessageHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 kKeepaliveRequestIntervalMs
int64_t MasterServer::UserMasterServerMessageHandler::_get_kKeepaliveRequestIntervalMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::_get_kKeepaliveRequestIntervalMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "UserMasterServerMessageHandler", "kKeepaliveRequestIntervalMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kKeepaliveRequestIntervalMs
void MasterServer::UserMasterServerMessageHandler::_set_kKeepaliveRequestIntervalMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::_set_kKeepaliveRequestIntervalMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMasterServerMessageHandler", "kKeepaliveRequestIntervalMs", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lastKeepaliveTime
[[deprecated("Use field access instead!")]] int64_t& MasterServer::UserMasterServerMessageHandler::dyn__lastKeepaliveTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::dyn__lastKeepaliveTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastKeepaliveTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _userId
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::UserMasterServerMessageHandler::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::dyn__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _userName
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::UserMasterServerMessageHandler::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.Task`1<IAuthenticationTokenProvider> _authenticationTokenProviderTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<::GlobalNamespace::IAuthenticationTokenProvider*>*& MasterServer::UserMasterServerMessageHandler::dyn__authenticationTokenProviderTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::dyn__authenticationTokenProviderTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authenticationTokenProviderTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::IAuthenticationTokenProvider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler.get_userId
::StringW MasterServer::UserMasterServerMessageHandler::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::get_userId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler.get_userName
::StringW MasterServer::UserMasterServerMessageHandler::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::get_userName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler.get_authenticationTokenProviderTask
::System::Threading::Tasks::Task_1<::GlobalNamespace::IAuthenticationTokenProvider*>* MasterServer::UserMasterServerMessageHandler::get_authenticationTokenProviderTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::get_authenticationTokenProviderTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_authenticationTokenProviderTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IAuthenticationTokenProvider*>*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler.RegisterUserMessageHandlers
void MasterServer::UserMasterServerMessageHandler::RegisterUserMessageHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::RegisterUserMessageHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterUserMessageHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler.GetUserIdAndNameAsync
::System::Threading::Tasks::Task_1<::System::ValueTuple_2<::StringW, ::StringW>>* MasterServer::UserMasterServerMessageHandler::GetUserIdAndNameAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::GetUserIdAndNameAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserIdAndNameAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::ValueTuple_2<::StringW, ::StringW>>*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler.UpdateKeepalive
void MasterServer::UserMasterServerMessageHandler::UpdateKeepalive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::UpdateKeepalive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateKeepalive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler.ConnectToServer
void MasterServer::UserMasterServerMessageHandler::ConnectToServer(::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::StringW secret, ::StringW code, ::MasterServer::UserMasterServerMessageHandler::ConnectToServerDelegate* onSuccess, ::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* onConnectionFailed, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::ConnectToServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onConnectionFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectionMask, configuration, secret, code, onSuccess, onConnectionFailed, cancellationToken);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler.SendConnectToServerRequest
void MasterServer::UserMasterServerMessageHandler::SendConnectToServerRequest(::MasterServer::BaseConnectToServerRequest* request, ::MasterServer::UserMasterServerMessageHandler::ConnectToServerDelegate* onSuccess, ::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* onConnectionFailed, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::SendConnectToServerRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendConnectToServerRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onConnectionFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, onSuccess, onConnectionFailed, cancellationToken);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler.GetPublicServers
void MasterServer::UserMasterServerMessageHandler::GetPublicServers(int offset, int count, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::System::Action_1<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PublicServerInfo>*>* onSuccess, ::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* onFailure, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::GetPublicServers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPublicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure), ::il2cpp_utils::ExtractType(cancellationToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset, count, selectionMask, configuration, onSuccess, onFailure, cancellationToken);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler.WithFailureHandler
void MasterServer::UserMasterServerMessageHandler::WithFailureHandler(::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* onFailure, ::System::Func_1<::System::Threading::Tasks::Task*>* performTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::WithFailureHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithFailureHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFailure), ::il2cpp_utils::ExtractType(performTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFailure, performTask);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler.PollUpdate
void MasterServer::UserMasterServerMessageHandler::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler.GetMessageType
uint MasterServer::UserMasterServerMessageHandler::GetMessageType(::BGNet::Core::Messages::IUnconnectedMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::GetMessageType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMessageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, message);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler.ShouldHandleMessage
bool MasterServer::UserMasterServerMessageHandler::ShouldHandleMessage(::BGNet::Core::Messages::IUnconnectedMessage* packet, ::BGNet::Core::Messages::UnconnectedMessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::ShouldHandleMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler.GetAuthenticationRequest
::System::Threading::Tasks::Task_1<::BGNet::Core::Messages::IUnconnectedAuthenticateRequest*>* MasterServer::UserMasterServerMessageHandler::GetAuthenticationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::GetAuthenticationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAuthenticationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::BGNet::Core::Messages::IUnconnectedAuthenticateRequest*>*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler.HandshakeLog
void MasterServer::UserMasterServerMessageHandler::HandshakeLog(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::HandshakeLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandshakeLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.ConnectToServerDelegate
#include "MasterServer/UserMasterServerMessageHandler_ConnectToServerDelegate.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMasterServerMessageHandler/MasterServer.ConnectToServerDelegate.Invoke
void MasterServer::UserMasterServerMessageHandler::ConnectToServerDelegate::Invoke(::StringW userId, ::StringW userName, ::System::Net::IPEndPoint* remoteEndPoint, ::StringW secret, ::StringW code, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::ArrayW<uint8_t> preMasterSecret, ::ArrayW<uint8_t> myRandom, ::ArrayW<uint8_t> remoteRandom, bool isConnectionOwner, bool isDedicatedServer, ::StringW managerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::ConnectToServerDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(myRandom), ::il2cpp_utils::ExtractType(remoteRandom), ::il2cpp_utils::ExtractType(isConnectionOwner), ::il2cpp_utils::ExtractType(isDedicatedServer), ::il2cpp_utils::ExtractType(managerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, userName, remoteEndPoint, secret, code, selectionMask, configuration, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer, managerId);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler/MasterServer.ConnectToServerDelegate.BeginInvoke
::System::IAsyncResult* MasterServer::UserMasterServerMessageHandler::ConnectToServerDelegate::BeginInvoke(::StringW userId, ::StringW userName, ::System::Net::IPEndPoint* remoteEndPoint, ::StringW secret, ::StringW code, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::ArrayW<uint8_t> preMasterSecret, ::ArrayW<uint8_t> myRandom, ::ArrayW<uint8_t> remoteRandom, bool isConnectionOwner, bool isDedicatedServer, ::StringW managerId, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::ConnectToServerDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(myRandom), ::il2cpp_utils::ExtractType(remoteRandom), ::il2cpp_utils::ExtractType(isConnectionOwner), ::il2cpp_utils::ExtractType(isDedicatedServer), ::il2cpp_utils::ExtractType(managerId), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, userName, remoteEndPoint, secret, code, selectionMask, configuration, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer, managerId, callback, object);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler/MasterServer.ConnectToServerDelegate.EndInvoke
void MasterServer::UserMasterServerMessageHandler::ConnectToServerDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::ConnectToServerDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.<GetAuthenticationRequest>d__17
#include "MasterServer/UserMasterServerMessageHandler_-GetAuthenticationRequest-d__17.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedAuthenticateRequest
#include "BGNet/Core/Messages/IUnconnectedAuthenticateRequest.hpp"
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& MasterServer::UserMasterServerMessageHandler::$GetAuthenticationRequest$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$GetAuthenticationRequest$d__17::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<BGNet.Core.Messages.IUnconnectedAuthenticateRequest> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::BGNet::Core::Messages::IUnconnectedAuthenticateRequest*>& MasterServer::UserMasterServerMessageHandler::$GetAuthenticationRequest$d__17::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$GetAuthenticationRequest$d__17::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::BGNet::Core::Messages::IUnconnectedAuthenticateRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.UserMasterServerMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::MasterServer::UserMasterServerMessageHandler*& MasterServer::UserMasterServerMessageHandler::$GetAuthenticationRequest$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$GetAuthenticationRequest$d__17::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::MasterServer::UserMasterServerMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IAuthenticationTokenProvider> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IAuthenticationTokenProvider*>& MasterServer::UserMasterServerMessageHandler::$GetAuthenticationRequest$d__17::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$GetAuthenticationRequest$d__17::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IAuthenticationTokenProvider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AuthenticationToken> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AuthenticationToken>& MasterServer::UserMasterServerMessageHandler::$GetAuthenticationRequest$d__17::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$GetAuthenticationRequest$d__17::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AuthenticationToken>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler/MasterServer.<GetAuthenticationRequest>d__17.MoveNext
void MasterServer::UserMasterServerMessageHandler::$GetAuthenticationRequest$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$GetAuthenticationRequest$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler/MasterServer.<GetAuthenticationRequest>d__17.SetStateMachine
void MasterServer::UserMasterServerMessageHandler::$GetAuthenticationRequest$d__17::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$GetAuthenticationRequest$d__17::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.<GetUserIdAndNameAsync>d__18
#include "MasterServer/UserMasterServerMessageHandler_-GetUserIdAndNameAsync-d__18.hpp"
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& MasterServer::UserMasterServerMessageHandler::$GetUserIdAndNameAsync$d__18::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$GetUserIdAndNameAsync$d__18::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.ValueTuple`2<System.String,System.String>> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::ValueTuple_2<::StringW, ::StringW>>& MasterServer::UserMasterServerMessageHandler::$GetUserIdAndNameAsync$d__18::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$GetUserIdAndNameAsync$d__18::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::ValueTuple_2<::StringW, ::StringW>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.UserMasterServerMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::MasterServer::UserMasterServerMessageHandler*& MasterServer::UserMasterServerMessageHandler::$GetUserIdAndNameAsync$d__18::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$GetUserIdAndNameAsync$d__18::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::MasterServer::UserMasterServerMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IAuthenticationTokenProvider> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IAuthenticationTokenProvider*>& MasterServer::UserMasterServerMessageHandler::$GetUserIdAndNameAsync$d__18::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$GetUserIdAndNameAsync$d__18::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IAuthenticationTokenProvider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler/MasterServer.<GetUserIdAndNameAsync>d__18.MoveNext
void MasterServer::UserMasterServerMessageHandler::$GetUserIdAndNameAsync$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$GetUserIdAndNameAsync$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler/MasterServer.<GetUserIdAndNameAsync>d__18.SetStateMachine
void MasterServer::UserMasterServerMessageHandler::$GetUserIdAndNameAsync$d__18::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$GetUserIdAndNameAsync$d__18::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.<>c__DisplayClass21_0
#include "MasterServer/UserMasterServerMessageHandler_--c__DisplayClass21_0.hpp"
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.<>c__DisplayClass21_0/MasterServer.<<SendConnectToServerRequest>b__0>d
#include "MasterServer/UserMasterServerMessageHandler_--c__DisplayClass21_0_--SendConnectToServerRequest-b__0-d.hpp"
// Including type: MasterServer.BaseConnectToServerRequest
#include "MasterServer/BaseConnectToServerRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.ConnectToServerDelegate
#include "MasterServer/UserMasterServerMessageHandler_ConnectToServerDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::dyn_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.UserMasterServerMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::MasterServer::UserMasterServerMessageHandler*& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::MasterServer::UserMasterServerMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseConnectToServerRequest request
[[deprecated("Use field access instead!")]] ::MasterServer::BaseConnectToServerRequest*& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::MasterServer::BaseConnectToServerRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.UserMasterServerMessageHandler/MasterServer.ConnectToServerDelegate onSuccess
[[deprecated("Use field access instead!")]] ::MasterServer::UserMasterServerMessageHandler::ConnectToServerDelegate*& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::MasterServer::UserMasterServerMessageHandler::ConnectToServerDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<ConnectionFailedReason> onConnectionFailed
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::ConnectionFailedReason>*& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::dyn_onConnectionFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::dyn_onConnectionFailed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionFailed"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ConnectionFailedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler/MasterServer.<>c__DisplayClass21_0.<SendConnectToServerRequest>b__0
::System::Threading::Tasks::Task* MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$SendConnectToServerRequest$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::<SendConnectToServerRequest>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendConnectToServerRequest>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.<>c__DisplayClass21_0/MasterServer.<<SendConnectToServerRequest>b__0>d
#include "MasterServer/UserMasterServerMessageHandler_--c__DisplayClass21_0_--SendConnectToServerRequest-b__0-d.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
// Including type: MasterServer.ConnectToServerResponse
#include "MasterServer/ConnectToServerResponse.hpp"
// Including type: MasterServer.UserMasterServerMessageHandler
#include "MasterServer/UserMasterServerMessageHandler.hpp"
// Including type: MasterServer.BaseConnectToServerRequest
#include "MasterServer/BaseConnectToServerRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.UserMasterServerMessageHandler/MasterServer.<>c__DisplayClass21_0 <>4__this
[[deprecated("Use field access instead!")]] ::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0*& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDiffieHellmanKeyPair <clientKeys>5__2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDiffieHellmanKeyPair*& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$clientKeys$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$clientKeys$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clientKeys>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDiffieHellmanKeyPair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <random>5__3
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$random$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$random$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<random>5__3"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.ConnectToServerResponse <response>5__4
[[deprecated("Use field access instead!")]] ::MasterServer::ConnectToServerResponse*& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$response$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$response$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<response>5__4"))->offset;
  return *reinterpret_cast<::MasterServer::ConnectToServerResponse**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IDiffieHellmanKeyPair> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IDiffieHellmanKeyPair*>& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IDiffieHellmanKeyPair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.UserMasterServerMessageHandler <>7__wrap4
[[deprecated("Use field access instead!")]] ::MasterServer::UserMasterServerMessageHandler*& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$7__wrap4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$7__wrap4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap4"))->offset;
  return *reinterpret_cast<::MasterServer::UserMasterServerMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.BaseConnectToServerRequest <>7__wrap5
[[deprecated("Use field access instead!")]] ::MasterServer::BaseConnectToServerRequest*& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$7__wrap5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$7__wrap5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap5"))->offset;
  return *reinterpret_cast<::MasterServer::BaseConnectToServerRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.ValueTuple`2<System.String,System.String>> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::System::ValueTuple_2<::StringW, ::StringW>>& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::System::ValueTuple_2<::StringW, ::StringW>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.ConnectToServerResponse> <>u__3
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::MasterServer::ConnectToServerResponse*>& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::MasterServer::ConnectToServerResponse*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Byte[]> <>u__4
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::ArrayW<uint8_t>>& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$u__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::dyn_$$u__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__4"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::ArrayW<uint8_t>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler/MasterServer.<>c__DisplayClass21_0/MasterServer.<<SendConnectToServerRequest>b__0>d.MoveNext
void MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler/MasterServer.<>c__DisplayClass21_0/MasterServer.<<SendConnectToServerRequest>b__0>d.SetStateMachine
void MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass21_0::$$SendConnectToServerRequest$b__0$d::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.<>c__DisplayClass22_0
#include "MasterServer/UserMasterServerMessageHandler_--c__DisplayClass22_0.hpp"
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.<>c__DisplayClass22_0/MasterServer.<<GetPublicServers>b__0>d
#include "MasterServer/UserMasterServerMessageHandler_--c__DisplayClass22_0_--GetPublicServers-b__0-d.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.UserMasterServerMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::MasterServer::UserMasterServerMessageHandler*& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::MasterServer::UserMasterServerMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 offset
[[deprecated("Use field access instead!")]] int& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::dyn_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Collections.Generic.IReadOnlyList`1<PublicServerInfo>> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PublicServerInfo>*>*& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PublicServerInfo>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<ConnectionFailedReason> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::ConnectionFailedReason>*& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ConnectionFailedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler/MasterServer.<>c__DisplayClass22_0.<GetPublicServers>b__0
::System::Threading::Tasks::Task* MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$GetPublicServers$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::<GetPublicServers>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPublicServers>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.<>c__DisplayClass22_0/MasterServer.<<GetPublicServers>b__0>d
#include "MasterServer/UserMasterServerMessageHandler_--c__DisplayClass22_0_--GetPublicServers-b__0-d.hpp"
// Including type: MasterServer.UserMasterServerMessageHandler
#include "MasterServer/UserMasterServerMessageHandler.hpp"
// Including type: MasterServer.GetPublicServersRequest
#include "MasterServer/GetPublicServersRequest.hpp"
// Including type: MasterServer.GetPublicServersResponse
#include "MasterServer/GetPublicServersResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.UserMasterServerMessageHandler/MasterServer.<>c__DisplayClass22_0 <>4__this
[[deprecated("Use field access instead!")]] ::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0*& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.UserMasterServerMessageHandler <>7__wrap1
[[deprecated("Use field access instead!")]] ::MasterServer::UserMasterServerMessageHandler*& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::dyn_$$7__wrap1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::MasterServer::UserMasterServerMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.GetPublicServersRequest <>7__wrap2
[[deprecated("Use field access instead!")]] ::MasterServer::GetPublicServersRequest*& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::dyn_$$7__wrap2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::MasterServer::GetPublicServersRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.ValueTuple`2<System.String,System.String>> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::System::ValueTuple_2<::StringW, ::StringW>>& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::System::ValueTuple_2<::StringW, ::StringW>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.GetPublicServersResponse> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::MasterServer::GetPublicServersResponse*>& MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::MasterServer::GetPublicServersResponse*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler/MasterServer.<>c__DisplayClass22_0/MasterServer.<<GetPublicServers>b__0>d.MoveNext
void MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler/MasterServer.<>c__DisplayClass22_0/MasterServer.<<GetPublicServers>b__0>d.SetStateMachine
void MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$$c__DisplayClass22_0::$$GetPublicServers$b__0$d::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMasterServerMessageHandler/MasterServer.<WithFailureHandler>d__23
#include "MasterServer/UserMasterServerMessageHandler_-WithFailureHandler-d__23.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& MasterServer::UserMasterServerMessageHandler::$WithFailureHandler$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$WithFailureHandler$d__23::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& MasterServer::UserMasterServerMessageHandler::$WithFailureHandler$d__23::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$WithFailureHandler$d__23::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`1<System.Threading.Tasks.Task> performTask
[[deprecated("Use field access instead!")]] ::System::Func_1<::System::Threading::Tasks::Task*>*& MasterServer::UserMasterServerMessageHandler::$WithFailureHandler$d__23::dyn_performTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$WithFailureHandler$d__23::dyn_performTask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "performTask"))->offset;
  return *reinterpret_cast<::System::Func_1<::System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<ConnectionFailedReason> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::ConnectionFailedReason>*& MasterServer::UserMasterServerMessageHandler::$WithFailureHandler$d__23::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$WithFailureHandler$d__23::dyn_onFailure");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ConnectionFailedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& MasterServer::UserMasterServerMessageHandler::$WithFailureHandler$d__23::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$WithFailureHandler$d__23::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler/MasterServer.<WithFailureHandler>d__23.MoveNext
void MasterServer::UserMasterServerMessageHandler::$WithFailureHandler$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$WithFailureHandler$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMasterServerMessageHandler/MasterServer.<WithFailureHandler>d__23.SetStateMachine
void MasterServer::UserMasterServerMessageHandler::$WithFailureHandler$d__23::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageHandler::$WithFailureHandler$d__23::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMasterServerMessageType
#include "MasterServer/UserMasterServerMessageType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.UserMasterServerMessageType AuthenticateUserRequest
::MasterServer::UserMasterServerMessageType MasterServer::UserMasterServerMessageType::_get_AuthenticateUserRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_get_AuthenticateUserRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::UserMasterServerMessageType>("MasterServer", "UserMasterServerMessageType", "AuthenticateUserRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.UserMasterServerMessageType AuthenticateUserRequest
void MasterServer::UserMasterServerMessageType::_set_AuthenticateUserRequest(::MasterServer::UserMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_set_AuthenticateUserRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMasterServerMessageType", "AuthenticateUserRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.UserMasterServerMessageType AuthenticateUserResponse
::MasterServer::UserMasterServerMessageType MasterServer::UserMasterServerMessageType::_get_AuthenticateUserResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_get_AuthenticateUserResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::UserMasterServerMessageType>("MasterServer", "UserMasterServerMessageType", "AuthenticateUserResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.UserMasterServerMessageType AuthenticateUserResponse
void MasterServer::UserMasterServerMessageType::_set_AuthenticateUserResponse(::MasterServer::UserMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_set_AuthenticateUserResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMasterServerMessageType", "AuthenticateUserResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.UserMasterServerMessageType ConnectToServerResponse
::MasterServer::UserMasterServerMessageType MasterServer::UserMasterServerMessageType::_get_ConnectToServerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_get_ConnectToServerResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::UserMasterServerMessageType>("MasterServer", "UserMasterServerMessageType", "ConnectToServerResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.UserMasterServerMessageType ConnectToServerResponse
void MasterServer::UserMasterServerMessageType::_set_ConnectToServerResponse(::MasterServer::UserMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_set_ConnectToServerResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMasterServerMessageType", "ConnectToServerResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.UserMasterServerMessageType ConnectToServerRequest
::MasterServer::UserMasterServerMessageType MasterServer::UserMasterServerMessageType::_get_ConnectToServerRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_get_ConnectToServerRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::UserMasterServerMessageType>("MasterServer", "UserMasterServerMessageType", "ConnectToServerRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.UserMasterServerMessageType ConnectToServerRequest
void MasterServer::UserMasterServerMessageType::_set_ConnectToServerRequest(::MasterServer::UserMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_set_ConnectToServerRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMasterServerMessageType", "ConnectToServerRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.UserMasterServerMessageType MessageReceivedAcknowledge
::MasterServer::UserMasterServerMessageType MasterServer::UserMasterServerMessageType::_get_MessageReceivedAcknowledge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_get_MessageReceivedAcknowledge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::UserMasterServerMessageType>("MasterServer", "UserMasterServerMessageType", "MessageReceivedAcknowledge"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.UserMasterServerMessageType MessageReceivedAcknowledge
void MasterServer::UserMasterServerMessageType::_set_MessageReceivedAcknowledge(::MasterServer::UserMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_set_MessageReceivedAcknowledge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMasterServerMessageType", "MessageReceivedAcknowledge", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.UserMasterServerMessageType MultipartMessage
::MasterServer::UserMasterServerMessageType MasterServer::UserMasterServerMessageType::_get_MultipartMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_get_MultipartMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::UserMasterServerMessageType>("MasterServer", "UserMasterServerMessageType", "MultipartMessage"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.UserMasterServerMessageType MultipartMessage
void MasterServer::UserMasterServerMessageType::_set_MultipartMessage(::MasterServer::UserMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_set_MultipartMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMasterServerMessageType", "MultipartMessage", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.UserMasterServerMessageType SessionKeepaliveMessage
::MasterServer::UserMasterServerMessageType MasterServer::UserMasterServerMessageType::_get_SessionKeepaliveMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_get_SessionKeepaliveMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::UserMasterServerMessageType>("MasterServer", "UserMasterServerMessageType", "SessionKeepaliveMessage"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.UserMasterServerMessageType SessionKeepaliveMessage
void MasterServer::UserMasterServerMessageType::_set_SessionKeepaliveMessage(::MasterServer::UserMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_set_SessionKeepaliveMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMasterServerMessageType", "SessionKeepaliveMessage", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.UserMasterServerMessageType GetPublicServersRequest
::MasterServer::UserMasterServerMessageType MasterServer::UserMasterServerMessageType::_get_GetPublicServersRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_get_GetPublicServersRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::UserMasterServerMessageType>("MasterServer", "UserMasterServerMessageType", "GetPublicServersRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.UserMasterServerMessageType GetPublicServersRequest
void MasterServer::UserMasterServerMessageType::_set_GetPublicServersRequest(::MasterServer::UserMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_set_GetPublicServersRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMasterServerMessageType", "GetPublicServersRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.UserMasterServerMessageType GetPublicServersResponse
::MasterServer::UserMasterServerMessageType MasterServer::UserMasterServerMessageType::_get_GetPublicServersResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_get_GetPublicServersResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::UserMasterServerMessageType>("MasterServer", "UserMasterServerMessageType", "GetPublicServersResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.UserMasterServerMessageType GetPublicServersResponse
void MasterServer::UserMasterServerMessageType::_set_GetPublicServersResponse(::MasterServer::UserMasterServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::_set_GetPublicServersResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMasterServerMessageType", "GetPublicServersResponse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& MasterServer::UserMasterServerMessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.IUserMasterServerClientToServerMessage
#include "MasterServer/IUserMasterServerClientToServerMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IUserMasterServerClientToServerMessage.get_userId
::StringW MasterServer::IUserMasterServerClientToServerMessage::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::IUserMasterServerClientToServerMessage::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.IUserMasterServerClientToServerMessage.get_userName
::StringW MasterServer::IUserMasterServerClientToServerMessage::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::IUserMasterServerClientToServerMessage::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.AuthenticateUserMasterServerRequest
#include "MasterServer/AuthenticateUserMasterServerRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AuthenticationToken authenticationToken
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AuthenticationToken& MasterServer::AuthenticateUserMasterServerRequest::dyn_authenticationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerRequest::dyn_authenticationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authenticationToken"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AuthenticationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.AuthenticateUserMasterServerRequest.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::AuthenticateUserMasterServerRequest*>* MasterServer::AuthenticateUserMasterServerRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "AuthenticateUserMasterServerRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::AuthenticateUserMasterServerRequest*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateUserMasterServerRequest.Init
::MasterServer::AuthenticateUserMasterServerRequest* MasterServer::AuthenticateUserMasterServerRequest::Init(::GlobalNamespace::AuthenticationToken authenticationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(authenticationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::AuthenticateUserMasterServerRequest*, false>(this, ___internal__method, authenticationToken);
}
// Autogenerated method: MasterServer.AuthenticateUserMasterServerRequest.Serialize
void MasterServer::AuthenticateUserMasterServerRequest::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.AuthenticateUserMasterServerRequest.Deserialize
void MasterServer::AuthenticateUserMasterServerRequest::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.AuthenticateUserMasterServerRequest.Release
void MasterServer::AuthenticateUserMasterServerRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.AuthenticateUserMasterServerResponse
#include "MasterServer/AuthenticateUserMasterServerResponse.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.AuthenticateUserMasterServerResponse/MasterServer.Result result
[[deprecated("Use field access instead!")]] ::MasterServer::AuthenticateUserMasterServerResponse::Result& MasterServer::AuthenticateUserMasterServerResponse::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerResponse::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::MasterServer::AuthenticateUserMasterServerResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.AuthenticateUserMasterServerResponse.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::AuthenticateUserMasterServerResponse*>* MasterServer::AuthenticateUserMasterServerResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "AuthenticateUserMasterServerResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::AuthenticateUserMasterServerResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateUserMasterServerResponse.get_isAuthenticated
bool MasterServer::AuthenticateUserMasterServerResponse::get_isAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerResponse::get_isAuthenticated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateUserMasterServerResponse.Init
::MasterServer::AuthenticateUserMasterServerResponse* MasterServer::AuthenticateUserMasterServerResponse::Init(::MasterServer::AuthenticateUserMasterServerResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerResponse::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::AuthenticateUserMasterServerResponse*, false>(this, ___internal__method, result);
}
// Autogenerated method: MasterServer.AuthenticateUserMasterServerResponse.get_resultCode
uint8_t MasterServer::AuthenticateUserMasterServerResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateUserMasterServerResponse.get_resultCodeString
::StringW MasterServer::AuthenticateUserMasterServerResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateUserMasterServerResponse.Serialize
void MasterServer::AuthenticateUserMasterServerResponse::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.AuthenticateUserMasterServerResponse.Deserialize
void MasterServer::AuthenticateUserMasterServerResponse::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.AuthenticateUserMasterServerResponse.Release
void MasterServer::AuthenticateUserMasterServerResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.AuthenticateUserMasterServerResponse/MasterServer.Result
#include "MasterServer/AuthenticateUserMasterServerResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.AuthenticateUserMasterServerResponse/MasterServer.Result Success
::MasterServer::AuthenticateUserMasterServerResponse::Result MasterServer::AuthenticateUserMasterServerResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::AuthenticateUserMasterServerResponse::Result>("MasterServer", "AuthenticateUserMasterServerResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AuthenticateUserMasterServerResponse/MasterServer.Result Success
void MasterServer::AuthenticateUserMasterServerResponse::Result::_set_Success(::MasterServer::AuthenticateUserMasterServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AuthenticateUserMasterServerResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AuthenticateUserMasterServerResponse/MasterServer.Result Failed
::MasterServer::AuthenticateUserMasterServerResponse::Result MasterServer::AuthenticateUserMasterServerResponse::Result::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerResponse::Result::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::AuthenticateUserMasterServerResponse::Result>("MasterServer", "AuthenticateUserMasterServerResponse/Result", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AuthenticateUserMasterServerResponse/MasterServer.Result Failed
void MasterServer::AuthenticateUserMasterServerResponse::Result::_set_Failed(::MasterServer::AuthenticateUserMasterServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerResponse::Result::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AuthenticateUserMasterServerResponse/Result", "Failed", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AuthenticateUserMasterServerResponse/MasterServer.Result UnknownError
::MasterServer::AuthenticateUserMasterServerResponse::Result MasterServer::AuthenticateUserMasterServerResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::AuthenticateUserMasterServerResponse::Result>("MasterServer", "AuthenticateUserMasterServerResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AuthenticateUserMasterServerResponse/MasterServer.Result UnknownError
void MasterServer::AuthenticateUserMasterServerResponse::Result::_set_UnknownError(::MasterServer::AuthenticateUserMasterServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AuthenticateUserMasterServerResponse/Result", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& MasterServer::AuthenticateUserMasterServerResponse::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::AuthenticateUserMasterServerResponse::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.BaseConnectToServerRequest
#include "MasterServer/BaseConnectToServerRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <userId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::BaseConnectToServerRequest::dyn_$userId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::BaseConnectToServerRequest::dyn_$userId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<userId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <userName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::BaseConnectToServerRequest::dyn_$userName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::BaseConnectToServerRequest::dyn_$userName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<userName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable random
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ByteArrayNetSerializable*& MasterServer::BaseConnectToServerRequest::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::BaseConnectToServerRequest::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable publicKey
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ByteArrayNetSerializable*& MasterServer::BaseConnectToServerRequest::dyn_publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::BaseConnectToServerRequest::dyn_publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKey"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.BaseConnectToServerRequest.get_userId
::StringW MasterServer::BaseConnectToServerRequest::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::BaseConnectToServerRequest::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseConnectToServerRequest.set_userId
void MasterServer::BaseConnectToServerRequest::set_userId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::BaseConnectToServerRequest::set_userId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.BaseConnectToServerRequest.get_userName
::StringW MasterServer::BaseConnectToServerRequest::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::BaseConnectToServerRequest::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseConnectToServerRequest.set_userName
void MasterServer::BaseConnectToServerRequest::set_userName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::BaseConnectToServerRequest::set_userName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.BaseConnectToServerRequest.WithUserIdAndName
::MasterServer::BaseConnectToServerRequest* MasterServer::BaseConnectToServerRequest::WithUserIdAndName(::System::ValueTuple_2<::StringW, ::StringW> idPair) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::BaseConnectToServerRequest::WithUserIdAndName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithUserIdAndName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idPair)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::BaseConnectToServerRequest*, false>(this, ___internal__method, idPair);
}
// Autogenerated method: MasterServer.BaseConnectToServerRequest.WithEncryptionParams
::MasterServer::BaseConnectToServerRequest* MasterServer::BaseConnectToServerRequest::WithEncryptionParams(::ArrayW<uint8_t> random, ::ArrayW<uint8_t> publicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::BaseConnectToServerRequest::WithEncryptionParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithEncryptionParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::BaseConnectToServerRequest*, false>(this, ___internal__method, random, publicKey);
}
// Autogenerated method: MasterServer.BaseConnectToServerRequest.Serialize
void MasterServer::BaseConnectToServerRequest::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::BaseConnectToServerRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.BaseConnectToServerRequest.Deserialize
void MasterServer::BaseConnectToServerRequest::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::BaseConnectToServerRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.BaseConnectToServerRequest.Release
void MasterServer::BaseConnectToServerRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::BaseConnectToServerRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.ConnectToServerResponse
#include "MasterServer/ConnectToServerResponse.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: IPacketPool`1
#include "GlobalNamespace/IPacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.ConnectToServerResponse/MasterServer.Result result
[[deprecated("Use field access instead!")]] ::MasterServer::ConnectToServerResponse::Result& MasterServer::ConnectToServerResponse::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::MasterServer::ConnectToServerResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::ConnectToServerResponse::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::ConnectToServerResponse::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String secret
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::ConnectToServerResponse::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::dyn_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String code
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::ConnectToServerResponse::dyn_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::dyn_code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "code"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& MasterServer::ConnectToServerResponse::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isConnectionOwner
[[deprecated("Use field access instead!")]] bool& MasterServer::ConnectToServerResponse::dyn_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::dyn_isConnectionOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isConnectionOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isDedicatedServer
[[deprecated("Use field access instead!")]] bool& MasterServer::ConnectToServerResponse::dyn_isDedicatedServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::dyn_isDedicatedServer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDedicatedServer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint remoteEndPoint
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& MasterServer::ConnectToServerResponse::dyn_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::dyn_remoteEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable random
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ByteArrayNetSerializable*& MasterServer::ConnectToServerResponse::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable publicKey
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ByteArrayNetSerializable*& MasterServer::ConnectToServerResponse::dyn_publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::dyn_publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKey"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& MasterServer::ConnectToServerResponse::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String managerId
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::ConnectToServerResponse::dyn_managerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::dyn_managerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "managerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.get_pool
::GlobalNamespace::IPacketPool_1<::MasterServer::ConnectToServerResponse*>* MasterServer::ConnectToServerResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ConnectToServerResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPacketPool_1<::MasterServer::ConnectToServerResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.get_version
uint MasterServer::ConnectToServerResponse::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::get_version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.InitForFailure
::MasterServer::ConnectToServerResponse* MasterServer::ConnectToServerResponse::InitForFailure(::MasterServer::ConnectToServerResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::InitForFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::ConnectToServerResponse*, false>(this, ___internal__method, result);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.InitForSuccess
::MasterServer::ConnectToServerResponse* MasterServer::ConnectToServerResponse::InitForSuccess(::StringW userId, ::StringW userName, ::StringW secret, ::StringW code, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, bool isConnectionOwner, bool isDedicatedServer, ::System::Net::IPEndPoint* remoteEndPoint, ::ArrayW<uint8_t> random, ::ArrayW<uint8_t> publicKey, ::StringW managerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::InitForSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(isConnectionOwner), ::il2cpp_utils::ExtractType(isDedicatedServer), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(managerId)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::ConnectToServerResponse*, false>(this, ___internal__method, userId, userName, secret, code, selectionMask, configuration, isConnectionOwner, isDedicatedServer, remoteEndPoint, random, publicKey, managerId);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.get_resultCode
uint8_t MasterServer::ConnectToServerResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.get_resultCodeString
::StringW MasterServer::ConnectToServerResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.Serialize
void MasterServer::ConnectToServerResponse::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.Deserialize
void MasterServer::ConnectToServerResponse::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.Release
void MasterServer::ConnectToServerResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.ConnectToServerResponse/MasterServer.Result
#include "MasterServer/ConnectToServerResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result Success
::MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result Success
void MasterServer::ConnectToServerResponse::Result::_set_Success(::MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result InvalidSecret
::MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_InvalidSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_get_InvalidSecret");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "InvalidSecret"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result InvalidSecret
void MasterServer::ConnectToServerResponse::Result::_set_InvalidSecret(::MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_set_InvalidSecret");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "InvalidSecret", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result InvalidCode
::MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_InvalidCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_get_InvalidCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "InvalidCode"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result InvalidCode
void MasterServer::ConnectToServerResponse::Result::_set_InvalidCode(::MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_set_InvalidCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "InvalidCode", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result InvalidPassword
::MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_InvalidPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_get_InvalidPassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "InvalidPassword"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result InvalidPassword
void MasterServer::ConnectToServerResponse::Result::_set_InvalidPassword(::MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_set_InvalidPassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "InvalidPassword", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result ServerAtCapacity
::MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_ServerAtCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_get_ServerAtCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "ServerAtCapacity"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result ServerAtCapacity
void MasterServer::ConnectToServerResponse::Result::_set_ServerAtCapacity(::MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_set_ServerAtCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "ServerAtCapacity", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result NoAvailableDedicatedServers
::MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_NoAvailableDedicatedServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_get_NoAvailableDedicatedServers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "NoAvailableDedicatedServers"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result NoAvailableDedicatedServers
void MasterServer::ConnectToServerResponse::Result::_set_NoAvailableDedicatedServers(::MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_set_NoAvailableDedicatedServers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "NoAvailableDedicatedServers", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result VersionMismatch
::MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_VersionMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_get_VersionMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "VersionMismatch"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result VersionMismatch
void MasterServer::ConnectToServerResponse::Result::_set_VersionMismatch(::MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_set_VersionMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "VersionMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result ConfigMismatch
::MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_ConfigMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_get_ConfigMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "ConfigMismatch"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result ConfigMismatch
void MasterServer::ConnectToServerResponse::Result::_set_ConfigMismatch(::MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_set_ConfigMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "ConfigMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result UnknownError
::MasterServer::ConnectToServerResponse::Result MasterServer::ConnectToServerResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::ConnectToServerResponse::Result>("MasterServer", "ConnectToServerResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.ConnectToServerResponse/MasterServer.Result UnknownError
void MasterServer::ConnectToServerResponse::Result::_set_UnknownError(::MasterServer::ConnectToServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "ConnectToServerResponse/Result", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& MasterServer::ConnectToServerResponse::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerResponse::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.ConnectToServerRequest
#include "MasterServer/ConnectToServerRequest.hpp"
// Including type: IPacketPool`1
#include "GlobalNamespace/IPacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& MasterServer::ConnectToServerRequest::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerRequest::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String secret
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::ConnectToServerRequest::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerRequest::dyn_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String code
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::ConnectToServerRequest::dyn_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerRequest::dyn_code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "code"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& MasterServer::ConnectToServerRequest::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerRequest::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.ConnectToServerRequest.get_pool
::GlobalNamespace::IPacketPool_1<::MasterServer::ConnectToServerRequest*>* MasterServer::ConnectToServerRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ConnectToServerRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPacketPool_1<::MasterServer::ConnectToServerRequest*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ConnectToServerRequest.get_version
uint MasterServer::ConnectToServerRequest::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerRequest::get_version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.ConnectToServerRequest.Init
::MasterServer::ConnectToServerRequest* MasterServer::ConnectToServerRequest::Init(::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::StringW secret, ::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::ConnectToServerRequest*, false>(this, ___internal__method, selectionMask, configuration, secret, code);
}
// Autogenerated method: MasterServer.ConnectToServerRequest.Serialize
void MasterServer::ConnectToServerRequest::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ConnectToServerRequest.Deserialize
void MasterServer::ConnectToServerRequest::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ConnectToServerRequest.Release
void MasterServer::ConnectToServerRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::ConnectToServerRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.GetPublicServersRequest
#include "MasterServer/GetPublicServersRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <userId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::GetPublicServersRequest::dyn_$userId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersRequest::dyn_$userId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<userId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <userName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& MasterServer::GetPublicServersRequest::dyn_$userName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersRequest::dyn_$userName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<userName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 offset
[[deprecated("Use field access instead!")]] int& MasterServer::GetPublicServersRequest::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersRequest::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& MasterServer::GetPublicServersRequest::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersRequest::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& MasterServer::GetPublicServersRequest::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersRequest::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& MasterServer::GetPublicServersRequest::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersRequest::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::GetPublicServersRequest*>* MasterServer::GetPublicServersRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "GetPublicServersRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::GetPublicServersRequest*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.get_userId
::StringW MasterServer::GetPublicServersRequest::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersRequest::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.set_userId
void MasterServer::GetPublicServersRequest::set_userId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersRequest::set_userId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.get_userName
::StringW MasterServer::GetPublicServersRequest::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersRequest::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.set_userName
void MasterServer::GetPublicServersRequest::set_userName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersRequest::set_userName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.WithUserIdAndName
::MasterServer::GetPublicServersRequest* MasterServer::GetPublicServersRequest::WithUserIdAndName(::System::ValueTuple_2<::StringW, ::StringW> idPair) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersRequest::WithUserIdAndName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithUserIdAndName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idPair)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::GetPublicServersRequest*, false>(this, ___internal__method, idPair);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.Init
::MasterServer::GetPublicServersRequest* MasterServer::GetPublicServersRequest::Init(int offset, int count, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::GetPublicServersRequest*, false>(this, ___internal__method, offset, count, selectionMask, configuration);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.Serialize
void MasterServer::GetPublicServersRequest::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.Deserialize
void MasterServer::GetPublicServersRequest::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.GetPublicServersRequest.Release
void MasterServer::GetPublicServersRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.GetPublicServersResponse
#include "MasterServer/GetPublicServersResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IPacketPool`1
#include "GlobalNamespace/IPacketPool_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.GetPublicServersResponse/MasterServer.Result result
[[deprecated("Use field access instead!")]] ::MasterServer::GetPublicServersResponse::Result& MasterServer::GetPublicServersResponse::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersResponse::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::MasterServer::GetPublicServersResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<PublicServerInfo> publicServers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PublicServerInfo>*& MasterServer::GetPublicServersResponse::dyn_publicServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersResponse::dyn_publicServers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicServers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PublicServerInfo>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.GetPublicServersResponse.get_pool
::GlobalNamespace::IPacketPool_1<::MasterServer::GetPublicServersResponse*>* MasterServer::GetPublicServersResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "GetPublicServersResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPacketPool_1<::MasterServer::GetPublicServersResponse*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.GetPublicServersResponse.get_version
uint MasterServer::GetPublicServersResponse::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersResponse::get_version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.GetPublicServersResponse.InitForFailure
::MasterServer::GetPublicServersResponse* MasterServer::GetPublicServersResponse::InitForFailure(::MasterServer::GetPublicServersResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersResponse::InitForFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::GetPublicServersResponse*, false>(this, ___internal__method, result);
}
// Autogenerated method: MasterServer.GetPublicServersResponse.InitForSuccess
::MasterServer::GetPublicServersResponse* MasterServer::GetPublicServersResponse::InitForSuccess(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::PublicServerInfo>* publicServers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersResponse::InitForSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(publicServers)})));
  return ::il2cpp_utils::RunMethodRethrow<::MasterServer::GetPublicServersResponse*, false>(this, ___internal__method, publicServers);
}
// Autogenerated method: MasterServer.GetPublicServersResponse.get_resultCode
uint8_t MasterServer::GetPublicServersResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.GetPublicServersResponse.get_resultCodeString
::StringW MasterServer::GetPublicServersResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.GetPublicServersResponse.Serialize
void MasterServer::GetPublicServersResponse::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.GetPublicServersResponse.Deserialize
void MasterServer::GetPublicServersResponse::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.GetPublicServersResponse.Release
void MasterServer::GetPublicServersResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.GetPublicServersResponse/MasterServer.Result
#include "MasterServer/GetPublicServersResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.GetPublicServersResponse/MasterServer.Result Success
::MasterServer::GetPublicServersResponse::Result MasterServer::GetPublicServersResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::GetPublicServersResponse::Result>("MasterServer", "GetPublicServersResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.GetPublicServersResponse/MasterServer.Result Success
void MasterServer::GetPublicServersResponse::Result::_set_Success(::MasterServer::GetPublicServersResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "GetPublicServersResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.GetPublicServersResponse/MasterServer.Result UnknownError
::MasterServer::GetPublicServersResponse::Result MasterServer::GetPublicServersResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MasterServer::GetPublicServersResponse::Result>("MasterServer", "GetPublicServersResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.GetPublicServersResponse/MasterServer.Result UnknownError
void MasterServer::GetPublicServersResponse::Result::_set_UnknownError(::MasterServer::GetPublicServersResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "GetPublicServersResponse/Result", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& MasterServer::GetPublicServersResponse::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::GetPublicServersResponse::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMasterServerMessageReceivedAcknowledge
#include "MasterServer/UserMasterServerMessageReceivedAcknowledge.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMasterServerMessageReceivedAcknowledge.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::UserMasterServerMessageReceivedAcknowledge*>* MasterServer::UserMasterServerMessageReceivedAcknowledge::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageReceivedAcknowledge::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "UserMasterServerMessageReceivedAcknowledge", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::UserMasterServerMessageReceivedAcknowledge*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.UserMasterServerMessageReceivedAcknowledge.Release
void MasterServer::UserMasterServerMessageReceivedAcknowledge::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMessageReceivedAcknowledge::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMasterServerMultipartMessage
#include "MasterServer/UserMasterServerMultipartMessage.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMasterServerMultipartMessage.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::UserMasterServerMultipartMessage*>* MasterServer::UserMasterServerMultipartMessage::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMultipartMessage::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "UserMasterServerMultipartMessage", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::UserMasterServerMultipartMessage*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.UserMasterServerMultipartMessage.Release
void MasterServer::UserMasterServerMultipartMessage::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::UserMasterServerMultipartMessage::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.SessionKeepaliveMessage
#include "MasterServer/SessionKeepaliveMessage.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.SessionKeepaliveMessage.get_pool
::GlobalNamespace::PacketPool_1<::MasterServer::SessionKeepaliveMessage*>* MasterServer::SessionKeepaliveMessage::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::SessionKeepaliveMessage::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "SessionKeepaliveMessage", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::MasterServer::SessionKeepaliveMessage*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.SessionKeepaliveMessage.Serialize
void MasterServer::SessionKeepaliveMessage::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::SessionKeepaliveMessage::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MasterServer.SessionKeepaliveMessage.Deserialize
void MasterServer::SessionKeepaliveMessage::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::SessionKeepaliveMessage::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: MasterServer.SessionKeepaliveMessage.Release
void MasterServer::SessionKeepaliveMessage::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MasterServer::SessionKeepaliveMessage::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.AnalyticsMetricUnit
#include "BGNet/Core/AnalyticsMetricUnit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BGNet.Core.AnalyticsMetricUnit None
::BGNet::Core::AnalyticsMetricUnit BGNet::Core::AnalyticsMetricUnit::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::AnalyticsMetricUnit::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BGNet::Core::AnalyticsMetricUnit>("BGNet.Core", "AnalyticsMetricUnit", "None"));
}
// Autogenerated static field setter
// Set static field: static public BGNet.Core.AnalyticsMetricUnit None
void BGNet::Core::AnalyticsMetricUnit::_set_None(::BGNet::Core::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::AnalyticsMetricUnit::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core", "AnalyticsMetricUnit", "None", value));
}
// Autogenerated static field getter
// Get static field: static public BGNet.Core.AnalyticsMetricUnit Count
::BGNet::Core::AnalyticsMetricUnit BGNet::Core::AnalyticsMetricUnit::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::AnalyticsMetricUnit::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BGNet::Core::AnalyticsMetricUnit>("BGNet.Core", "AnalyticsMetricUnit", "Count"));
}
// Autogenerated static field setter
// Set static field: static public BGNet.Core.AnalyticsMetricUnit Count
void BGNet::Core::AnalyticsMetricUnit::_set_Count(::BGNet::Core::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::AnalyticsMetricUnit::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core", "AnalyticsMetricUnit", "Count", value));
}
// Autogenerated static field getter
// Get static field: static public BGNet.Core.AnalyticsMetricUnit Percent
::BGNet::Core::AnalyticsMetricUnit BGNet::Core::AnalyticsMetricUnit::_get_Percent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::AnalyticsMetricUnit::_get_Percent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BGNet::Core::AnalyticsMetricUnit>("BGNet.Core", "AnalyticsMetricUnit", "Percent"));
}
// Autogenerated static field setter
// Set static field: static public BGNet.Core.AnalyticsMetricUnit Percent
void BGNet::Core::AnalyticsMetricUnit::_set_Percent(::BGNet::Core::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::AnalyticsMetricUnit::_set_Percent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core", "AnalyticsMetricUnit", "Percent", value));
}
// Autogenerated static field getter
// Get static field: static public BGNet.Core.AnalyticsMetricUnit Seconds
::BGNet::Core::AnalyticsMetricUnit BGNet::Core::AnalyticsMetricUnit::_get_Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::AnalyticsMetricUnit::_get_Seconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BGNet::Core::AnalyticsMetricUnit>("BGNet.Core", "AnalyticsMetricUnit", "Seconds"));
}
// Autogenerated static field setter
// Set static field: static public BGNet.Core.AnalyticsMetricUnit Seconds
void BGNet::Core::AnalyticsMetricUnit::_set_Seconds(::BGNet::Core::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::AnalyticsMetricUnit::_set_Seconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core", "AnalyticsMetricUnit", "Seconds", value));
}
// Autogenerated static field getter
// Get static field: static public BGNet.Core.AnalyticsMetricUnit Milliseconds
::BGNet::Core::AnalyticsMetricUnit BGNet::Core::AnalyticsMetricUnit::_get_Milliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::AnalyticsMetricUnit::_get_Milliseconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BGNet::Core::AnalyticsMetricUnit>("BGNet.Core", "AnalyticsMetricUnit", "Milliseconds"));
}
// Autogenerated static field setter
// Set static field: static public BGNet.Core.AnalyticsMetricUnit Milliseconds
void BGNet::Core::AnalyticsMetricUnit::_set_Milliseconds(::BGNet::Core::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::AnalyticsMetricUnit::_set_Milliseconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core", "AnalyticsMetricUnit", "Milliseconds", value));
}
// Autogenerated static field getter
// Get static field: static public BGNet.Core.AnalyticsMetricUnit Microseconds
::BGNet::Core::AnalyticsMetricUnit BGNet::Core::AnalyticsMetricUnit::_get_Microseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::AnalyticsMetricUnit::_get_Microseconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BGNet::Core::AnalyticsMetricUnit>("BGNet.Core", "AnalyticsMetricUnit", "Microseconds"));
}
// Autogenerated static field setter
// Set static field: static public BGNet.Core.AnalyticsMetricUnit Microseconds
void BGNet::Core::AnalyticsMetricUnit::_set_Microseconds(::BGNet::Core::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::AnalyticsMetricUnit::_set_Microseconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core", "AnalyticsMetricUnit", "Microseconds", value));
}
// Autogenerated static field getter
// Get static field: static public BGNet.Core.AnalyticsMetricUnit Bytes
::BGNet::Core::AnalyticsMetricUnit BGNet::Core::AnalyticsMetricUnit::_get_Bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::AnalyticsMetricUnit::_get_Bytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BGNet::Core::AnalyticsMetricUnit>("BGNet.Core", "AnalyticsMetricUnit", "Bytes"));
}
// Autogenerated static field setter
// Set static field: static public BGNet.Core.AnalyticsMetricUnit Bytes
void BGNet::Core::AnalyticsMetricUnit::_set_Bytes(::BGNet::Core::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::AnalyticsMetricUnit::_set_Bytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core", "AnalyticsMetricUnit", "Bytes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BGNet::Core::AnalyticsMetricUnit::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::AnalyticsMetricUnit::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.IAnalyticsManager
#include "BGNet/Core/IAnalyticsManager.hpp"
// Including type: MetricIdentifier
#include "GlobalNamespace/MetricIdentifier.hpp"
// Including type: BGNet.Core.AnalyticsMetricUnit
#include "BGNet/Core/AnalyticsMetricUnit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BGNet.Core.IAnalyticsManager.PollUpdate
void BGNet::Core::IAnalyticsManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::IAnalyticsManager::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.IAnalyticsManager.UpdateState
void BGNet::Core::IAnalyticsManager::UpdateState(::GlobalNamespace::MetricIdentifier metricIdentifier, int64_t state, ::BGNet::Core::AnalyticsMetricUnit unit, bool alarmMetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::IAnalyticsManager::UpdateState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metricIdentifier), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(unit), ::il2cpp_utils::ExtractType(alarmMetric)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, metricIdentifier, state, unit, alarmMetric);
}
// Autogenerated method: BGNet.Core.IAnalyticsManager.UpdateAverage
void BGNet::Core::IAnalyticsManager::UpdateAverage(::GlobalNamespace::MetricIdentifier metricIdentifier, double value, ::BGNet::Core::AnalyticsMetricUnit unit, bool alarmMetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::IAnalyticsManager::UpdateAverage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAverage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metricIdentifier), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(unit), ::il2cpp_utils::ExtractType(alarmMetric)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, metricIdentifier, value, unit, alarmMetric);
}
// Autogenerated method: BGNet.Core.IAnalyticsManager.IncrementCounter
void BGNet::Core::IAnalyticsManager::IncrementCounter(::GlobalNamespace::MetricIdentifier metricIdentifier, int64_t incrementAmount, ::BGNet::Core::AnalyticsMetricUnit unit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::IAnalyticsManager::IncrementCounter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementCounter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metricIdentifier), ::il2cpp_utils::ExtractType(incrementAmount), ::il2cpp_utils::ExtractType(unit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, metricIdentifier, incrementAmount, unit);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.ITimeProvider
#include "BGNet/Core/ITimeProvider.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BGNet.Core.ITimeProvider.GetTimeMs
int64_t BGNet::Core::ITimeProvider::GetTimeMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::ITimeProvider::GetTimeMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimeMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.ITimeProvider.DelayMs
::System::Threading::Tasks::Task* BGNet::Core::ITimeProvider::DelayMs(int millis, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::ITimeProvider::DelayMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millis), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, millis, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseAcknowledgeMessage
#include "BGNet/Core/Messages/BaseAcknowledgeMessage.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <messageHandled>k__BackingField
[[deprecated("Use field access instead!")]] bool& BGNet::Core::Messages::BaseAcknowledgeMessage::dyn_$messageHandled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseAcknowledgeMessage::dyn_$messageHandled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<messageHandled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseAcknowledgeMessage.get_messageHandled
bool BGNet::Core::Messages::BaseAcknowledgeMessage::get_messageHandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseAcknowledgeMessage::get_messageHandled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_messageHandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseAcknowledgeMessage.set_messageHandled
void BGNet::Core::Messages::BaseAcknowledgeMessage::set_messageHandled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseAcknowledgeMessage::set_messageHandled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_messageHandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BGNet.Core.Messages.BaseAcknowledgeMessage.Init
::BGNet::Core::Messages::BaseAcknowledgeMessage* BGNet::Core::Messages::BaseAcknowledgeMessage::Init(bool messageHandled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseAcknowledgeMessage::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageHandled)})));
  return ::il2cpp_utils::RunMethodRethrow<::BGNet::Core::Messages::BaseAcknowledgeMessage*, false>(this, ___internal__method, messageHandled);
}
// Autogenerated method: BGNet.Core.Messages.BaseAcknowledgeMessage.get_resultCode
uint8_t BGNet::Core::Messages::BaseAcknowledgeMessage::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseAcknowledgeMessage::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseAcknowledgeMessage.get_resultCodeString
::StringW BGNet::Core::Messages::BaseAcknowledgeMessage::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseAcknowledgeMessage::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseAcknowledgeMessage.Serialize
void BGNet::Core::Messages::BaseAcknowledgeMessage::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseAcknowledgeMessage::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: BGNet.Core.Messages.BaseAcknowledgeMessage.Deserialize
void BGNet::Core::Messages::BaseAcknowledgeMessage::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseAcknowledgeMessage::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler.hpp"
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<SendOrderedAuthenticatedRequest>d__21
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-SendOrderedAuthenticatedRequest-d__21.hpp"
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<SendOrderedAuthenticatedRequestAsync>d__22
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-SendOrderedAuthenticatedRequestAsync-d__22.hpp"
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<SendAuthenticatedRequestAsync>d__23`1
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-SendAuthenticatedRequestAsync-d__23_1.hpp"
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<SendAuthenticatedRequestAsync>d__24
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-SendAuthenticatedRequestAsync-d__24.hpp"
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<OnSendFailed>d__25
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-OnSendFailed-d__25.hpp"
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<OnSendFailedAwaitResponse>d__26`1
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-OnSendFailedAwaitResponse-d__26_1.hpp"
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<ReauthenticateWithServer>d__27
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-ReauthenticateWithServer-d__27.hpp"
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<AuthenticateWithServer>d__30
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-AuthenticateWithServer-d__30.hpp"
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<AuthenticateWithServerAsyncInternalVerbose>d__31
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-AuthenticateWithServerAsyncInternalVerbose-d__31.hpp"
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<>c__DisplayClass32_0
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_--c__DisplayClass32_0.hpp"
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<AuthenticateWithServerAsyncInternal>d__32
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-AuthenticateWithServerAsyncInternal-d__32.hpp"
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<>c__DisplayClass35_0
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_--c__DisplayClass35_0.hpp"
// Including type: DnsEndPoint
#include "GlobalNamespace/DnsEndPoint.hpp"
// Including type: ICertificateValidator
#include "GlobalNamespace/ICertificateValidator.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Security.Authentication.AuthenticationException
#include "System/Security/Authentication/AuthenticationException.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: IUnconnectedMessageSender
#include "GlobalNamespace/IUnconnectedMessageSender.hpp"
// Including type: BGNet.Core.ITimeProvider
#include "BGNet/Core/ITimeProvider.hpp"
// Including type: BGNet.Core.IAnalyticsManager
#include "BGNet/Core/IAnalyticsManager.hpp"
// Including type: BGNet.Core.Messages.HelloVerifyRequest
#include "BGNet/Core/Messages/HelloVerifyRequest.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedReliableRequest
#include "BGNet/Core/Messages/IUnconnectedReliableRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedReliableResponse
#include "BGNet/Core/Messages/IUnconnectedReliableResponse.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedAuthenticateRequest
#include "BGNet/Core/Messages/IUnconnectedAuthenticateRequest.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedMessage
#include "BGNet/Core/Messages/IUnconnectedMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private LiteNetLib.Utils.NetDataWriter _authenticationDataWriter
::LiteNetLib::Utils::NetDataWriter* BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::_get__authenticationDataWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::_get__authenticationDataWriter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LiteNetLib::Utils::NetDataWriter*>("BGNet.Core.Messages", "BaseClientUnconnectedMessageHandler", "_authenticationDataWriter"));
}
// Autogenerated static field setter
// Set static field: static private LiteNetLib.Utils.NetDataWriter _authenticationDataWriter
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::_set__authenticationDataWriter(::LiteNetLib::Utils::NetDataWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::_set__authenticationDataWriter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core.Messages", "BaseClientUnconnectedMessageHandler", "_authenticationDataWriter", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly DnsEndPoint _endPoint
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DnsEndPoint*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::dyn__endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::dyn__endPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endPoint"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DnsEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ICertificateValidator _certificateValidator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ICertificateValidator*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::dyn__certificateValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::dyn__certificateValidator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certificateValidator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ICertificateValidator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task _authenticationTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::dyn__authenticationTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::dyn__authenticationTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authenticationTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Authentication.AuthenticationException _authenticationException
[[deprecated("Use field access instead!")]] ::System::Security::Authentication::AuthenticationException*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::dyn__authenticationException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::dyn__authenticationException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authenticationException"))->offset;
  return *reinterpret_cast<::System::Security::Authentication::AuthenticationException**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disposed
[[deprecated("Use field access instead!")]] bool& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::dyn__disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::dyn__disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Threading.Tasks.Task> _orderedRequests
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Threading::Tasks::Task*>*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::dyn__orderedRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::dyn__orderedRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_orderedRequests"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.get_endPoint
::GlobalNamespace::DnsEndPoint* BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::get_endPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DnsEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.get_isAuthenticated
bool BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::get_isAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::get_isAuthenticated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.get_isAuthenticating
bool BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::get_isAuthenticating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::get_isAuthenticating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAuthenticating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.get_hasAuthenticationFailed
bool BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::get_hasAuthenticationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::get_hasAuthenticationFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasAuthenticationFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.RegisterHandshakeMessageHandlers
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::RegisterHandshakeMessageHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::RegisterHandshakeMessageHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterHandshakeMessageHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.HandleHelloVerifyRequest
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::HandleHelloVerifyRequest(::BGNet::Core::Messages::HelloVerifyRequest* packet, ::BGNet::Core::Messages::UnconnectedMessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::HandleHelloVerifyRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHelloVerifyRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.SendOrderedAuthenticatedRequest
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::SendOrderedAuthenticatedRequest(::StringW queue, ::BGNet::Core::Messages::IUnconnectedReliableRequest* message, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::SendOrderedAuthenticatedRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOrderedAuthenticatedRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(queue), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(cancellationToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, queue, message, cancellationToken);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.SendOrderedAuthenticatedRequestAsync
::System::Threading::Tasks::Task* BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::SendOrderedAuthenticatedRequestAsync(::System::Threading::Tasks::Task* previousTask, ::BGNet::Core::Messages::IUnconnectedReliableRequest* message, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::SendOrderedAuthenticatedRequestAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOrderedAuthenticatedRequestAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousTask), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, previousTask, message, cancellationToken);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.SendAuthenticatedRequestAsync
::System::Threading::Tasks::Task* BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::SendAuthenticatedRequestAsync(::BGNet::Core::Messages::IUnconnectedReliableRequest* message, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::SendAuthenticatedRequestAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAuthenticatedRequestAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, message, cancellationToken);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.OnSendFailed
::System::Threading::Tasks::Task* BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::OnSendFailed(uint protocolVersion, ::System::Net::IPEndPoint* remoteEndPoint, ::BGNet::Core::Messages::IUnconnectedReliableRequest* message, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::OnSendFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSendFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, protocolVersion, remoteEndPoint, message, cancellationToken);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.ReauthenticateWithServer
::System::Threading::Tasks::Task* BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::ReauthenticateWithServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::ReauthenticateWithServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReauthenticateWithServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.UnauthenticateWithServer
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::UnauthenticateWithServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::UnauthenticateWithServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnauthenticateWithServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.AuthenticateWithServerAsync
::System::Threading::Tasks::Task* BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::AuthenticateWithServerAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::AuthenticateWithServerAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateWithServerAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.AuthenticateWithServer
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::AuthenticateWithServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::AuthenticateWithServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateWithServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.AuthenticateWithServerAsyncInternalVerbose
::System::Threading::Tasks::Task* BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::AuthenticateWithServerAsyncInternalVerbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::AuthenticateWithServerAsyncInternalVerbose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateWithServerAsyncInternalVerbose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.AuthenticateWithServerAsyncInternal
::System::Threading::Tasks::Task* BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::AuthenticateWithServerAsyncInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::AuthenticateWithServerAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateWithServerAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.GetAuthenticationRequest
::System::Threading::Tasks::Task_1<::BGNet::Core::Messages::IUnconnectedAuthenticateRequest*>* BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::GetAuthenticationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::GetAuthenticationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAuthenticationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::BGNet::Core::Messages::IUnconnectedAuthenticateRequest*>*, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.VerifySignature
::System::Threading::Tasks::Task_1<bool>* BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::VerifySignature(::ArrayW<uint8_t> clientRandom, ::ArrayW<uint8_t> serverRandom, ::ArrayW<uint8_t> serverKey, ::ArrayW<uint8_t> signature, ::ArrayW<::ArrayW<uint8_t>> certData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::VerifySignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientRandom), ::il2cpp_utils::ExtractType(serverRandom), ::il2cpp_utils::ExtractType(serverKey), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(certData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, clientRandom, serverRandom, serverKey, signature, certData);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.HandshakeLog
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::HandshakeLog(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::HandshakeLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandshakeLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.Dispose
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.GetMessageType
uint BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::GetMessageType(::BGNet::Core::Messages::IUnconnectedMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::GetMessageType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMessageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, message);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.ShouldHandleMessage
bool BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::ShouldHandleMessage(::BGNet::Core::Messages::IUnconnectedMessage* packet, ::BGNet::Core::Messages::UnconnectedMessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::ShouldHandleMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler.ShouldHandleMessageFromEndPoint
bool BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::ShouldHandleMessageFromEndPoint(::System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::ShouldHandleMessageFromEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessageFromEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, endPoint);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<SendOrderedAuthenticatedRequest>d__21
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-SendOrderedAuthenticatedRequest-d__21.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedReliableRequest
#include "BGNet/Core/Messages/IUnconnectedReliableRequest.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.BaseClientUnconnectedMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String queue
[[deprecated("Use field access instead!")]] ::StringW& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::dyn_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::dyn_queue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.IUnconnectedReliableRequest message
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::IUnconnectedReliableRequest*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::dyn_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::IUnconnectedReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task <task>5__2
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::dyn_$task$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::dyn_$task$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<task>5__2"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<SendOrderedAuthenticatedRequest>d__21.MoveNext
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<SendOrderedAuthenticatedRequest>d__21.SetStateMachine
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequest$d__21::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<SendOrderedAuthenticatedRequestAsync>d__22
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-SendOrderedAuthenticatedRequestAsync-d__22.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedReliableRequest
#include "BGNet/Core/Messages/IUnconnectedReliableRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.Task previousTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::dyn_previousTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::dyn_previousTask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.BaseClientUnconnectedMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.IUnconnectedReliableRequest message
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::IUnconnectedReliableRequest*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::dyn_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::IUnconnectedReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<SendOrderedAuthenticatedRequestAsync>d__22.MoveNext
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<SendOrderedAuthenticatedRequestAsync>d__22.SetStateMachine
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__22::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<SendAuthenticatedRequestAsync>d__24
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-SendAuthenticatedRequestAsync-d__24.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedReliableRequest
#include "BGNet/Core/Messages/IUnconnectedReliableRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendAuthenticatedRequestAsync$d__24::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendAuthenticatedRequestAsync$d__24::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendAuthenticatedRequestAsync$d__24::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendAuthenticatedRequestAsync$d__24::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.BaseClientUnconnectedMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendAuthenticatedRequestAsync$d__24::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendAuthenticatedRequestAsync$d__24::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.IUnconnectedReliableRequest message
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::IUnconnectedReliableRequest*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendAuthenticatedRequestAsync$d__24::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendAuthenticatedRequestAsync$d__24::dyn_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::IUnconnectedReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendAuthenticatedRequestAsync$d__24::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendAuthenticatedRequestAsync$d__24::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendAuthenticatedRequestAsync$d__24::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendAuthenticatedRequestAsync$d__24::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<SendAuthenticatedRequestAsync>d__24.MoveNext
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendAuthenticatedRequestAsync$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendAuthenticatedRequestAsync$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<SendAuthenticatedRequestAsync>d__24.SetStateMachine
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendAuthenticatedRequestAsync$d__24::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$SendAuthenticatedRequestAsync$d__24::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<OnSendFailed>d__25
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-OnSendFailed-d__25.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedReliableRequest
#include "BGNet/Core/Messages/IUnconnectedReliableRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.BaseClientUnconnectedMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.IUnconnectedReliableRequest message
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::IUnconnectedReliableRequest*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::dyn_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::IUnconnectedReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 protocolVersion
[[deprecated("Use field access instead!")]] uint& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::dyn_protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::dyn_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint remoteEndPoint
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::dyn_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::dyn_remoteEndPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<OnSendFailed>d__25.MoveNext
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<OnSendFailed>d__25.SetStateMachine
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$OnSendFailed$d__25::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<ReauthenticateWithServer>d__27
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-ReauthenticateWithServer-d__27.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$ReauthenticateWithServer$d__27::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$ReauthenticateWithServer$d__27::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$ReauthenticateWithServer$d__27::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$ReauthenticateWithServer$d__27::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.BaseClientUnconnectedMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$ReauthenticateWithServer$d__27::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$ReauthenticateWithServer$d__27::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$ReauthenticateWithServer$d__27::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$ReauthenticateWithServer$d__27::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<ReauthenticateWithServer>d__27.MoveNext
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$ReauthenticateWithServer$d__27::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$ReauthenticateWithServer$d__27::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<ReauthenticateWithServer>d__27.SetStateMachine
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$ReauthenticateWithServer$d__27::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$ReauthenticateWithServer$d__27::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<AuthenticateWithServer>d__30
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-AuthenticateWithServer-d__30.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServer$d__30::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServer$d__30::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServer$d__30::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServer$d__30::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.BaseClientUnconnectedMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServer$d__30::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServer$d__30::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServer$d__30::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServer$d__30::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<AuthenticateWithServer>d__30.MoveNext
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServer$d__30::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServer$d__30::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<AuthenticateWithServer>d__30.SetStateMachine
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServer$d__30::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServer$d__30::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<AuthenticateWithServerAsyncInternalVerbose>d__31
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-AuthenticateWithServerAsyncInternalVerbose-d__31.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternalVerbose$d__31::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternalVerbose$d__31::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternalVerbose$d__31::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternalVerbose$d__31::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.BaseClientUnconnectedMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternalVerbose$d__31::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternalVerbose$d__31::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternalVerbose$d__31::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternalVerbose$d__31::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<AuthenticateWithServerAsyncInternalVerbose>d__31.MoveNext
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternalVerbose$d__31::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternalVerbose$d__31::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<AuthenticateWithServerAsyncInternalVerbose>d__31.SetStateMachine
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternalVerbose$d__31::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternalVerbose$d__31::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<>c__DisplayClass32_0
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_--c__DisplayClass32_0.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: BGNet.Core.Messages.HelloVerifyRequest
#include "BGNet/Core/Messages/HelloVerifyRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedReliableRequest
#include "BGNet/Core/Messages/IUnconnectedReliableRequest.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.BaseClientUnconnectedMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass32_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass32_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverPublicKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass32_0::dyn_serverPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass32_0::dyn_serverPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverPublicKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<>c__DisplayClass32_0.<AuthenticateWithServerAsyncInternal>b__0
::System::Threading::Tasks::Task_1<::BGNet::Core::Messages::HelloVerifyRequest*>* BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass32_0::$AuthenticateWithServerAsyncInternal$b__0(uint protocolVersion, ::System::Net::IPEndPoint* ep, ::BGNet::Core::Messages::IUnconnectedReliableRequest* request, ::System::Threading::CancellationToken ct) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass32_0::<AuthenticateWithServerAsyncInternal>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AuthenticateWithServerAsyncInternal>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(ep), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(ct)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::BGNet::Core::Messages::HelloVerifyRequest*>*, false>(this, ___internal__method, protocolVersion, ep, request, ct);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<>c__DisplayClass32_0.<AuthenticateWithServerAsyncInternal>b__1
::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass32_0::$AuthenticateWithServerAsyncInternal$b__1(::System::Threading::Tasks::Task_1<::GlobalNamespace::IDiffieHellmanKeyPair*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass32_0::<AuthenticateWithServerAsyncInternal>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AuthenticateWithServerAsyncInternal>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<AuthenticateWithServerAsyncInternal>d__32
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_-AuthenticateWithServerAsyncInternal-d__32.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedAuthenticateRequest
#include "BGNet/Core/Messages/IUnconnectedAuthenticateRequest.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
// Including type: BGNet.Core.Messages.ServerCertificateRequest
#include "BGNet/Core/Messages/ServerCertificateRequest.hpp"
// Including type: BGNet.Core.Messages.HelloVerifyRequest
#include "BGNet/Core/Messages/HelloVerifyRequest.hpp"
// Including type: BGNet.Core.Messages.ServerHelloRequest
#include "BGNet/Core/Messages/ServerHelloRequest.hpp"
// Including type: BGNet.Core.Messages.ChangeCipherSpecRequest
#include "BGNet/Core/Messages/ChangeCipherSpecRequest.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedAuthenticateResponse
#include "BGNet/Core/Messages/IUnconnectedAuthenticateResponse.hpp"
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<>c__DisplayClass32_0
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_--c__DisplayClass32_0.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.BaseClientUnconnectedMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<>c__DisplayClass32_0 <>8__1
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass32_0*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass32_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IPEndPoint <endPoint>5__2
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$endPoint$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$endPoint$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<endPoint>5__2"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BGNet.Core.Messages.IUnconnectedAuthenticateRequest <authenticationRequest>5__3
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::IUnconnectedAuthenticateRequest*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$authenticationRequest$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$authenticationRequest$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<authenticationRequest>5__3"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::IUnconnectedAuthenticateRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <clientRandom>5__4
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$clientRandom$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$clientRandom$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clientRandom>5__4"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<IDiffieHellmanKeyPair> <generateKeysTask>5__5
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<::GlobalNamespace::IDiffieHellmanKeyPair*>*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$generateKeysTask$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$generateKeysTask$5__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<generateKeysTask>5__5"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::IDiffieHellmanKeyPair*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<BGNet.Core.Messages.ServerCertificateRequest> <serverCertificateTask>5__6
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<::BGNet::Core::Messages::ServerCertificateRequest*>*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$serverCertificateTask$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$serverCertificateTask$5__6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<serverCertificateTask>5__6"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<::BGNet::Core::Messages::ServerCertificateRequest*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <serverRandom>5__7
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$serverRandom$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$serverRandom$5__7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<serverRandom>5__7"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <signature>5__8
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$signature$5__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$signature$5__8");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<signature>5__8"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <responseId>5__9
[[deprecated("Use field access instead!")]] uint& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$responseId$5__9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$responseId$5__9");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<responseId>5__9"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<System.Byte[]> <getPreMasterSecretTask>5__10
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$getPreMasterSecretTask$5__10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$getPreMasterSecretTask$5__10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<getPreMasterSecretTask>5__10"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<System.Boolean> <verifySignatureTask>5__11
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<bool>*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$verifySignatureTask$5__11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$verifySignatureTask$5__11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<verifySignatureTask>5__11"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDiffieHellmanKeyPair <clientKeys>5__12
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDiffieHellmanKeyPair*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$clientKeys$5__12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$clientKeys$5__12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clientKeys>5__12"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDiffieHellmanKeyPair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EncryptionUtility/IEncryptionState <encryptionState>5__13
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EncryptionUtility::IEncryptionState*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$encryptionState$5__13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$encryptionState$5__13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<encryptionState>5__13"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EncryptionUtility::IEncryptionState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Net.IPEndPoint> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::System::Net::IPEndPoint*>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::System::Net::IPEndPoint*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BGNet.Core.Messages.IUnconnectedAuthenticateRequest> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::Messages::IUnconnectedAuthenticateRequest*>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::Messages::IUnconnectedAuthenticateRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BGNet.Core.Messages.HelloVerifyRequest> <>u__3
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::Messages::HelloVerifyRequest*>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::Messages::HelloVerifyRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BGNet.Core.Messages.ServerHelloRequest> <>u__4
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::Messages::ServerHelloRequest*>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__4"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::Messages::ServerHelloRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BGNet.Core.Messages.ServerCertificateRequest> <>u__5
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::Messages::ServerCertificateRequest*>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__5"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::Messages::ServerCertificateRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IDiffieHellmanKeyPair> <>u__6
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IDiffieHellmanKeyPair*>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__6"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IDiffieHellmanKeyPair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__7
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__7"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BGNet.Core.Messages.ChangeCipherSpecRequest> <>u__8
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::Messages::ChangeCipherSpecRequest*>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__8");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__8"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::Messages::ChangeCipherSpecRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Byte[]> <>u__9
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::ArrayW<uint8_t>>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__9");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__9"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::ArrayW<uint8_t>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EncryptionUtility/IEncryptionState> <>u__10
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::EncryptionUtility::IEncryptionState*>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__10"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::EncryptionUtility::IEncryptionState*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BGNet.Core.Messages.IUnconnectedAuthenticateResponse> <>u__11
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::Messages::IUnconnectedAuthenticateResponse*>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::dyn_$$u__11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__11"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::Messages::IUnconnectedAuthenticateResponse*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<AuthenticateWithServerAsyncInternal>d__32.MoveNext
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<AuthenticateWithServerAsyncInternal>d__32.SetStateMachine
void BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$AuthenticateWithServerAsyncInternal$d__32::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<>c__DisplayClass35_0
#include "BGNet/Core/Messages/BaseClientUnconnectedMessageHandler_--c__DisplayClass35_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte[] clientRandom
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass35_0::dyn_clientRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass35_0::dyn_clientRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientRandom"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverRandom
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass35_0::dyn_serverRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass35_0::dyn_serverRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverRandom"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass35_0::dyn_serverKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass35_0::dyn_serverKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[][] certData
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<uint8_t>>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass35_0::dyn_certData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass35_0::dyn_certData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certData"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<uint8_t>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.BaseClientUnconnectedMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler*& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass35_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass35_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] signature
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass35_0::dyn_signature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass35_0::dyn_signature");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signature"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseClientUnconnectedMessageHandler/BGNet.Core.Messages.<>c__DisplayClass35_0.<VerifySignature>b__0
bool BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass35_0::$VerifySignature$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseClientUnconnectedMessageHandler::$$c__DisplayClass35_0::<VerifySignature>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<VerifySignature>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseMultipartMessage
#include "BGNet/Core/Messages/BaseMultipartMessage.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kDataChunkSize
int BGNet::Core::Messages::BaseMultipartMessage::_get_kDataChunkSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::_get_kDataChunkSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("BGNet.Core.Messages", "BaseMultipartMessage", "kDataChunkSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDataChunkSize
void BGNet::Core::Messages::BaseMultipartMessage::_set_kDataChunkSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::_set_kDataChunkSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core.Messages", "BaseMultipartMessage", "kDataChunkSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaximumDataSize
int BGNet::Core::Messages::BaseMultipartMessage::_get_kMaximumDataSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::_get_kMaximumDataSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("BGNet.Core.Messages", "BaseMultipartMessage", "kMaximumDataSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaximumDataSize
void BGNet::Core::Messages::BaseMultipartMessage::_set_kMaximumDataSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::_set_kMaximumDataSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core.Messages", "BaseMultipartMessage", "kMaximumDataSize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <multipartMessageId>k__BackingField
[[deprecated("Use field access instead!")]] uint& BGNet::Core::Messages::BaseMultipartMessage::dyn_$multipartMessageId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::dyn_$multipartMessageId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<multipartMessageId>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <offset>k__BackingField
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::BaseMultipartMessage::dyn_$offset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::dyn_$offset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<offset>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <length>k__BackingField
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::BaseMultipartMessage::dyn_$length$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::dyn_$length$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<length>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <totalLength>k__BackingField
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::BaseMultipartMessage::dyn_$totalLength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::dyn_$totalLength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<totalLength>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseMultipartMessage::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseMultipartMessage.get_multipartMessageId
uint BGNet::Core::Messages::BaseMultipartMessage::get_multipartMessageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::get_multipartMessageId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multipartMessageId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseMultipartMessage.set_multipartMessageId
void BGNet::Core::Messages::BaseMultipartMessage::set_multipartMessageId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::set_multipartMessageId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_multipartMessageId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BGNet.Core.Messages.BaseMultipartMessage.get_offset
int BGNet::Core::Messages::BaseMultipartMessage::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::get_offset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseMultipartMessage.set_offset
void BGNet::Core::Messages::BaseMultipartMessage::set_offset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::set_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BGNet.Core.Messages.BaseMultipartMessage.get_length
int BGNet::Core::Messages::BaseMultipartMessage::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::get_length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseMultipartMessage.set_length
void BGNet::Core::Messages::BaseMultipartMessage::set_length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::set_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BGNet.Core.Messages.BaseMultipartMessage.get_totalLength
int BGNet::Core::Messages::BaseMultipartMessage::get_totalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::get_totalLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_totalLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseMultipartMessage.set_totalLength
void BGNet::Core::Messages::BaseMultipartMessage::set_totalLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::set_totalLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_totalLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BGNet.Core.Messages.BaseMultipartMessage.get_data
::ArrayW<uint8_t> BGNet::Core::Messages::BaseMultipartMessage::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::get_data");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseMultipartMessage.Init
::BGNet::Core::Messages::BaseMultipartMessage* BGNet::Core::Messages::BaseMultipartMessage::Init(uint multipartMessageId, ::ArrayW<uint8_t> data, int offset, int length, int totalLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multipartMessageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(totalLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::BGNet::Core::Messages::BaseMultipartMessage*, false>(this, ___internal__method, multipartMessageId, data, offset, length, totalLength);
}
// Autogenerated method: BGNet.Core.Messages.BaseMultipartMessage.Serialize
void BGNet::Core::Messages::BaseMultipartMessage::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: BGNet.Core.Messages.BaseMultipartMessage.Deserialize
void BGNet::Core::Messages::BaseMultipartMessage::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseMultipartMessage::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseReliableRequest
#include "BGNet/Core/Messages/BaseReliableRequest.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <requestId>k__BackingField
[[deprecated("Use field access instead!")]] uint& BGNet::Core::Messages::BaseReliableRequest::dyn_$requestId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableRequest::dyn_$requestId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<requestId>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableRequest.get_requestId
uint BGNet::Core::Messages::BaseReliableRequest::get_requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableRequest::get_requestId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableRequest.set_requestId
void BGNet::Core::Messages::BaseReliableRequest::set_requestId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableRequest::set_requestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_requestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableRequest.Serialize
void BGNet::Core::Messages::BaseReliableRequest::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableRequest.Deserialize
void BGNet::Core::Messages::BaseReliableRequest::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableRequest.Release
void BGNet::Core::Messages::BaseReliableRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableRequest.BGNet.Core.Messages.IUnconnectedReliableRequest.WithRequestId
::BGNet::Core::Messages::IUnconnectedReliableRequest* BGNet::Core::Messages::BaseReliableRequest::BGNet_Core_Messages_IUnconnectedReliableRequest_WithRequestId(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableRequest::BGNet.Core.Messages.IUnconnectedReliableRequest.WithRequestId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BGNet.Core.Messages.IUnconnectedReliableRequest.WithRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  return ::il2cpp_utils::RunMethodRethrow<::BGNet::Core::Messages::IUnconnectedReliableRequest*, false>(this, ___internal__method, requestId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseReliableResponse
#include "BGNet/Core/Messages/BaseReliableResponse.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <requestId>k__BackingField
[[deprecated("Use field access instead!")]] uint& BGNet::Core::Messages::BaseReliableResponse::dyn_$requestId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableResponse::dyn_$requestId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<requestId>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <responseId>k__BackingField
[[deprecated("Use field access instead!")]] uint& BGNet::Core::Messages::BaseReliableResponse::dyn_$responseId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableResponse::dyn_$responseId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<responseId>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableResponse.get_requestId
uint BGNet::Core::Messages::BaseReliableResponse::get_requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableResponse::get_requestId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableResponse.set_requestId
void BGNet::Core::Messages::BaseReliableResponse::set_requestId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableResponse::set_requestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_requestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableResponse.get_responseId
uint BGNet::Core::Messages::BaseReliableResponse::get_responseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableResponse::get_responseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_responseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableResponse.set_responseId
void BGNet::Core::Messages::BaseReliableResponse::set_responseId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableResponse::set_responseId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_responseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableResponse.get_resultCode
uint8_t BGNet::Core::Messages::BaseReliableResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableResponse.get_resultCodeString
::StringW BGNet::Core::Messages::BaseReliableResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableResponse.Serialize
void BGNet::Core::Messages::BaseReliableResponse::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableResponse.Deserialize
void BGNet::Core::Messages::BaseReliableResponse::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableResponse.Release
void BGNet::Core::Messages::BaseReliableResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableResponse.BGNet.Core.Messages.IUnconnectedReliableRequest.WithRequestId
::BGNet::Core::Messages::IUnconnectedReliableRequest* BGNet::Core::Messages::BaseReliableResponse::BGNet_Core_Messages_IUnconnectedReliableRequest_WithRequestId(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableResponse::BGNet.Core.Messages.IUnconnectedReliableRequest.WithRequestId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BGNet.Core.Messages.IUnconnectedReliableRequest.WithRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  return ::il2cpp_utils::RunMethodRethrow<::BGNet::Core::Messages::IUnconnectedReliableRequest*, false>(this, ___internal__method, requestId);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableResponse.BGNet.Core.Messages.IUnconnectedResponse.WithResponseId
::BGNet::Core::Messages::IUnconnectedResponse* BGNet::Core::Messages::BaseReliableResponse::BGNet_Core_Messages_IUnconnectedResponse_WithResponseId(uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableResponse::BGNet.Core.Messages.IUnconnectedResponse.WithResponseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BGNet.Core.Messages.IUnconnectedResponse.WithResponseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseId)})));
  return ::il2cpp_utils::RunMethodRethrow<::BGNet::Core::Messages::IUnconnectedResponse*, false>(this, ___internal__method, responseId);
}
// Autogenerated method: BGNet.Core.Messages.BaseReliableResponse.BGNet.Core.Messages.IUnconnectedReliableResponse.WithRequestAndResponseId
::BGNet::Core::Messages::IUnconnectedReliableResponse* BGNet::Core::Messages::BaseReliableResponse::BGNet_Core_Messages_IUnconnectedReliableResponse_WithRequestAndResponseId(uint requestId, uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseReliableResponse::BGNet.Core.Messages.IUnconnectedReliableResponse.WithRequestAndResponseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BGNet.Core.Messages.IUnconnectedReliableResponse.WithRequestAndResponseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(responseId)})));
  return ::il2cpp_utils::RunMethodRethrow<::BGNet::Core::Messages::IUnconnectedReliableResponse*, false>(this, ___internal__method, requestId, responseId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseResponse
#include "BGNet/Core/Messages/BaseResponse.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <responseId>k__BackingField
[[deprecated("Use field access instead!")]] uint& BGNet::Core::Messages::BaseResponse::dyn_$responseId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseResponse::dyn_$responseId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<responseId>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseResponse.get_responseId
uint BGNet::Core::Messages::BaseResponse::get_responseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseResponse::get_responseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_responseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseResponse.set_responseId
void BGNet::Core::Messages::BaseResponse::set_responseId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseResponse::set_responseId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_responseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BGNet.Core.Messages.BaseResponse.get_resultCode
uint8_t BGNet::Core::Messages::BaseResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseResponse.get_resultCodeString
::StringW BGNet::Core::Messages::BaseResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseResponse.Serialize
void BGNet::Core::Messages::BaseResponse::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: BGNet.Core.Messages.BaseResponse.Deserialize
void BGNet::Core::Messages::BaseResponse::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: BGNet.Core.Messages.BaseResponse.Release
void BGNet::Core::Messages::BaseResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseResponse.BGNet.Core.Messages.IUnconnectedResponse.WithResponseId
::BGNet::Core::Messages::IUnconnectedResponse* BGNet::Core::Messages::BaseResponse::BGNet_Core_Messages_IUnconnectedResponse_WithResponseId(uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseResponse::BGNet.Core.Messages.IUnconnectedResponse.WithResponseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BGNet.Core.Messages.IUnconnectedResponse.WithResponseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseId)})));
  return ::il2cpp_utils::RunMethodRethrow<::BGNet::Core::Messages::IUnconnectedResponse*, false>(this, ___internal__method, responseId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler.hpp"
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.SigningComputeOperation
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_SigningComputeOperation.hpp"
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.GetPreMasterSecretComputeOperation
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_GetPreMasterSecretComputeOperation.hpp"
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<>c
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_--c.hpp"
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<StartServerAuthenticationFlow>d__19
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_-StartServerAuthenticationFlow-d__19.hpp"
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<StartServerAuthenticationFlowAsync>d__21
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_-StartServerAuthenticationFlowAsync-d__21.hpp"
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<GetSignatureAsync>d__23
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_-GetSignatureAsync-d__23.hpp"
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<GetPreMasterSecretAsync>d__24
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_-GetPreMasterSecretAsync-d__24.hpp"
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<RotateServerKeysAsync>d__26
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_-RotateServerKeysAsync-d__26.hpp"
// Including type: ICertificateEncryptionProvider
#include "GlobalNamespace/ICertificateEncryptionProvider.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: IAsyncComputeManager
#include "GlobalNamespace/IAsyncComputeManager.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: IUnconnectedMessageSender
#include "GlobalNamespace/IUnconnectedMessageSender.hpp"
// Including type: BGNet.Core.ITimeProvider
#include "BGNet/Core/ITimeProvider.hpp"
// Including type: BGNet.Core.IAnalyticsManager
#include "BGNet/Core/IAnalyticsManager.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: BGNet.Core.Messages.ClientHelloRequest
#include "BGNet/Core/Messages/ClientHelloRequest.hpp"
// Including type: BGNet.Core.Messages.ClientHelloWithCookieRequest
#include "BGNet/Core/Messages/ClientHelloWithCookieRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedAuthenticateRequest
#include "BGNet/Core/Messages/IUnconnectedAuthenticateRequest.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedMessage
#include "BGNet/Core/Messages/IUnconnectedMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 kServerKeyExpirationLength
int64_t BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::_get_kServerKeyExpirationLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::_get_kServerKeyExpirationLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("BGNet.Core.Messages", "BaseServerUnconnectedMessageHandler", "kServerKeyExpirationLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kServerKeyExpirationLength
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::_set_kServerKeyExpirationLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::_set_kServerKeyExpirationLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core.Messages", "BaseServerUnconnectedMessageHandler", "kServerKeyExpirationLength", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly ICertificateEncryptionProvider _certificateEncryptionProvider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ICertificateEncryptionProvider*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__certificateEncryptionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__certificateEncryptionProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certificateEncryptionProvider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ICertificateEncryptionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[][] _certificateChain
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<uint8_t>>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__certificateChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__certificateChain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certificateChain"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<uint8_t>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataWriter _cookieWriter
[[deprecated("Use field access instead!")]] ::LiteNetLib::Utils::NetDataWriter*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__cookieWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__cookieWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cookieWriter"))->offset;
  return *reinterpret_cast<::LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataWriter _signatureWriter
[[deprecated("Use field access instead!")]] ::LiteNetLib::Utils::NetDataWriter*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__signatureWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__signatureWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_signatureWriter"))->offset;
  return *reinterpret_cast<::LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAsyncComputeManager _asyncCompute
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAsyncComputeManager*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__asyncCompute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__asyncCompute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncCompute"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAsyncComputeManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lastServerKeyPairRequestTime
[[deprecated("Use field access instead!")]] int64_t& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__lastServerKeyPairRequestTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__lastServerKeyPairRequestTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastServerKeyPairRequestTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDiffieHellmanKeyPair _serverKeys
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDiffieHellmanKeyPair*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__serverKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__serverKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverKeys"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDiffieHellmanKeyPair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task _serverKeyRotationTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__serverKeyRotationTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__serverKeyRotationTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverKeyRotationTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _hmacKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__hmacKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::dyn__hmacKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hmacKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler.RegisterHandshakeMessageHandlers
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::RegisterHandshakeMessageHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::RegisterHandshakeMessageHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterHandshakeMessageHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler.HandleClientHelloRequest
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::HandleClientHelloRequest(::BGNet::Core::Messages::ClientHelloRequest* packet, ::BGNet::Core::Messages::UnconnectedMessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::HandleClientHelloRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleClientHelloRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler.HandleClientHelloWithCookieRequest
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::HandleClientHelloWithCookieRequest(::BGNet::Core::Messages::ClientHelloWithCookieRequest* packet, ::BGNet::Core::Messages::UnconnectedMessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::HandleClientHelloWithCookieRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleClientHelloWithCookieRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler.StartServerAuthenticationFlow
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::StartServerAuthenticationFlow(uint protocolVersion, ::System::Net::IPEndPoint* endPoint, uint requestId, uint certificateResponseId, ::ArrayW<uint8_t> clientRandom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::StartServerAuthenticationFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartServerAuthenticationFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(certificateResponseId), ::il2cpp_utils::ExtractType(clientRandom)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, protocolVersion, endPoint, requestId, certificateResponseId, clientRandom);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler.VerifyAuthenticationRequest
::System::Threading::Tasks::Task* BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::VerifyAuthenticationRequest(uint protocolVersion, ::System::Net::IPEndPoint* endPoint, ::BGNet::Core::Messages::IUnconnectedAuthenticateRequest* authenticateRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::VerifyAuthenticationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyAuthenticationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(authenticateRequest)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, protocolVersion, endPoint, authenticateRequest);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler.StartServerAuthenticationFlowAsync
::System::Threading::Tasks::Task* BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::StartServerAuthenticationFlowAsync(uint protocolVersion, ::System::Net::IPEndPoint* endPoint, uint requestId, uint certificateResponseId, ::ArrayW<uint8_t> clientRandom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::StartServerAuthenticationFlowAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartServerAuthenticationFlowAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(certificateResponseId), ::il2cpp_utils::ExtractType(clientRandom)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, protocolVersion, endPoint, requestId, certificateResponseId, clientRandom);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler.GetCookie
::ArrayW<uint8_t> BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::GetCookie(::System::Net::IPEndPoint* endPoint, ::ArrayW<uint8_t> random) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::GetCookie");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCookie", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(random)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, endPoint, random);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler.GetSignatureAsync
::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::GetSignatureAsync(::ArrayW<uint8_t> clientRandom, ::ArrayW<uint8_t> serverRandom, ::ArrayW<uint8_t> serverKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::GetSignatureAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSignatureAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientRandom), ::il2cpp_utils::ExtractType(serverRandom), ::il2cpp_utils::ExtractType(serverKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>*, false>(this, ___internal__method, clientRandom, serverRandom, serverKey);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler.GetPreMasterSecretAsync
::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::GetPreMasterSecretAsync(::GlobalNamespace::IDiffieHellmanKeyPair* serverKeys, ::ArrayW<uint8_t> clientKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::GetPreMasterSecretAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreMasterSecretAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverKeys), ::il2cpp_utils::ExtractType(clientKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>*, false>(this, ___internal__method, serverKeys, clientKey);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler.RotateServerKeys
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::RotateServerKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::RotateServerKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateServerKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler.RotateServerKeysAsync
::System::Threading::Tasks::Task* BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::RotateServerKeysAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::RotateServerKeysAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateServerKeysAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler.HandshakeLog
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::HandshakeLog(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::HandshakeLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandshakeLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler.PollUpdate
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler.GetMessageType
uint BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::GetMessageType(::BGNet::Core::Messages::IUnconnectedMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::GetMessageType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMessageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, message);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler.ShouldHandleMessage
bool BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::ShouldHandleMessage(::BGNet::Core::Messages::IUnconnectedMessage* packet, ::BGNet::Core::Messages::UnconnectedMessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::ShouldHandleMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, packet, origin);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.SigningComputeOperation
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_SigningComputeOperation.hpp"
// Including type: ICertificateEncryptionProvider
#include "GlobalNamespace/ICertificateEncryptionProvider.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _clientRandom
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::SigningComputeOperation::dyn__clientRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::SigningComputeOperation::dyn__clientRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clientRandom"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _serverRandom
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::SigningComputeOperation::dyn__serverRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::SigningComputeOperation::dyn__serverRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverRandom"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _serverKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::SigningComputeOperation::dyn__serverKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::SigningComputeOperation::dyn__serverKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ICertificateEncryptionProvider _certificateEncryptionProvider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ICertificateEncryptionProvider*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::SigningComputeOperation::dyn__certificateEncryptionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::SigningComputeOperation::dyn__certificateEncryptionProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certificateEncryptionProvider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ICertificateEncryptionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataWriter _writer
[[deprecated("Use field access instead!")]] ::LiteNetLib::Utils::NetDataWriter*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::SigningComputeOperation::dyn__writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::SigningComputeOperation::dyn__writer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writer"))->offset;
  return *reinterpret_cast<::LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.SigningComputeOperation.Compute
::ArrayW<uint8_t> BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::SigningComputeOperation::Compute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::SigningComputeOperation::Compute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.SigningComputeOperation.Finally
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::SigningComputeOperation::Finally() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::SigningComputeOperation::Finally");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.GetPreMasterSecretComputeOperation
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_GetPreMasterSecretComputeOperation.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IDiffieHellmanKeyPair _serverKey
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDiffieHellmanKeyPair*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::GetPreMasterSecretComputeOperation::dyn__serverKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::GetPreMasterSecretComputeOperation::dyn__serverKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverKey"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDiffieHellmanKeyPair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _clientKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::GetPreMasterSecretComputeOperation::dyn__clientKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::GetPreMasterSecretComputeOperation::dyn__clientKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clientKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.GetPreMasterSecretComputeOperation.Compute
::ArrayW<uint8_t> BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::GetPreMasterSecretComputeOperation::Compute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::GetPreMasterSecretComputeOperation::Compute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<>c
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<>c <>9
::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$$c* BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$$c*>("BGNet.Core.Messages", "BaseServerUnconnectedMessageHandler/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<>c <>9
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$$c::_set_$$9(::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("BGNet.Core.Messages", "BaseServerUnconnectedMessageHandler/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Security.Cryptography.X509Certificates.X509Certificate2,System.Byte[]> <>9__12_0
::System::Func_2<::System::Security::Cryptography::X509Certificates::X509Certificate2*, ::ArrayW<uint8_t>>* BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Security::Cryptography::X509Certificates::X509Certificate2*, ::ArrayW<uint8_t>>*>("BGNet.Core.Messages", "BaseServerUnconnectedMessageHandler/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Security.Cryptography.X509Certificates.X509Certificate2,System.Byte[]> <>9__12_0
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$$c::_set_$$9__12_0(::System::Func_2<::System::Security::Cryptography::X509Certificates::X509Certificate2*, ::ArrayW<uint8_t>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("BGNet.Core.Messages", "BaseServerUnconnectedMessageHandler/<>c", "<>9__12_0", value)));
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<>c..cctor
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BGNet.Core.Messages", "BaseServerUnconnectedMessageHandler/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<>c.<.ctor>b__12_0
::ArrayW<uint8_t> BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$$c::$_ctor$b__12_0(::System::Security::Cryptography::X509Certificates::X509Certificate2* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$$c::<.ctor>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, cert);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<StartServerAuthenticationFlow>d__19
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_-StartServerAuthenticationFlow-d__19.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.BaseServerUnconnectedMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 protocolVersion
[[deprecated("Use field access instead!")]] uint& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint endPoint
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_endPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPoint"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 requestId
[[deprecated("Use field access instead!")]] uint& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_requestId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 certificateResponseId
[[deprecated("Use field access instead!")]] uint& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_certificateResponseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_certificateResponseId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateResponseId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] clientRandom
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_clientRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_clientRandom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientRandom"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<StartServerAuthenticationFlow>d__19.MoveNext
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<StartServerAuthenticationFlow>d__19.SetStateMachine
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlow$d__19::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<StartServerAuthenticationFlowAsync>d__21
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_-StartServerAuthenticationFlowAsync-d__21.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
// Including type: BGNet.Core.Messages.ClientKeyExchangeRequest
#include "BGNet/Core/Messages/ClientKeyExchangeRequest.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedAuthenticateRequest
#include "BGNet/Core/Messages/IUnconnectedAuthenticateRequest.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.BaseServerUnconnectedMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] clientRandom
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_clientRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_clientRandom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientRandom"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 protocolVersion
[[deprecated("Use field access instead!")]] uint& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint endPoint
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_endPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPoint"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 certificateResponseId
[[deprecated("Use field access instead!")]] uint& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_certificateResponseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_certificateResponseId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateResponseId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 requestId
[[deprecated("Use field access instead!")]] uint& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_requestId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <serverRandom>5__2
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$serverRandom$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$serverRandom$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<serverRandom>5__2"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDiffieHellmanKeyPair <serverKeys>5__3
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDiffieHellmanKeyPair*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$serverKeys$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$serverKeys$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<serverKeys>5__3"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDiffieHellmanKeyPair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <responseId>5__4
[[deprecated("Use field access instead!")]] uint& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$responseId$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$responseId$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<responseId>5__4"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EncryptionUtility/IEncryptionState <encryptionState>5__5
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EncryptionUtility::IEncryptionState*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$encryptionState$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$encryptionState$5__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<encryptionState>5__5"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EncryptionUtility::IEncryptionState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Byte[]> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::ArrayW<uint8_t>>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::ArrayW<uint8_t>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BGNet.Core.Messages.ClientKeyExchangeRequest> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::Messages::ClientKeyExchangeRequest*>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::Messages::ClientKeyExchangeRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EncryptionUtility/IEncryptionState> <>u__3
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::EncryptionUtility::IEncryptionState*>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::EncryptionUtility::IEncryptionState*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BGNet.Core.Messages.IUnconnectedAuthenticateRequest> <>u__4
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::Messages::IUnconnectedAuthenticateRequest*>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$$u__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$$u__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__4"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::Messages::IUnconnectedAuthenticateRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__5
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$$u__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::dyn_$$u__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__5"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<StartServerAuthenticationFlowAsync>d__21.MoveNext
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<StartServerAuthenticationFlowAsync>d__21.SetStateMachine
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$StartServerAuthenticationFlowAsync$d__21::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<GetSignatureAsync>d__23
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_-GetSignatureAsync-d__23.hpp"
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.SigningComputeOperation
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_SigningComputeOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Byte[]> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::ArrayW<uint8_t>>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::ArrayW<uint8_t>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] clientRandom
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::dyn_clientRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::dyn_clientRandom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientRandom"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverRandom
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::dyn_serverRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::dyn_serverRandom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverRandom"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::dyn_serverKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::dyn_serverKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.BaseServerUnconnectedMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.SigningComputeOperation <signingRequest>5__2
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::SigningComputeOperation*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::dyn_$signingRequest$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::dyn_$signingRequest$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<signingRequest>5__2"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::SigningComputeOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Byte[]> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::ArrayW<uint8_t>>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::ArrayW<uint8_t>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<GetSignatureAsync>d__23.MoveNext
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<GetSignatureAsync>d__23.SetStateMachine
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetSignatureAsync$d__23::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<GetPreMasterSecretAsync>d__24
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_-GetPreMasterSecretAsync-d__24.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.GetPreMasterSecretComputeOperation
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_GetPreMasterSecretComputeOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Byte[]> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::ArrayW<uint8_t>>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::ArrayW<uint8_t>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IDiffieHellmanKeyPair serverKeys
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDiffieHellmanKeyPair*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::dyn_serverKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::dyn_serverKeys");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverKeys"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDiffieHellmanKeyPair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] clientKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::dyn_clientKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::dyn_clientKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.BaseServerUnconnectedMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.GetPreMasterSecretComputeOperation <preMasterSecretRequest>5__2
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::GetPreMasterSecretComputeOperation*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::dyn_$preMasterSecretRequest$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::dyn_$preMasterSecretRequest$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<preMasterSecretRequest>5__2"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::GetPreMasterSecretComputeOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Byte[]> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::ArrayW<uint8_t>>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::ArrayW<uint8_t>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<GetPreMasterSecretAsync>d__24.MoveNext
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<GetPreMasterSecretAsync>d__24.SetStateMachine
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$GetPreMasterSecretAsync$d__24::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<RotateServerKeysAsync>d__26
#include "BGNet/Core/Messages/BaseServerUnconnectedMessageHandler_-RotateServerKeysAsync-d__26.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$RotateServerKeysAsync$d__26::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$RotateServerKeysAsync$d__26::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$RotateServerKeysAsync$d__26::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$RotateServerKeysAsync$d__26::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.Messages.BaseServerUnconnectedMessageHandler <>4__this
[[deprecated("Use field access instead!")]] ::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler*& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$RotateServerKeysAsync$d__26::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$RotateServerKeysAsync$d__26::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IDiffieHellmanKeyPair> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IDiffieHellmanKeyPair*>& BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$RotateServerKeysAsync$d__26::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$RotateServerKeysAsync$d__26::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IDiffieHellmanKeyPair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<RotateServerKeysAsync>d__26.MoveNext
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$RotateServerKeysAsync$d__26::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$RotateServerKeysAsync$d__26::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.BaseServerUnconnectedMessageHandler/BGNet.Core.Messages.<RotateServerKeysAsync>d__26.SetStateMachine
void BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$RotateServerKeysAsync$d__26::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::BaseServerUnconnectedMessageHandler::$RotateServerKeysAsync$d__26::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.HandshakeMessageType
#include "BGNet/Core/Messages/HandshakeMessageType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BGNet.Core.Messages.HandshakeMessageType ClientHelloRequest
::BGNet::Core::Messages::HandshakeMessageType BGNet::Core::Messages::HandshakeMessageType::_get_ClientHelloRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_get_ClientHelloRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BGNet::Core::Messages::HandshakeMessageType>("BGNet.Core.Messages", "HandshakeMessageType", "ClientHelloRequest"));
}
// Autogenerated static field setter
// Set static field: static public BGNet.Core.Messages.HandshakeMessageType ClientHelloRequest
void BGNet::Core::Messages::HandshakeMessageType::_set_ClientHelloRequest(::BGNet::Core::Messages::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_set_ClientHelloRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core.Messages", "HandshakeMessageType", "ClientHelloRequest", value));
}
// Autogenerated static field getter
// Get static field: static public BGNet.Core.Messages.HandshakeMessageType HelloVerifyRequest
::BGNet::Core::Messages::HandshakeMessageType BGNet::Core::Messages::HandshakeMessageType::_get_HelloVerifyRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_get_HelloVerifyRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BGNet::Core::Messages::HandshakeMessageType>("BGNet.Core.Messages", "HandshakeMessageType", "HelloVerifyRequest"));
}
// Autogenerated static field setter
// Set static field: static public BGNet.Core.Messages.HandshakeMessageType HelloVerifyRequest
void BGNet::Core::Messages::HandshakeMessageType::_set_HelloVerifyRequest(::BGNet::Core::Messages::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_set_HelloVerifyRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core.Messages", "HandshakeMessageType", "HelloVerifyRequest", value));
}
// Autogenerated static field getter
// Get static field: static public BGNet.Core.Messages.HandshakeMessageType ClientHelloWithCookieRequest
::BGNet::Core::Messages::HandshakeMessageType BGNet::Core::Messages::HandshakeMessageType::_get_ClientHelloWithCookieRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_get_ClientHelloWithCookieRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BGNet::Core::Messages::HandshakeMessageType>("BGNet.Core.Messages", "HandshakeMessageType", "ClientHelloWithCookieRequest"));
}
// Autogenerated static field setter
// Set static field: static public BGNet.Core.Messages.HandshakeMessageType ClientHelloWithCookieRequest
void BGNet::Core::Messages::HandshakeMessageType::_set_ClientHelloWithCookieRequest(::BGNet::Core::Messages::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_set_ClientHelloWithCookieRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core.Messages", "HandshakeMessageType", "ClientHelloWithCookieRequest", value));
}
// Autogenerated static field getter
// Get static field: static public BGNet.Core.Messages.HandshakeMessageType ServerHelloRequest
::BGNet::Core::Messages::HandshakeMessageType BGNet::Core::Messages::HandshakeMessageType::_get_ServerHelloRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_get_ServerHelloRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BGNet::Core::Messages::HandshakeMessageType>("BGNet.Core.Messages", "HandshakeMessageType", "ServerHelloRequest"));
}
// Autogenerated static field setter
// Set static field: static public BGNet.Core.Messages.HandshakeMessageType ServerHelloRequest
void BGNet::Core::Messages::HandshakeMessageType::_set_ServerHelloRequest(::BGNet::Core::Messages::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_set_ServerHelloRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core.Messages", "HandshakeMessageType", "ServerHelloRequest", value));
}
// Autogenerated static field getter
// Get static field: static public BGNet.Core.Messages.HandshakeMessageType ServerCertificateRequest
::BGNet::Core::Messages::HandshakeMessageType BGNet::Core::Messages::HandshakeMessageType::_get_ServerCertificateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_get_ServerCertificateRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BGNet::Core::Messages::HandshakeMessageType>("BGNet.Core.Messages", "HandshakeMessageType", "ServerCertificateRequest"));
}
// Autogenerated static field setter
// Set static field: static public BGNet.Core.Messages.HandshakeMessageType ServerCertificateRequest
void BGNet::Core::Messages::HandshakeMessageType::_set_ServerCertificateRequest(::BGNet::Core::Messages::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_set_ServerCertificateRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core.Messages", "HandshakeMessageType", "ServerCertificateRequest", value));
}
// Autogenerated static field getter
// Get static field: static public BGNet.Core.Messages.HandshakeMessageType ClientKeyExchangeRequest
::BGNet::Core::Messages::HandshakeMessageType BGNet::Core::Messages::HandshakeMessageType::_get_ClientKeyExchangeRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_get_ClientKeyExchangeRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BGNet::Core::Messages::HandshakeMessageType>("BGNet.Core.Messages", "HandshakeMessageType", "ClientKeyExchangeRequest"));
}
// Autogenerated static field setter
// Set static field: static public BGNet.Core.Messages.HandshakeMessageType ClientKeyExchangeRequest
void BGNet::Core::Messages::HandshakeMessageType::_set_ClientKeyExchangeRequest(::BGNet::Core::Messages::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_set_ClientKeyExchangeRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core.Messages", "HandshakeMessageType", "ClientKeyExchangeRequest", value));
}
// Autogenerated static field getter
// Get static field: static public BGNet.Core.Messages.HandshakeMessageType ChangeCipherSpecRequest
::BGNet::Core::Messages::HandshakeMessageType BGNet::Core::Messages::HandshakeMessageType::_get_ChangeCipherSpecRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_get_ChangeCipherSpecRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BGNet::Core::Messages::HandshakeMessageType>("BGNet.Core.Messages", "HandshakeMessageType", "ChangeCipherSpecRequest"));
}
// Autogenerated static field setter
// Set static field: static public BGNet.Core.Messages.HandshakeMessageType ChangeCipherSpecRequest
void BGNet::Core::Messages::HandshakeMessageType::_set_ChangeCipherSpecRequest(::BGNet::Core::Messages::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_set_ChangeCipherSpecRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core.Messages", "HandshakeMessageType", "ChangeCipherSpecRequest", value));
}
// Autogenerated static field getter
// Get static field: static public BGNet.Core.Messages.HandshakeMessageType MessageReceivedAcknowledge
::BGNet::Core::Messages::HandshakeMessageType BGNet::Core::Messages::HandshakeMessageType::_get_MessageReceivedAcknowledge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_get_MessageReceivedAcknowledge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BGNet::Core::Messages::HandshakeMessageType>("BGNet.Core.Messages", "HandshakeMessageType", "MessageReceivedAcknowledge"));
}
// Autogenerated static field setter
// Set static field: static public BGNet.Core.Messages.HandshakeMessageType MessageReceivedAcknowledge
void BGNet::Core::Messages::HandshakeMessageType::_set_MessageReceivedAcknowledge(::BGNet::Core::Messages::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_set_MessageReceivedAcknowledge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core.Messages", "HandshakeMessageType", "MessageReceivedAcknowledge", value));
}
// Autogenerated static field getter
// Get static field: static public BGNet.Core.Messages.HandshakeMessageType MultipartMessage
::BGNet::Core::Messages::HandshakeMessageType BGNet::Core::Messages::HandshakeMessageType::_get_MultipartMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_get_MultipartMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BGNet::Core::Messages::HandshakeMessageType>("BGNet.Core.Messages", "HandshakeMessageType", "MultipartMessage"));
}
// Autogenerated static field setter
// Set static field: static public BGNet.Core.Messages.HandshakeMessageType MultipartMessage
void BGNet::Core::Messages::HandshakeMessageType::_set_MultipartMessage(::BGNet::Core::Messages::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::_set_MultipartMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BGNet.Core.Messages", "HandshakeMessageType", "MultipartMessage", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BGNet::Core::Messages::HandshakeMessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::HandshakeMessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.ClientHelloRequest
#include "BGNet/Core/Messages/ClientHelloRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] random
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& BGNet::Core::Messages::ClientHelloRequest::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::ClientHelloRequest::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.ClientHelloRequest.get_pool
::GlobalNamespace::PacketPool_1<::BGNet::Core::Messages::ClientHelloRequest*>* BGNet::Core::Messages::ClientHelloRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::ClientHelloRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BGNet.Core.Messages", "ClientHelloRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::BGNet::Core::Messages::ClientHelloRequest*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.ClientHelloRequest.Init
::BGNet::Core::Messages::ClientHelloRequest* BGNet::Core::Messages::ClientHelloRequest::Init(::ArrayW<uint8_t> random) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::ClientHelloRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(random)})));
  return ::il2cpp_utils::RunMethodRethrow<::BGNet::Core::Messages::ClientHelloRequest*, false>(this, ___internal__method, random);
}
// Autogenerated method: BGNet.Core.Messages.ClientHelloRequest.Serialize
void BGNet::Core::Messages::ClientHelloRequest::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::ClientHelloRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: BGNet.Core.Messages.ClientHelloRequest.Deserialize
void BGNet::Core::Messages::ClientHelloRequest::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::ClientHelloRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: BGNet.Core.Messages.ClientHelloRequest.Release
void BGNet::Core::Messages::ClientHelloRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::ClientHelloRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BGNet.Core.Messages.ClientHelloWithCookieRequest
#include "BGNet/Core/Messages/ClientHelloWithCookieRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 certificateResponseId
[[deprecated("Use field access instead!")]] uint& BGNet::Core::Messages::ClientHelloWithCookieRequest::dyn_certificateResponseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::ClientHelloWithCookieRequest::dyn_certificateResponseId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateResponseId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable random
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ByteArrayNetSerializable*& BGNet::Core::Messages::ClientHelloWithCookieRequest::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::ClientHelloWithCookieRequest::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable cookie
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ByteArrayNetSerializable*& BGNet::Core::Messages::ClientHelloWithCookieRequest::dyn_cookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::ClientHelloWithCookieRequest::dyn_cookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cookie"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BGNet.Core.Messages.ClientHelloWithCookieRequest.get_pool
::GlobalNamespace::PacketPool_1<::BGNet::Core::Messages::ClientHelloWithCookieRequest*>* BGNet::Core::Messages::ClientHelloWithCookieRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::ClientHelloWithCookieRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BGNet.Core.Messages", "ClientHelloWithCookieRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::BGNet::Core::Messages::ClientHelloWithCookieRequest*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BGNet.Core.Messages.ClientHelloWithCookieRequest.Init
::BGNet::Core::Messages::ClientHelloWithCookieRequest* BGNet::Core::Messages::ClientHelloWithCookieRequest::Init(uint certificateResponseId, ::ArrayW<uint8_t> random, ::ArrayW<uint8_t> cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::ClientHelloWithCookieRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificateResponseId), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(cookie)})));
  return ::il2cpp_utils::RunMethodRethrow<::BGNet::Core::Messages::ClientHelloWithCookieRequest*, false>(this, ___internal__method, certificateResponseId, random, cookie);
}
// Autogenerated method: BGNet.Core.Messages.ClientHelloWithCookieRequest.Serialize
void BGNet::Core::Messages::ClientHelloWithCookieRequest::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::ClientHelloWithCookieRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: BGNet.Core.Messages.ClientHelloWithCookieRequest.Deserialize
void BGNet::Core::Messages::ClientHelloWithCookieRequest::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::ClientHelloWithCookieRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: BGNet.Core.Messages.ClientHelloWithCookieRequest.Release
void BGNet::Core::Messages::ClientHelloWithCookieRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BGNet::Core::Messages::ClientHelloWithCookieRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
