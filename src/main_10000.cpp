// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SyntaxTreeNode
#include "System/Xml/Schema/SyntaxTreeNode.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.SyntaxTreeNode.get_IsNullable
bool System::Xml::Schema::SyntaxTreeNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SyntaxTreeNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SyntaxTreeNode.get_IsRangeNode
bool System::Xml::Schema::SyntaxTreeNode::get_IsRangeNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SyntaxTreeNode::get_IsRangeNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRangeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SyntaxTreeNode.ExpandTree
void System::Xml::Schema::SyntaxTreeNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SyntaxTreeNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated method: System.Xml.Schema.SyntaxTreeNode.ConstructPos
void System::Xml::Schema::SyntaxTreeNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SyntaxTreeNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.LeafNode
#include "System/Xml/Schema/LeafNode.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 pos
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::LeafNode::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.LeafNode.get_Pos
int System::Xml::Schema::LeafNode::get_Pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::get_Pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafNode.set_Pos
void System::Xml::Schema::LeafNode::set_Pos(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::set_Pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.LeafNode.get_IsNullable
bool System::Xml::Schema::LeafNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafNode.ExpandTree
void System::Xml::Schema::LeafNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated method: System.Xml.Schema.LeafNode.ConstructPos
void System::Xml::Schema::LeafNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.NamespaceListNode
#include "System/Xml/Schema/NamespaceListNode.hpp"
// Including type: System.Xml.Schema.NamespaceList
#include "System/Xml/Schema/NamespaceList.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.NamespaceList namespaceList
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::NamespaceList*& System::Xml::Schema::NamespaceListNode::dyn_namespaceList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::dyn_namespaceList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceList"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::NamespaceList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Object particle
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::NamespaceListNode::dyn_particle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::dyn_particle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particle"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.NamespaceListNode.GetResolvedSymbols
::System::Collections::ICollection* System::Xml::Schema::NamespaceListNode::GetResolvedSymbols(::System::Xml::Schema::SymbolsDictionary* symbols) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::GetResolvedSymbols");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResolvedSymbols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(symbols)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method, symbols);
}
// Autogenerated method: System.Xml.Schema.NamespaceListNode.get_IsNullable
bool System::Xml::Schema::NamespaceListNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.NamespaceListNode.ExpandTree
void System::Xml::Schema::NamespaceListNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated method: System.Xml.Schema.NamespaceListNode.ConstructPos
void System::Xml::Schema::NamespaceListNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SyntaxTreeNode leftChild
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SyntaxTreeNode*& System::Xml::Schema::InteriorNode::dyn_leftChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::dyn_leftChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftChild"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SyntaxTreeNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SyntaxTreeNode rightChild
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SyntaxTreeNode*& System::Xml::Schema::InteriorNode::dyn_rightChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::dyn_rightChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightChild"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SyntaxTreeNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.get_LeftChild
::System::Xml::Schema::SyntaxTreeNode* System::Xml::Schema::InteriorNode::get_LeftChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::get_LeftChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeftChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SyntaxTreeNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.set_LeftChild
void System::Xml::Schema::InteriorNode::set_LeftChild(::System::Xml::Schema::SyntaxTreeNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::set_LeftChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LeftChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.get_RightChild
::System::Xml::Schema::SyntaxTreeNode* System::Xml::Schema::InteriorNode::get_RightChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::get_RightChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SyntaxTreeNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.set_RightChild
void System::Xml::Schema::InteriorNode::set_RightChild(::System::Xml::Schema::SyntaxTreeNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::set_RightChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RightChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.ExpandTreeNoRecursive
void System::Xml::Schema::InteriorNode::ExpandTreeNoRecursive(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::ExpandTreeNoRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTreeNoRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated method: System.Xml.Schema.InteriorNode.ExpandTree
void System::Xml::Schema::InteriorNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::InteriorNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SequenceNode
#include "System/Xml/Schema/SequenceNode.hpp"
// Including type: System.Xml.Schema.SequenceNode/System.Xml.Schema.SequenceConstructPosContext
#include "System/Xml/Schema/SequenceNode_SequenceConstructPosContext.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.SequenceNode.get_IsNullable
bool System::Xml::Schema::SequenceNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SequenceNode.ConstructPos
void System::Xml::Schema::SequenceNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.SequenceNode.ExpandTree
void System::Xml::Schema::SequenceNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SequenceNode/System.Xml.Schema.SequenceConstructPosContext
#include "System/Xml/Schema/SequenceNode_SequenceConstructPosContext.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.SequenceNode this_
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SequenceNode*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_this_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_this_");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "this_"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SequenceNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet firstpos
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_firstpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_firstpos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstpos"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet lastpos
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_lastpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_lastpos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastpos"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet lastposLeft
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_lastposLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_lastposLeft");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastposLeft"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet firstposRight
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_firstposRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::dyn_firstposRight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstposRight"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SequenceNode/System.Xml.Schema.SequenceConstructPosContext..ctor
System::Xml::Schema::SequenceNode::SequenceConstructPosContext::SequenceConstructPosContext(::System::Xml::Schema::SequenceNode* node, ::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SequenceNode::SequenceConstructPosContext::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, firstpos, lastpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.ChoiceNode
#include "System/Xml/Schema/ChoiceNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.ChoiceNode.ConstructChildPos
void System::Xml::Schema::ChoiceNode::ConstructChildPos(::System::Xml::Schema::SyntaxTreeNode* child, ::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChoiceNode::ConstructChildPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "ChoiceNode", "ConstructChildPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child), ::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, child, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.ChoiceNode.get_IsNullable
bool System::Xml::Schema::ChoiceNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChoiceNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ChoiceNode.ConstructPos
void System::Xml::Schema::ChoiceNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChoiceNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated method: System.Xml.Schema.ChoiceNode.ExpandTree
void System::Xml::Schema::ChoiceNode::ExpandTree(::System::Xml::Schema::InteriorNode* parent, ::System::Xml::Schema::SymbolsDictionary* symbols, ::System::Xml::Schema::Positions* positions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ChoiceNode::ExpandTree");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(symbols), ::il2cpp_utils::ExtractType(positions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, symbols, positions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.PlusNode
#include "System/Xml/Schema/PlusNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.PlusNode.get_IsNullable
bool System::Xml::Schema::PlusNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::PlusNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.PlusNode.ConstructPos
void System::Xml::Schema::PlusNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::PlusNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.QmarkNode
#include "System/Xml/Schema/QmarkNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.QmarkNode.get_IsNullable
bool System::Xml::Schema::QmarkNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QmarkNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.QmarkNode.ConstructPos
void System::Xml::Schema::QmarkNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QmarkNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.StarNode
#include "System/Xml/Schema/StarNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.StarNode.get_IsNullable
bool System::Xml::Schema::StarNode::get_IsNullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StarNode::get_IsNullable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.StarNode.ConstructPos
void System::Xml::Schema::StarNode::ConstructPos(::System::Xml::Schema::BitSet* firstpos, ::System::Xml::Schema::BitSet* lastpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StarNode::ConstructPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(lastpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, lastpos, followpos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.LeafRangeNode
#include "System/Xml/Schema/LeafRangeNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Decimal min
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Xml::Schema::LeafRangeNode::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal max
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Xml::Schema::LeafRangeNode::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet nextIteration
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::LeafRangeNode::dyn_nextIteration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::dyn_nextIteration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextIteration"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.get_Max
::System::Decimal System::Xml::Schema::LeafRangeNode::get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::get_Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.get_Min
::System::Decimal System::Xml::Schema::LeafRangeNode::get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::get_Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.get_NextIteration
::System::Xml::Schema::BitSet* System::Xml::Schema::LeafRangeNode::get_NextIteration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::get_NextIteration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextIteration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::BitSet*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.LeafRangeNode.set_NextIteration
void System::Xml::Schema::LeafRangeNode::set_NextIteration(::System::Xml::Schema::BitSet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::LeafRangeNode::set_NextIteration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NextIteration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.ContentValidator
#include "System/Xml/Schema/ContentValidator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.ContentValidator Empty
::System::Xml::Schema::ContentValidator* System::Xml::Schema::ContentValidator::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ContentValidator*>("System.Xml.Schema", "ContentValidator", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.ContentValidator Empty
void System::Xml::Schema::ContentValidator::_set_Empty(::System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ContentValidator", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.ContentValidator TextOnly
::System::Xml::Schema::ContentValidator* System::Xml::Schema::ContentValidator::_get_TextOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_get_TextOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ContentValidator*>("System.Xml.Schema", "ContentValidator", "TextOnly"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.ContentValidator TextOnly
void System::Xml::Schema::ContentValidator::_set_TextOnly(::System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_set_TextOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ContentValidator", "TextOnly", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.ContentValidator Mixed
::System::Xml::Schema::ContentValidator* System::Xml::Schema::ContentValidator::_get_Mixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_get_Mixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ContentValidator*>("System.Xml.Schema", "ContentValidator", "Mixed"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.ContentValidator Mixed
void System::Xml::Schema::ContentValidator::_set_Mixed(::System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_set_Mixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ContentValidator", "Mixed", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.ContentValidator Any
::System::Xml::Schema::ContentValidator* System::Xml::Schema::ContentValidator::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ContentValidator*>("System.Xml.Schema", "ContentValidator", "Any"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.ContentValidator Any
void System::Xml::Schema::ContentValidator::_set_Any(::System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ContentValidator", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaContentType contentType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaContentType& System::Xml::Schema::ContentValidator::dyn_contentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::dyn_contentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaContentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isOpen
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::ContentValidator::dyn_isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::dyn_isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isEmptiable
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::ContentValidator::dyn_isEmptiable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::dyn_isEmptiable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isEmptiable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.get_ContentType
::System::Xml::Schema::XmlSchemaContentType System::Xml::Schema::ContentValidator::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::get_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaContentType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ContentValidator.get_IsOpen
bool System::Xml::Schema::ContentValidator::get_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::get_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ContentValidator..cctor
void System::Xml::Schema::ContentValidator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ContentValidator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "ContentValidator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.ParticleContentValidator
#include "System/Xml/Schema/ParticleContentValidator.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.Xml.Schema.SyntaxTreeNode
#include "System/Xml/Schema/SyntaxTreeNode.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.NamespaceList
#include "System/Xml/Schema/NamespaceList.hpp"
// Including type: System.Xml.Schema.InteriorNode
#include "System/Xml/Schema/InteriorNode.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SymbolsDictionary symbols
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SymbolsDictionary*& System::Xml::Schema::ParticleContentValidator::dyn_symbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_symbols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbols"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SymbolsDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Positions positions
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::Positions*& System::Xml::Schema::ParticleContentValidator::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::Positions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack stack
[[deprecated("Use field access instead!")]] ::System::Collections::Stack*& System::Xml::Schema::ParticleContentValidator::dyn_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stack"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SyntaxTreeNode contentNode
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SyntaxTreeNode*& System::Xml::Schema::ParticleContentValidator::dyn_contentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_contentNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentNode"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SyntaxTreeNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isPartial
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::ParticleContentValidator::dyn_isPartial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_isPartial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPartial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minMaxNodesCount
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::ParticleContentValidator::dyn_minMaxNodesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_minMaxNodesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minMaxNodesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableUpaCheck
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::ParticleContentValidator::dyn_enableUpaCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::dyn_enableUpaCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableUpaCheck"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.Start
void System::Xml::Schema::ParticleContentValidator::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.OpenGroup
void System::Xml::Schema::ParticleContentValidator::OpenGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::OpenGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CloseGroup
void System::Xml::Schema::ParticleContentValidator::CloseGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::CloseGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.Exists
bool System::Xml::Schema::ParticleContentValidator::Exists(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::Exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddName
void System::Xml::Schema::ParticleContentValidator::AddName(::System::Xml::XmlQualifiedName* name, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, particle);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddNamespaceList
void System::Xml::Schema::ParticleContentValidator::AddNamespaceList(::System::Xml::Schema::NamespaceList* namespaceList, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddNamespaceList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNamespaceList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceList), ::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, namespaceList, particle);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddLeafNode
void System::Xml::Schema::ParticleContentValidator::AddLeafNode(::System::Xml::Schema::SyntaxTreeNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddLeafNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLeafNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddChoice
void System::Xml::Schema::ParticleContentValidator::AddChoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddChoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddSequence
void System::Xml::Schema::ParticleContentValidator::AddSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddStar
void System::Xml::Schema::ParticleContentValidator::AddStar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddStar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddStar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddPlus
void System::Xml::Schema::ParticleContentValidator::AddPlus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddPlus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPlus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.AddQMark
void System::Xml::Schema::ParticleContentValidator::AddQMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::AddQMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddQMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.Closure
void System::Xml::Schema::ParticleContentValidator::Closure(::System::Xml::Schema::InteriorNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::Closure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Closure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.Finish
::System::Xml::Schema::ContentValidator* System::Xml::Schema::ParticleContentValidator::Finish(bool useDFA) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useDFA)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::ContentValidator*, false>(this, ___internal__method, useDFA);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CalculateTotalFollowposForRangeNodes
::ArrayW<::System::Xml::Schema::BitSet*> System::Xml::Schema::ParticleContentValidator::CalculateTotalFollowposForRangeNodes(::System::Xml::Schema::BitSet* firstpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos, ByRef<::System::Xml::Schema::BitSet*> posWithRangeTerminals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::CalculateTotalFollowposForRangeNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateTotalFollowposForRangeNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(followpos), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::BitSet*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Xml::Schema::BitSet*>, false>(this, ___internal__method, firstpos, followpos, byref(posWithRangeTerminals));
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CheckCMUPAWithLeafRangeNodes
void System::Xml::Schema::ParticleContentValidator::CheckCMUPAWithLeafRangeNodes(::System::Xml::Schema::BitSet* curpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::CheckCMUPAWithLeafRangeNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCMUPAWithLeafRangeNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curpos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.GetApplicableMinMaxFollowPos
::System::Xml::Schema::BitSet* System::Xml::Schema::ParticleContentValidator::GetApplicableMinMaxFollowPos(::System::Xml::Schema::BitSet* curpos, ::System::Xml::Schema::BitSet* posWithRangeTerminals, ::ArrayW<::System::Xml::Schema::BitSet*> minmaxFollowPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::GetApplicableMinMaxFollowPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicableMinMaxFollowPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curpos), ::il2cpp_utils::ExtractType(posWithRangeTerminals), ::il2cpp_utils::ExtractType(minmaxFollowPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::BitSet*, false>(this, ___internal__method, curpos, posWithRangeTerminals, minmaxFollowPos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CheckUniqueParticleAttribution
void System::Xml::Schema::ParticleContentValidator::CheckUniqueParticleAttribution(::System::Xml::Schema::BitSet* firstpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::CheckUniqueParticleAttribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckUniqueParticleAttribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(followpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstpos, followpos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.CheckUniqueParticleAttribution
void System::Xml::Schema::ParticleContentValidator::CheckUniqueParticleAttribution(::System::Xml::Schema::BitSet* curpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::CheckUniqueParticleAttribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckUniqueParticleAttribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curpos);
}
// Autogenerated method: System.Xml.Schema.ParticleContentValidator.BuildTransitionTable
::ArrayW<::ArrayW<int>> System::Xml::Schema::ParticleContentValidator::BuildTransitionTable(::System::Xml::Schema::BitSet* firstpos, ::ArrayW<::System::Xml::Schema::BitSet*> followpos, int endMarkerPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ParticleContentValidator::BuildTransitionTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildTransitionTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstpos), ::il2cpp_utils::ExtractType(followpos), ::il2cpp_utils::ExtractType(endMarkerPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::ArrayW<int>>, false>(this, ___internal__method, firstpos, followpos, endMarkerPos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.DfaContentValidator
#include "System/Xml/Schema/DfaContentValidator.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32[][] transitionTable
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<int>>& System::Xml::Schema::DfaContentValidator::dyn_transitionTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DfaContentValidator::dyn_transitionTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transitionTable"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<int>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SymbolsDictionary symbols
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SymbolsDictionary*& System::Xml::Schema::DfaContentValidator::dyn_symbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DfaContentValidator::dyn_symbols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbols"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SymbolsDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.NfaContentValidator
#include "System/Xml/Schema/NfaContentValidator.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet firstpos
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::NfaContentValidator::dyn_firstpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NfaContentValidator::dyn_firstpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstpos"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet[] followpos
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::BitSet*>& System::Xml::Schema::NfaContentValidator::dyn_followpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NfaContentValidator::dyn_followpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followpos"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::BitSet*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SymbolsDictionary symbols
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SymbolsDictionary*& System::Xml::Schema::NfaContentValidator::dyn_symbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NfaContentValidator::dyn_symbols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbols"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SymbolsDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Positions positions
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::Positions*& System::Xml::Schema::NfaContentValidator::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NfaContentValidator::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::Positions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endMarkerPos
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::NfaContentValidator::dyn_endMarkerPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NfaContentValidator::dyn_endMarkerPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endMarkerPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.RangeContentValidator
#include "System/Xml/Schema/RangeContentValidator.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Xml.Schema.SymbolsDictionary
#include "System/Xml/Schema/SymbolsDictionary.hpp"
// Including type: System.Xml.Schema.Positions
#include "System/Xml/Schema/Positions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet firstpos
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::RangeContentValidator::dyn_firstpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_firstpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstpos"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet[] followpos
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::BitSet*>& System::Xml::Schema::RangeContentValidator::dyn_followpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_followpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followpos"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::BitSet*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.BitSet positionsWithRangeTerminals
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::RangeContentValidator::dyn_positionsWithRangeTerminals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_positionsWithRangeTerminals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionsWithRangeTerminals"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SymbolsDictionary symbols
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SymbolsDictionary*& System::Xml::Schema::RangeContentValidator::dyn_symbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_symbols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbols"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SymbolsDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Positions positions
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::Positions*& System::Xml::Schema::RangeContentValidator::dyn_positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positions"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::Positions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minMaxNodesCount
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::RangeContentValidator::dyn_minMaxNodesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_minMaxNodesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minMaxNodesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endMarkerPos
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::RangeContentValidator::dyn_endMarkerPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RangeContentValidator::dyn_endMarkerPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endMarkerPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaDatatypeVariety
#include "System/Xml/Schema/XmlSchemaDatatypeVariety.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety Atomic
::System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::XmlSchemaDatatypeVariety::_get_Atomic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_get_Atomic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDatatypeVariety>("System.Xml.Schema", "XmlSchemaDatatypeVariety", "Atomic"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety Atomic
void System::Xml::Schema::XmlSchemaDatatypeVariety::_set_Atomic(::System::Xml::Schema::XmlSchemaDatatypeVariety value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_set_Atomic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDatatypeVariety", "Atomic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety List
::System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::XmlSchemaDatatypeVariety::_get_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_get_List");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDatatypeVariety>("System.Xml.Schema", "XmlSchemaDatatypeVariety", "List"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety List
void System::Xml::Schema::XmlSchemaDatatypeVariety::_set_List(::System::Xml::Schema::XmlSchemaDatatypeVariety value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_set_List");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDatatypeVariety", "List", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety Union
::System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::XmlSchemaDatatypeVariety::_get_Union() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_get_Union");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDatatypeVariety>("System.Xml.Schema", "XmlSchemaDatatypeVariety", "Union"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDatatypeVariety Union
void System::Xml::Schema::XmlSchemaDatatypeVariety::_set_Union(::System::Xml::Schema::XmlSchemaDatatypeVariety value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::_set_Union");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDatatypeVariety", "Union", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaDatatypeVariety::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatypeVariety::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XsdSimpleValue
#include "System/Xml/Schema/XsdSimpleValue.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType xmlType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleType*& System::Xml::Schema::XsdSimpleValue::dyn_xmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdSimpleValue::dyn_xmlType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object typedValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::XsdSimpleValue::dyn_typedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdSimpleValue::dyn_typedValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typedValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XsdSimpleValue.get_XmlType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::XsdSimpleValue::get_XmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdSimpleValue::get_XmlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdSimpleValue.get_TypedValue
::Il2CppObject* System::Xml::Schema::XsdSimpleValue::get_TypedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdSimpleValue::get_TypedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags Length
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_Length");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "Length"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags Length
void System::Xml::Schema::RestrictionFlags::_set_Length(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_Length");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "Length", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MinLength
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MinLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MinLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MinLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MinLength
void System::Xml::Schema::RestrictionFlags::_set_MinLength(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MinLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MinLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MaxLength
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MaxLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MaxLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MaxLength
void System::Xml::Schema::RestrictionFlags::_set_MaxLength(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MaxLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MaxLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags Pattern
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_Pattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "Pattern"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags Pattern
void System::Xml::Schema::RestrictionFlags::_set_Pattern(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_Pattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "Pattern", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags Enumeration
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_Enumeration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_Enumeration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "Enumeration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags Enumeration
void System::Xml::Schema::RestrictionFlags::_set_Enumeration(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_Enumeration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "Enumeration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags WhiteSpace
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_WhiteSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_WhiteSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "WhiteSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags WhiteSpace
void System::Xml::Schema::RestrictionFlags::_set_WhiteSpace(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_WhiteSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "WhiteSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MaxInclusive
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MaxInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MaxInclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MaxInclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MaxInclusive
void System::Xml::Schema::RestrictionFlags::_set_MaxInclusive(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MaxInclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MaxInclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MaxExclusive
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MaxExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MaxExclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MaxExclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MaxExclusive
void System::Xml::Schema::RestrictionFlags::_set_MaxExclusive(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MaxExclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MaxExclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MinInclusive
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MinInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MinInclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MinInclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MinInclusive
void System::Xml::Schema::RestrictionFlags::_set_MinInclusive(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MinInclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MinInclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags MinExclusive
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_MinExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_MinExclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "MinExclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags MinExclusive
void System::Xml::Schema::RestrictionFlags::_set_MinExclusive(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_MinExclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "MinExclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags TotalDigits
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_TotalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_TotalDigits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "TotalDigits"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags TotalDigits
void System::Xml::Schema::RestrictionFlags::_set_TotalDigits(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_TotalDigits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "TotalDigits", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.RestrictionFlags FractionDigits
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::RestrictionFlags::_get_FractionDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_get_FractionDigits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::RestrictionFlags>("System.Xml.Schema", "RestrictionFlags", "FractionDigits"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.RestrictionFlags FractionDigits
void System::Xml::Schema::RestrictionFlags::_set_FractionDigits(::System::Xml::Schema::RestrictionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::_set_FractionDigits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "RestrictionFlags", "FractionDigits", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::RestrictionFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RestrictionFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Preserve
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::XmlSchemaWhiteSpace::_get_Preserve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_get_Preserve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaWhiteSpace>("System.Xml.Schema", "XmlSchemaWhiteSpace", "Preserve"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Preserve
void System::Xml::Schema::XmlSchemaWhiteSpace::_set_Preserve(::System::Xml::Schema::XmlSchemaWhiteSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_set_Preserve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaWhiteSpace", "Preserve", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Replace
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::XmlSchemaWhiteSpace::_get_Replace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_get_Replace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaWhiteSpace>("System.Xml.Schema", "XmlSchemaWhiteSpace", "Replace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Replace
void System::Xml::Schema::XmlSchemaWhiteSpace::_set_Replace(::System::Xml::Schema::XmlSchemaWhiteSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_set_Replace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaWhiteSpace", "Replace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Collapse
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::XmlSchemaWhiteSpace::_get_Collapse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_get_Collapse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaWhiteSpace>("System.Xml.Schema", "XmlSchemaWhiteSpace", "Collapse"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaWhiteSpace Collapse
void System::Xml::Schema::XmlSchemaWhiteSpace::_set_Collapse(::System::Xml::Schema::XmlSchemaWhiteSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::_set_Collapse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaWhiteSpace", "Collapse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaWhiteSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaWhiteSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.DatatypeImplementation
#include "System/Xml/Schema/DatatypeImplementation.hpp"
// Including type: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap
#include "System/Xml/Schema/DatatypeImplementation_SchemaDatatypeMap.hpp"
// Including type: System.Xml.Schema.RestrictionFacets
#include "System/Xml/Schema/RestrictionFacets.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable builtinTypes
::System::Collections::Hashtable* System::Xml::Schema::DatatypeImplementation::_get_builtinTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_builtinTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.Xml.Schema", "DatatypeImplementation", "builtinTypes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable builtinTypes
void System::Xml::Schema::DatatypeImplementation::_set_builtinTypes(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_builtinTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "builtinTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType[] enumToTypeCode
::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*> System::Xml::Schema::DatatypeImplementation::_get_enumToTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_enumToTypeCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>>("System.Xml.Schema", "DatatypeImplementation", "enumToTypeCode"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType[] enumToTypeCode
void System::Xml::Schema::DatatypeImplementation::_set_enumToTypeCode(::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_enumToTypeCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "enumToTypeCode", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType anySimpleType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_anySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_anySimpleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "anySimpleType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType anySimpleType
void System::Xml::Schema::DatatypeImplementation::_set_anySimpleType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_anySimpleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "anySimpleType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType anyAtomicType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_anyAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_anyAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "anyAtomicType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType anyAtomicType
void System::Xml::Schema::DatatypeImplementation::_set_anyAtomicType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_anyAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "anyAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType untypedAtomicType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_untypedAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_untypedAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "untypedAtomicType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType untypedAtomicType
void System::Xml::Schema::DatatypeImplementation::_set_untypedAtomicType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_untypedAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "untypedAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType yearMonthDurationType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_yearMonthDurationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_yearMonthDurationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "yearMonthDurationType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType yearMonthDurationType
void System::Xml::Schema::DatatypeImplementation::_set_yearMonthDurationType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_yearMonthDurationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "yearMonthDurationType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaSimpleType dayTimeDurationType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::_get_dayTimeDurationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_dayTimeDurationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaSimpleType*>("System.Xml.Schema", "DatatypeImplementation", "dayTimeDurationType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaSimpleType dayTimeDurationType
void System::Xml::Schema::DatatypeImplementation::_set_dayTimeDurationType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_dayTimeDurationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "dayTimeDurationType", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName QnAnySimpleType
::System::Xml::XmlQualifiedName* System::Xml::Schema::DatatypeImplementation::_get_QnAnySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_QnAnySimpleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "DatatypeImplementation", "QnAnySimpleType"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName QnAnySimpleType
void System::Xml::Schema::DatatypeImplementation::_set_QnAnySimpleType(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_QnAnySimpleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "QnAnySimpleType", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName QnAnyType
::System::Xml::XmlQualifiedName* System::Xml::Schema::DatatypeImplementation::_get_QnAnyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_QnAnyType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "DatatypeImplementation", "QnAnyType"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName QnAnyType
void System::Xml::Schema::DatatypeImplementation::_set_QnAnyType(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_QnAnyType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "QnAnyType", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker stringFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_stringFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_stringFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "stringFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker stringFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_stringFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_stringFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "stringFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker miscFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_miscFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_miscFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "miscFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker miscFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_miscFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_miscFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "miscFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker numeric2FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_numeric2FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_numeric2FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "numeric2FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker numeric2FacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_numeric2FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_numeric2FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "numeric2FacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker binaryFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_binaryFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_binaryFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "binaryFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker binaryFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_binaryFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_binaryFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "binaryFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker dateTimeFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_dateTimeFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_dateTimeFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "dateTimeFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker dateTimeFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_dateTimeFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_dateTimeFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "dateTimeFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker durationFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_durationFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_durationFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "durationFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker durationFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_durationFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_durationFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "durationFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker listFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_listFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_listFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "listFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker listFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_listFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_listFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "listFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker qnameFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_qnameFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_qnameFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "qnameFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker qnameFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_qnameFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_qnameFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "qnameFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.FacetsChecker unionFacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::_get_unionFacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_unionFacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "DatatypeImplementation", "unionFacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.FacetsChecker unionFacetsChecker
void System::Xml::Schema::DatatypeImplementation::_set_unionFacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_unionFacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "unionFacetsChecker", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anySimpleType
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_anySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_anySimpleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_anySimpleType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anySimpleType
void System::Xml::Schema::DatatypeImplementation::_set_c_anySimpleType(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_anySimpleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_anySimpleType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anyURI
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_anyURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_anyURI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_anyURI"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anyURI
void System::Xml::Schema::DatatypeImplementation::_set_c_anyURI(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_anyURI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_anyURI", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_base64Binary
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_base64Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_base64Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_base64Binary"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_base64Binary
void System::Xml::Schema::DatatypeImplementation::_set_c_base64Binary(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_base64Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_base64Binary", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_boolean
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_boolean"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_boolean
void System::Xml::Schema::DatatypeImplementation::_set_c_boolean(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_boolean", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_byte
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_byte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_byte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_byte"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_byte
void System::Xml::Schema::DatatypeImplementation::_set_c_byte(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_byte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_byte", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_char
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_char() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_char"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_char
void System::Xml::Schema::DatatypeImplementation::_set_c_char(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_char", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_date
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_date"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_date
void System::Xml::Schema::DatatypeImplementation::_set_c_date(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_date", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTime
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_dateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_dateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_dateTime"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTime
void System::Xml::Schema::DatatypeImplementation::_set_c_dateTime(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_dateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_dateTime", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTimeNoTz
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_dateTimeNoTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_dateTimeNoTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_dateTimeNoTz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTimeNoTz
void System::Xml::Schema::DatatypeImplementation::_set_c_dateTimeNoTz(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_dateTimeNoTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_dateTimeNoTz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTimeTz
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_dateTimeTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_dateTimeTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_dateTimeTz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dateTimeTz
void System::Xml::Schema::DatatypeImplementation::_set_c_dateTimeTz(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_dateTimeTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_dateTimeTz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_day
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_day");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_day"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_day
void System::Xml::Schema::DatatypeImplementation::_set_c_day(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_day");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_day", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_decimal
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_decimal"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_decimal
void System::Xml::Schema::DatatypeImplementation::_set_c_decimal(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_decimal", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_double
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_double"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_double
void System::Xml::Schema::DatatypeImplementation::_set_c_double(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_double", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_doubleXdr
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_doubleXdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_doubleXdr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_doubleXdr"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_doubleXdr
void System::Xml::Schema::DatatypeImplementation::_set_c_doubleXdr(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_doubleXdr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_doubleXdr", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_duration
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_duration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_duration"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_duration
void System::Xml::Schema::DatatypeImplementation::_set_c_duration(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_duration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_duration", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENTITY
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_ENTITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_ENTITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_ENTITY"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENTITY
void System::Xml::Schema::DatatypeImplementation::_set_c_ENTITY(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_ENTITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_ENTITY", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENTITIES
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_ENTITIES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_ENTITIES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_ENTITIES"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENTITIES
void System::Xml::Schema::DatatypeImplementation::_set_c_ENTITIES(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_ENTITIES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_ENTITIES", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENUMERATION
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_ENUMERATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_ENUMERATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_ENUMERATION"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ENUMERATION
void System::Xml::Schema::DatatypeImplementation::_set_c_ENUMERATION(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_ENUMERATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_ENUMERATION", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_fixed
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_fixed"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_fixed
void System::Xml::Schema::DatatypeImplementation::_set_c_fixed(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_fixed", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_float
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_float"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_float
void System::Xml::Schema::DatatypeImplementation::_set_c_float(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_float", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_floatXdr
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_floatXdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_floatXdr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_floatXdr"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_floatXdr
void System::Xml::Schema::DatatypeImplementation::_set_c_floatXdr(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_floatXdr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_floatXdr", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_hexBinary
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_hexBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_hexBinary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_hexBinary"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_hexBinary
void System::Xml::Schema::DatatypeImplementation::_set_c_hexBinary(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_hexBinary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_hexBinary", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ID
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_ID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_ID
void System::Xml::Schema::DatatypeImplementation::_set_c_ID(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_ID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_IDREF
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_IDREF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_IDREF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_IDREF"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_IDREF
void System::Xml::Schema::DatatypeImplementation::_set_c_IDREF(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_IDREF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_IDREF", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_IDREFS
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_IDREFS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_IDREFS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_IDREFS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_IDREFS
void System::Xml::Schema::DatatypeImplementation::_set_c_IDREFS(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_IDREFS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_IDREFS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_int
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_int"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_int
void System::Xml::Schema::DatatypeImplementation::_set_c_int(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_int", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_integer
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_integer"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_integer
void System::Xml::Schema::DatatypeImplementation::_set_c_integer(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_integer", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_language
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_language");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_language"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_language
void System::Xml::Schema::DatatypeImplementation::_set_c_language(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_language");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_language", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_long
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_long() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_long");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_long"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_long
void System::Xml::Schema::DatatypeImplementation::_set_c_long(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_long");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_long", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_month
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_month");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_month"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_month
void System::Xml::Schema::DatatypeImplementation::_set_c_month(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_month");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_month", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_monthDay
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_monthDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_monthDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_monthDay"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_monthDay
void System::Xml::Schema::DatatypeImplementation::_set_c_monthDay(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_monthDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_monthDay", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_Name
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_Name"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_Name
void System::Xml::Schema::DatatypeImplementation::_set_c_Name(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_Name", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NCName
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_NCName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_NCName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_NCName"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NCName
void System::Xml::Schema::DatatypeImplementation::_set_c_NCName(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_NCName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_NCName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_negativeInteger
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_negativeInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_negativeInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_negativeInteger"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_negativeInteger
void System::Xml::Schema::DatatypeImplementation::_set_c_negativeInteger(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_negativeInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_negativeInteger", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NMTOKEN
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_NMTOKEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_NMTOKEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_NMTOKEN"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NMTOKEN
void System::Xml::Schema::DatatypeImplementation::_set_c_NMTOKEN(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_NMTOKEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_NMTOKEN", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NMTOKENS
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_NMTOKENS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_NMTOKENS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_NMTOKENS"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NMTOKENS
void System::Xml::Schema::DatatypeImplementation::_set_c_NMTOKENS(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_NMTOKENS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_NMTOKENS", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_nonNegativeInteger
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_nonNegativeInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_nonNegativeInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_nonNegativeInteger"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_nonNegativeInteger
void System::Xml::Schema::DatatypeImplementation::_set_c_nonNegativeInteger(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_nonNegativeInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_nonNegativeInteger", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_nonPositiveInteger
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_nonPositiveInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_nonPositiveInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_nonPositiveInteger"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_nonPositiveInteger
void System::Xml::Schema::DatatypeImplementation::_set_c_nonPositiveInteger(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_nonPositiveInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_nonPositiveInteger", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_normalizedString
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_normalizedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_normalizedString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_normalizedString"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_normalizedString
void System::Xml::Schema::DatatypeImplementation::_set_c_normalizedString(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_normalizedString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_normalizedString", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NOTATION
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_NOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_NOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_NOTATION"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_NOTATION
void System::Xml::Schema::DatatypeImplementation::_set_c_NOTATION(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_NOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_NOTATION", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_positiveInteger
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_positiveInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_positiveInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_positiveInteger"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_positiveInteger
void System::Xml::Schema::DatatypeImplementation::_set_c_positiveInteger(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_positiveInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_positiveInteger", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_QName
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_QName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_QName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_QName"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_QName
void System::Xml::Schema::DatatypeImplementation::_set_c_QName(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_QName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_QName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_QNameXdr
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_QNameXdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_QNameXdr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_QNameXdr"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_QNameXdr
void System::Xml::Schema::DatatypeImplementation::_set_c_QNameXdr(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_QNameXdr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_QNameXdr", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_short
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_short() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_short");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_short"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_short
void System::Xml::Schema::DatatypeImplementation::_set_c_short(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_short");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_short", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_string
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_string() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_string");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_string"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_string
void System::Xml::Schema::DatatypeImplementation::_set_c_string(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_string");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_string", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_time
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_time"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_time
void System::Xml::Schema::DatatypeImplementation::_set_c_time(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_time", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_timeNoTz
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_timeNoTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_timeNoTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_timeNoTz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_timeNoTz
void System::Xml::Schema::DatatypeImplementation::_set_c_timeNoTz(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_timeNoTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_timeNoTz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_timeTz
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_timeTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_timeTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_timeTz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_timeTz
void System::Xml::Schema::DatatypeImplementation::_set_c_timeTz(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_timeTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_timeTz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_token
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_token");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_token"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_token
void System::Xml::Schema::DatatypeImplementation::_set_c_token(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_token");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_token", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedByte
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_unsignedByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_unsignedByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_unsignedByte"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedByte
void System::Xml::Schema::DatatypeImplementation::_set_c_unsignedByte(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_unsignedByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_unsignedByte", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedInt
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_unsignedInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_unsignedInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_unsignedInt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedInt
void System::Xml::Schema::DatatypeImplementation::_set_c_unsignedInt(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_unsignedInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_unsignedInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedLong
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_unsignedLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_unsignedLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_unsignedLong"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedLong
void System::Xml::Schema::DatatypeImplementation::_set_c_unsignedLong(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_unsignedLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_unsignedLong", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedShort
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_unsignedShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_unsignedShort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_unsignedShort"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_unsignedShort
void System::Xml::Schema::DatatypeImplementation::_set_c_unsignedShort(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_unsignedShort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_unsignedShort", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_uuid
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_uuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_uuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_uuid"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_uuid
void System::Xml::Schema::DatatypeImplementation::_set_c_uuid(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_uuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_uuid", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_year
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_year");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_year"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_year
void System::Xml::Schema::DatatypeImplementation::_set_c_year(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_year");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_year", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_yearMonth
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_yearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_yearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_yearMonth"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_yearMonth
void System::Xml::Schema::DatatypeImplementation::_set_c_yearMonth(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_yearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_yearMonth", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Xml.Schema.DatatypeImplementation c_normalizedStringV1Compat
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_normalizedStringV1Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_normalizedStringV1Compat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_normalizedStringV1Compat"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Xml.Schema.DatatypeImplementation c_normalizedStringV1Compat
void System::Xml::Schema::DatatypeImplementation::_set_c_normalizedStringV1Compat(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_normalizedStringV1Compat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_normalizedStringV1Compat", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Xml.Schema.DatatypeImplementation c_tokenV1Compat
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_tokenV1Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_tokenV1Compat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_tokenV1Compat"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Xml.Schema.DatatypeImplementation c_tokenV1Compat
void System::Xml::Schema::DatatypeImplementation::_set_c_tokenV1Compat(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_tokenV1Compat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_tokenV1Compat", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anyAtomicType
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_anyAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_anyAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_anyAtomicType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_anyAtomicType
void System::Xml::Schema::DatatypeImplementation::_set_c_anyAtomicType(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_anyAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_anyAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dayTimeDuration
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_dayTimeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_dayTimeDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_dayTimeDuration"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_dayTimeDuration
void System::Xml::Schema::DatatypeImplementation::_set_c_dayTimeDuration(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_dayTimeDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_dayTimeDuration", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_untypedAtomicType
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_untypedAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_untypedAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_untypedAtomicType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_untypedAtomicType
void System::Xml::Schema::DatatypeImplementation::_set_c_untypedAtomicType(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_untypedAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_untypedAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation c_yearMonthDuration
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::_get_c_yearMonthDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_yearMonthDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DatatypeImplementation*>("System.Xml.Schema", "DatatypeImplementation", "c_yearMonthDuration"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation c_yearMonthDuration
void System::Xml::Schema::DatatypeImplementation::_set_c_yearMonthDuration(::System::Xml::Schema::DatatypeImplementation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_yearMonthDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_yearMonthDuration", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation[] c_tokenizedTypes
::ArrayW<::System::Xml::Schema::DatatypeImplementation*> System::Xml::Schema::DatatypeImplementation::_get_c_tokenizedTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_tokenizedTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::DatatypeImplementation*>>("System.Xml.Schema", "DatatypeImplementation", "c_tokenizedTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation[] c_tokenizedTypes
void System::Xml::Schema::DatatypeImplementation::_set_c_tokenizedTypes(::ArrayW<::System::Xml::Schema::DatatypeImplementation*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_tokenizedTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_tokenizedTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation[] c_tokenizedTypesXsd
::ArrayW<::System::Xml::Schema::DatatypeImplementation*> System::Xml::Schema::DatatypeImplementation::_get_c_tokenizedTypesXsd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_tokenizedTypesXsd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::DatatypeImplementation*>>("System.Xml.Schema", "DatatypeImplementation", "c_tokenizedTypesXsd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation[] c_tokenizedTypesXsd
void System::Xml::Schema::DatatypeImplementation::_set_c_tokenizedTypesXsd(::ArrayW<::System::Xml::Schema::DatatypeImplementation*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_tokenizedTypesXsd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_tokenizedTypesXsd", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap[] c_XdrTypes
::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*> System::Xml::Schema::DatatypeImplementation::_get_c_XdrTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_XdrTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*>>("System.Xml.Schema", "DatatypeImplementation", "c_XdrTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap[] c_XdrTypes
void System::Xml::Schema::DatatypeImplementation::_set_c_XdrTypes(::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_XdrTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_XdrTypes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap[] c_XsdTypes
::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*> System::Xml::Schema::DatatypeImplementation::_get_c_XsdTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_get_c_XsdTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*>>("System.Xml.Schema", "DatatypeImplementation", "c_XsdTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap[] c_XsdTypes
void System::Xml::Schema::DatatypeImplementation::_set_c_XsdTypes(::ArrayW<::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::_set_c_XsdTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DatatypeImplementation", "c_XsdTypes", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDatatypeVariety variety
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaDatatypeVariety& System::Xml::Schema::DatatypeImplementation::dyn_variety() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::dyn_variety");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "variety"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDatatypeVariety*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.RestrictionFacets restriction
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::RestrictionFacets*& System::Xml::Schema::DatatypeImplementation::dyn_restriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::dyn_restriction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "restriction"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::RestrictionFacets**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DatatypeImplementation baseType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::DatatypeImplementation*& System::Xml::Schema::DatatypeImplementation::dyn_baseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::dyn_baseType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::DatatypeImplementation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlValueConverter valueConverter
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlValueConverter*& System::Xml::Schema::DatatypeImplementation::dyn_valueConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::dyn_valueConverter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueConverter"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlValueConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaType parentSchemaType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaType*& System::Xml::Schema::DatatypeImplementation::dyn_parentSchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::dyn_parentSchemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentSchemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_AnySimpleType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::get_AnySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_AnySimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "get_AnySimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_UntypedAtomicType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::get_UntypedAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_UntypedAtomicType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "get_UntypedAtomicType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_ListValueType
::System::Type* System::Xml::Schema::DatatypeImplementation::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation..cctor
void System::Xml::Schema::DatatypeImplementation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.FromXmlTokenizedType
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::FromXmlTokenizedType(::System::Xml::XmlTokenizedType token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::FromXmlTokenizedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "FromXmlTokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::DatatypeImplementation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.FromTypeName
::System::Xml::Schema::DatatypeImplementation* System::Xml::Schema::DatatypeImplementation::FromTypeName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::FromTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "FromTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::DatatypeImplementation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.StartBuiltinType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::StartBuiltinType(::System::Xml::XmlQualifiedName* qname, ::System::Xml::Schema::XmlSchemaDatatype* dataType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::StartBuiltinType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "StartBuiltinType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname), ::il2cpp_utils::ExtractType(dataType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qname, dataType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.FinishBuiltinType
void System::Xml::Schema::DatatypeImplementation::FinishBuiltinType(::System::Xml::Schema::XmlSchemaSimpleType* derivedType, ::System::Xml::Schema::XmlSchemaSimpleType* baseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::FinishBuiltinType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "FinishBuiltinType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedType), ::il2cpp_utils::ExtractType(baseType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, derivedType, baseType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.CreateBuiltinTypes
void System::Xml::Schema::DatatypeImplementation::CreateBuiltinTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::CreateBuiltinTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "CreateBuiltinTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.GetSimpleTypeFromTypeCode
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::DatatypeImplementation::GetSimpleTypeFromTypeCode(::System::Xml::Schema::XmlTypeCode typeCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::GetSimpleTypeFromTypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation", "GetSimpleTypeFromTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeCode);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.DeriveByList
::System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::DatatypeImplementation::DeriveByList(int minSize, ::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::DeriveByList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveByList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minSize), ::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDatatype*, false>(this, ___internal__method, minSize, schemaType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::DatatypeImplementation::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.GetTypeName
::StringW System::Xml::Schema::DatatypeImplementation::GetTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::GetTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.Compare
int System::Xml::Schema::DatatypeImplementation::Compare(::ArrayW<uint8_t> value1, ::ArrayW<uint8_t> value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::DatatypeImplementation::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_ValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::DatatypeImplementation::get_ValueConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_ValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::DatatypeImplementation::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_ValueType
::System::Type* System::Xml::Schema::DatatypeImplementation::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_Variety
::System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::DatatypeImplementation::get_Variety() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_Variety");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Variety", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDatatypeVariety, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::DatatypeImplementation::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_Restriction
::System::Xml::Schema::RestrictionFacets* System::Xml::Schema::DatatypeImplementation::get_Restriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_Restriction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Restriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::RestrictionFacets*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::DatatypeImplementation::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.IsEqual
bool System::Xml::Schema::DatatypeImplementation::IsEqual(::Il2CppObject* o1, ::Il2CppObject* o2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::IsEqual");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o1), ::il2cpp_utils::ExtractType(o2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o1, o2);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation.ParseValue
::Il2CppObject* System::Xml::Schema::DatatypeImplementation::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::ParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap
#include "System/Xml/Schema/DatatypeImplementation_SchemaDatatypeMap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DatatypeImplementation type
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::DatatypeImplementation*& System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::DatatypeImplementation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 parentIndex
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_parentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::dyn_parentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap.get_Name
::StringW System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap.get_ParentIndex
int System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::get_ParentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::get_ParentIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap.op_Explicit
System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::operator ::System::Xml::Schema::DatatypeImplementation*() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DatatypeImplementation/SchemaDatatypeMap", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::DatatypeImplementation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DatatypeImplementation/System.Xml.Schema.SchemaDatatypeMap.CompareTo
int System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_List
#include "System/Xml/Schema/Datatype_List.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DatatypeImplementation itemType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::DatatypeImplementation*& System::Xml::Schema::Datatype_List::dyn_itemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::dyn_itemType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::DatatypeImplementation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minListSize
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::Datatype_List::dyn_minListSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::dyn_minListSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minListSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_ValueType
::System::Type* System::Xml::Schema::Datatype_List::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_List::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_List::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_List::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_List::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_List::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.Compare
int System::Xml::Schema::Datatype_List::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_List.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_List::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_List::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_union
#include "System/Xml/Schema/Datatype_union.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_union::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_union", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_union::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_union", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_union::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_union", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_union::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_union", "listValueType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType[] types
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>& System::Xml::Schema::Datatype_union::dyn_types() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::dyn_types");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "types"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Datatype_union.HasAtomicMembers
bool System::Xml::Schema::Datatype_union::HasAtomicMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::HasAtomicMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasAtomicMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_union..cctor
void System::Xml::Schema::Datatype_union::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_union::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_union", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_anySimpleType
#include "System/Xml/Schema/Datatype_anySimpleType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_anySimpleType::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_anySimpleType", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_anySimpleType::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anySimpleType", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_anySimpleType::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_anySimpleType", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_anySimpleType::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anySimpleType", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_anySimpleType::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_ValueType
::System::Type* System::Xml::Schema::Datatype_anySimpleType::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_anySimpleType::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_anySimpleType::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_anySimpleType::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_anySimpleType::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType..cctor
void System::Xml::Schema::Datatype_anySimpleType::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_anySimpleType", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_anySimpleType::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.Compare
int System::Xml::Schema::Datatype_anySimpleType::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_anySimpleType::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_anyAtomicType
#include "System/Xml/Schema/Datatype_anyAtomicType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_anyAtomicType.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_anyAtomicType::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyAtomicType::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyAtomicType.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_anyAtomicType::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyAtomicType::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyAtomicType.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_anyAtomicType::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyAtomicType::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_untypedAtomicType
#include "System/Xml/Schema/Datatype_untypedAtomicType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_untypedAtomicType.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_untypedAtomicType::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_untypedAtomicType::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_untypedAtomicType.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_untypedAtomicType::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_untypedAtomicType::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_untypedAtomicType.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_untypedAtomicType::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_untypedAtomicType::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_string
#include "System/Xml/Schema/Datatype_string.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_string.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_string::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_string::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_string::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_string::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_string::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_string::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_boolean
#include "System/Xml/Schema/Datatype_boolean.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_boolean::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_boolean", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_boolean::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_boolean", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_boolean::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_boolean", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_boolean::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_boolean", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_boolean::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_boolean::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_ValueType
::System::Type* System::Xml::Schema::Datatype_boolean::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_boolean::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_boolean::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean..cctor
void System::Xml::Schema::Datatype_boolean::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_boolean", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_boolean::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.Compare
int System::Xml::Schema::Datatype_boolean::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_boolean::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_float
#include "System/Xml/Schema/Datatype_float.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_float::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_float", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_float::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_float", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_float::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_float", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_float::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_float", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_float::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_float::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_ValueType
::System::Type* System::Xml::Schema::Datatype_float::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_float::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_float::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float..cctor
void System::Xml::Schema::Datatype_float::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_float", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_float::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.Compare
int System::Xml::Schema::Datatype_float::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_float::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_double
#include "System/Xml/Schema/Datatype_double.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_double::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_double", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_double::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_double", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_double::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_double", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_double::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_double", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_double::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_double::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_ValueType
::System::Type* System::Xml::Schema::Datatype_double::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_double::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_double::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double..cctor
void System::Xml::Schema::Datatype_double::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_double", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_double::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.Compare
int System::Xml::Schema::Datatype_double::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_double::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_decimal
#include "System/Xml/Schema/Datatype_decimal.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_decimal::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_decimal", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_decimal::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_decimal", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_decimal::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_decimal", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_decimal::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_decimal", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_decimal::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_decimal", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_decimal::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_decimal", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_decimal::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_decimal::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_ValueType
::System::Type* System::Xml::Schema::Datatype_decimal::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_decimal::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_decimal::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal..cctor
void System::Xml::Schema::Datatype_decimal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_decimal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_decimal::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.Compare
int System::Xml::Schema::Datatype_decimal::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_decimal::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_duration
#include "System/Xml/Schema/Datatype_duration.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_duration::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_duration", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_duration::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_duration", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_duration::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_duration", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_duration::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_duration", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_duration::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_duration::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_ValueType
::System::Type* System::Xml::Schema::Datatype_duration::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_duration::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_duration::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration..cctor
void System::Xml::Schema::Datatype_duration::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_duration", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_duration::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.Compare
int System::Xml::Schema::Datatype_duration::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_duration::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_yearMonthDuration
#include "System/Xml/Schema/Datatype_yearMonthDuration.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_yearMonthDuration.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_yearMonthDuration::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_yearMonthDuration::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_yearMonthDuration.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_yearMonthDuration::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_yearMonthDuration::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_dayTimeDuration
#include "System/Xml/Schema/Datatype_dayTimeDuration.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_dayTimeDuration.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_dayTimeDuration::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dayTimeDuration::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dayTimeDuration.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_dayTimeDuration::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dayTimeDuration::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_dateTimeBase
#include "System/Xml/Schema/Datatype_dateTimeBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_dateTimeBase::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_dateTimeBase", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_dateTimeBase::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_dateTimeBase", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_dateTimeBase::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_dateTimeBase", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_dateTimeBase::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_dateTimeBase", "listValueType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XsdDateTimeFlags dateTimeFlags
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XsdDateTimeFlags& System::Xml::Schema::Datatype_dateTimeBase::dyn_dateTimeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::dyn_dateTimeFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dateTimeFlags"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XsdDateTimeFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_dateTimeBase::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_dateTimeBase::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_ValueType
::System::Type* System::Xml::Schema::Datatype_dateTimeBase::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_dateTimeBase::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_dateTimeBase::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase..cctor
void System::Xml::Schema::Datatype_dateTimeBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_dateTimeBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_dateTimeBase::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.Compare
int System::Xml::Schema::Datatype_dateTimeBase::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_dateTimeBase::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_dateTimeNoTimeZone
#include "System/Xml/Schema/Datatype_dateTimeNoTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_dateTimeTimeZone
#include "System/Xml/Schema/Datatype_dateTimeTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_dateTime
#include "System/Xml/Schema/Datatype_dateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_timeNoTimeZone
#include "System/Xml/Schema/Datatype_timeNoTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_timeTimeZone
#include "System/Xml/Schema/Datatype_timeTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_time
#include "System/Xml/Schema/Datatype_time.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_time.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_time::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_time::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_date
#include "System/Xml/Schema/Datatype_date.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_date.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_date::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_date::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_yearMonth
#include "System/Xml/Schema/Datatype_yearMonth.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_yearMonth.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_yearMonth::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_yearMonth::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_year
#include "System/Xml/Schema/Datatype_year.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_year.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_year::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_year::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_monthDay
#include "System/Xml/Schema/Datatype_monthDay.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_monthDay.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_monthDay::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_monthDay::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_day
#include "System/Xml/Schema/Datatype_day.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_day.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_day::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_day::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_month
#include "System/Xml/Schema/Datatype_month.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_month.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_month::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_month::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_hexBinary
#include "System/Xml/Schema/Datatype_hexBinary.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_hexBinary::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_hexBinary", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_hexBinary::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_hexBinary", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_hexBinary::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_hexBinary", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_hexBinary::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_hexBinary", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_hexBinary::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_hexBinary::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_ValueType
::System::Type* System::Xml::Schema::Datatype_hexBinary::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_hexBinary::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_hexBinary::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary..cctor
void System::Xml::Schema::Datatype_hexBinary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_hexBinary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_hexBinary::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.Compare
int System::Xml::Schema::Datatype_hexBinary::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_hexBinary::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_base64Binary
#include "System/Xml/Schema/Datatype_base64Binary.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_base64Binary::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_base64Binary", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_base64Binary::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_base64Binary", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_base64Binary::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_base64Binary", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_base64Binary::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_base64Binary", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_base64Binary::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_base64Binary::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_ValueType
::System::Type* System::Xml::Schema::Datatype_base64Binary::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_base64Binary::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_base64Binary::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary..cctor
void System::Xml::Schema::Datatype_base64Binary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_base64Binary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_base64Binary::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.Compare
int System::Xml::Schema::Datatype_base64Binary::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_base64Binary::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_anyURI
#include "System/Xml/Schema/Datatype_anyURI.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_anyURI::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_anyURI", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_anyURI::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anyURI", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_anyURI::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_anyURI", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_anyURI::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anyURI", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_anyURI::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_anyURI::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_ValueType
::System::Type* System::Xml::Schema::Datatype_anyURI::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_anyURI::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_anyURI::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI..cctor
void System::Xml::Schema::Datatype_anyURI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_anyURI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_anyURI::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.Compare
int System::Xml::Schema::Datatype_anyURI::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_anyURI::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_QName
#include "System/Xml/Schema/Datatype_QName.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_QName::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_QName", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_QName::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_QName", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_QName::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_QName", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_QName::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_QName", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_QName::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_QName::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_QName::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_ValueType
::System::Type* System::Xml::Schema::Datatype_QName::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_QName::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_QName::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName..cctor
void System::Xml::Schema::Datatype_QName::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_QName", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_QName::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_QName::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_normalizedString
#include "System/Xml/Schema/Datatype_normalizedString.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_normalizedString.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_normalizedString::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_normalizedString::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_normalizedString.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_normalizedString::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_normalizedString::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_normalizedStringV1Compat
#include "System/Xml/Schema/Datatype_normalizedStringV1Compat.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_normalizedStringV1Compat.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_normalizedStringV1Compat::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_normalizedStringV1Compat::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_token
#include "System/Xml/Schema/Datatype_token.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_token.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_token::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_token::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_token.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_token::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_token::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_tokenV1Compat
#include "System/Xml/Schema/Datatype_tokenV1Compat.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_tokenV1Compat.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_tokenV1Compat::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_tokenV1Compat::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_language
#include "System/Xml/Schema/Datatype_language.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_language.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_language::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_language::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_NMTOKEN
#include "System/Xml/Schema/Datatype_NMTOKEN.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_NMTOKEN.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_NMTOKEN::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NMTOKEN::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NMTOKEN.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_NMTOKEN::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NMTOKEN::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_Name
#include "System/Xml/Schema/Datatype_Name.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_Name.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_Name::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_Name::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_NCName
#include "System/Xml/Schema/Datatype_NCName.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_NCName.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_NCName::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NCName::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NCName.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_NCName::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NCName::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_ID
#include "System/Xml/Schema/Datatype_ID.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_ID.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_ID::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ID::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_ID.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_ID::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ID::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_IDREF
#include "System/Xml/Schema/Datatype_IDREF.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_IDREF.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_IDREF::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_IDREF::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_IDREF.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_IDREF::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_IDREF::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_ENTITY
#include "System/Xml/Schema/Datatype_ENTITY.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_ENTITY.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_ENTITY::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ENTITY::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_ENTITY.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_ENTITY::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ENTITY::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_NOTATION
#include "System/Xml/Schema/Datatype_NOTATION.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_NOTATION::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_NOTATION", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_NOTATION::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_NOTATION", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_NOTATION::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_NOTATION", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_NOTATION::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_NOTATION", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_NOTATION::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_NOTATION::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_NOTATION::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_ValueType
::System::Type* System::Xml::Schema::Datatype_NOTATION::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_NOTATION::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_NOTATION::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BuiltInWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION..cctor
void System::Xml::Schema::Datatype_NOTATION::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_NOTATION", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_NOTATION::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_NOTATION::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_integer
#include "System/Xml/Schema/Datatype_integer.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_integer.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_integer::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_integer::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_integer.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_integer::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_integer::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_nonPositiveInteger
#include "System/Xml/Schema/Datatype_nonPositiveInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonPositiveInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_nonPositiveInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_nonPositiveInteger::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_nonPositiveInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonPositiveInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_nonPositiveInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger..cctor
void System::Xml::Schema::Datatype_nonPositiveInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_nonPositiveInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_negativeInteger
#include "System/Xml/Schema/Datatype_negativeInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_negativeInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_negativeInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_negativeInteger::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_negativeInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_negativeInteger.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_negativeInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_negativeInteger.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_negativeInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_negativeInteger..cctor
void System::Xml::Schema::Datatype_negativeInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_negativeInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_long
#include "System/Xml/Schema/Datatype_long.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_long::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_long", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_long::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_long", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_long::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_long", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_long::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_long", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_long::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_long", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_long::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_long", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_long::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_long::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_ValueType
::System::Type* System::Xml::Schema::Datatype_long::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_long::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long..cctor
void System::Xml::Schema::Datatype_long::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_long", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.Compare
int System::Xml::Schema::Datatype_long::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_long::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_int
#include "System/Xml/Schema/Datatype_int.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_int::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_int", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_int::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_int", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_int::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_int", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_int::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_int", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_int::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_int", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_int::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_int", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_int::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_int::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_ValueType
::System::Type* System::Xml::Schema::Datatype_int::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_int::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int..cctor
void System::Xml::Schema::Datatype_int::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_int", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.Compare
int System::Xml::Schema::Datatype_int::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_int::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_short
#include "System/Xml/Schema/Datatype_short.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_short::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_short", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_short::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_short", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_short::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_short", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_short::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_short", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_short::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_short", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_short::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_short", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_short::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_short::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_ValueType
::System::Type* System::Xml::Schema::Datatype_short::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_short::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short..cctor
void System::Xml::Schema::Datatype_short::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_short", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.Compare
int System::Xml::Schema::Datatype_short::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_short::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_byte
#include "System/Xml/Schema/Datatype_byte.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_byte::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_byte", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_byte::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_byte", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_byte::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_byte", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_byte::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_byte", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_byte::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_byte", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_byte::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_byte", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_byte::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_byte::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.get_ValueType
::System::Type* System::Xml::Schema::Datatype_byte::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_byte::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte..cctor
void System::Xml::Schema::Datatype_byte::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_byte", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.Compare
int System::Xml::Schema::Datatype_byte::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_byte::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_nonNegativeInteger
#include "System/Xml/Schema/Datatype_nonNegativeInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonNegativeInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonNegativeInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_nonNegativeInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_nonNegativeInteger::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonNegativeInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_nonNegativeInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_nonNegativeInteger.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonNegativeInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonNegativeInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonNegativeInteger.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_nonNegativeInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonNegativeInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonNegativeInteger..cctor
void System::Xml::Schema::Datatype_nonNegativeInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonNegativeInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_nonNegativeInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_unsignedLong
#include "System/Xml/Schema/Datatype_unsignedLong.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_unsignedLong::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedLong", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_unsignedLong::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedLong", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_unsignedLong::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedLong", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_unsignedLong::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedLong", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedLong::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_unsignedLong", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_unsignedLong::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedLong", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedLong::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_unsignedLong::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.get_ValueType
::System::Type* System::Xml::Schema::Datatype_unsignedLong::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_unsignedLong::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong..cctor
void System::Xml::Schema::Datatype_unsignedLong::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_unsignedLong", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.Compare
int System::Xml::Schema::Datatype_unsignedLong::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_unsignedLong::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_unsignedInt
#include "System/Xml/Schema/Datatype_unsignedInt.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_unsignedInt::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedInt", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_unsignedInt::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedInt", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_unsignedInt::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedInt", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_unsignedInt::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedInt", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedInt::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_unsignedInt", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_unsignedInt::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedInt", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedInt::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_unsignedInt::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.get_ValueType
::System::Type* System::Xml::Schema::Datatype_unsignedInt::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_unsignedInt::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt..cctor
void System::Xml::Schema::Datatype_unsignedInt::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_unsignedInt", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.Compare
int System::Xml::Schema::Datatype_unsignedInt::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_unsignedInt::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_unsignedShort
#include "System/Xml/Schema/Datatype_unsignedShort.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_unsignedShort::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedShort", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_unsignedShort::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedShort", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_unsignedShort::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedShort", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_unsignedShort::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedShort", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedShort::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_unsignedShort", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_unsignedShort::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedShort", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedShort::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_unsignedShort::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.get_ValueType
::System::Type* System::Xml::Schema::Datatype_unsignedShort::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_unsignedShort::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort..cctor
void System::Xml::Schema::Datatype_unsignedShort::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_unsignedShort", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.Compare
int System::Xml::Schema::Datatype_unsignedShort::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_unsignedShort::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_unsignedByte
#include "System/Xml/Schema/Datatype_unsignedByte.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_unsignedByte::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedByte", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_unsignedByte::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedByte", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_unsignedByte::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedByte", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_unsignedByte::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedByte", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedByte::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_unsignedByte", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_unsignedByte::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedByte", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedByte::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_unsignedByte::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.get_ValueType
::System::Type* System::Xml::Schema::Datatype_unsignedByte::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_unsignedByte::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte..cctor
void System::Xml::Schema::Datatype_unsignedByte::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_unsignedByte", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.Compare
int System::Xml::Schema::Datatype_unsignedByte::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_unsignedByte::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_positiveInteger
#include "System/Xml/Schema/Datatype_positiveInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_positiveInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_positiveInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_positiveInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_positiveInteger::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_positiveInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_positiveInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_positiveInteger.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_positiveInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_positiveInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacetsChecker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_positiveInteger.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_positiveInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_positiveInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_positiveInteger..cctor
void System::Xml::Schema::Datatype_positiveInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_positiveInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_positiveInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_doubleXdr
#include "System/Xml/Schema/Datatype_doubleXdr.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_doubleXdr.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_doubleXdr::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_doubleXdr::ParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_floatXdr
#include "System/Xml/Schema/Datatype_floatXdr.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_floatXdr.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_floatXdr::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_floatXdr::ParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_QNameXdr
#include "System/Xml/Schema/Datatype_QNameXdr.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_QNameXdr::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_QNameXdr", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_QNameXdr::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_QNameXdr", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_QNameXdr::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_QNameXdr", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_QNameXdr::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_QNameXdr", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_QNameXdr.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_QNameXdr::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QNameXdr.get_ValueType
::System::Type* System::Xml::Schema::Datatype_QNameXdr::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QNameXdr.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_QNameXdr::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QNameXdr..cctor
void System::Xml::Schema::Datatype_QNameXdr::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_QNameXdr", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QNameXdr.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_QNameXdr::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::ParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_ENUMERATION
#include "System/Xml/Schema/Datatype_ENUMERATION.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_ENUMERATION.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_ENUMERATION::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ENUMERATION::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_char
#include "System/Xml/Schema/Datatype_char.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_char::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_char", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_char::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_char", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_char::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_char", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_char::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_char", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_char.get_ValueType
::System::Type* System::Xml::Schema::Datatype_char::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_char.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_char::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_char..cctor
void System::Xml::Schema::Datatype_char::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_char", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_char.Compare
int System::Xml::Schema::Datatype_char::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_char.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_char::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::ParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated method: System.Xml.Schema.Datatype_char.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_char::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_fixed
#include "System/Xml/Schema/Datatype_fixed.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_fixed.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_fixed::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_fixed::ParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated method: System.Xml.Schema.Datatype_fixed.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_fixed::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_fixed::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_uuid
#include "System/Xml/Schema/Datatype_uuid.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_uuid::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_uuid", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_uuid::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_uuid", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_uuid::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_uuid", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_uuid::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_uuid", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid.get_ValueType
::System::Type* System::Xml::Schema::Datatype_uuid::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::get_ValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_uuid::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ListValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid..cctor
void System::Xml::Schema::Datatype_uuid::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_uuid", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid.Compare
int System::Xml::Schema::Datatype_uuid::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_uuid::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::ParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_uuid::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::TryParseValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.DtdValidator
#include "System/Xml/Schema/DtdValidator.hpp"
// Including type: System.Xml.Schema.DtdValidator/System.Xml.Schema.NamespaceManager
#include "System/Xml/Schema/DtdValidator_NamespaceManager.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Xml.IDtdParserAdapter
#include "System/Xml/IDtdParserAdapter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.DtdValidator/System.Xml.Schema.NamespaceManager namespaceManager
::System::Xml::Schema::DtdValidator::NamespaceManager* System::Xml::Schema::DtdValidator::_get_namespaceManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::_get_namespaceManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DtdValidator::NamespaceManager*>("System.Xml.Schema", "DtdValidator", "namespaceManager"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.DtdValidator/System.Xml.Schema.NamespaceManager namespaceManager
void System::Xml::Schema::DtdValidator::_set_namespaceManager(::System::Xml::Schema::DtdValidator::NamespaceManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::_set_namespaceManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DtdValidator", "namespaceManager", value));
}
// Autogenerated method: System.Xml.Schema.DtdValidator..cctor
void System::Xml::Schema::DtdValidator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DtdValidator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.SetDefaultTypedValue
void System::Xml::Schema::DtdValidator::SetDefaultTypedValue(::System::Xml::Schema::SchemaAttDef* attdef, ::System::Xml::IDtdParserAdapter* readerAdapter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::SetDefaultTypedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DtdValidator", "SetDefaultTypedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attdef), ::il2cpp_utils::ExtractType(readerAdapter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attdef, readerAdapter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.DtdValidator/System.Xml.Schema.NamespaceManager
#include "System/Xml/Schema/DtdValidator_NamespaceManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.DtdValidator/System.Xml.Schema.NamespaceManager.LookupNamespace
::StringW System::Xml::Schema::DtdValidator::NamespaceManager::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::NamespaceManager::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.RestrictionFacets
#include "System/Xml/Schema/RestrictionFacets.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckLexicalFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckLexicalFacets(ByRef<::StringW> parseString, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckLexicalFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckLexicalFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parseString), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, byref(parseString), datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::System::Decimal value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(int64_t value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(int value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(int16_t value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::System::DateTime value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(double value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(float value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::StringW value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::ArrayW<uint8_t> value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::System::TimeSpan value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::System::Xml::XmlQualifiedName* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckWhitespaceFacets
void System::Xml::Schema::FacetsChecker::CheckWhitespaceFacets(ByRef<::StringW> s, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckWhitespaceFacets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckWhitespaceFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(datatype)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(s), datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckPatternFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckPatternFacets(::System::Xml::Schema::RestrictionFacets* restriction, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckPatternFacets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckPatternFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(restriction), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, restriction, value);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.MatchEnumeration
bool System::Xml::Schema::FacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.Power
::System::Decimal System::Xml::Schema::FacetsChecker::Power(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::Power");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "FacetsChecker", "Power", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Numeric10FacetsChecker
#include "System/Xml/Schema/Numeric10FacetsChecker.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] signs
::ArrayW<::Il2CppChar> System::Xml::Schema::Numeric10FacetsChecker::_get_signs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::_get_signs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Xml.Schema", "Numeric10FacetsChecker", "signs"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] signs
void System::Xml::Schema::Numeric10FacetsChecker::_set_signs(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::_set_signs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Numeric10FacetsChecker", "signs", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal maxValue
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Xml::Schema::Numeric10FacetsChecker::dyn_maxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::dyn_maxValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxValue"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal minValue
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Xml::Schema::Numeric10FacetsChecker::dyn_minValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::dyn_minValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minValue"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker..cctor
void System::Xml::Schema::Numeric10FacetsChecker::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Numeric10FacetsChecker", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.MatchEnumeration
bool System::Xml::Schema::Numeric10FacetsChecker::MatchEnumeration(::System::Decimal value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlValueConverter* valueConverter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(valueConverter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, valueConverter);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckTotalAndFractionDigits
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckTotalAndFractionDigits(::System::Decimal value, int totalDigits, int fractionDigits, bool checkTotal, bool checkFraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckTotalAndFractionDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckTotalAndFractionDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(totalDigits), ::il2cpp_utils::ExtractType(fractionDigits), ::il2cpp_utils::ExtractType(checkTotal), ::il2cpp_utils::ExtractType(checkFraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, totalDigits, fractionDigits, checkTotal, checkFraction);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets(::System::Decimal value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets(int64_t value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets(int value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets(int16_t value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.MatchEnumeration
bool System::Xml::Schema::Numeric10FacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Numeric2FacetsChecker
#include "System/Xml/Schema/Numeric2FacetsChecker.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Numeric2FacetsChecker.MatchEnumeration
bool System::Xml::Schema::Numeric2FacetsChecker::MatchEnumeration(double value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlValueConverter* valueConverter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric2FacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(valueConverter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, valueConverter);
}
// Autogenerated method: System.Xml.Schema.Numeric2FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric2FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets(double value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric2FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets(float value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric2FacetsChecker.MatchEnumeration
bool System::Xml::Schema::Numeric2FacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric2FacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.DurationFacetsChecker
#include "System/Xml/Schema/DurationFacetsChecker.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.DurationFacetsChecker.MatchEnumeration
bool System::Xml::Schema::DurationFacetsChecker::MatchEnumeration(::System::TimeSpan value, ::System::Collections::ArrayList* enumeration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DurationFacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration);
}
// Autogenerated method: System.Xml.Schema.DurationFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::DurationFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DurationFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.DurationFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::DurationFacetsChecker::CheckValueFacets(::System::TimeSpan value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DurationFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.DurationFacetsChecker.MatchEnumeration
bool System::Xml::Schema::DurationFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DurationFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.DateTimeFacetsChecker
#include "System/Xml/Schema/DateTimeFacetsChecker.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.DateTimeFacetsChecker.MatchEnumeration
bool System::Xml::Schema::DateTimeFacetsChecker::MatchEnumeration(::System::DateTime value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DateTimeFacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated method: System.Xml.Schema.DateTimeFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::DateTimeFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DateTimeFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.DateTimeFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::DateTimeFacetsChecker::CheckValueFacets(::System::DateTime value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DateTimeFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.DateTimeFacetsChecker.MatchEnumeration
bool System::Xml::Schema::DateTimeFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DateTimeFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.StringFacetsChecker
#include "System/Xml/Schema/StringFacetsChecker.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex languagePattern
::System::Text::RegularExpressions::Regex* System::Xml::Schema::StringFacetsChecker::_get_languagePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::_get_languagePattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Regex*>("System.Xml.Schema", "StringFacetsChecker", "languagePattern"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex languagePattern
void System::Xml::Schema::StringFacetsChecker::_set_languagePattern(::System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::_set_languagePattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "StringFacetsChecker", "languagePattern", value));
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.get_LanguagePattern
::System::Text::RegularExpressions::Regex* System::Xml::Schema::StringFacetsChecker::get_LanguagePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::get_LanguagePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "StringFacetsChecker", "get_LanguagePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Regex*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::StringFacetsChecker::CheckValueFacets(::StringW value, ::System::Xml::Schema::XmlSchemaDatatype* datatype, bool verifyUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::CheckValueFacets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype), ::il2cpp_utils::ExtractType(verifyUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype, verifyUri);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.MatchEnumeration
bool System::Xml::Schema::StringFacetsChecker::MatchEnumeration(::StringW value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.CheckBuiltInFacets
::System::Exception* System::Xml::Schema::StringFacetsChecker::CheckBuiltInFacets(::StringW s, ::System::Xml::Schema::XmlTypeCode typeCode, bool verifyUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::CheckBuiltInFacets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckBuiltInFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(typeCode), ::il2cpp_utils::ExtractType(verifyUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, typeCode, verifyUri);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::StringFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::StringFacetsChecker::CheckValueFacets(::StringW value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.MatchEnumeration
bool System::Xml::Schema::StringFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.QNameFacetsChecker
#include "System/Xml/Schema/QNameFacetsChecker.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.QNameFacetsChecker.MatchEnumeration
bool System::Xml::Schema::QNameFacetsChecker::MatchEnumeration(::System::Xml::XmlQualifiedName* value, ::System::Collections::ArrayList* enumeration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QNameFacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration);
}
// Autogenerated method: System.Xml.Schema.QNameFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::QNameFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QNameFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.QNameFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::QNameFacetsChecker::CheckValueFacets(::System::Xml::XmlQualifiedName* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QNameFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.QNameFacetsChecker.MatchEnumeration
bool System::Xml::Schema::QNameFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QNameFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.MiscFacetsChecker
#include "System/Xml/Schema/MiscFacetsChecker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.BinaryFacetsChecker
#include "System/Xml/Schema/BinaryFacetsChecker.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.BinaryFacetsChecker.MatchEnumeration
bool System::Xml::Schema::BinaryFacetsChecker::MatchEnumeration(::ArrayW<uint8_t> value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BinaryFacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated method: System.Xml.Schema.BinaryFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::BinaryFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BinaryFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.BinaryFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::BinaryFacetsChecker::CheckValueFacets(::ArrayW<uint8_t> value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BinaryFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.BinaryFacetsChecker.MatchEnumeration
bool System::Xml::Schema::BinaryFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BinaryFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.ListFacetsChecker
#include "System/Xml/Schema/ListFacetsChecker.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.ListFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::ListFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ListFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.ListFacetsChecker.MatchEnumeration
bool System::Xml::Schema::ListFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ListFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.UnionFacetsChecker
#include "System/Xml/Schema/UnionFacetsChecker.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.UnionFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::UnionFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::UnionFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.UnionFacetsChecker.MatchEnumeration
bool System::Xml::Schema::UnionFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::UnionFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.IXmlSchemaInfo
#include "System/Xml/Schema/IXmlSchemaInfo.hpp"
// Including type: System.Xml.Schema.XmlSchemaValidity
#include "System/Xml/Schema/XmlSchemaValidity.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.XmlSchemaElement
#include "System/Xml/Schema/XmlSchemaElement.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttribute
#include "System/Xml/Schema/XmlSchemaAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_Validity
::System::Xml::Schema::XmlSchemaValidity System::Xml::Schema::IXmlSchemaInfo::get_Validity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_Validity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Validity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaValidity, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_IsDefault
bool System::Xml::Schema::IXmlSchemaInfo::get_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_IsDefault");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_IsNil
bool System::Xml::Schema::IXmlSchemaInfo::get_IsNil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_IsNil");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_MemberType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::IXmlSchemaInfo::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_MemberType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_SchemaType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::IXmlSchemaInfo::get_SchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_SchemaType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_SchemaElement
::System::Xml::Schema::XmlSchemaElement* System::Xml::Schema::IXmlSchemaInfo::get_SchemaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_SchemaElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_SchemaAttribute
::System::Xml::Schema::XmlSchemaAttribute* System::Xml::Schema::IXmlSchemaInfo::get_SchemaAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_SchemaAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAttribute*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.NamespaceList
#include "System/Xml/Schema/NamespaceList.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.NamespaceList/System.Xml.Schema.ListType type
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::NamespaceList::ListType& System::Xml::Schema::NamespaceList::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::NamespaceList::ListType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable set
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::NamespaceList::dyn_set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::dyn_set");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "set"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String targetNamespace
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::NamespaceList::dyn_targetNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::dyn_targetNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetNamespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.get_Type
::System::Xml::Schema::NamespaceList::ListType System::Xml::Schema::NamespaceList::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::NamespaceList::ListType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.get_Excluded
::StringW System::Xml::Schema::NamespaceList::get_Excluded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::get_Excluded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Excluded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.get_Enumerate
::System::Collections::ICollection* System::Xml::Schema::NamespaceList::get_Enumerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::get_Enumerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Enumerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.Allows
bool System::Xml::Schema::NamespaceList::Allows(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::Allows");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Allows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.Allows
bool System::Xml::Schema::NamespaceList::Allows(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::Allows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Allows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.ToString
::StringW System::Xml::Schema::NamespaceList::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
