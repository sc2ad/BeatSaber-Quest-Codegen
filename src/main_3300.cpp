// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyConnectionController/LobbyConnectionState
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState None
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState None
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_None(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connecting
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connecting
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connecting(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connected
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connected
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connected(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState ConnectionFailed
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_ConnectionFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_ConnectionFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "ConnectionFailed"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState ConnectionFailed
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_ConnectionFailed(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_ConnectionFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "ConnectionFailed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyConnectionController/LobbyConnectionType
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType None
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType None
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_None(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyHost
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyHost"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyHost
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyHost(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyHost", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyClient
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyClient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyClient"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyClient
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyClient(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyClient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyClient", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType QuickPlay
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_QuickPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_QuickPlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "QuickPlay"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType QuickPlay
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_QuickPlay(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_QuickPlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "QuickPlay", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerModeSettings
#include "GlobalNamespace/MultiplayerModeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 createServerPlayersCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerModeSettings::dyn_createServerPlayersCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSettings::dyn_createServerPlayersCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createServerPlayersCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDifficultyMask quickPlayBeatmapDifficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficultyMask& GlobalNamespace::MultiplayerModeSettings::dyn_quickPlayBeatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSettings::dyn_quickPlayBeatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlayBeatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficultyMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String quickPlaySongPackMaskSerializedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MultiplayerModeSettings::dyn_quickPlaySongPackMaskSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSettings::dyn_quickPlaySongPackMaskSerializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlaySongPackMaskSerializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean quickPlayEnableLevelSelection
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MultiplayerModeSettings::dyn_quickPlayEnableLevelSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSettings::dyn_quickPlayEnableLevelSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlayEnableLevelSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerUnavailableReason
#include "GlobalNamespace/MultiplayerUnavailableReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason NetworkUnreachable
::GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_NetworkUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_get_NetworkUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "NetworkUnreachable"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason NetworkUnreachable
void GlobalNamespace::MultiplayerUnavailableReason::_set_NetworkUnreachable(::GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_set_NetworkUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "NetworkUnreachable", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason UpdateRequired
::GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_UpdateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_get_UpdateRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "UpdateRequired"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason UpdateRequired
void GlobalNamespace::MultiplayerUnavailableReason::_set_UpdateRequired(::GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_set_UpdateRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "UpdateRequired", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason ServerOffline
::GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_ServerOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_get_ServerOffline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "ServerOffline"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason ServerOffline
void GlobalNamespace::MultiplayerUnavailableReason::_set_ServerOffline(::GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_set_ServerOffline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "ServerOffline", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason MaintenanceMode
::GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_MaintenanceMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_get_MaintenanceMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "MaintenanceMode"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason MaintenanceMode
void GlobalNamespace::MultiplayerUnavailableReason::_set_MaintenanceMode(::GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_set_MaintenanceMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "MaintenanceMode", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerUnavailableReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerUnavailableReasonMethods
#include "GlobalNamespace/MultiplayerUnavailableReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: MultiplayerUnavailableReason
#include "GlobalNamespace/MultiplayerUnavailableReason.hpp"
// Including type: MultiplayerStatusData
#include "GlobalNamespace/MultiplayerStatusData.hpp"
// Including type: Polyglot.Language
#include "Polyglot/Language.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x111D604
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableServerOffline
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableServerOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableServerOffline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableServerOffline"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableServerOffline
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableServerOffline(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableServerOffline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableServerOffline", value));
}
// [LocalizationKeyAttribute] Offset: 0x111D614
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableUpdateRequired
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableUpdateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableUpdateRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUpdateRequired"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableUpdateRequired
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableUpdateRequired(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableUpdateRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUpdateRequired", value));
}
// [LocalizationKeyAttribute] Offset: 0x111D624
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableMaintenanceMode
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableMaintenanceMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableMaintenanceMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableMaintenanceMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableMaintenanceMode
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableMaintenanceMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableMaintenanceMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableMaintenanceMode", value));
}
// [LocalizationKeyAttribute] Offset: 0x111D634
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableTryAgain
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableTryAgain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableTryAgain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableTryAgain"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableTryAgain
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableTryAgain(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableTryAgain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableTryAgain", value));
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.LocalizedKey
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::LocalizedKey(::GlobalNamespace::MultiplayerUnavailableReason multiplayerUnavailableReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "LocalizedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerUnavailableReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, multiplayerUnavailableReason);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.ErrorCode
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::ErrorCode(::GlobalNamespace::MultiplayerUnavailableReason multiplayerUnavailableReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::ErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "ErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerUnavailableReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, multiplayerUnavailableReason);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.TryGetMultiplayerUnavailableReason
bool GlobalNamespace::MultiplayerUnavailableReasonMethods::TryGetMultiplayerUnavailableReason(::GlobalNamespace::MultiplayerStatusData* data, ByRef<::GlobalNamespace::MultiplayerUnavailableReason> reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::TryGetMultiplayerUnavailableReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "TryGetMultiplayerUnavailableReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::MultiplayerUnavailableReason&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, byref(reason));
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.GetLocalizedMessage
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::GetLocalizedMessage(::GlobalNamespace::MultiplayerStatusData* data, ::Polyglot::Language language) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::GetLocalizedMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "GetLocalizedMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(language)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, language);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.VersionLessThan
bool GlobalNamespace::MultiplayerUnavailableReasonMethods::VersionLessThan(::StringW currentVersion, ::StringW minVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::VersionLessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "VersionLessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentVersion), ::il2cpp_utils::ExtractType(minVersion)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentVersion, minVersion);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPackMaskModelSO
#include "GlobalNamespace/SongPackMaskModelSO.hpp"
// Including type: SongPackMaskModelSO/SongPackDataType
#include "GlobalNamespace/SongPackMaskModelSO_SongPackDataType.hpp"
// Including type: SongPackMaskModelSO/SongPackMaskItem
#include "GlobalNamespace/SongPackMaskModelSO_SongPackMaskItem.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _defaultSongPackMaskItems
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::SongPackMaskModelSO::dyn__defaultSongPackMaskItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__defaultSongPackMaskItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultSongPackMaskItems"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPackMaskModelSO/SongPackMaskItem[] _customSongPackMaskItems
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>& GlobalNamespace::SongPackMaskModelSO::dyn__customSongPackMaskItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__customSongPackMaskItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customSongPackMaskItems"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionSO _ostAndExtrasCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackCollectionSO*& GlobalNamespace::SongPackMaskModelSO::dyn__ostAndExtrasCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__ostAndExtrasCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ostAndExtrasCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionSO _dlcCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackCollectionSO*& GlobalNamespace::SongPackMaskModelSO::dyn__dlcCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__dlcCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dlcCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.Language _currentLocalizedLanguage
[[deprecated("Use field access instead!")]] ::Polyglot::Language& GlobalNamespace::SongPackMaskModelSO::dyn__currentLocalizedLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__currentLocalizedLanguage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentLocalizedLanguage"))->offset;
  return *reinterpret_cast<::Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.ValueTuple`2<System.String,System.Boolean>> _songPackSerializedNameToLocalizedNameDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::ValueTuple_2<::StringW, bool>>*& GlobalNamespace::SongPackMaskModelSO::dyn__songPackSerializedNameToLocalizedNameDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__songPackSerializedNameToLocalizedNameDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackSerializedNameToLocalizedNameDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::ValueTuple_2<::StringW, bool>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,SongPackMask> _songPackSerializedNameToMaskDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::SongPackMask>*& GlobalNamespace::SongPackMaskModelSO::dyn__songPackSerializedNameToMaskDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__songPackSerializedNameToMaskDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackSerializedNameToMaskDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::SongPackMask>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<SongPackMask,System.String> _songPackMaskToSerializedNameDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::SongPackMask, ::StringW>*& GlobalNamespace::SongPackMaskModelSO::dyn__songPackMaskToSerializedNameDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__songPackMaskToSerializedNameDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMaskToSerializedNameDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::SongPackMask, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPackMaskModelSO.get_defaultSongPackMaskItems
::System::Collections::Generic::List_1<::StringW>* GlobalNamespace::SongPackMaskModelSO::get_defaultSongPackMaskItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::get_defaultSongPackMaskItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultSongPackMaskItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO.get_customSongPackMaskItems
::ArrayW<::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*> GlobalNamespace::SongPackMaskModelSO::get_customSongPackMaskItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::get_customSongPackMaskItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customSongPackMaskItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO.get_ostAndExtrasCollection
::GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::SongPackMaskModelSO::get_ostAndExtrasCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::get_ostAndExtrasCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ostAndExtrasCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelPackCollectionSO*, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO.get_dlcCollection
::GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::SongPackMaskModelSO::get_dlcCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::get_dlcCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dlcCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelPackCollectionSO*, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO.ToLocalizedName
::StringW GlobalNamespace::SongPackMaskModelSO::ToLocalizedName(::StringW serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToLocalizedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLocalizedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, serializedName);
}
// Autogenerated method: SongPackMaskModelSO.ToLocalizedName
::StringW GlobalNamespace::SongPackMaskModelSO::ToLocalizedName(::StringW serializedName, ByRef<bool> plural) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToLocalizedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLocalizedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, serializedName, byref(plural));
}
// Autogenerated method: SongPackMaskModelSO.ToSongPackMask
bool GlobalNamespace::SongPackMaskModelSO::ToSongPackMask(::StringW serializedName, ByRef<::GlobalNamespace::SongPackMask> songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToSongPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::SongPackMask&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, serializedName, byref(songPackMask));
}
// Autogenerated method: SongPackMaskModelSO.ToSongPackMask
::GlobalNamespace::SongPackMask GlobalNamespace::SongPackMaskModelSO::ToSongPackMask(::StringW serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToSongPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(this, ___internal__method, serializedName);
}
// Autogenerated method: SongPackMaskModelSO.ToSerializedName
bool GlobalNamespace::SongPackMaskModelSO::ToSerializedName(::GlobalNamespace::SongPackMask songPackMask, ByRef<::StringW> serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, songPackMask, byref(serializedName));
}
// Autogenerated method: SongPackMaskModelSO.ToSerializedName
::StringW GlobalNamespace::SongPackMaskModelSO::ToSerializedName(::GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, songPackMask);
}
// Autogenerated method: SongPackMaskModelSO.LazyInit
void GlobalNamespace::SongPackMaskModelSO::LazyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::LazyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPackMaskModelSO/SongPackDataType
#include "GlobalNamespace/SongPackMaskModelSO_SongPackDataType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPack
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SingleBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SingleBeatmapLevelPack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "SingleBeatmapLevelPack"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPack
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SingleBeatmapLevelPack(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SingleBeatmapLevelPack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "SingleBeatmapLevelPack", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPacks
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultipleBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultipleBeatmapLevelPacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "MultipleBeatmapLevelPacks"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPacks
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultipleBeatmapLevelPacks(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultipleBeatmapLevelPacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "MultipleBeatmapLevelPacks", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType SinglePreviewBeatmapLevelPack
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SinglePreviewBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SinglePreviewBeatmapLevelPack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "SinglePreviewBeatmapLevelPack"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType SinglePreviewBeatmapLevelPack
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SinglePreviewBeatmapLevelPack(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SinglePreviewBeatmapLevelPack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "SinglePreviewBeatmapLevelPack", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType MultiplePreviewBeatmapLevelPacks
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultiplePreviewBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultiplePreviewBeatmapLevelPacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "MultiplePreviewBeatmapLevelPacks"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType MultiplePreviewBeatmapLevelPacks
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultiplePreviewBeatmapLevelPacks(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultiplePreviewBeatmapLevelPacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "MultiplePreviewBeatmapLevelPacks", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPackCollection
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SingleBeatmapLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SingleBeatmapLevelPackCollection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "SingleBeatmapLevelPackCollection"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPackCollection
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SingleBeatmapLevelPackCollection(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SingleBeatmapLevelPackCollection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "SingleBeatmapLevelPackCollection", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPackCollections
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultipleBeatmapLevelPackCollections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultipleBeatmapLevelPackCollections");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "MultipleBeatmapLevelPackCollections"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPackCollections
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultipleBeatmapLevelPackCollections(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultipleBeatmapLevelPackCollections");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "MultipleBeatmapLevelPackCollections", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SongPackMaskModelSO::SongPackDataType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPackMaskModelSO/SongPackMaskItem
#include "GlobalNamespace/SongPackMaskModelSO_SongPackMaskItem.hpp"
// Including type: SongPackMaskModelSO/SongPackMaskItem/<>c
#include "GlobalNamespace/SongPackMaskModelSO_SongPackMaskItem_--c.hpp"
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SongPackMaskModelSO/SongPackDataType _type
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMaskModelSO::SongPackDataType& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelPackSO _beatmapLevelPack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackSO*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__beatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__beatmapLevelPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelPack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PreviewBeatmapLevelPackSO _previewBeatmapLevelPack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PreviewBeatmapLevelPackSO*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__previewBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__previewBeatmapLevelPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewBeatmapLevelPack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PreviewBeatmapLevelPackSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String _serializedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__serializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelPackCollectionSO _levelPackCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackCollectionSO*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__levelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__levelPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelPackCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapLevelPackSO> _beatmapLevelPacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelPackSO*>*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__beatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__beatmapLevelPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelPacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelPackSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PreviewBeatmapLevelPackSO> _previewBeatmapLevelPacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PreviewBeatmapLevelPackSO*>*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__previewBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__previewBeatmapLevelPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewBeatmapLevelPacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PreviewBeatmapLevelPackSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapLevelPackCollectionSO> _levelPackCollections
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelPackCollectionSO*>*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__levelPackCollections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__levelPackCollections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelPackCollections"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelPackCollectionSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem.get_serializedName
::StringW GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_serializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem.get_songPackMask
::GlobalNamespace::SongPackMask GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_songPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_songPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem.get_containsMultiplePacks
bool GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_containsMultiplePacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_containsMultiplePacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_containsMultiplePacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPackMaskModelSO/SongPackMaskItem/<>c
#include "GlobalNamespace/SongPackMaskModelSO_SongPackMaskItem_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly SongPackMaskModelSO/SongPackMaskItem/<>c <>9
::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly SongPackMaskModelSO/SongPackMaskItem/<>c <>9
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9(::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__11_0
::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__11_0
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_0(::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<BeatmapLevelPackSO,System.String> <>9__11_1
::System::Func_2<::GlobalNamespace::BeatmapLevelPackSO*, ::StringW>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::BeatmapLevelPackSO*, ::StringW>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<BeatmapLevelPackSO,System.String> <>9__11_1
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_1(::System::Func_2<::GlobalNamespace::BeatmapLevelPackSO*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<PreviewBeatmapLevelPackSO,System.String> <>9__11_2
::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelPackSO*, ::StringW>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelPackSO*, ::StringW>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<PreviewBeatmapLevelPackSO,System.String> <>9__11_2
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_2(::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelPackSO*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__11_4
::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_4")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__11_4
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_4(::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_4", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<BeatmapLevelPackCollectionSO,System.Collections.Generic.IEnumerable`1<System.String>> <>9__11_3
::System::Func_2<::GlobalNamespace::BeatmapLevelPackCollectionSO*, ::System::Collections::Generic::IEnumerable_1<::StringW>*>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::BeatmapLevelPackCollectionSO*, ::System::Collections::Generic::IEnumerable_1<::StringW>*>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<BeatmapLevelPackCollectionSO,System.Collections.Generic.IEnumerable`1<System.String>> <>9__11_3
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_3(::System::Func_2<::GlobalNamespace::BeatmapLevelPackCollectionSO*, ::System::Collections::Generic::IEnumerable_1<::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_3", value)));
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c..cctor
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPackMaskModelSO/SongPackMaskItem/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_0
::StringW GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_0(::GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pack);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_1
::StringW GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_1(::GlobalNamespace::BeatmapLevelPackSO* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pack);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_2
::StringW GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_2(::GlobalNamespace::PreviewBeatmapLevelPackSO* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pack);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_3
::System::Collections::Generic::IEnumerable_1<::StringW>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_3(::GlobalNamespace::BeatmapLevelPackCollectionSO* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method, collection);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_4
::StringW GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_4(::GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPackMasksModel
#include "GlobalNamespace/SongPackMasksModel.hpp"
// Including type: SongPackMaskModelSO
#include "GlobalNamespace/SongPackMaskModelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly SongPackMaskModelSO _songPackMaskModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMaskModelSO*& GlobalNamespace::SongPackMasksModel::dyn__songPackMaskModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMasksModel::dyn__songPackMaskModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMaskModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMaskModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPackMask _allSongPackMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMask& GlobalNamespace::SongPackMasksModel::dyn__allSongPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMasksModel::dyn__allSongPackMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allSongPackMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPackMasksModel.GetAllSongsMask
::GlobalNamespace::SongPackMask GlobalNamespace::SongPackMasksModel::GetAllSongsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMasksModel::GetAllSongsMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllSongsMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMasksModel.GetSongPackMaskText
::StringW GlobalNamespace::SongPackMasksModel::GetSongPackMaskText(ByRef<::GlobalNamespace::SongPackMask> songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMasksModel::GetSongPackMaskText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSongPackMaskText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, byref(songPackMask));
}
// Autogenerated method: SongPackMasksModel.GetSongPackMaskText
::StringW GlobalNamespace::SongPackMasksModel::GetSongPackMaskText(ByRef<::GlobalNamespace::SongPackMask> songPackMask, ByRef<bool> plural) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMasksModel::GetSongPackMaskText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSongPackMaskText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, byref(songPackMask), byref(plural));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AuthenticationTokenPlatformExtensions
#include "GlobalNamespace/AuthenticationTokenPlatformExtensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AuthenticationTokenPlatformExtensions.ToAuthenticationTokenPlatform
::GlobalNamespace::AuthenticationToken::Platform GlobalNamespace::AuthenticationTokenPlatformExtensions::ToAuthenticationTokenPlatform(::GlobalNamespace::UserInfo::Platform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationTokenPlatformExtensions::ToAuthenticationTokenPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthenticationTokenPlatformExtensions", "ToAuthenticationTokenPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AuthenticationToken::Platform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, platform);
}
// Autogenerated method: AuthenticationTokenPlatformExtensions.ToUserInfoPlatform
::GlobalNamespace::UserInfo::Platform GlobalNamespace::AuthenticationTokenPlatformExtensions::ToUserInfoPlatform(::GlobalNamespace::AuthenticationToken::Platform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationTokenPlatformExtensions::ToUserInfoPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthenticationTokenPlatformExtensions", "ToUserInfoPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UserInfo::Platform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, platform);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseNetworkPlayerModel
#include "GlobalNamespace/BaseNetworkPlayerModel.hpp"
// Including type: BaseNetworkPlayerModel/PartyConfig
#include "GlobalNamespace/BaseNetworkPlayerModel_PartyConfig.hpp"
// Including type: BaseNetworkPlayerModel/<GetPartyPlayers>d__55
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetPartyPlayers-d__55.hpp"
// Including type: BaseNetworkPlayerModel/<GetOtherPlayers>d__56
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetOtherPlayers-d__56.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
// Including type: INetworkPlayerModelPartyConfig`1
#include "GlobalNamespace/INetworkPlayerModelPartyConfig_1.hpp"
// Including type: IConnectionManager
#include "GlobalNamespace/IConnectionManager.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ConnectedPlayerManager _connectedPlayerManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ConnectedPlayerManager*& GlobalNamespace::BaseNetworkPlayerModel::dyn__connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn__connectedPlayerManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ConnectedPlayerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayerModel _partyManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkPlayerModel*& GlobalNamespace::BaseNetworkPlayerModel::dyn__partyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn__partyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayServerConfiguration _configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::BaseNetworkPlayerModel::dyn__configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn__configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSelectionMask _selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::BaseNetworkPlayerModel::dyn__selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn__selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <discoveryEnabled>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BaseNetworkPlayerModel::dyn_$discoveryEnabled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn_$discoveryEnabled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<discoveryEnabled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> connectedPlayerManagerCreatedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>*& GlobalNamespace::BaseNetworkPlayerModel::dyn_connectedPlayerManagerCreatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn_connectedPlayerManagerCreatedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectedPlayerManagerCreatedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> connectedPlayerManagerDestroyedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>*& GlobalNamespace::BaseNetworkPlayerModel::dyn_connectedPlayerManagerDestroyedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn_connectedPlayerManagerDestroyedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectedPlayerManagerDestroyedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseNetworkPlayerModel.get_connectedPlayerManager
::GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::BaseNetworkPlayerModel::get_connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_connectedPlayerManager");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_partyManager
::GlobalNamespace::INetworkPlayerModel* GlobalNamespace::BaseNetworkPlayerModel::get_partyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_partyManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::INetworkPlayerModel*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isConnectedOrConnecting
bool GlobalNamespace::BaseNetworkPlayerModel::get_isConnectedOrConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_isConnectedOrConnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectedOrConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isConnectionOwner
bool GlobalNamespace::BaseNetworkPlayerModel::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_isConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_discoveryEnabled
bool GlobalNamespace::BaseNetworkPlayerModel::get_discoveryEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.set_discoveryEnabled
void GlobalNamespace::BaseNetworkPlayerModel::set_discoveryEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::set_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.get_hasNetworkingFailed
bool GlobalNamespace::BaseNetworkPlayerModel::get_hasNetworkingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_hasNetworkingFailed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasNetworkingFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_currentPartySize
int GlobalNamespace::BaseNetworkPlayerModel::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::BaseNetworkPlayerModel::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::BaseNetworkPlayerModel::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_partyPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::get_partyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_partyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.INetworkPlayerModel.get_otherPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::INetworkPlayerModel_get_otherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::INetworkPlayerModel.get_otherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "INetworkPlayerModel.get_otherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_localPlayerIsPartyOwner
bool GlobalNamespace::BaseNetworkPlayerModel::get_localPlayerIsPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_localPlayerIsPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isServer
bool GlobalNamespace::BaseNetworkPlayerModel::get_isServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_isServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isClient
bool GlobalNamespace::BaseNetworkPlayerModel::get_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_isClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.add_connectedPlayerManagerCreatedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerCreatedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerCreatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerManagerCreatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_connectedPlayerManagerCreatedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerCreatedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerCreatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerManagerCreatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_connectedPlayerManagerDestroyedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerDestroyedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerDestroyedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerManagerDestroyedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_connectedPlayerManagerDestroyedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerDestroyedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerDestroyedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerManagerDestroyedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_partyChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_partyChangedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_partyChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_partyChangedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_partySizeChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_partySizeChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_partySizeChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_partySizeChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_joinRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_joinRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_joinRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_joinRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_inviteRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_inviteRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_inviteRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_inviteRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.GetPartyPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::GetPartyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::GetPartyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.GetOtherPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::GetOtherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::GetOtherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOtherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.ConnectionFailed
void GlobalNamespace::BaseNetworkPlayerModel::ConnectionFailed(::GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::ConnectionFailed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerConnected
void GlobalNamespace::BaseNetworkPlayerModel::PlayerConnected(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PlayerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerDisconnected
void GlobalNamespace::BaseNetworkPlayerModel::PlayerDisconnected(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PlayerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerStateChanged
void GlobalNamespace::BaseNetworkPlayerModel::PlayerStateChanged(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PlayerStateChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.ConnectedPlayerManagerChanged
void GlobalNamespace::BaseNetworkPlayerModel::ConnectedPlayerManagerChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::ConnectedPlayerManagerChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectedPlayerManagerChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerOrderChanged
void GlobalNamespace::BaseNetworkPlayerModel::PlayerOrderChanged(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PlayerOrderChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerOrderChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.PartySizeChanged
void GlobalNamespace::BaseNetworkPlayerModel::PartySizeChanged(int currentPartySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PartySizeChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PartySizeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPartySize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentPartySize);
}
// Autogenerated method: BaseNetworkPlayerModel.Connected
void GlobalNamespace::BaseNetworkPlayerModel::Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::Connected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.Disconnected
void GlobalNamespace::BaseNetworkPlayerModel::Disconnected(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::Disconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: BaseNetworkPlayerModel.DestroyPartyConnection
void GlobalNamespace::BaseNetworkPlayerModel::DestroyPartyConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::DestroyPartyConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPartyConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.DestroyConnectedPlayerManager
void GlobalNamespace::BaseNetworkPlayerModel::DestroyConnectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::DestroyConnectedPlayerManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyConnectedPlayerManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.Log
void GlobalNamespace::BaseNetworkPlayerModel::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: BaseNetworkPlayerModel.OnDestroy
void GlobalNamespace::BaseNetworkPlayerModel::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.Update
void GlobalNamespace::BaseNetworkPlayerModel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseNetworkPlayerModel/PartyConfig
#include "GlobalNamespace/BaseNetworkPlayerModel_PartyConfig.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public INetworkPlayerModel partyManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkPlayerModel*& GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_partyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_partyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partyManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseNetworkPlayerModel/<GetPartyPlayers>d__55
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetPartyPlayers-d__55.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayer <>2__current
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkPlayer*& GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current
::GlobalNamespace::INetworkPlayer* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_Collections_Generic_IEnumerator$INetworkPlayer$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::INetworkPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.IDisposable.Dispose
void GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.MoveNext
bool GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.Collections.IEnumerator.Reset
void GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_Collections_Generic_IEnumerable$INetworkPlayer$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseNetworkPlayerModel/<GetOtherPlayers>d__56
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetOtherPlayers-d__56.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayer <>2__current
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkPlayer*& GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current
::GlobalNamespace::INetworkPlayer* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_Collections_Generic_IEnumerator$INetworkPlayer$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::INetworkPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.IDisposable.Dispose
void GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.MoveNext
bool GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.Collections.IEnumerator.Reset
void GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_Collections_Generic_IEnumerable$INetworkPlayer$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameLiftNetworkPlayerModel
#include "GlobalNamespace/GameLiftNetworkPlayerModel.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: BGNet.Core.GameLift.IGameLiftPlayerSessionProvider
#include "BGNet/Core/GameLift/IGameLiftPlayerSessionProvider.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: GameLiftConnectionManager/ConnectToServerParams
#include "GlobalNamespace/GameLiftConnectionManager_ConnectToServerParams.hpp"
// Including type: GameLiftConnectionManager/StartClientParams
#include "GlobalNamespace/GameLiftConnectionManager_StartClientParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BGNet.Core.GameLift.IGameLiftPlayerSessionProvider _gameLiftPlayerSessionProvider
[[deprecated("Use field access instead!")]] ::BGNet::Core::GameLift::IGameLiftPlayerSessionProvider*& GlobalNamespace::GameLiftNetworkPlayerModel::dyn__gameLiftPlayerSessionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::dyn__gameLiftPlayerSessionProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameLiftPlayerSessionProvider"))->offset;
  return *reinterpret_cast<::BGNet::Core::GameLift::IGameLiftPlayerSessionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameLiftConnectionManager/ConnectToServerParams _cachedConnectToServerParams
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameLiftConnectionManager::ConnectToServerParams*& GlobalNamespace::GameLiftNetworkPlayerModel::dyn__cachedConnectToServerParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::dyn__cachedConnectToServerParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedConnectToServerParams"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameLiftConnectionManager::ConnectToServerParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameLiftConnectionManager/StartClientParams _cachedStartClientParams
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameLiftConnectionManager::StartClientParams*& GlobalNamespace::GameLiftNetworkPlayerModel::dyn__cachedStartClientParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::dyn__cachedStartClientParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedStartClientParams"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameLiftConnectionManager::StartClientParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameLiftNetworkPlayerModel.GetConnectToServerParams
::GlobalNamespace::IConnectionInitParams_1<::GlobalNamespace::GameLiftConnectionManager*>* GlobalNamespace::GameLiftNetworkPlayerModel::GetConnectToServerParams(::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::StringW secret, ::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::GetConnectToServerParams");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectToServerParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectionInitParams_1<::GlobalNamespace::GameLiftConnectionManager*>*, false>(this, ___internal__method, selectionMask, configuration, secret, code);
}
// Autogenerated method: GameLiftNetworkPlayerModel.GetStartClientParams
::GlobalNamespace::IConnectionInitParams_1<::GlobalNamespace::GameLiftConnectionManager*>* GlobalNamespace::GameLiftNetworkPlayerModel::GetStartClientParams(::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::GetStartClientParams");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStartClientParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectionInitParams_1<::GlobalNamespace::GameLiftConnectionManager*>*, false>(this, ___internal__method, selectionMask, configuration);
}
// Autogenerated method: GameLiftNetworkPlayerModel.get_secret
::StringW GlobalNamespace::GameLiftNetworkPlayerModel::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::get_secret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftNetworkPlayerModel.get_code
::StringW GlobalNamespace::GameLiftNetworkPlayerModel::get_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::get_code");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftNetworkPlayerModel.get_partyOwnerId
::StringW GlobalNamespace::GameLiftNetworkPlayerModel::get_partyOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::get_partyOwnerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyOwnerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftNetworkPlayerModel.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::GameLiftNetworkPlayerModel::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftNetworkPlayerModel.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::GameLiftNetworkPlayerModel::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftNetworkPlayerModel.Update
void GlobalNamespace::GameLiftNetworkPlayerModel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftNetworkPlayerModel.RefreshPublicServers
void GlobalNamespace::GameLiftNetworkPlayerModel::RefreshPublicServers(::GlobalNamespace::BeatmapLevelSelectionMask localSelectionMask, ::GlobalNamespace::GameplayServerConfiguration localConfiguration, ::System::Action_1<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PublicServerInfo>*>* onSuccess, ::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::RefreshPublicServers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshPublicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localSelectionMask), ::il2cpp_utils::ExtractType(localConfiguration), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localSelectionMask, localConfiguration, onSuccess, onFailure);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: UnifiedNetworkPlayerModel/ActiveNetworkPlayerModelType
#include "GlobalNamespace/UnifiedNetworkPlayerModel_ActiveNetworkPlayerModelType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IUnifiedNetworkPlayerModel.get_enableLocalNetwork
bool GlobalNamespace::IUnifiedNetworkPlayerModel::get_enableLocalNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::get_enableLocalNetwork");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableLocalNetwork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.set_enableLocalNetwork
void GlobalNamespace::IUnifiedNetworkPlayerModel::set_enableLocalNetwork(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::set_enableLocalNetwork");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableLocalNetwork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_publicServers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::IUnifiedNetworkPlayerModel::get_publicServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::get_publicServers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_publicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_localNetworkPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::IUnifiedNetworkPlayerModel::get_localNetworkPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::get_localNetworkPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localNetworkPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_secret
::StringW GlobalNamespace::IUnifiedNetworkPlayerModel::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::get_secret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_code
::StringW GlobalNamespace::IUnifiedNetworkPlayerModel::get_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::get_code");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.add_partyRefreshingEvent
void GlobalNamespace::IUnifiedNetworkPlayerModel::add_partyRefreshingEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::add_partyRefreshingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyRefreshingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.remove_partyRefreshingEvent
void GlobalNamespace::IUnifiedNetworkPlayerModel::remove_partyRefreshingEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::remove_partyRefreshingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyRefreshingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.SetServerFilter
void GlobalNamespace::IUnifiedNetworkPlayerModel::SetServerFilter(::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::SetServerFilter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetServerFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectionMask, configuration);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.ResetMasterServerReachability
void GlobalNamespace::IUnifiedNetworkPlayerModel::ResetMasterServerReachability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::ResetMasterServerReachability");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetMasterServerReachability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.SetActiveNetworkPlayerModelType
void GlobalNamespace::IUnifiedNetworkPlayerModel::SetActiveNetworkPlayerModelType(::GlobalNamespace::UnifiedNetworkPlayerModel_ActiveNetworkPlayerModelType activeNetworkPlayerModelType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::SetActiveNetworkPlayerModelType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveNetworkPlayerModelType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeNetworkPlayerModelType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeNetworkPlayerModelType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkDiscoveryManager
#include "GlobalNamespace/LocalNetworkDiscoveryManager.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LocalNetworkDiscoveryManager/BroadcastPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_BroadcastPacket.hpp"
// Including type: LocalNetworkDiscoveryManager/JoinRequestPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRequestPacket.hpp"
// Including type: LocalNetworkDiscoveryManager/JoinResponsePacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinResponsePacket.hpp"
// Including type: LocalNetworkDiscoveryManager/InviteRequestPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRequestPacket.hpp"
// Including type: LocalNetworkDiscoveryManager/InviteResponsePacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteResponsePacket.hpp"
// Including type: LocalNetworkDiscoveryManager/PeerUpdatedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_PeerUpdatedDelegate.hpp"
// Including type: LocalNetworkDiscoveryManager/JoinRequestedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRequestedDelegate.hpp"
// Including type: LocalNetworkDiscoveryManager/JoinRespondedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRespondedDelegate.hpp"
// Including type: LocalNetworkDiscoveryManager/InviteRequestedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRequestedDelegate.hpp"
// Including type: LocalNetworkDiscoveryManager/InviteRespondedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRespondedDelegate.hpp"
// Including type: LiteNetLib.NetManager
#include "LiteNetLib/NetManager.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: LiteNetLib.NetPacketReader
#include "LiteNetLib/NetPacketReader.hpp"
// Including type: LiteNetLib.UnconnectedMessageType
#include "LiteNetLib/UnconnectedMessageType.hpp"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.DisconnectInfo
#include "LiteNetLib/DisconnectInfo.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kBroadcastInterval
float GlobalNamespace::LocalNetworkDiscoveryManager::_get_kBroadcastInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::_get_kBroadcastInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LocalNetworkDiscoveryManager", "kBroadcastInterval"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kBroadcastInterval
void GlobalNamespace::LocalNetworkDiscoveryManager::_set_kBroadcastInterval(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::_set_kBroadcastInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager", "kBroadcastInterval", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kSignature
uint GlobalNamespace::LocalNetworkDiscoveryManager::_get_kSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::_get_kSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "LocalNetworkDiscoveryManager", "kSignature"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kSignature
void GlobalNamespace::LocalNetworkDiscoveryManager::_set_kSignature(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::_set_kSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager", "kSignature", value));
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager/PeerUpdatedDelegate peerUpdatedEvent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn_peerUpdatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn_peerUpdatedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "peerUpdatedEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager/JoinRequestedDelegate joinRequestedEvent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn_joinRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn_joinRequestedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinRequestedEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager/JoinRespondedDelegate joinRespondedEvent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn_joinRespondedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn_joinRespondedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinRespondedEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager/InviteRequestedDelegate inviteRequestedEvent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn_inviteRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn_inviteRequestedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inviteRequestedEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager/InviteRespondedDelegate inviteRespondedEvent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn_inviteRespondedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn_inviteRespondedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inviteRespondedEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLib.NetManager _netManager
[[deprecated("Use field access instead!")]] ::LiteNetLib::NetManager*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn__netManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn__netManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_netManager"))->offset;
  return *reinterpret_cast<::LiteNetLib::NetManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly NetworkPacketSerializer`2<LocalNetworkDiscoveryManager/PacketType,System.Net.IPEndPoint> _packetSerializer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkPacketSerializer_2<::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType, ::System::Net::IPEndPoint*>*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn__packetSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn__packetSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetSerializer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkPacketSerializer_2<::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType, ::System::Net::IPEndPoint*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataWriter _netDataWriter
[[deprecated("Use field access instead!")]] ::LiteNetLib::Utils::NetDataWriter*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn__netDataWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn__netDataWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_netDataWriter"))->offset;
  return *reinterpret_cast<::LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LocalNetworkDiscoveryManager/BroadcastPacket _broadcastPacket
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn__broadcastPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn__broadcastPacket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_broadcastPacket"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _discoveryPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalNetworkDiscoveryManager::dyn__discoveryPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn__discoveryPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_discoveryPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkDiscoveryManager::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _enableBroadcasting
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkDiscoveryManager::dyn__enableBroadcasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn__enableBroadcasting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enableBroadcasting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastBroadcastTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LocalNetworkDiscoveryManager::dyn__lastBroadcastTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn__lastBroadcastTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastBroadcastTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_userId
::StringW GlobalNamespace::LocalNetworkDiscoveryManager::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::get_userId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_userName
::StringW GlobalNamespace::LocalNetworkDiscoveryManager::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::get_userName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_isPartyOwner
bool GlobalNamespace::LocalNetworkDiscoveryManager::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::get_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_isPartyOwner
void GlobalNamespace::LocalNetworkDiscoveryManager::set_isPartyOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::set_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_currentPartySize
int GlobalNamespace::LocalNetworkDiscoveryManager::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::get_currentPartySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_currentPartySize
void GlobalNamespace::LocalNetworkDiscoveryManager::set_currentPartySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::set_currentPartySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::LocalNetworkDiscoveryManager::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::get_configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_configuration
void GlobalNamespace::LocalNetworkDiscoveryManager::set_configuration(::GlobalNamespace::GameplayServerConfiguration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::set_configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::LocalNetworkDiscoveryManager::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::get_selectionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_selectionMask
void GlobalNamespace::LocalNetworkDiscoveryManager::set_selectionMask(::GlobalNamespace::BeatmapLevelSelectionMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::set_selectionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_enableBroadcasting
bool GlobalNamespace::LocalNetworkDiscoveryManager::get_enableBroadcasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::get_enableBroadcasting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableBroadcasting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_enableBroadcasting
void GlobalNamespace::LocalNetworkDiscoveryManager::set_enableBroadcasting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::set_enableBroadcasting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableBroadcasting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_peerUpdatedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_peerUpdatedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::add_peerUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_peerUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_peerUpdatedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_peerUpdatedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::remove_peerUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_peerUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_joinRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_joinRequestedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::add_joinRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_joinRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_joinRequestedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::remove_joinRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_joinRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_joinRespondedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::add_joinRespondedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRespondedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_joinRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_joinRespondedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::remove_joinRespondedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRespondedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_inviteRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_inviteRequestedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::add_inviteRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_inviteRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_inviteRequestedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::remove_inviteRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_inviteRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_inviteRespondedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::add_inviteRespondedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRespondedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_inviteRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_inviteRespondedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::remove_inviteRespondedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRespondedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.Init
void GlobalNamespace::LocalNetworkDiscoveryManager::Init(int discoveryPort, ::StringW initUserId, ::StringW initUserName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(discoveryPort), ::il2cpp_utils::ExtractType(initUserId), ::il2cpp_utils::ExtractType(initUserName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, discoveryPort, initUserId, initUserName);
}
// Autogenerated method: LocalNetworkDiscoveryManager.OnEnable
void GlobalNamespace::LocalNetworkDiscoveryManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.OnDisable
void GlobalNamespace::LocalNetworkDiscoveryManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.Update
void GlobalNamespace::LocalNetworkDiscoveryManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.SendJoinRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::SendJoinRequest(::System::Net::IPAddress* ip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::SendJoinRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ip);
}
// Autogenerated method: LocalNetworkDiscoveryManager.SendJoinResponse
void GlobalNamespace::LocalNetworkDiscoveryManager::SendJoinResponse(::System::Net::IPAddress* ip, ::StringW secret, int multiplayerPort, bool blocked, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::SendJoinResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ip), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(blocked), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ip, secret, multiplayerPort, blocked, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkDiscoveryManager.SendInviteRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::SendInviteRequest(::System::Net::IPAddress* ip, ::StringW secret, int multiplayerPort, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::SendInviteRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ip), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ip, secret, multiplayerPort, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkDiscoveryManager.SendInviteResponse
void GlobalNamespace::LocalNetworkDiscoveryManager::SendInviteResponse(::System::Net::IPAddress* ip, bool accepted, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::SendInviteResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ip), ::il2cpp_utils::ExtractType(accepted), ::il2cpp_utils::ExtractType(blocked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ip, accepted, blocked);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnNetworkReceiveUnconnected(::System::Net::IPEndPoint* remoteEndPoint, ::LiteNetLib::NetPacketReader* reader, ::LiteNetLib::UnconnectedMessageType messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(messageType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteEndPoint, reader, messageType);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnConnectionRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnConnectionRequest(::LiteNetLib::ConnectionRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnConnectionRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnConnectionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnNetworkError
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnNetworkError(::System::Net::IPEndPoint* endPoint, ::System::Net::Sockets::SocketError socketErrorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnNetworkError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(socketErrorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, endPoint, socketErrorCode);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnNetworkLatencyUpdate
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnNetworkLatencyUpdate(::LiteNetLib::NetPeer* peer, int latency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnNetworkLatencyUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkLatencyUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(latency)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer, latency);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnPeerConnected
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnPeerConnected(::LiteNetLib::NetPeer* peer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnPeerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnPeerDisconnected
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnPeerDisconnected(::LiteNetLib::NetPeer* peer, ::LiteNetLib::DisconnectInfo disconnectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnPeerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(disconnectInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer, disconnectInfo);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnNetworkReceive
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnNetworkReceive(::LiteNetLib::NetPeer* peer, ::LiteNetLib::NetPacketReader* reader, ::LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnNetworkReceive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer, reader, deliveryMethod);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__55_0
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__55_0(::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket* packet, ::System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__55_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__55_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__55_1
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__55_1(::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket* packet, ::System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__55_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__55_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__55_2
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__55_2(::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket* packet, ::System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__55_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__55_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__55_3
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__55_3(::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket* packet, ::System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__55_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__55_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__55_4
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__55_4(::GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket* packet, ::System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__55_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__55_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkDiscoveryManager/PacketType
#include "GlobalNamespace/LocalNetworkDiscoveryManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType Broadcast
::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_Broadcast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_Broadcast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "Broadcast"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType Broadcast
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_Broadcast(::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_Broadcast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "Broadcast", value));
}
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType JoinRequest
::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_JoinRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_JoinRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "JoinRequest"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType JoinRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_JoinRequest(::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_JoinRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "JoinRequest", value));
}
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType JoinResponse
::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_JoinResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_JoinResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "JoinResponse"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType JoinResponse
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_JoinResponse(::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_JoinResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "JoinResponse", value));
}
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType InviteRequest
::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_InviteRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_InviteRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "InviteRequest"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType InviteRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_InviteRequest(::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_InviteRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "InviteRequest", value));
}
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType InviteResponse
::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_InviteResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_InviteResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "InviteResponse"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType InviteResponse
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_InviteResponse(::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_InviteResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "InviteResponse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkDiscoveryManager/BroadcastPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_BroadcastPacket.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 version
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentPartySize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_currentPartySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPartySize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isPartyOwner
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_isPartyOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPartyOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkDiscoveryManager/BroadcastPacket.Serialize
void GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LocalNetworkDiscoveryManager/BroadcastPacket.Deserialize
void GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkDiscoveryManager/JoinRequestPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRequestPacket.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRequestPacket.Serialize
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRequestPacket.Deserialize
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkDiscoveryManager/JoinResponsePacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinResponsePacket.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String secret
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 multiplayerPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_multiplayerPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multiplayerPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean blocked
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_blocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_blocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isPartyOwner
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_isPartyOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPartyOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinResponsePacket.Serialize
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinResponsePacket.Deserialize
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkDiscoveryManager/InviteRequestPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRequestPacket.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String secret
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 multiplayerPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_multiplayerPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multiplayerPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isPartyOwner
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_isPartyOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPartyOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRequestPacket.Serialize
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRequestPacket.Deserialize
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkDiscoveryManager/InviteResponsePacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteResponsePacket.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean accepted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::dyn_accepted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::dyn_accepted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "accepted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean blocked
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::dyn_blocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::dyn_blocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteResponsePacket.Serialize
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteResponsePacket.Deserialize
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/PeerUpdatedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_PeerUpdatedDelegate.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkDiscoveryManager/PeerUpdatedDelegate.Invoke
void GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::Invoke(::StringW userId, ::System::Net::IPAddress* remoteEndPoint, ::StringW userName, int currentPartySize, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(currentPartySize), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, remoteEndPoint, userName, currentPartySize, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkDiscoveryManager/PeerUpdatedDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::BeginInvoke(::StringW userId, ::System::Net::IPAddress* remoteEndPoint, ::StringW userName, int currentPartySize, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(currentPartySize), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, remoteEndPoint, userName, currentPartySize, isPartyOwner, selectionMask, configuration, callback, object);
}
// Autogenerated method: LocalNetworkDiscoveryManager/PeerUpdatedDelegate.EndInvoke
void GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/JoinRequestedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRequestedDelegate.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRequestedDelegate.Invoke
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::Invoke(::StringW userId, ::System::Net::IPAddress* remoteEndPoint, ::StringW userName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, remoteEndPoint, userName);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRequestedDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::BeginInvoke(::StringW userId, ::System::Net::IPAddress* remoteEndPoint, ::StringW userName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, remoteEndPoint, userName, callback, object);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRequestedDelegate.EndInvoke
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/JoinRespondedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRespondedDelegate.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRespondedDelegate.Invoke
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::Invoke(::StringW userId, ::StringW secret, int multiplayerPort, bool blocked, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(blocked), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, secret, multiplayerPort, blocked, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRespondedDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::BeginInvoke(::StringW userId, ::StringW secret, int multiplayerPort, bool blocked, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(blocked), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, secret, multiplayerPort, blocked, isPartyOwner, selectionMask, configuration, callback, object);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRespondedDelegate.EndInvoke
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/InviteRequestedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRequestedDelegate.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRequestedDelegate.Invoke
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::Invoke(::StringW userId, ::System::Net::IPAddress* remoteEndPoint, ::StringW userName, ::StringW secret, int multiplayerPort, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, remoteEndPoint, userName, secret, multiplayerPort, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRequestedDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::BeginInvoke(::StringW userId, ::System::Net::IPAddress* remoteEndPoint, ::StringW userName, ::StringW secret, int multiplayerPort, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, remoteEndPoint, userName, secret, multiplayerPort, isPartyOwner, selectionMask, configuration, callback, object);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRequestedDelegate.EndInvoke
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/InviteRespondedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRespondedDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRespondedDelegate.Invoke
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::Invoke(::StringW userId, bool accepted, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(accepted), ::il2cpp_utils::ExtractType(blocked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, accepted, blocked);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRespondedDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::BeginInvoke(::StringW userId, bool accepted, bool blocked, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(accepted), ::il2cpp_utils::ExtractType(blocked), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, accepted, blocked, callback, object);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRespondedDelegate.EndInvoke
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkPlayerModel
#include "GlobalNamespace/LocalNetworkPlayerModel.hpp"
// Including type: LocalNetworkPlayerModel/LocalNetworkPlayer
#include "GlobalNamespace/LocalNetworkPlayerModel_LocalNetworkPlayer.hpp"
// Including type: LocalNetworkPlayerModel/CreatePartyConfig
#include "GlobalNamespace/LocalNetworkPlayerModel_CreatePartyConfig.hpp"
// Including type: LocalNetworkPlayerModel/<Start>d__41
#include "GlobalNamespace/LocalNetworkPlayerModel_-Start-d__41.hpp"
// Including type: LocalNetworkDiscoveryManager
#include "GlobalNamespace/LocalNetworkDiscoveryManager.hpp"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
// Including type: BasicConnectionRequestHandler
#include "GlobalNamespace/BasicConnectionRequestHandler.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: LiteNetLibConnectionManager
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: INetworkPlayerModelPartyConfig`1
#include "GlobalNamespace/INetworkPlayerModelPartyConfig_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager _discoveryManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkDiscoveryManager*& GlobalNamespace::LocalNetworkPlayerModel::dyn__discoveryManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__discoveryManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_discoveryManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkDiscoveryManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IPlatformUserModel _platformUserModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPlatformUserModel*& GlobalNamespace::LocalNetworkPlayerModel::dyn__platformUserModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__platformUserModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformUserModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPlatformUserModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly INetworkConfig _networkConfig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkConfig*& GlobalNamespace::LocalNetworkPlayerModel::dyn__networkConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__networkConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkConfig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<LocalNetworkPlayerModel/LocalNetworkPlayer> _partyPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*>*& GlobalNamespace::LocalNetworkPlayerModel::dyn__partyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__partyPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<LocalNetworkPlayerModel/LocalNetworkPlayer> _otherPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*>*& GlobalNamespace::LocalNetworkPlayerModel::dyn__otherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__otherPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_otherPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkPlayerModel/LocalNetworkPlayer _localPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*& GlobalNamespace::LocalNetworkPlayerModel::dyn__localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__localPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _networkingFailed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::dyn__networkingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__networkingFailed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkingFailed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _partyEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::dyn__partyEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__partyEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayerModel _partyManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkPlayerModel*& GlobalNamespace::LocalNetworkPlayerModel::dyn__partyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__partyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BasicConnectionRequestHandler _connectionRequestHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BasicConnectionRequestHandler*& GlobalNamespace::LocalNetworkPlayerModel::dyn__connectionRequestHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__connectionRequestHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionRequestHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicConnectionRequestHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> partySizeChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<int>*& GlobalNamespace::LocalNetworkPlayerModel::dyn_partySizeChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn_partySizeChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partySizeChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> partyChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>*& GlobalNamespace::LocalNetworkPlayerModel::dyn_partyChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn_partyChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partyChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayer> joinRequestedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayer*>*& GlobalNamespace::LocalNetworkPlayerModel::dyn_joinRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn_joinRequestedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinRequestedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayer> inviteRequestedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayer*>*& GlobalNamespace::LocalNetworkPlayerModel::dyn_inviteRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn_inviteRequestedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inviteRequestedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkPlayerModel.get_canInvitePlayers
bool GlobalNamespace::LocalNetworkPlayerModel::get_canInvitePlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::get_canInvitePlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canInvitePlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_hasConnectedPeers
bool GlobalNamespace::LocalNetworkPlayerModel::get_hasConnectedPeers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::get_hasConnectedPeers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasConnectedPeers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_otherPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::get_otherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::get_otherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_otherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_liteNetLibConnectionManager
::GlobalNamespace::LiteNetLibConnectionManager* GlobalNamespace::LocalNetworkPlayerModel::get_liteNetLibConnectionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::get_liteNetLibConnectionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_liteNetLibConnectionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LiteNetLibConnectionManager*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.TryGetPlayer
bool GlobalNamespace::LocalNetworkPlayerModel::TryGetPlayer(::StringW userId, ByRef<::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*> player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::TryGetPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, userId, byref(player));
}
// Autogenerated method: LocalNetworkPlayerModel.GetPlayer
::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* GlobalNamespace::LocalNetworkPlayerModel::GetPlayer(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::GetPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated method: LocalNetworkPlayerModel.RefreshLocalPlayer
void GlobalNamespace::LocalNetworkPlayerModel::RefreshLocalPlayer(bool forcePlayersChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::RefreshLocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshLocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forcePlayersChanged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, forcePlayersChanged);
}
// Autogenerated method: LocalNetworkPlayerModel.HandlePeerUpdate
void GlobalNamespace::LocalNetworkPlayerModel::HandlePeerUpdate(::StringW userId, ::System::Net::IPAddress* ipAddress, ::StringW encryptedUserName, int currentPartySize, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::HandlePeerUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePeerUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(ipAddress), ::il2cpp_utils::ExtractType(encryptedUserName), ::il2cpp_utils::ExtractType(currentPartySize), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, ipAddress, encryptedUserName, currentPartySize, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkPlayerModel.SendJoinRequest
void GlobalNamespace::LocalNetworkPlayerModel::SendJoinRequest(::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::SendJoinRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: LocalNetworkPlayerModel.HandleJoinRequest
void GlobalNamespace::LocalNetworkPlayerModel::HandleJoinRequest(::StringW userId, ::System::Net::IPAddress* ipAddress, ::StringW encryptedUserName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::HandleJoinRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(ipAddress), ::il2cpp_utils::ExtractType(encryptedUserName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, ipAddress, encryptedUserName);
}
// Autogenerated method: LocalNetworkPlayerModel.SendJoinResponse
void GlobalNamespace::LocalNetworkPlayerModel::SendJoinResponse(::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player, bool allowJoin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::SendJoinResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(allowJoin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, allowJoin);
}
// Autogenerated method: LocalNetworkPlayerModel.HandleJoinResponse
void GlobalNamespace::LocalNetworkPlayerModel::HandleJoinResponse(::StringW id, ::StringW secret, int multiplayerPort, bool blocked, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::HandleJoinResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(blocked), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, secret, multiplayerPort, blocked, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkPlayerModel.SendInviteRequest
void GlobalNamespace::LocalNetworkPlayerModel::SendInviteRequest(::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::SendInviteRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: LocalNetworkPlayerModel.HandleInviteRequest
void GlobalNamespace::LocalNetworkPlayerModel::HandleInviteRequest(::StringW userId, ::System::Net::IPAddress* ipAddress, ::StringW encryptedUserName, ::StringW secret, int multiplayerPort, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::HandleInviteRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInviteRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(ipAddress), ::il2cpp_utils::ExtractType(encryptedUserName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, ipAddress, encryptedUserName, secret, multiplayerPort, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkPlayerModel.SendInviteResponse
void GlobalNamespace::LocalNetworkPlayerModel::SendInviteResponse(::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player, bool acceptInvite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::SendInviteResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(acceptInvite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, acceptInvite);
}
// Autogenerated method: LocalNetworkPlayerModel.HandleInviteResponse
void GlobalNamespace::LocalNetworkPlayerModel::HandleInviteResponse(::StringW userId, bool accepted, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::HandleInviteResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(accepted), ::il2cpp_utils::ExtractType(blocked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, accepted, blocked);
}
// Autogenerated method: LocalNetworkPlayerModel.ConnectToPeer
bool GlobalNamespace::LocalNetworkPlayerModel::ConnectToPeer(::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::ConnectToPeer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: LocalNetworkPlayerModel.DisconnectPeer
void GlobalNamespace::LocalNetworkPlayerModel::DisconnectPeer(::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::DisconnectPeer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: LocalNetworkPlayerModel.HandlePlayersChanged
void GlobalNamespace::LocalNetworkPlayerModel::HandlePlayersChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::HandlePlayersChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayersChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.TryStartServer
bool GlobalNamespace::LocalNetworkPlayerModel::TryStartServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::TryStartServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryStartServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_currentPartySize
int GlobalNamespace::LocalNetworkPlayerModel::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_discoveryEnabled
bool GlobalNamespace::LocalNetworkPlayerModel::get_discoveryEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::get_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.set_discoveryEnabled
void GlobalNamespace::LocalNetworkPlayerModel::set_discoveryEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::set_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.get_localPlayerIsPartyOwner
bool GlobalNamespace::LocalNetworkPlayerModel::get_localPlayerIsPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::get_localPlayerIsPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_hasNetworkingFailed
bool GlobalNamespace::LocalNetworkPlayerModel::get_hasNetworkingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::get_hasNetworkingFailed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasNetworkingFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.add_partySizeChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::add_partySizeChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::add_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.remove_partySizeChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::remove_partySizeChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::remove_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.add_partyChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::add_partyChangedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::add_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.remove_partyChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::remove_partyChangedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::remove_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.add_joinRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::add_joinRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::add_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.remove_joinRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::remove_joinRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::remove_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.add_inviteRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::add_inviteRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::add_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.remove_inviteRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::remove_inviteRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::remove_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.Start
void GlobalNamespace::LocalNetworkPlayerModel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.Update
void GlobalNamespace::LocalNetworkPlayerModel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.OnDestroy
void GlobalNamespace::LocalNetworkPlayerModel::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.GetPartyPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::GetPartyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::GetPartyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.GetOtherPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::GetOtherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::GetOtherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOtherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.PlayerConnected
void GlobalNamespace::LocalNetworkPlayerModel::PlayerConnected(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::PlayerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LocalNetworkPlayerModel.ConnectionFailed
void GlobalNamespace::LocalNetworkPlayerModel::ConnectionFailed(::GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::ConnectionFailed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: LocalNetworkPlayerModel.PlayerDisconnected
void GlobalNamespace::LocalNetworkPlayerModel::PlayerDisconnected(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::PlayerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LocalNetworkPlayerModel.PartySizeChanged
void GlobalNamespace::LocalNetworkPlayerModel::PartySizeChanged(int currentPartySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::PartySizeChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PartySizeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPartySize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentPartySize);
}
// Autogenerated method: LocalNetworkPlayerModel.DestroyPartyConnection
void GlobalNamespace::LocalNetworkPlayerModel::DestroyPartyConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::DestroyPartyConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPartyConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.ConnectedPlayerManagerChanged
void GlobalNamespace::LocalNetworkPlayerModel::ConnectedPlayerManagerChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::ConnectedPlayerManagerChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectedPlayerManagerChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkPlayerModel/LocalNetworkPlayer
#include "GlobalNamespace/LocalNetworkPlayerModel_LocalNetworkPlayer.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kPeerBroadcastTimeout
float GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kPeerBroadcastTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kPeerBroadcastTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kPeerBroadcastTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPeerBroadcastTimeout
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kPeerBroadcastTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kPeerBroadcastTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kPeerBroadcastTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kConnectionTimeout
float GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kConnectionTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kConnectionTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kConnectionTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kConnectionTimeout
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kConnectionTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kConnectionTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kConnectionTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kRequestTimeout
float GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kRequestTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kRequestTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kRequestTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kRequestTimeout
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kRequestTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kRequestTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kRequestTimeout", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly LocalNetworkPlayerModel _playerModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkPlayerModel*& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__playerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__playerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.IPAddress _ipAddress
[[deprecated("Use field access instead!")]] ::System::Net::IPAddress*& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__ipAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__ipAddress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ipAddress"))->offset;
  return *reinterpret_cast<::System::Net::IPAddress**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isMe
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__isMe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isMe"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isPartyOwner
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__isPartyOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isPartyOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _joinRequestTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__joinRequestTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__joinRequestTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joinRequestTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _inviteSentTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__inviteSentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__inviteSentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inviteSentTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isBlocked
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__isBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__isBlocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isBlocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasBlockedMe
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__hasBlockedMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__hasBlockedMe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasBlockedMe"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _secret
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _multiplayerPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__multiplayerPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IConnectedPlayer _connectedPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _connectingStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__connectingStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__connectingStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectingStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentPartySize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__currentPartySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPartySize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSelectionMask _selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayServerConfiguration _configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastUpdateTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__lastUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__lastUpdateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastUpdateTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowedJoinToMyParty
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__allowedJoinToMyParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__allowedJoinToMyParty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowedJoinToMyParty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _requestedToJoinMyParty
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__requestedToJoinMyParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__requestedToJoinMyParty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestedToJoinMyParty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _invitedMeToJoinTheirParty
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__invitedMeToJoinTheirParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__invitedMeToJoinTheirParty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_invitedMeToJoinTheirParty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_userId
::StringW GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_userName
::StringW GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_ipAddress
::System::Net::IPAddress* GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_ipAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_ipAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ipAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPAddress*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isMe
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isMe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isPartyOwner
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_currentPartySize
int GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_connectedPlayer
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_connectedPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isBlocked
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isBlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isBlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_hasBlockedMe
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_hasBlockedMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_hasBlockedMe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasBlockedMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_secret
::StringW GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_secret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_multiplayerPort
int GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_multiplayerPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isMyPartyOwner
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isMyPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isMyPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMyPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isConnected
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_allowedJoinToMyParty
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_allowedJoinToMyParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_allowedJoinToMyParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowedJoinToMyParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isConnecting
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_wasConnecting
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_wasConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_wasConnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wasConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isTimedOut
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isTimedOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isTimedOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isTimedOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isWaitingOnJoin
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isWaitingOnJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isWaitingOnJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canJoin
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_requiresPassword
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_requiresPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_requiresPassword");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requiresPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isWaitingOnInvite
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isWaitingOnInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isWaitingOnInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canInvite
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canKick
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canKick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canKick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canKick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canLeave
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canLeave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canLeave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canBlock
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canUnblock
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canUnblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canUnblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canUnblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isConnectable
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnectable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnectable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Join
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Join
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Join(::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, password);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Invite
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Invite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Kick
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Kick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Kick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Kick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Leave
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Leave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Block
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Block");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Unblock
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Unblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Unblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SendJoinResponse
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SendJoinResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SendJoinResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, accept);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SendInviteResponse
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SendInviteResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SendInviteResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, accept);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Update
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Update(bool isPartyOwner, int currentPartySize, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(currentPartySize), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, isPartyOwner, currentPartySize, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.HasFailedToConnect
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::HasFailedToConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::HasFailedToConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasFailedToConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetInvited
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetInvited(bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::StringW secret, int multiplayerPort) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetInvited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInvited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isPartyOwner, selectionMask, configuration, secret, multiplayerPort);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetJoinResponse
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetJoinResponse(bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::StringW secret, int multiplayerPort, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetJoinResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(blocked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isPartyOwner, selectionMask, configuration, secret, multiplayerPort, blocked);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetInviteResponse
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetInviteResponse(bool accepted, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetInviteResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accepted), ::il2cpp_utils::ExtractType(blocked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, accepted, blocked);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetJoinRequested
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetJoinRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetJoinRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJoinRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetConnected
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetConnected(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetDisconnected
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Connect
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkPlayerModel/CreatePartyConfig
#include "GlobalNamespace/LocalNetworkPlayerModel_CreatePartyConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkPlayerModel/<Start>d__41
#include "GlobalNamespace/LocalNetworkPlayerModel_-Start-d__41.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocalNetworkPlayerModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkPlayerModel*& GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UserInfo> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::UserInfo*>& GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::UserInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkPlayerModel/<Start>d__41.MoveNext
void GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/<Start>d__41.SetStateMachine
void GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkConfigSO
#include "GlobalNamespace/NetworkConfigSO.hpp"
// Including type: DnsEndPoint
#include "GlobalNamespace/DnsEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxPartySize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkConfigSO::dyn__maxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__maxPartySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxPartySize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _discoveryPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkConfigSO::dyn__discoveryPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__discoveryPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_discoveryPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _partyPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkConfigSO::dyn__partyPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__partyPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _multiplayerPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkConfigSO::dyn__multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__multiplayerPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _masterServerPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkConfigSO::dyn__masterServerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__masterServerPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_masterServerPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _masterServerHostName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkConfigSO::dyn__masterServerHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__masterServerHostName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_masterServerHostName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _multiplayerStatusUrl
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkConfigSO::dyn__multiplayerStatusUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__multiplayerStatusUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerStatusUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _quickPlaySetupUrl
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkConfigSO::dyn__quickPlaySetupUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__quickPlaySetupUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_quickPlaySetupUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _graphUrl
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkConfigSO::dyn__graphUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__graphUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _graphAppId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkConfigSO::dyn__graphAppId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__graphAppId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphAppId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _forceGameLift
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NetworkConfigSO::dyn__forceGameLift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__forceGameLift");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forceGameLift"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ServiceEnvironment _serviceEnvironment
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ServiceEnvironment& GlobalNamespace::NetworkConfigSO::dyn__serviceEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__serviceEnvironment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serviceEnvironment"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ServiceEnvironment*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkConfigSO.get_maxPartySize
int GlobalNamespace::NetworkConfigSO::get_maxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_maxPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_discoveryPort
int GlobalNamespace::NetworkConfigSO::get_discoveryPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_discoveryPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_discoveryPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_partyPort
int GlobalNamespace::NetworkConfigSO::get_partyPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_partyPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_multiplayerPort
int GlobalNamespace::NetworkConfigSO::get_multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_multiplayerPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_masterServerEndPoint
::GlobalNamespace::DnsEndPoint* GlobalNamespace::NetworkConfigSO::get_masterServerEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_masterServerEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_masterServerEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DnsEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_multiplayerStatusUrl
::StringW GlobalNamespace::NetworkConfigSO::get_multiplayerStatusUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_multiplayerStatusUrl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerStatusUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_quickPlaySetupUrl
::StringW GlobalNamespace::NetworkConfigSO::get_quickPlaySetupUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_quickPlaySetupUrl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_quickPlaySetupUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_graphUrl
::StringW GlobalNamespace::NetworkConfigSO::get_graphUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_graphUrl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_graphAccessToken
::StringW GlobalNamespace::NetworkConfigSO::get_graphAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_graphAccessToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_forceGameLift
bool GlobalNamespace::NetworkConfigSO::get_forceGameLift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_forceGameLift");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forceGameLift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_serviceEnvironment
::GlobalNamespace::ServiceEnvironment GlobalNamespace::NetworkConfigSO::get_serviceEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_serviceEnvironment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serviceEnvironment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ServiceEnvironment, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.GetAppId
::StringW GlobalNamespace::NetworkConfigSO::GetAppId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::GetAppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkPlayerEntitlementChecker
#include "GlobalNamespace/NetworkPlayerEntitlementChecker.hpp"
// Including type: NetworkPlayerEntitlementChecker/<HandleGetIsEntitledToLevel>d__5
#include "GlobalNamespace/NetworkPlayerEntitlementChecker_-HandleGetIsEntitledToLevel-d__5.hpp"
// Including type: NetworkPlayerEntitlementChecker/<GetEntitlementStatus>d__6
#include "GlobalNamespace/NetworkPlayerEntitlementChecker_-GetEntitlementStatus-d__6.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMenuRpcManager _rpcManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMenuRpcManager*& GlobalNamespace::NetworkPlayerEntitlementChecker::dyn__rpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::dyn__rpcManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rpcManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMenuRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AdditionalContentModel _additionalContentModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::NetworkPlayerEntitlementChecker::dyn__additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::dyn__additionalContentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_additionalContentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkPlayerEntitlementChecker.Start
void GlobalNamespace::NetworkPlayerEntitlementChecker::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerEntitlementChecker.OnDestroy
void GlobalNamespace::NetworkPlayerEntitlementChecker::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerEntitlementChecker.HandleDataInvalidated
void GlobalNamespace::NetworkPlayerEntitlementChecker::HandleDataInvalidated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::HandleDataInvalidated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDataInvalidated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerEntitlementChecker.HandleGetIsEntitledToLevel
void GlobalNamespace::NetworkPlayerEntitlementChecker::HandleGetIsEntitledToLevel(::StringW userId, ::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::HandleGetIsEntitledToLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(levelId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, levelId);
}
// Autogenerated method: NetworkPlayerEntitlementChecker.GetEntitlementStatus
::System::Threading::Tasks::Task_1<::GlobalNamespace::EntitlementsStatus>* GlobalNamespace::NetworkPlayerEntitlementChecker::GetEntitlementStatus(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::GetEntitlementStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEntitlementStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::EntitlementsStatus>*, false>(this, ___internal__method, levelId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkPlayerEntitlementChecker/<HandleGetIsEntitledToLevel>d__5
#include "GlobalNamespace/NetworkPlayerEntitlementChecker_-HandleGetIsEntitledToLevel-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NetworkPlayerEntitlementChecker <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkPlayerEntitlementChecker*& GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkPlayerEntitlementChecker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EntitlementsStatus> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::EntitlementsStatus>& GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::EntitlementsStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkPlayerEntitlementChecker/<HandleGetIsEntitledToLevel>d__5.MoveNext
void GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerEntitlementChecker/<HandleGetIsEntitledToLevel>d__5.SetStateMachine
void GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkPlayerEntitlementChecker/<GetEntitlementStatus>d__6
#include "GlobalNamespace/NetworkPlayerEntitlementChecker_-GetEntitlementStatus-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<EntitlementsStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::EntitlementsStatus>& GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::EntitlementsStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NetworkPlayerEntitlementChecker <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkPlayerEntitlementChecker*& GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkPlayerEntitlementChecker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkPlayerEntitlementChecker/<GetEntitlementStatus>d__6.MoveNext
void GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerEntitlementChecker/<GetEntitlementStatus>d__6.SetStateMachine
void GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodePoseSyncStateManager
#include "GlobalNamespace/NodePoseSyncStateManager.hpp"
// Including type: NodePoseSyncStateNetSerializable
#include "GlobalNamespace/NodePoseSyncStateNetSerializable.hpp"
// Including type: NodePoseSyncStateDeltaNetSerializable
#include "GlobalNamespace/NodePoseSyncStateDeltaNetSerializable.hpp"
// Including type: IPacketPool`1
#include "GlobalNamespace/IPacketPool_1.hpp"
// Including type: MultiplayerSessionManager/MessageType
#include "GlobalNamespace/MultiplayerSessionManager_MessageType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NodePoseSyncStateManager.get_serializablePool
::GlobalNamespace::IPacketPool_1<::GlobalNamespace::NodePoseSyncStateNetSerializable*>* GlobalNamespace::NodePoseSyncStateManager::get_serializablePool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::get_serializablePool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serializablePool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPacketPool_1<::GlobalNamespace::NodePoseSyncStateNetSerializable*>*, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_deltaSerializablePool
::GlobalNamespace::IPacketPool_1<::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable*>* GlobalNamespace::NodePoseSyncStateManager::get_deltaSerializablePool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::get_deltaSerializablePool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaSerializablePool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPacketPool_1<::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable*>*, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.Interpolate
::GlobalNamespace::PoseSerializable GlobalNamespace::NodePoseSyncStateManager::Interpolate(::GlobalNamespace::PoseSerializable prev, float prevTime, ::GlobalNamespace::PoseSerializable curr, float currTime, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::Interpolate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prev), ::il2cpp_utils::ExtractType(prevTime), ::il2cpp_utils::ExtractType(curr), ::il2cpp_utils::ExtractType(currTime), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PoseSerializable, false>(this, ___internal__method, prev, prevTime, curr, currTime, time);
}
// Autogenerated method: NodePoseSyncStateManager.Smooth
::GlobalNamespace::PoseSerializable GlobalNamespace::NodePoseSyncStateManager::Smooth(::GlobalNamespace::PoseSerializable a, ::GlobalNamespace::PoseSerializable b, float smooth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::Smooth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Smooth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(smooth)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PoseSerializable, false>(this, ___internal__method, a, b, smooth);
}
// Autogenerated method: NodePoseSyncStateManager.get_deltaUpdateFrequency
float GlobalNamespace::NodePoseSyncStateManager::get_deltaUpdateFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::get_deltaUpdateFrequency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaUpdateFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_fullStateUpdateFrequency
float GlobalNamespace::NodePoseSyncStateManager::get_fullStateUpdateFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::get_fullStateUpdateFrequency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullStateUpdateFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_localBufferSize
int GlobalNamespace::NodePoseSyncStateManager::get_localBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::get_localBufferSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_remoteBufferSize
int GlobalNamespace::NodePoseSyncStateManager::get_remoteBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::get_remoteBufferSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_remoteBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_messageType
::GlobalNamespace::MultiplayerSessionManager_MessageType GlobalNamespace::NodePoseSyncStateManager::get_messageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::get_messageType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_messageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerSessionManager_MessageType, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_deltaMessageType
::GlobalNamespace::MultiplayerSessionManager_MessageType GlobalNamespace::NodePoseSyncStateManager::get_deltaMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::get_deltaMessageType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaMessageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerSessionManager_MessageType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusConnectionManager
#include "GlobalNamespace/OculusConnectionManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: OculusConnectionManager/OculusConnection
#include "GlobalNamespace/OculusConnectionManager_OculusConnection.hpp"
// Including type: OculusConnectionManager/StartServerParams
#include "GlobalNamespace/OculusConnectionManager_StartServerParams.hpp"
// Including type: OculusConnectionManager/ConnectToServerParams
#include "GlobalNamespace/OculusConnectionManager_ConnectToServerParams.hpp"
// Including type: OculusConnectionManager/<HandlePeerConnectionRequest>d__61
#include "GlobalNamespace/OculusConnectionManager_-HandlePeerConnectionRequest-d__61.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: OculusNetworkPlayerModel
#include "GlobalNamespace/OculusNetworkPlayerModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<OculusConnectionManager/OculusConnection> _connections
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OculusConnectionManager::OculusConnection*>*& GlobalNamespace::OculusConnectionManager::dyn__connections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::dyn__connections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connections"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OculusConnectionManager::OculusConnection*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataReader _dataReader
[[deprecated("Use field access instead!")]] ::LiteNetLib::Utils::NetDataReader*& GlobalNamespace::OculusConnectionManager::dyn__dataReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::dyn__dataReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataReader"))->offset;
  return *reinterpret_cast<::LiteNetLib::Utils::NetDataReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusNetworkPlayerModel _oculusNetworkPlayerModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusNetworkPlayerModel*& GlobalNamespace::OculusConnectionManager::dyn__oculusNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::dyn__oculusNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusNetworkPlayerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusConnectionManager/NetworkMode _mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusConnectionManager::NetworkMode& GlobalNamespace::OculusConnectionManager::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusConnectionManager::NetworkMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _connectionEstablished
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusConnectionManager::dyn__connectionEstablished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::dyn__connectionEstablished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionEstablished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action onInitializedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::OculusConnectionManager::dyn_onInitializedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::dyn_onInitializedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onInitializedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action onConnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::OculusConnectionManager::dyn_onConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::dyn_onConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<DisconnectedReason> onDisconnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::DisconnectedReason>*& GlobalNamespace::OculusConnectionManager::dyn_onDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::dyn_onDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDisconnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ConnectionFailedReason> onConnectionFailedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::ConnectionFailedReason>*& GlobalNamespace::OculusConnectionManager::dyn_onConnectionFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::dyn_onConnectionFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionFailedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ConnectionFailedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnection> onConnectionConnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IConnection*>*& GlobalNamespace::OculusConnectionManager::dyn_onConnectionConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::dyn_onConnectionConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionConnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnection*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<IConnection,DisconnectedReason> onConnectionDisconnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::IConnection*, ::GlobalNamespace::DisconnectedReason>*& GlobalNamespace::OculusConnectionManager::dyn_onConnectionDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::dyn_onConnectionDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionDisconnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::IConnection*, ::GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<IConnection,LiteNetLib.Utils.NetDataReader,BGNet.Core.DeliveryMethod> onReceivedDataEvent
[[deprecated("Use field access instead!")]] ::System::Action_3<::GlobalNamespace::IConnection*, ::LiteNetLib::Utils::NetDataReader*, ::BGNet::Core::DeliveryMethod>*& GlobalNamespace::OculusConnectionManager::dyn_onReceivedDataEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::dyn_onReceivedDataEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onReceivedDataEvent"))->offset;
  return *reinterpret_cast<::System::Action_3<::GlobalNamespace::IConnection*, ::LiteNetLib::Utils::NetDataReader*, ::BGNet::Core::DeliveryMethod>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isDisconnecting>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusConnectionManager::dyn_$isDisconnecting$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::dyn_$isDisconnecting$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isDisconnecting>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::OculusConnectionManager::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusConnectionManager.get_userId
::StringW GlobalNamespace::OculusConnectionManager::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_userName
::StringW GlobalNamespace::OculusConnectionManager::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isConnected
bool GlobalNamespace::OculusConnectionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isConnecting
bool GlobalNamespace::OculusConnectionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::get_isConnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isDisconnecting
bool GlobalNamespace::OculusConnectionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::get_isDisconnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.set_isDisconnecting
void GlobalNamespace::OculusConnectionManager::set_isDisconnecting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::set_isDisconnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isDisconnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.get_isDisposed
bool GlobalNamespace::OculusConnectionManager::get_isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::get_isDisposed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isConnectionOwner
bool GlobalNamespace::OculusConnectionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isServer
bool GlobalNamespace::OculusConnectionManager::get_isServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::get_isServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isClient
bool GlobalNamespace::OculusConnectionManager::get_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::get_isClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_connectionCount
int GlobalNamespace::OculusConnectionManager::get_connectionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::get_connectionCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.add_onInitializedEvent
void GlobalNamespace::OculusConnectionManager::add_onInitializedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::add_onInitializedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onInitializedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onInitializedEvent
void GlobalNamespace::OculusConnectionManager::remove_onInitializedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::remove_onInitializedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onInitializedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onConnectedEvent
void GlobalNamespace::OculusConnectionManager::add_onConnectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::add_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onConnectedEvent
void GlobalNamespace::OculusConnectionManager::remove_onConnectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::remove_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onDisconnectedEvent
void GlobalNamespace::OculusConnectionManager::add_onDisconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::add_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onDisconnectedEvent
void GlobalNamespace::OculusConnectionManager::remove_onDisconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::remove_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onConnectionFailedEvent
void GlobalNamespace::OculusConnectionManager::add_onConnectionFailedEvent(::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::add_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onConnectionFailedEvent
void GlobalNamespace::OculusConnectionManager::remove_onConnectionFailedEvent(::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::remove_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onConnectionConnectedEvent
void GlobalNamespace::OculusConnectionManager::add_onConnectionConnectedEvent(::System::Action_1<::GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::add_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onConnectionConnectedEvent
void GlobalNamespace::OculusConnectionManager::remove_onConnectionConnectedEvent(::System::Action_1<::GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::remove_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onConnectionDisconnectedEvent
void GlobalNamespace::OculusConnectionManager::add_onConnectionDisconnectedEvent(::System::Action_2<::GlobalNamespace::IConnection*, ::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::add_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onConnectionDisconnectedEvent
void GlobalNamespace::OculusConnectionManager::remove_onConnectionDisconnectedEvent(::System::Action_2<::GlobalNamespace::IConnection*, ::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::remove_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onReceivedDataEvent
void GlobalNamespace::OculusConnectionManager::add_onReceivedDataEvent(::System::Action_3<::GlobalNamespace::IConnection*, ::LiteNetLib::Utils::NetDataReader*, ::BGNet::Core::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::add_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onReceivedDataEvent
void GlobalNamespace::OculusConnectionManager::remove_onReceivedDataEvent(::System::Action_3<::GlobalNamespace::IConnection*, ::LiteNetLib::Utils::NetDataReader*, ::BGNet::Core::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::remove_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.SendToAll
void GlobalNamespace::OculusConnectionManager::SendToAll(::LiteNetLib::Utils::NetDataWriter* writer, ::BGNet::Core::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: OculusConnectionManager.SendToAll
void GlobalNamespace::OculusConnectionManager::SendToAll(::LiteNetLib::Utils::NetDataWriter* writer, ::BGNet::Core::DeliveryMethod deliveryMethod, ::GlobalNamespace::IConnection* excludingConnection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod), ::il2cpp_utils::ExtractType(excludingConnection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, deliveryMethod, excludingConnection);
}
// Autogenerated method: OculusConnectionManager.PollUpdate
void GlobalNamespace::OculusConnectionManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.Disconnect
void GlobalNamespace::OculusConnectionManager::Disconnect(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: OculusConnectionManager.DisconnectInternal
void GlobalNamespace::OculusConnectionManager::DisconnectInternal(::GlobalNamespace::DisconnectedReason disconnectedReason, ::GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::DisconnectInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason), ::il2cpp_utils::ExtractType(connectionFailedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason, connectionFailedReason);
}
// Autogenerated method: OculusConnectionManager.Dispose
void GlobalNamespace::OculusConnectionManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.DisposeAsync
::System::Threading::Tasks::Task* GlobalNamespace::OculusConnectionManager::DisposeAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::DisposeAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.GetConnection
::GlobalNamespace::IConnection* GlobalNamespace::OculusConnectionManager::GetConnection(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::GetConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnection*, false>(this, ___internal__method, index);
}
// Autogenerated method: OculusConnectionManager.HandlePeerConnectionRequest
void GlobalNamespace::OculusConnectionManager::HandlePeerConnectionRequest(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::HandlePeerConnectionRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePeerConnectionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusConnectionManager.HandleConnectionStateChanged
void GlobalNamespace::OculusConnectionManager::HandleConnectionStateChanged(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::HandleConnectionStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectionStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusConnectionManager.GetConnection
::GlobalNamespace::OculusConnectionManager::OculusConnection* GlobalNamespace::OculusConnectionManager::GetConnection(uint64_t user) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::GetConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OculusConnectionManager::OculusConnection*, false>(this, ___internal__method, user);
}
// Autogenerated method: OculusConnectionManager.RemoveConnection
void GlobalNamespace::OculusConnectionManager::RemoveConnection(uint64_t id, ::GlobalNamespace::DisconnectedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::RemoveConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, reason);
}
// Autogenerated method: OculusConnectionManager.AcquireBuffer
::ArrayW<uint8_t> GlobalNamespace::OculusConnectionManager::AcquireBuffer(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::AcquireBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcquireBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, size);
}
// Autogenerated method: OculusConnectionManager.ReleaseBuffer
void GlobalNamespace::OculusConnectionManager::ReleaseBuffer(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::ReleaseBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: OculusConnectionManager.DeliveryMethodToSendPolicy
::Oculus::Platform::SendPolicy GlobalNamespace::OculusConnectionManager::DeliveryMethodToSendPolicy(::BGNet::Core::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::DeliveryMethodToSendPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusConnectionManager", "DeliveryMethodToSendPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deliveryMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SendPolicy, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deliveryMethod);
}
// Autogenerated method: OculusConnectionManager.SendPolicyToDeliveryMethod
::BGNet::Core::DeliveryMethod GlobalNamespace::OculusConnectionManager::SendPolicyToDeliveryMethod(::Oculus::Platform::SendPolicy sendPolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::SendPolicyToDeliveryMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusConnectionManager", "SendPolicyToDeliveryMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sendPolicy)})));
  return ::il2cpp_utils::RunMethodRethrow<::BGNet::Core::DeliveryMethod, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sendPolicy);
}
// Autogenerated method: OculusConnectionManager.VoidHandler
void GlobalNamespace::OculusConnectionManager::VoidHandler(::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::VoidHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusConnectionManager", "VoidHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusConnectionManager/NetworkMode
#include "GlobalNamespace/OculusConnectionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusConnectionManager/NetworkMode None
::GlobalNamespace::OculusConnectionManager::NetworkMode GlobalNamespace::OculusConnectionManager::NetworkMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::NetworkMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OculusConnectionManager::NetworkMode>("", "OculusConnectionManager/NetworkMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public OculusConnectionManager/NetworkMode None
void GlobalNamespace::OculusConnectionManager::NetworkMode::_set_None(::GlobalNamespace::OculusConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::NetworkMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusConnectionManager/NetworkMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OculusConnectionManager/NetworkMode Client
::GlobalNamespace::OculusConnectionManager::NetworkMode GlobalNamespace::OculusConnectionManager::NetworkMode::_get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::NetworkMode::_get_Client");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OculusConnectionManager::NetworkMode>("", "OculusConnectionManager/NetworkMode", "Client"));
}
// Autogenerated static field setter
// Set static field: static public OculusConnectionManager/NetworkMode Client
void GlobalNamespace::OculusConnectionManager::NetworkMode::_set_Client(::GlobalNamespace::OculusConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::NetworkMode::_set_Client");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusConnectionManager/NetworkMode", "Client", value));
}
// Autogenerated static field getter
// Get static field: static public OculusConnectionManager/NetworkMode Server
::GlobalNamespace::OculusConnectionManager::NetworkMode GlobalNamespace::OculusConnectionManager::NetworkMode::_get_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::NetworkMode::_get_Server");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OculusConnectionManager::NetworkMode>("", "OculusConnectionManager/NetworkMode", "Server"));
}
// Autogenerated static field setter
// Set static field: static public OculusConnectionManager/NetworkMode Server
void GlobalNamespace::OculusConnectionManager::NetworkMode::_set_Server(::GlobalNamespace::OculusConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::NetworkMode::_set_Server");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusConnectionManager/NetworkMode", "Server", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusConnectionManager::NetworkMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::NetworkMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusConnectionManager/OculusConnection
#include "GlobalNamespace/OculusConnectionManager_OculusConnection.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: BGNet.Core.DeliveryMethod
#include "BGNet/Core/DeliveryMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 _id
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OculusConnectionManager::OculusConnection::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::OculusConnection::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusConnectionManager::OculusConnection::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::OculusConnection::dyn__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusConnectionManager::OculusConnection::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::OculusConnection::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isConnectionOwner
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusConnectionManager::OculusConnection::dyn__isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::OculusConnection::dyn__isConnectionOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isConnectionOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.get_id
uint64_t GlobalNamespace::OculusConnectionManager::OculusConnection::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::OculusConnection::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.get_userId
::StringW GlobalNamespace::OculusConnectionManager::OculusConnection::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::OculusConnection::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.get_userName
::StringW GlobalNamespace::OculusConnectionManager::OculusConnection::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::OculusConnection::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.get_isConnectionOwner
bool GlobalNamespace::OculusConnectionManager::OculusConnection::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::OculusConnection::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.Send
void GlobalNamespace::OculusConnectionManager::OculusConnection::Send(::LiteNetLib::Utils::NetDataWriter* writer, ::BGNet::Core::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::OculusConnection::Send");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.Disconnect
void GlobalNamespace::OculusConnectionManager::OculusConnection::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::OculusConnection::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.Equals
bool GlobalNamespace::OculusConnectionManager::OculusConnection::Equals(::GlobalNamespace::OculusConnectionManager::OculusConnection* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::OculusConnection::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.Equals
bool GlobalNamespace::OculusConnectionManager::OculusConnection::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::OculusConnection::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.GetHashCode
int GlobalNamespace::OculusConnectionManager::OculusConnection::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::OculusConnection::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.ToString
::StringW GlobalNamespace::OculusConnectionManager::OculusConnection::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::OculusConnection::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusConnectionManager/StartServerParams
#include "GlobalNamespace/OculusConnectionManager_StartServerParams.hpp"
// Including type: OculusNetworkPlayerModel
#include "GlobalNamespace/OculusNetworkPlayerModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusNetworkPlayerModel oculusNetworkPlayerModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusNetworkPlayerModel*& GlobalNamespace::OculusConnectionManager::StartServerParams::dyn_oculusNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::StartServerParams::dyn_oculusNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oculusNetworkPlayerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusConnectionManager/ConnectToServerParams
#include "GlobalNamespace/OculusConnectionManager_ConnectToServerParams.hpp"
// Including type: OculusNetworkPlayerModel
#include "GlobalNamespace/OculusNetworkPlayerModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusNetworkPlayerModel oculusNetworkPlayerModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusNetworkPlayerModel*& GlobalNamespace::OculusConnectionManager::ConnectToServerParams::dyn_oculusNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::ConnectToServerParams::dyn_oculusNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oculusNetworkPlayerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 serverId
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OculusConnectionManager::ConnectToServerParams::dyn_serverId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::ConnectToServerParams::dyn_serverId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusConnectionManager/<HandlePeerConnectionRequest>d__61
#include "GlobalNamespace/OculusConnectionManager_-HandlePeerConnectionRequest-d__61.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__61::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__61::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__61::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__61::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Message`1<Oculus.Platform.Models.NetworkingPeer> message
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>*& GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__61::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__61::dyn_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Message_1<::Oculus::Platform::Models::NetworkingPeer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusConnectionManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusConnectionManager*& GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__61::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__61::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusConnectionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__61::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__61::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusConnectionManager/<HandlePeerConnectionRequest>d__61.MoveNext
void GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__61::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__61::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager/<HandlePeerConnectionRequest>d__61.SetStateMachine
void GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__61::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__61::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusNetworkPlayerModel
#include "GlobalNamespace/OculusNetworkPlayerModel.hpp"
// Including type: OculusNetworkPlayerModel/OculusNetworkPlayer
#include "GlobalNamespace/OculusNetworkPlayerModel_OculusNetworkPlayer.hpp"
// Including type: OculusNetworkPlayerModel/<Start>d__42
#include "GlobalNamespace/OculusNetworkPlayerModel_-Start-d__42.hpp"
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass50_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass50_0.hpp"
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass51_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass51_0.hpp"
// Including type: OculusNetworkPlayerModel/<HandleRoomInviteReceived>d__51
#include "GlobalNamespace/OculusNetworkPlayerModel_-HandleRoomInviteReceived-d__51.hpp"
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass55_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass55_0.hpp"
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass64_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass64_0.hpp"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OculusConnectionManager
#include "GlobalNamespace/OculusConnectionManager.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayerModelPartyConfig`1
#include "GlobalNamespace/INetworkPlayerModelPartyConfig_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kConnectionTypeKey
::StringW GlobalNamespace::OculusNetworkPlayerModel::_get_kConnectionTypeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_get_kConnectionTypeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusNetworkPlayerModel", "kConnectionTypeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionTypeKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kConnectionTypeKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_set_kConnectionTypeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kConnectionTypeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kConnectionTypeOculus
::StringW GlobalNamespace::OculusNetworkPlayerModel::_get_kConnectionTypeOculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_get_kConnectionTypeOculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusNetworkPlayerModel", "kConnectionTypeOculus"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionTypeOculus
void GlobalNamespace::OculusNetworkPlayerModel::_set_kConnectionTypeOculus(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_set_kConnectionTypeOculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kConnectionTypeOculus", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kConnectionTypeLiteNetLib
::StringW GlobalNamespace::OculusNetworkPlayerModel::_get_kConnectionTypeLiteNetLib() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_get_kConnectionTypeLiteNetLib");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusNetworkPlayerModel", "kConnectionTypeLiteNetLib"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionTypeLiteNetLib
void GlobalNamespace::OculusNetworkPlayerModel::_set_kConnectionTypeLiteNetLib(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_set_kConnectionTypeLiteNetLib");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kConnectionTypeLiteNetLib", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kCurrentPartySizeKey
::StringW GlobalNamespace::OculusNetworkPlayerModel::_get_kCurrentPartySizeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_get_kCurrentPartySizeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusNetworkPlayerModel", "kCurrentPartySizeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCurrentPartySizeKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kCurrentPartySizeKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_set_kCurrentPartySizeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kCurrentPartySizeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDifficultiesKey
::StringW GlobalNamespace::OculusNetworkPlayerModel::_get_kDifficultiesKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_get_kDifficultiesKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusNetworkPlayerModel", "kDifficultiesKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDifficultiesKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kDifficultiesKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_set_kDifficultiesKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kDifficultiesKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kModifiersKey
::StringW GlobalNamespace::OculusNetworkPlayerModel::_get_kModifiersKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_get_kModifiersKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusNetworkPlayerModel", "kModifiersKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kModifiersKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kModifiersKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_set_kModifiersKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kModifiersKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kSongPacksKey
::StringW GlobalNamespace::OculusNetworkPlayerModel::_get_kSongPacksKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_get_kSongPacksKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusNetworkPlayerModel", "kSongPacksKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kSongPacksKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kSongPacksKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_set_kSongPacksKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kSongPacksKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMaxPlayerCountKey
::StringW GlobalNamespace::OculusNetworkPlayerModel::_get_kMaxPlayerCountKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_get_kMaxPlayerCountKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusNetworkPlayerModel", "kMaxPlayerCountKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMaxPlayerCountKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kMaxPlayerCountKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_set_kMaxPlayerCountKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kMaxPlayerCountKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDiscoveryPolicyKey
::StringW GlobalNamespace::OculusNetworkPlayerModel::_get_kDiscoveryPolicyKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_get_kDiscoveryPolicyKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusNetworkPlayerModel", "kDiscoveryPolicyKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDiscoveryPolicyKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kDiscoveryPolicyKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_set_kDiscoveryPolicyKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kDiscoveryPolicyKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kInvitePolicyKey
::StringW GlobalNamespace::OculusNetworkPlayerModel::_get_kInvitePolicyKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_get_kInvitePolicyKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusNetworkPlayerModel", "kInvitePolicyKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kInvitePolicyKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kInvitePolicyKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_set_kInvitePolicyKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kInvitePolicyKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kGameplayServerModeKey
::StringW GlobalNamespace::OculusNetworkPlayerModel::_get_kGameplayServerModeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_get_kGameplayServerModeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusNetworkPlayerModel", "kGameplayServerModeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kGameplayServerModeKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kGameplayServerModeKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_set_kGameplayServerModeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kGameplayServerModeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kSongSelectionModeKey
::StringW GlobalNamespace::OculusNetworkPlayerModel::_get_kSongSelectionModeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_get_kSongSelectionModeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusNetworkPlayerModel", "kSongSelectionModeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kSongSelectionModeKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kSongSelectionModeKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_set_kSongSelectionModeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kSongSelectionModeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kGameplayServerControlSettingsKey
::StringW GlobalNamespace::OculusNetworkPlayerModel::_get_kGameplayServerControlSettingsKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_get_kGameplayServerControlSettingsKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusNetworkPlayerModel", "kGameplayServerControlSettingsKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kGameplayServerControlSettingsKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kGameplayServerControlSettingsKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_set_kGameplayServerControlSettingsKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kGameplayServerControlSettingsKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kAutoRefreshRate
float GlobalNamespace::OculusNetworkPlayerModel::_get_kAutoRefreshRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_get_kAutoRefreshRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OculusNetworkPlayerModel", "kAutoRefreshRate"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kAutoRefreshRate
void GlobalNamespace::OculusNetworkPlayerModel::_set_kAutoRefreshRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::_set_kAutoRefreshRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kAutoRefreshRate", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IPlatformUserModel _platformUserModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPlatformUserModel*& GlobalNamespace::OculusNetworkPlayerModel::dyn__platformUserModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::dyn__platformUserModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformUserModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPlatformUserModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastRefreshTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusNetworkPlayerModel::dyn__lastRefreshTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::dyn__lastRefreshTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastRefreshTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isRefreshing
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusNetworkPlayerModel::dyn__isRefreshing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::dyn__isRefreshing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRefreshing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusNetworkPlayerModel/OculusNetworkPlayer _localPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*& GlobalNamespace::OculusNetworkPlayerModel::dyn__localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::dyn__localPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.RoomJoinPolicy _joinPolicy
[[deprecated("Use field access instead!")]] ::Oculus::Platform::RoomJoinPolicy& GlobalNamespace::OculusNetworkPlayerModel::dyn__joinPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::dyn__joinPolicy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joinPolicy"))->offset;
  return *reinterpret_cast<::Oculus::Platform::RoomJoinPolicy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _partyEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusNetworkPlayerModel::dyn__partyEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::dyn__partyEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _waitingOnRoomCreate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusNetworkPlayerModel::dyn__waitingOnRoomCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::dyn__waitingOnRoomCreate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitingOnRoomCreate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> _roomDataStore
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& GlobalNamespace::OculusNetworkPlayerModel::dyn__roomDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::dyn__roomDataStore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomDataStore"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<OculusNetworkPlayerModel/OculusNetworkPlayer> _partyPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*>*& GlobalNamespace::OculusNetworkPlayerModel::dyn__partyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::dyn__partyPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<OculusNetworkPlayerModel/OculusNetworkPlayer> _otherPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*>*& GlobalNamespace::OculusNetworkPlayerModel::dyn__otherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::dyn__otherPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_otherPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> partySizeChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<int>*& GlobalNamespace::OculusNetworkPlayerModel::dyn_partySizeChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::dyn_partySizeChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partySizeChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> partyChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>*& GlobalNamespace::OculusNetworkPlayerModel::dyn_partyChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::dyn_partyChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partyChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayer> inviteRequestedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayer*>*& GlobalNamespace::OculusNetworkPlayerModel::dyn_inviteRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::dyn_inviteRequestedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inviteRequestedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusNetworkPlayerModel.get_localPlayer
::GlobalNamespace::INetworkPlayer* GlobalNamespace::OculusNetworkPlayerModel::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::get_localPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::INetworkPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.get_oculusConnectionManager
::GlobalNamespace::OculusConnectionManager* GlobalNamespace::OculusNetworkPlayerModel::get_oculusConnectionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::get_oculusConnectionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_oculusConnectionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OculusConnectionManager*, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.GetPlayer
::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer* GlobalNamespace::OculusNetworkPlayerModel::GetPlayer(uint64_t id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::GetPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*, false>(this, ___internal__method, id);
}
// Autogenerated method: OculusNetworkPlayerModel.GetPlayer
::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer* GlobalNamespace::OculusNetworkPlayerModel::GetPlayer(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::GetPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated method: OculusNetworkPlayerModel.TryCreateRoom
bool GlobalNamespace::OculusNetworkPlayerModel::TryCreateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::TryCreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryCreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.GetUserName
::StringW GlobalNamespace::OculusNetworkPlayerModel::GetUserName(uint64_t id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::GetUserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, id);
}
// Autogenerated method: OculusNetworkPlayerModel.GetUserNameAsync
::System::Threading::Tasks::Task_1<::StringW>* GlobalNamespace::OculusNetworkPlayerModel::GetUserNameAsync(uint64_t id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::GetUserNameAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserNameAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::StringW>*, false>(this, ___internal__method, id);
}
// Autogenerated method: OculusNetworkPlayerModel.HandleRoomInviteReceived
void GlobalNamespace::OculusNetworkPlayerModel::HandleRoomInviteReceived(::Oculus::Platform::Message_1<::Oculus::Platform::Models::RoomInviteNotification*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::HandleRoomInviteReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRoomInviteReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusNetworkPlayerModel.HandleRoomInviteAccepted
void GlobalNamespace::OculusNetworkPlayerModel::HandleRoomInviteAccepted(::Oculus::Platform::Message_1<::StringW>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::HandleRoomInviteAccepted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRoomInviteAccepted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusNetworkPlayerModel.HandleRoomUpdate
void GlobalNamespace::OculusNetworkPlayerModel::HandleRoomUpdate(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::HandleRoomUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRoomUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusNetworkPlayerModel.HandlePlayersChanged
void GlobalNamespace::OculusNetworkPlayerModel::HandlePlayersChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::HandlePlayersChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayersChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.Refresh
void GlobalNamespace::OculusNetworkPlayerModel::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.UpdateRoomDataStore
void GlobalNamespace::OculusNetworkPlayerModel::UpdateRoomDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::UpdateRoomDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRoomDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.TryLeaveRoom
void GlobalNamespace::OculusNetworkPlayerModel::TryLeaveRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::TryLeaveRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryLeaveRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.TryConnectToServer
void GlobalNamespace::OculusNetworkPlayerModel::TryConnectToServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::TryConnectToServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryConnectToServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.ShouldAcceptConnectionFromPlayer
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::OculusNetworkPlayerModel::ShouldAcceptConnectionFromPlayer(uint64_t userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::ShouldAcceptConnectionFromPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldAcceptConnectionFromPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, userId);
}
// Autogenerated method: OculusNetworkPlayerModel.<TryCreateRoom>b__48_0
void GlobalNamespace::OculusNetworkPlayerModel::$TryCreateRoom$b__48_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::<TryCreateRoom>b__48_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryCreateRoom>b__48_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: OculusNetworkPlayerModel.get_localPlayerIsPartyOwner
bool GlobalNamespace::OculusNetworkPlayerModel::get_localPlayerIsPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::get_localPlayerIsPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.get_currentPartySize
int GlobalNamespace::OculusNetworkPlayerModel::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.add_partySizeChangedEvent
void GlobalNamespace::OculusNetworkPlayerModel::add_partySizeChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::add_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel.remove_partySizeChangedEvent
void GlobalNamespace::OculusNetworkPlayerModel::remove_partySizeChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::remove_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel.add_partyChangedEvent
void GlobalNamespace::OculusNetworkPlayerModel::add_partyChangedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::add_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel.remove_partyChangedEvent
void GlobalNamespace::OculusNetworkPlayerModel::remove_partyChangedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::remove_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel.add_inviteRequestedEvent
void GlobalNamespace::OculusNetworkPlayerModel::add_inviteRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::add_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel.remove_inviteRequestedEvent
void GlobalNamespace::OculusNetworkPlayerModel::remove_inviteRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::remove_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel.Start
void GlobalNamespace::OculusNetworkPlayerModel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.Update
void GlobalNamespace::OculusNetworkPlayerModel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.GetPartyPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::OculusNetworkPlayerModel::GetPartyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::GetPartyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.GetOtherPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::OculusNetworkPlayerModel::GetOtherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::GetOtherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOtherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.DestroyPartyConnection
void GlobalNamespace::OculusNetworkPlayerModel::DestroyPartyConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::DestroyPartyConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPartyConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.PlayerConnected
void GlobalNamespace::OculusNetworkPlayerModel::PlayerConnected(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::PlayerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: OculusNetworkPlayerModel.PlayerDisconnected
void GlobalNamespace::OculusNetworkPlayerModel::PlayerDisconnected(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::PlayerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: OculusNetworkPlayerModel.PartySizeChanged
void GlobalNamespace::OculusNetworkPlayerModel::PartySizeChanged(int currentPartySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::PartySizeChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PartySizeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPartySize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentPartySize);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusNetworkPlayerModel/OculusNetworkPlayer
#include "GlobalNamespace/OculusNetworkPlayerModel_OculusNetworkPlayer.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly OculusNetworkPlayerModel _playerModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusNetworkPlayerModel*& GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn__playerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn__playerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 _id
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isMe
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn__isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn__isMe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isMe"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.Room _room
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Models::Room*& GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn__room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn__room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_room"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Models::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<BeatmapLevelSelectionMask> _cachedSelectionMask
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::GlobalNamespace::BeatmapLevelSelectionMask>& GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn__cachedSelectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn__cachedSelectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedSelectionMask"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::GlobalNamespace::BeatmapLevelSelectionMask>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<GameplayServerConfiguration> _cachedConfiguration
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::GlobalNamespace::GameplayServerConfiguration>& GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn__cachedConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn__cachedConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedConfiguration"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::GlobalNamespace::GameplayServerConfiguration>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean removed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn_removed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn_removed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "removed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String inviteToken
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn_inviteToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn_inviteToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inviteToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IConnectedPlayer <connectedPlayer>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn_$connectedPlayer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn_$connectedPlayer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<connectedPlayer>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isWaitingOnJoin>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn_$isWaitingOnJoin$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn_$isWaitingOnJoin$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isWaitingOnJoin>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isWaitingOnInvite>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn_$isWaitingOnInvite$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::dyn_$isWaitingOnInvite$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isWaitingOnInvite>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_id
uint64_t GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_userId
::StringW GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_userName
::StringW GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_isMe
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isMe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_isPartyOwner
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_isRoomOwner
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isRoomOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isRoomOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRoomOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_currentPartySize
int GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_room
::Oculus::Platform::Models::Room* GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_room");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_room", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.set_room
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::set_room(::Oculus::Platform::Models::Room* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::set_room");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_room", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_connectedPlayer
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_connectedPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.set_connectedPlayer
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::set_connectedPlayer(::GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::set_connectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_isMyPartyOwner
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isMyPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isMyPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMyPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_canJoin
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_requiresPassword
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_requiresPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_requiresPassword");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requiresPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_isWaitingOnJoin
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isWaitingOnJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isWaitingOnJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.set_isWaitingOnJoin
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::set_isWaitingOnJoin(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::set_isWaitingOnJoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isWaitingOnJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_canInvite
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_isWaitingOnInvite
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isWaitingOnInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isWaitingOnInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.set_isWaitingOnInvite
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::set_isWaitingOnInvite(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::set_isWaitingOnInvite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isWaitingOnInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_canKick
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canKick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canKick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canKick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_canLeave
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canLeave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canLeave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_canBlock
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_canUnblock
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canUnblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canUnblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canUnblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.Join
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.Join
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Join(::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, password);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.Invite
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Invite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.Kick
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Kick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Kick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Kick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.Leave
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Leave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.Block
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Block");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.Unblock
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Unblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Unblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.SendJoinResponse
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::SendJoinResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::SendJoinResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, accept);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.SendInviteResponse
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::SendInviteResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::SendInviteResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, accept);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.SameRoomAs
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::SameRoomAs(::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::SameRoomAs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SameRoomAs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.<Join>b__40_0
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::$Join$b__40_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::<Join>b__40_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Join>b__40_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusNetworkPlayerModel/<Start>d__42
#include "GlobalNamespace/OculusNetworkPlayerModel_-Start-d__42.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusNetworkPlayerModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusNetworkPlayerModel*& GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UserInfo> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::UserInfo*>& GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::UserInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusNetworkPlayerModel/<Start>d__42.MoveNext
void GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/<Start>d__42.SetStateMachine
void GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass50_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass50_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 id
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass50_0::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass50_0::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<System.String> tcs
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<::StringW>*& GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass50_0::dyn_tcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass50_0::dyn_tcs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tcs"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusNetworkPlayerModel/<>c__DisplayClass50_0.<GetUserNameAsync>b__0
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass50_0::$GetUserNameAsync$b__0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass50_0::<GetUserNameAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserNameAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass51_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass51_0.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: OculusNetworkPlayerModel/OculusNetworkPlayer
#include "GlobalNamespace/OculusNetworkPlayerModel_OculusNetworkPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusNetworkPlayerModel/OculusNetworkPlayer player
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*& GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0::dyn_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0::dyn_player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusNetworkPlayerModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusNetworkPlayerModel*& GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusNetworkPlayerModel/<>c__DisplayClass51_0.<HandleRoomInviteReceived>b__0
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0::$HandleRoomInviteReceived$b__0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0::<HandleRoomInviteReceived>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleRoomInviteReceived>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusNetworkPlayerModel/<HandleRoomInviteReceived>d__51
#include "GlobalNamespace/OculusNetworkPlayerModel_-HandleRoomInviteReceived-d__51.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass51_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass51_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusNetworkPlayerModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusNetworkPlayerModel*& GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Message`1<Oculus.Platform.Models.RoomInviteNotification> message
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Message_1<::Oculus::Platform::Models::RoomInviteNotification*>*& GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::dyn_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Message_1<::Oculus::Platform::Models::RoomInviteNotification*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OculusNetworkPlayerModel/<>c__DisplayClass51_0 <>8__1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0*& GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::dyn_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.String> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::StringW>& GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusNetworkPlayerModel/<HandleRoomInviteReceived>d__51.MoveNext
void GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/<HandleRoomInviteReceived>d__51.SetStateMachine
void GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass55_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass55_0.hpp"
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Message`1/Oculus.Platform.Callback
#include "Oculus/Platform/Message_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusNetworkPlayerModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusNetworkPlayerModel*& GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Message`1/Oculus.Platform.Callback<Oculus.Platform.Models.UserAndRoomList> onGetFriends
[[deprecated("Use field access instead!")]] typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::UserAndRoomList*>::Callback*& GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::dyn_onGetFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::dyn_onGetFriends");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onGetFriends"))->offset;
  return *reinterpret_cast<typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::UserAndRoomList*>::Callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Message`1/Oculus.Platform.Callback<Oculus.Platform.Models.UserList> onGetInvitable
[[deprecated("Use field access instead!")]] typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::UserList*>::Callback*& GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::dyn_onGetInvitable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::dyn_onGetInvitable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onGetInvitable"))->offset;
  return *reinterpret_cast<typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::UserList*>::Callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusNetworkPlayerModel/<>c__DisplayClass55_0.<Refresh>b__0
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::$Refresh$b__0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::UserAndRoomList*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::<Refresh>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Refresh>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: OculusNetworkPlayerModel/<>c__DisplayClass55_0.<Refresh>b__1
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::$Refresh$b__1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::UserList*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::<Refresh>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Refresh>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass64_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass64_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusNetworkPlayerModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusNetworkPlayerModel*& GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> tcs
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<bool>*& GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::dyn_tcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::dyn_tcs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tcs"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 userId
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusNetworkPlayerModel/<>c__DisplayClass64_0.<ShouldAcceptConnectionFromPlayer>b__0
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::$ShouldAcceptConnectionFromPlayer$b__0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Room*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::<ShouldAcceptConnectionFromPlayer>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ShouldAcceptConnectionFromPlayer>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PS4NetworkPlayerModel
#include "GlobalNamespace/PS4NetworkPlayerModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformAuthenticationTokenProvider
#include "GlobalNamespace/PlatformAuthenticationTokenProvider.hpp"
// Including type: PlatformAuthenticationTokenProvider/<GetAuthenticationToken>d__10
#include "GlobalNamespace/PlatformAuthenticationTokenProvider_-GetAuthenticationToken-d__10.hpp"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IPlatformUserModel _platformUserModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPlatformUserModel*& GlobalNamespace::PlatformAuthenticationTokenProvider::dyn__platformUserModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAuthenticationTokenProvider::dyn__platformUserModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformUserModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPlatformUserModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlatformAuthenticationTokenProvider::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAuthenticationTokenProvider::dyn__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlatformAuthenticationTokenProvider::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAuthenticationTokenProvider::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _hashedUserId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlatformAuthenticationTokenProvider::dyn__hashedUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAuthenticationTokenProvider::dyn__hashedUserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hashedUserId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AuthenticationToken/Platform _platform
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AuthenticationToken::Platform& GlobalNamespace::PlatformAuthenticationTokenProvider::dyn__platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAuthenticationTokenProvider::dyn__platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platform"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AuthenticationToken::Platform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlatformAuthenticationTokenProvider.get_hashedUserId
::StringW GlobalNamespace::PlatformAuthenticationTokenProvider::get_hashedUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAuthenticationTokenProvider::get_hashedUserId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hashedUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlatformAuthenticationTokenProvider.get_userName
::StringW GlobalNamespace::PlatformAuthenticationTokenProvider::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAuthenticationTokenProvider::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlatformAuthenticationTokenProvider.GetAuthenticationToken
::System::Threading::Tasks::Task_1<::GlobalNamespace::AuthenticationToken>* GlobalNamespace::PlatformAuthenticationTokenProvider::GetAuthenticationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAuthenticationTokenProvider::GetAuthenticationToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAuthenticationToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AuthenticationToken>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformAuthenticationTokenProvider/<GetAuthenticationToken>d__10
#include "GlobalNamespace/PlatformAuthenticationTokenProvider_-GetAuthenticationToken-d__10.hpp"
// Including type: PlatformUserAuthTokenData
#include "GlobalNamespace/PlatformUserAuthTokenData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AuthenticationToken> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AuthenticationToken>& GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AuthenticationToken>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlatformAuthenticationTokenProvider <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformAuthenticationTokenProvider*& GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformAuthenticationTokenProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<PlatformUserAuthTokenData> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::PlatformUserAuthTokenData*>& GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::PlatformUserAuthTokenData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlatformAuthenticationTokenProvider/<GetAuthenticationToken>d__10.MoveNext
void GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformAuthenticationTokenProvider/<GetAuthenticationToken>d__10.SetStateMachine
void GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformNetworkPlayerModel
#include "GlobalNamespace/PlatformNetworkPlayerModel.hpp"
// Including type: PlatformNetworkPlayerModel/CreatePartyConfig
#include "GlobalNamespace/PlatformNetworkPlayerModel_CreatePartyConfig.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlatformNetworkPlayerModel.get_friends
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::PlatformNetworkPlayerModel::get_friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformNetworkPlayerModel::get_friends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_friends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlatformNetworkPlayerModel.DestroyPartyConnection
void GlobalNamespace::PlatformNetworkPlayerModel::DestroyPartyConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformNetworkPlayerModel::DestroyPartyConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPartyConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformNetworkPlayerModel/CreatePartyConfig
#include "GlobalNamespace/PlatformNetworkPlayerModel_CreatePartyConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SceneStartSyncController
#include "GlobalNamespace/SceneStartSyncController.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: SceneStartHandler
#include "GlobalNamespace/SceneStartHandler.hpp"
// Including type: PlayersSpecificSettingsAtGameStartModel
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kLoadOtherTimeout
float GlobalNamespace::SceneStartSyncController::_get_kLoadOtherTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::_get_kLoadOtherTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SceneStartSyncController", "kLoadOtherTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kLoadOtherTimeout
void GlobalNamespace::SceneStartSyncController::_set_kLoadOtherTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::_set_kLoadOtherTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SceneStartSyncController", "kLoadOtherTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kLoadSelfTimeout
float GlobalNamespace::SceneStartSyncController::_get_kLoadSelfTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::_get_kLoadSelfTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SceneStartSyncController", "kLoadSelfTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kLoadSelfTimeout
void GlobalNamespace::SceneStartSyncController::_set_kLoadSelfTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::_set_kLoadSelfTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SceneStartSyncController", "kLoadSelfTimeout", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::SceneStartSyncController::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IGameplayRpcManager _gameplayRpcManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IGameplayRpcManager*& GlobalNamespace::SceneStartSyncController::dyn__gameplayRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::dyn__gameplayRpcManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayRpcManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IGameplayRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> syncStartDidSuccessEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::SceneStartSyncController::dyn_syncStartDidSuccessEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::dyn_syncStartDidSuccessEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncStartDidSuccessEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> syncStartDidReceiveTooLateEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::SceneStartSyncController::dyn_syncStartDidReceiveTooLateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::dyn_syncStartDidReceiveTooLateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncStartDidReceiveTooLateEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action syncStartDidFailEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::SceneStartSyncController::dyn_syncStartDidFailEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::dyn_syncStartDidFailEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncStartDidFailEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SceneStartHandler _sceneStartHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SceneStartHandler*& GlobalNamespace::SceneStartSyncController::dyn__sceneStartHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::dyn__sceneStartHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneStartHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SceneStartHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayersSpecificSettingsAtGameStartModel _playersAtGameStartModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel*& GlobalNamespace::SceneStartSyncController::dyn__playersAtGameStartModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::dyn__playersAtGameStartModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersAtGameStartModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _waitStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SceneStartSyncController::dyn__waitStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::dyn__waitStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sceneSyncStarted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SceneStartSyncController::dyn__sceneSyncStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::dyn__sceneSyncStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSyncStarted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SceneStartSyncController.add_syncStartDidSuccessEvent
void GlobalNamespace::SceneStartSyncController::add_syncStartDidSuccessEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::add_syncStartDidSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_syncStartDidSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartSyncController.remove_syncStartDidSuccessEvent
void GlobalNamespace::SceneStartSyncController::remove_syncStartDidSuccessEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::remove_syncStartDidSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_syncStartDidSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartSyncController.add_syncStartDidReceiveTooLateEvent
void GlobalNamespace::SceneStartSyncController::add_syncStartDidReceiveTooLateEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::add_syncStartDidReceiveTooLateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_syncStartDidReceiveTooLateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartSyncController.remove_syncStartDidReceiveTooLateEvent
void GlobalNamespace::SceneStartSyncController::remove_syncStartDidReceiveTooLateEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::remove_syncStartDidReceiveTooLateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_syncStartDidReceiveTooLateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartSyncController.add_syncStartDidFailEvent
void GlobalNamespace::SceneStartSyncController::add_syncStartDidFailEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::add_syncStartDidFailEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_syncStartDidFailEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartSyncController.remove_syncStartDidFailEvent
void GlobalNamespace::SceneStartSyncController::remove_syncStartDidFailEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::remove_syncStartDidFailEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_syncStartDidFailEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartSyncController.Start
void GlobalNamespace::SceneStartSyncController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SceneStartSyncController.Update
void GlobalNamespace::SceneStartSyncController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SceneStartSyncController.OnDestroy
void GlobalNamespace::SceneStartSyncController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SceneStartSyncController.StartSceneLoadSync
void GlobalNamespace::SceneStartSyncController::StartSceneLoadSync(::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel* playersAtGameStartModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::StartSceneLoadSync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSceneLoadSync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersAtGameStartModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playersAtGameStartModel);
}
// Autogenerated method: SceneStartSyncController.HandleSceneSetupDidFinish
void GlobalNamespace::SceneStartSyncController::HandleSceneSetupDidFinish(::StringW sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::HandleSceneSetupDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSceneSetupDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionGameId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionGameId);
}
// Autogenerated method: SceneStartSyncController.HandleSceneSetupDidReceiveTooLate
void GlobalNamespace::SceneStartSyncController::HandleSceneSetupDidReceiveTooLate(::StringW sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SceneStartSyncController::HandleSceneSetupDidReceiveTooLate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSceneSetupDidReceiveTooLate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionGameId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionGameId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreSyncStateManager
#include "GlobalNamespace/ScoreSyncStateManager.hpp"
// Including type: StandardScoreSyncStateNetSerializable
#include "GlobalNamespace/StandardScoreSyncStateNetSerializable.hpp"
// Including type: StandardScoreSyncStateDeltaNetSerializable
#include "GlobalNamespace/StandardScoreSyncStateDeltaNetSerializable.hpp"
// Including type: IPacketPool`1
#include "GlobalNamespace/IPacketPool_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ScoreSyncStateManager.get_serializablePool
::GlobalNamespace::IPacketPool_1<::GlobalNamespace::StandardScoreSyncStateNetSerializable*>* GlobalNamespace::ScoreSyncStateManager::get_serializablePool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreSyncStateManager::get_serializablePool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serializablePool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPacketPool_1<::GlobalNamespace::StandardScoreSyncStateNetSerializable*>*, false>(this, ___internal__method);
}
// Autogenerated method: ScoreSyncStateManager.get_deltaSerializablePool
::GlobalNamespace::IPacketPool_1<::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable*>* GlobalNamespace::ScoreSyncStateManager::get_deltaSerializablePool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreSyncStateManager::get_deltaSerializablePool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaSerializablePool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPacketPool_1<::GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable*>*, false>(this, ___internal__method);
}
// Autogenerated method: ScoreSyncStateManager.Interpolate
int GlobalNamespace::ScoreSyncStateManager::Interpolate(int prev, float prevTime, int curr, float currTime, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreSyncStateManager::Interpolate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prev), ::il2cpp_utils::ExtractType(prevTime), ::il2cpp_utils::ExtractType(curr), ::il2cpp_utils::ExtractType(currTime), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, prev, prevTime, curr, currTime, time);
}
// Autogenerated method: ScoreSyncStateManager.get_deltaUpdateFrequency
float GlobalNamespace::ScoreSyncStateManager::get_deltaUpdateFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreSyncStateManager::get_deltaUpdateFrequency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaUpdateFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ScoreSyncStateManager.get_fullStateUpdateFrequency
float GlobalNamespace::ScoreSyncStateManager::get_fullStateUpdateFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreSyncStateManager::get_fullStateUpdateFrequency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullStateUpdateFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ScoreSyncStateManager.get_localBufferSize
int GlobalNamespace::ScoreSyncStateManager::get_localBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreSyncStateManager::get_localBufferSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ScoreSyncStateManager.get_remoteBufferSize
int GlobalNamespace::ScoreSyncStateManager::get_remoteBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreSyncStateManager::get_remoteBufferSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_remoteBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ScoreSyncStateManager.get_messageType
::GlobalNamespace::MultiplayerSessionManager_MessageType GlobalNamespace::ScoreSyncStateManager::get_messageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreSyncStateManager::get_messageType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_messageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerSessionManager_MessageType, false>(this, ___internal__method);
}
// Autogenerated method: ScoreSyncStateManager.get_deltaMessageType
::GlobalNamespace::MultiplayerSessionManager_MessageType GlobalNamespace::ScoreSyncStateManager::get_deltaMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreSyncStateManager::get_deltaMessageType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaMessageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerSessionManager_MessageType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongStartSyncController
#include "GlobalNamespace/SongStartSyncController.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: SongStartHandler
#include "GlobalNamespace/SongStartHandler.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayersSpecificSettingsAtGameStartModel
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kAudioLoadTimeout
float GlobalNamespace::SongStartSyncController::_get_kAudioLoadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::_get_kAudioLoadTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SongStartSyncController", "kAudioLoadTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kAudioLoadTimeout
void GlobalNamespace::SongStartSyncController::_set_kAudioLoadTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::_set_kAudioLoadTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongStartSyncController", "kAudioLoadTimeout", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::SongStartSyncController::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IGameplayRpcManager _gameplayRpcManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IGameplayRpcManager*& GlobalNamespace::SongStartSyncController::dyn__gameplayRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::dyn__gameplayRpcManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayRpcManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IGameplayRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _waitStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongStartSyncController::dyn__waitStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::dyn__waitStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _songStarted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SongStartSyncController::dyn__songStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::dyn__songStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songStarted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongStartSyncController::dyn__startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::dyn__startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _sessionGameId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SongStartSyncController::dyn__sessionGameId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::dyn__sessionGameId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sessionGameId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongStartHandler _songStartHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongStartHandler*& GlobalNamespace::SongStartSyncController::dyn__songStartHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::dyn__songStartHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songStartHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongStartHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action syncStartFailedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::SongStartSyncController::dyn_syncStartFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::dyn_syncStartFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncStartFailedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> syncStartSuccessEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& GlobalNamespace::SongStartSyncController::dyn_syncStartSuccessEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::dyn_syncStartSuccessEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncStartSuccessEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> syncResumeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& GlobalNamespace::SongStartSyncController::dyn_syncResumeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::dyn_syncResumeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncResumeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongStartSyncController.get_isSongStarted
bool GlobalNamespace::SongStartSyncController::get_isSongStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::get_isSongStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSongStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SongStartSyncController.get_songStartSyncTime
float GlobalNamespace::SongStartSyncController::get_songStartSyncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::get_songStartSyncTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songStartSyncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SongStartSyncController.add_syncStartFailedEvent
void GlobalNamespace::SongStartSyncController::add_syncStartFailedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::add_syncStartFailedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_syncStartFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongStartSyncController.remove_syncStartFailedEvent
void GlobalNamespace::SongStartSyncController::remove_syncStartFailedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::remove_syncStartFailedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_syncStartFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongStartSyncController.add_syncStartSuccessEvent
void GlobalNamespace::SongStartSyncController::add_syncStartSuccessEvent(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::add_syncStartSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_syncStartSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongStartSyncController.remove_syncStartSuccessEvent
void GlobalNamespace::SongStartSyncController::remove_syncStartSuccessEvent(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::remove_syncStartSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_syncStartSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongStartSyncController.add_syncResumeEvent
void GlobalNamespace::SongStartSyncController::add_syncResumeEvent(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::add_syncResumeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_syncResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongStartSyncController.remove_syncResumeEvent
void GlobalNamespace::SongStartSyncController::remove_syncResumeEvent(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::remove_syncResumeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_syncResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongStartSyncController.Start
void GlobalNamespace::SongStartSyncController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongStartSyncController.OnDestroy
void GlobalNamespace::SongStartSyncController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongStartSyncController.Update
void GlobalNamespace::SongStartSyncController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongStartSyncController.OnApplicationPause
void GlobalNamespace::SongStartSyncController::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pauseStatus);
}
// Autogenerated method: SongStartSyncController.StartSong
void GlobalNamespace::SongStartSyncController::StartSong(::GlobalNamespace::PlayersSpecificSettingsAtGameStartModel* playersSpecificSettingsAtGameStartModel, ::StringW sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::StartSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersSpecificSettingsAtGameStartModel), ::il2cpp_utils::ExtractType(sessionGameId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playersSpecificSettingsAtGameStartModel, sessionGameId);
}
// Autogenerated method: SongStartSyncController.HandleSetSongStartSyncTime
void GlobalNamespace::SongStartSyncController::HandleSetSongStartSyncTime(float songStartSyncTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongStartSyncController::HandleSetSongStartSyncTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetSongStartSyncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songStartSyncTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songStartSyncTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNetworkPlayerModel
#include "GlobalNamespace/SteamNetworkPlayerModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnifiedNetworkPlayerModel
#include "GlobalNamespace/UnifiedNetworkPlayerModel.hpp"
// Including type: UnifiedNetworkPlayerModel/JoinMatchmakingPartyConfig
#include "GlobalNamespace/UnifiedNetworkPlayerModel_JoinMatchmakingPartyConfig.hpp"
// Including type: UnifiedNetworkPlayerModel/StartClientPartyConfig
#include "GlobalNamespace/UnifiedNetworkPlayerModel_StartClientPartyConfig.hpp"
// Including type: UnifiedNetworkPlayerModel/<get_otherPlayers>d__71
#include "GlobalNamespace/UnifiedNetworkPlayerModel_-get_otherPlayers-d__71.hpp"
// Including type: GameLiftNetworkPlayerModel
#include "GlobalNamespace/GameLiftNetworkPlayerModel.hpp"
// Including type: PlatformNetworkPlayerModel
#include "GlobalNamespace/PlatformNetworkPlayerModel.hpp"
// Including type: LocalNetworkPlayerModel
#include "GlobalNamespace/LocalNetworkPlayerModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: PartyMessageHandler
#include "GlobalNamespace/PartyMessageHandler.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: INetworkPlayerModelPartyConfig`1
#include "GlobalNamespace/INetworkPlayerModelPartyConfig_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly GameLiftNetworkPlayerModel _gameLiftNetworkPlayerModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameLiftNetworkPlayerModel*& GlobalNamespace::UnifiedNetworkPlayerModel::dyn__gameLiftNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::dyn__gameLiftNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameLiftNetworkPlayerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameLiftNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlatformNetworkPlayerModel _platformNetworkPlayerModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformNetworkPlayerModel*& GlobalNamespace::UnifiedNetworkPlayerModel::dyn__platformNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::dyn__platformNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformNetworkPlayerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LocalNetworkPlayerModel _localNetworkPlayerModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkPlayerModel*& GlobalNamespace::UnifiedNetworkPlayerModel::dyn__localNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::dyn__localNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localNetworkPlayerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> connectedPlayerManagerCreatedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>*& GlobalNamespace::UnifiedNetworkPlayerModel::dyn_connectedPlayerManagerCreatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::dyn_connectedPlayerManagerCreatedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectedPlayerManagerCreatedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> connectedPlayerManagerDestroyedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>*& GlobalNamespace::UnifiedNetworkPlayerModel::dyn_connectedPlayerManagerDestroyedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::dyn_connectedPlayerManagerDestroyedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectedPlayerManagerDestroyedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> partySizeChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<int>*& GlobalNamespace::UnifiedNetworkPlayerModel::dyn_partySizeChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::dyn_partySizeChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partySizeChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action partyRefreshingEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::UnifiedNetworkPlayerModel::dyn_partyRefreshingEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::dyn_partyRefreshingEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partyRefreshingEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> partyChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>*& GlobalNamespace::UnifiedNetworkPlayerModel::dyn_partyChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::dyn_partyChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partyChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayer> joinRequestedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayer*>*& GlobalNamespace::UnifiedNetworkPlayerModel::dyn_joinRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::dyn_joinRequestedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinRequestedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayer> inviteRequestedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayer*>*& GlobalNamespace::UnifiedNetworkPlayerModel::dyn_inviteRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::dyn_inviteRequestedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inviteRequestedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PartyMessageHandler _partyMessageHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PartyMessageHandler*& GlobalNamespace::UnifiedNetworkPlayerModel::dyn__partyMessageHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::dyn__partyMessageHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyMessageHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PartyMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PartyMessageHandler _friendPartyMessageHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PartyMessageHandler*& GlobalNamespace::UnifiedNetworkPlayerModel::dyn__friendPartyMessageHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::dyn__friendPartyMessageHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_friendPartyMessageHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PartyMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PartyMessageHandler _localNetworkPartyMessageHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PartyMessageHandler*& GlobalNamespace::UnifiedNetworkPlayerModel::dyn__localNetworkPartyMessageHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::dyn__localNetworkPartyMessageHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localNetworkPartyMessageHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PartyMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnifiedNetworkPlayerModel/ActiveNetworkPlayerModelType _activeNetworkPlayerModelType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UnifiedNetworkPlayerModel_ActiveNetworkPlayerModelType& GlobalNamespace::UnifiedNetworkPlayerModel::dyn__activeNetworkPlayerModelType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::dyn__activeNetworkPlayerModelType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeNetworkPlayerModelType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UnifiedNetworkPlayerModel_ActiveNetworkPlayerModelType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_activeNetworkPlayerModel
::GlobalNamespace::INetworkPlayerModel* GlobalNamespace::UnifiedNetworkPlayerModel::get_activeNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_activeNetworkPlayerModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeNetworkPlayerModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::INetworkPlayerModel*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_activeNetworkPlayerModelType
::GlobalNamespace::UnifiedNetworkPlayerModel_ActiveNetworkPlayerModelType GlobalNamespace::UnifiedNetworkPlayerModel::get_activeNetworkPlayerModelType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_activeNetworkPlayerModelType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeNetworkPlayerModelType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UnifiedNetworkPlayerModel_ActiveNetworkPlayerModelType, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_localPlayerIsPartyOwner
bool GlobalNamespace::UnifiedNetworkPlayerModel::get_localPlayerIsPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_localPlayerIsPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_hasNetworkingFailed
bool GlobalNamespace::UnifiedNetworkPlayerModel::get_hasNetworkingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_hasNetworkingFailed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasNetworkingFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_currentPartySize
int GlobalNamespace::UnifiedNetworkPlayerModel::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::UnifiedNetworkPlayerModel::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::UnifiedNetworkPlayerModel::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_secret
::StringW GlobalNamespace::UnifiedNetworkPlayerModel::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_secret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_code
::StringW GlobalNamespace::UnifiedNetworkPlayerModel::get_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_code");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_connectedPlayerManager
::GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::UnifiedNetworkPlayerModel::get_connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_connectedPlayerManager");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_publicServers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::UnifiedNetworkPlayerModel::get_publicServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_publicServers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_publicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_friends
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::UnifiedNetworkPlayerModel::get_friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_friends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_friends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_localNetworkPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::UnifiedNetworkPlayerModel::get_localNetworkPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_localNetworkPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localNetworkPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_discoveryEnabled
bool GlobalNamespace::UnifiedNetworkPlayerModel::get_discoveryEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.set_discoveryEnabled
void GlobalNamespace::UnifiedNetworkPlayerModel::set_discoveryEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::set_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_enableFriends
bool GlobalNamespace::UnifiedNetworkPlayerModel::get_enableFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_enableFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.set_enableFriends
void GlobalNamespace::UnifiedNetworkPlayerModel::set_enableFriends(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::set_enableFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_enableLocalNetwork
bool GlobalNamespace::UnifiedNetworkPlayerModel::get_enableLocalNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_enableLocalNetwork");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableLocalNetwork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.set_enableLocalNetwork
void GlobalNamespace::UnifiedNetworkPlayerModel::set_enableLocalNetwork(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::set_enableLocalNetwork");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableLocalNetwork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_partyPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::UnifiedNetworkPlayerModel::get_partyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_partyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_otherPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::UnifiedNetworkPlayerModel::get_otherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::get_otherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_otherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.add_connectedPlayerManagerCreatedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::add_connectedPlayerManagerCreatedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::add_connectedPlayerManagerCreatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerManagerCreatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.remove_connectedPlayerManagerCreatedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::remove_connectedPlayerManagerCreatedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::remove_connectedPlayerManagerCreatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerManagerCreatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.add_connectedPlayerManagerDestroyedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::add_connectedPlayerManagerDestroyedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::add_connectedPlayerManagerDestroyedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerManagerDestroyedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.remove_connectedPlayerManagerDestroyedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::remove_connectedPlayerManagerDestroyedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::remove_connectedPlayerManagerDestroyedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerManagerDestroyedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.add_partySizeChangedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::add_partySizeChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::add_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.remove_partySizeChangedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::remove_partySizeChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::remove_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.add_partyRefreshingEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::add_partyRefreshingEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::add_partyRefreshingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyRefreshingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.remove_partyRefreshingEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::remove_partyRefreshingEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::remove_partyRefreshingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyRefreshingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.add_partyChangedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::add_partyChangedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::add_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.remove_partyChangedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::remove_partyChangedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::remove_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.add_joinRequestedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::add_joinRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::add_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.remove_joinRequestedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::remove_joinRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::remove_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.add_inviteRequestedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::add_inviteRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::add_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.remove_inviteRequestedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::remove_inviteRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::remove_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.Initialize
void GlobalNamespace::UnifiedNetworkPlayerModel::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.Dispose
void GlobalNamespace::UnifiedNetworkPlayerModel::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.SetServerFilter
void GlobalNamespace::UnifiedNetworkPlayerModel::SetServerFilter(::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::SetServerFilter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetServerFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectionMask, configuration);
}
// Autogenerated method: UnifiedNetworkPlayerModel.RefreshAlternateDiscoveryModels
void GlobalNamespace::UnifiedNetworkPlayerModel::RefreshAlternateDiscoveryModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::RefreshAlternateDiscoveryModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAlternateDiscoveryModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandlePlayersChanged
void GlobalNamespace::UnifiedNetworkPlayerModel::HandlePlayersChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::HandlePlayersChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayersChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleInviteRequested
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleInviteRequested(::GlobalNamespace::INetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::HandleInviteRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInviteRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleJoinRequested
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleJoinRequested(::GlobalNamespace::INetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::HandleJoinRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandlePartyChanged
void GlobalNamespace::UnifiedNetworkPlayerModel::HandlePartyChanged(::GlobalNamespace::INetworkPlayerModel* playerModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::HandlePartyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePartyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerModel);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandlePartySizeChanged
void GlobalNamespace::UnifiedNetworkPlayerModel::HandlePartySizeChanged(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::HandlePartySizeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePartySizeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandlePartyRefreshing
void GlobalNamespace::UnifiedNetworkPlayerModel::HandlePartyRefreshing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::HandlePartyRefreshing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePartyRefreshing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleLocalPlayerConnected
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleLocalPlayerConnected(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::HandleLocalPlayerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLocalPlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleFriendConnected
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleFriendConnected(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::HandleFriendConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFriendConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleLocalPlayerConnectToMasterServer
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleLocalPlayerConnectToMasterServer(::StringW secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::HandleLocalPlayerConnectToMasterServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLocalPlayerConnectToMasterServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, secret);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleFriendConnectToMasterServer
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleFriendConnectToMasterServer(::StringW secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::HandleFriendConnectToMasterServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFriendConnectToMasterServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, secret);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleConnectedPlayerManagerCreated
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleConnectedPlayerManagerCreated(::GlobalNamespace::INetworkPlayerModel* networkPlayerModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::HandleConnectedPlayerManagerCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectedPlayerManagerCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(networkPlayerModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, networkPlayerModel);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleConnectedPlayerManagerDestroyed
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleConnectedPlayerManagerDestroyed(::GlobalNamespace::INetworkPlayerModel* networkPlayerModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::HandleConnectedPlayerManagerDestroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectedPlayerManagerDestroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(networkPlayerModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, networkPlayerModel);
}
// Autogenerated method: UnifiedNetworkPlayerModel.ResetMasterServerReachability
void GlobalNamespace::UnifiedNetworkPlayerModel::ResetMasterServerReachability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::ResetMasterServerReachability");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetMasterServerReachability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.DestroyPartyConnection
void GlobalNamespace::UnifiedNetworkPlayerModel::DestroyPartyConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::DestroyPartyConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPartyConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.SetActiveNetworkPlayerModelType
void GlobalNamespace::UnifiedNetworkPlayerModel::SetActiveNetworkPlayerModelType(::GlobalNamespace::UnifiedNetworkPlayerModel_ActiveNetworkPlayerModelType activeNetworkPlayerModelType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::SetActiveNetworkPlayerModelType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveNetworkPlayerModelType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeNetworkPlayerModelType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeNetworkPlayerModelType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnifiedNetworkPlayerModel/JoinMatchmakingPartyConfig
#include "GlobalNamespace/UnifiedNetworkPlayerModel_JoinMatchmakingPartyConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String secret
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig::dyn_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String code
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig::dyn_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig::dyn_code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "code"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnifiedNetworkPlayerModel/StartClientPartyConfig
#include "GlobalNamespace/UnifiedNetworkPlayerModel_StartClientPartyConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::UnifiedNetworkPlayerModel::StartClientPartyConfig::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::StartClientPartyConfig::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::UnifiedNetworkPlayerModel::StartClientPartyConfig::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::StartClientPartyConfig::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnifiedNetworkPlayerModel/<get_otherPlayers>d__71
#include "GlobalNamespace/UnifiedNetworkPlayerModel_-get_otherPlayers-d__71.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayer <>2__current
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkPlayer*& GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnifiedNetworkPlayerModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UnifiedNetworkPlayerModel*& GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UnifiedNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<INetworkPlayer> <>7__wrap1
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::INetworkPlayer*>*& GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::INetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnifiedNetworkPlayerModel/<get_otherPlayers>d__71.System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current
::GlobalNamespace::INetworkPlayer* GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::System_Collections_Generic_IEnumerator$INetworkPlayer$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::INetworkPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/<get_otherPlayers>d__71.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/<get_otherPlayers>d__71.System.IDisposable.Dispose
void GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/<get_otherPlayers>d__71.MoveNext
bool GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/<get_otherPlayers>d__71.<>m__Finally1
void GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/<get_otherPlayers>d__71.<>m__Finally2
void GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/<get_otherPlayers>d__71.<>m__Finally3
void GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::$$m__Finally3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::<>m__Finally3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/<get_otherPlayers>d__71.System.Collections.IEnumerator.Reset
void GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/<get_otherPlayers>d__71.System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::System_Collections_Generic_IEnumerable$INetworkPlayer$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/<get_otherPlayers>d__71.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnifiedNetworkPlayerModel::$get_otherPlayers$d__71::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VoipManager
#include "GlobalNamespace/VoipManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteExecutionRating
#include "GlobalNamespace/NoteExecutionRating.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly NoteExecutionRating/Rating rating
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteExecutionRating::Rating& GlobalNamespace::NoteExecutionRating::dyn_rating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteExecutionRating::dyn_rating");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rating"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteExecutionRating::Rating*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 cutScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteExecutionRating::dyn_cutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteExecutionRating::dyn_cutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 beforeCutScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteExecutionRating::dyn_beforeCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteExecutionRating::dyn_beforeCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beforeCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 centerDistanceCutScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteExecutionRating::dyn_centerDistanceCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteExecutionRating::dyn_centerDistanceCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "centerDistanceCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 afterCutScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteExecutionRating::dyn_afterCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteExecutionRating::dyn_afterCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "afterCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly NoteData/ScoringType scoringType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteData::ScoringType& GlobalNamespace::NoteExecutionRating::dyn_scoringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteExecutionRating::dyn_scoringType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scoringType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteData::ScoringType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteExecutionRating/Rating
#include "GlobalNamespace/NoteExecutionRating.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NoteExecutionRating/Rating GoodCut
::GlobalNamespace::NoteExecutionRating::Rating GlobalNamespace::NoteExecutionRating::Rating::_get_GoodCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteExecutionRating::Rating::_get_GoodCut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteExecutionRating::Rating>("", "NoteExecutionRating/Rating", "GoodCut"));
}
// Autogenerated static field setter
// Set static field: static public NoteExecutionRating/Rating GoodCut
void GlobalNamespace::NoteExecutionRating::Rating::_set_GoodCut(::GlobalNamespace::NoteExecutionRating::Rating value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteExecutionRating::Rating::_set_GoodCut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteExecutionRating/Rating", "GoodCut", value));
}
// Autogenerated static field getter
// Get static field: static public NoteExecutionRating/Rating Miss
::GlobalNamespace::NoteExecutionRating::Rating GlobalNamespace::NoteExecutionRating::Rating::_get_Miss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteExecutionRating::Rating::_get_Miss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteExecutionRating::Rating>("", "NoteExecutionRating/Rating", "Miss"));
}
// Autogenerated static field setter
// Set static field: static public NoteExecutionRating/Rating Miss
void GlobalNamespace::NoteExecutionRating::Rating::_set_Miss(::GlobalNamespace::NoteExecutionRating::Rating value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteExecutionRating::Rating::_set_Miss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteExecutionRating/Rating", "Miss", value));
}
// Autogenerated static field getter
// Get static field: static public NoteExecutionRating/Rating BadCut
::GlobalNamespace::NoteExecutionRating::Rating GlobalNamespace::NoteExecutionRating::Rating::_get_BadCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteExecutionRating::Rating::_get_BadCut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteExecutionRating::Rating>("", "NoteExecutionRating/Rating", "BadCut"));
}
// Autogenerated static field setter
// Set static field: static public NoteExecutionRating/Rating BadCut
void GlobalNamespace::NoteExecutionRating::Rating::_set_BadCut(::GlobalNamespace::NoteExecutionRating::Rating value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteExecutionRating::Rating::_set_BadCut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteExecutionRating/Rating", "BadCut", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteExecutionRating::Rating::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteExecutionRating::Rating::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleExecutionRating
#include "GlobalNamespace/ObstacleExecutionRating.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ObstacleExecutionRating/Rating <rating>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObstacleExecutionRating::Rating& GlobalNamespace::ObstacleExecutionRating::dyn_$rating$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleExecutionRating::dyn_$rating$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rating>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObstacleExecutionRating::Rating*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObstacleExecutionRating.get_rating
::GlobalNamespace::ObstacleExecutionRating::Rating GlobalNamespace::ObstacleExecutionRating::get_rating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleExecutionRating::get_rating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ObstacleExecutionRating::Rating, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleExecutionRating/Rating
#include "GlobalNamespace/ObstacleExecutionRating.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ObstacleExecutionRating/Rating OK
::GlobalNamespace::ObstacleExecutionRating::Rating GlobalNamespace::ObstacleExecutionRating::Rating::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleExecutionRating::Rating::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ObstacleExecutionRating::Rating>("", "ObstacleExecutionRating/Rating", "OK"));
}
// Autogenerated static field setter
// Set static field: static public ObstacleExecutionRating/Rating OK
void GlobalNamespace::ObstacleExecutionRating::Rating::_set_OK(::GlobalNamespace::ObstacleExecutionRating::Rating value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleExecutionRating::Rating::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObstacleExecutionRating/Rating", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public ObstacleExecutionRating/Rating NotGood
::GlobalNamespace::ObstacleExecutionRating::Rating GlobalNamespace::ObstacleExecutionRating::Rating::_get_NotGood() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleExecutionRating::Rating::_get_NotGood");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ObstacleExecutionRating::Rating>("", "ObstacleExecutionRating/Rating", "NotGood"));
}
// Autogenerated static field setter
// Set static field: static public ObstacleExecutionRating/Rating NotGood
void GlobalNamespace::ObstacleExecutionRating::Rating::_set_NotGood(::GlobalNamespace::ObstacleExecutionRating::Rating value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleExecutionRating::Rating::_set_NotGood");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObstacleExecutionRating/Rating", "NotGood", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObstacleExecutionRating::Rating::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleExecutionRating::Rating::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiersHelper
#include "GlobalNamespace/GameplayModifiersHelper.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayModifiersHelper.ToDTO
::ArrayW<::BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers> GlobalNamespace::GameplayModifiersHelper::ToDTO(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersHelper::ToDTO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GameplayModifiersHelper", "ToDTO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersHelper.FromDTO
::GlobalNamespace::GameplayModifiers* GlobalNamespace::GameplayModifiersHelper::FromDTO(::ArrayW<::BeatSaberAPI::DataTransferObjects::LevelScoreResult::GameplayModifiers> gameplayModifiersDTOs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersHelper::FromDTO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GameplayModifiersHelper", "FromDTO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiersDTOs)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameplayModifiersDTOs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HTTPLeaderboardsModel
#include "GlobalNamespace/HTTPLeaderboardsModel.hpp"
// Including type: HTTPLeaderboardsModel/<>c
#include "GlobalNamespace/HTTPLeaderboardsModel_--c.hpp"
// Including type: HTTPLeaderboardsModel/<GetLeaderboardEntriesAsync>d__10
#include "GlobalNamespace/HTTPLeaderboardsModel_-GetLeaderboardEntriesAsync-d__10.hpp"
// Including type: HTTPLeaderboardsModel/<SendLevelScoreResultAsync>d__11
#include "GlobalNamespace/HTTPLeaderboardsModel_-SendLevelScoreResultAsync-d__11.hpp"
// Including type: OnlineServices.API.IUserLoginDtoDataSource
#include "OnlineServices/API/IUserLoginDtoDataSource.hpp"
// Including type: OnlineServices.API.IApiLeaderboardsModel
#include "OnlineServices/API/IApiLeaderboardsModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: OnlineServices.GetLeaderboardFilterData
#include "OnlineServices/GetLeaderboardFilterData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: OnlineServices.LevelScoreResultsData
#include "OnlineServices/LevelScoreResultsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly OnlineServices.API.IUserLoginDtoDataSource _userLoginDataSource
[[deprecated("Use field access instead!")]] ::OnlineServices::API::IUserLoginDtoDataSource*& GlobalNamespace::HTTPLeaderboardsModel::dyn__userLoginDataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::dyn__userLoginDataSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userLoginDataSource"))->offset;
  return *reinterpret_cast<::OnlineServices::API::IUserLoginDtoDataSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OnlineServices.API.IApiLeaderboardsModel _apiLeaderboardsModel
[[deprecated("Use field access instead!")]] ::OnlineServices::API::IApiLeaderboardsModel*& GlobalNamespace::HTTPLeaderboardsModel::dyn__apiLeaderboardsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::dyn__apiLeaderboardsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_apiLeaderboardsModel"))->offset;
  return *reinterpret_cast<::OnlineServices::API::IApiLeaderboardsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> scoreForLeaderboardDidUploadEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::HTTPLeaderboardsModel::dyn_scoreForLeaderboardDidUploadEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::dyn_scoreForLeaderboardDidUploadEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scoreForLeaderboardDidUploadEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _guid
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::HTTPLeaderboardsModel::dyn__guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::dyn__guid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_guid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _friendsUserIds
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::HTTPLeaderboardsModel::dyn__friendsUserIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::dyn__friendsUserIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_friendsUserIds"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _platformUserId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::HTTPLeaderboardsModel::dyn__platformUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::dyn__platformUserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformUserId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HTTPLeaderboardsModel.add_scoreForLeaderboardDidUploadEvent
void GlobalNamespace::HTTPLeaderboardsModel::add_scoreForLeaderboardDidUploadEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::add_scoreForLeaderboardDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HTTPLeaderboardsModel.remove_scoreForLeaderboardDidUploadEvent
void GlobalNamespace::HTTPLeaderboardsModel::remove_scoreForLeaderboardDidUploadEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::remove_scoreForLeaderboardDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HTTPLeaderboardsModel.LogoutAsync
void GlobalNamespace::HTTPLeaderboardsModel::LogoutAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::LogoutAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogoutAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HTTPLeaderboardsModel.GetLeaderboardId
::StringW GlobalNamespace::HTTPLeaderboardsModel::GetLeaderboardId(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::GetLeaderboardId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: HTTPLeaderboardsModel.GetLeaderboardEntriesAsync
::System::Threading::Tasks::Task_1<::OnlineServices::GetLeaderboardEntriesResult>* GlobalNamespace::HTTPLeaderboardsModel::GetLeaderboardEntriesAsync(::OnlineServices::GetLeaderboardFilterData leaderboardFilterData, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::GetLeaderboardEntriesAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardFilterData), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::OnlineServices::GetLeaderboardEntriesResult>*, false>(this, ___internal__method, leaderboardFilterData, cancellationToken);
}
// Autogenerated method: HTTPLeaderboardsModel.SendLevelScoreResultAsync
::System::Threading::Tasks::Task_1<::OnlineServices::SendLeaderboardEntryResult>* GlobalNamespace::HTTPLeaderboardsModel::SendLevelScoreResultAsync(::OnlineServices::LevelScoreResultsData levelResultsData, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::SendLevelScoreResultAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendLevelScoreResultAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelResultsData), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::OnlineServices::SendLeaderboardEntryResult>*, false>(this, ___internal__method, levelResultsData, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HTTPLeaderboardsModel/<>c
#include "GlobalNamespace/HTTPLeaderboardsModel_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.LeaderboardEntry
#include "BeatSaberAPI/DataTransferObjects/LeaderboardEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly HTTPLeaderboardsModel/<>c <>9
::GlobalNamespace::HTTPLeaderboardsModel::$$c* GlobalNamespace::HTTPLeaderboardsModel::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::HTTPLeaderboardsModel::$$c*>("", "HTTPLeaderboardsModel/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly HTTPLeaderboardsModel/<>c <>9
void GlobalNamespace::HTTPLeaderboardsModel::$$c::_set_$$9(::GlobalNamespace::HTTPLeaderboardsModel::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "HTTPLeaderboardsModel/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<BeatSaberAPI.DataTransferObjects.LeaderboardEntry,System.String> <>9__10_0
::System::Func_2<::BeatSaberAPI::DataTransferObjects::LeaderboardEntry*, ::StringW>* GlobalNamespace::HTTPLeaderboardsModel::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::BeatSaberAPI::DataTransferObjects::LeaderboardEntry*, ::StringW>*>("", "HTTPLeaderboardsModel/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<BeatSaberAPI.DataTransferObjects.LeaderboardEntry,System.String> <>9__10_0
void GlobalNamespace::HTTPLeaderboardsModel::$$c::_set_$$9__10_0(::System::Func_2<::BeatSaberAPI::DataTransferObjects::LeaderboardEntry*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "HTTPLeaderboardsModel/<>c", "<>9__10_0", value)));
}
// Autogenerated method: HTTPLeaderboardsModel/<>c..cctor
void GlobalNamespace::HTTPLeaderboardsModel::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HTTPLeaderboardsModel/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: HTTPLeaderboardsModel/<>c.<GetLeaderboardEntriesAsync>b__10_0
::StringW GlobalNamespace::HTTPLeaderboardsModel::$$c::$GetLeaderboardEntriesAsync$b__10_0(::BeatSaberAPI::DataTransferObjects::LeaderboardEntry* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$$c::<GetLeaderboardEntriesAsync>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetLeaderboardEntriesAsync>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HTTPLeaderboardsModel/<GetLeaderboardEntriesAsync>d__10
#include "GlobalNamespace/HTTPLeaderboardsModel_-GetLeaderboardEntriesAsync-d__10.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.LeaderboardEntries
#include "BeatSaberAPI/DataTransferObjects/LeaderboardEntries.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<OnlineServices.GetLeaderboardEntriesResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::OnlineServices::GetLeaderboardEntriesResult>& GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::OnlineServices::GetLeaderboardEntriesResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HTTPLeaderboardsModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HTTPLeaderboardsModel*& GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HTTPLeaderboardsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OnlineServices.GetLeaderboardFilterData leaderboardFilterData
[[deprecated("Use field access instead!")]] ::OnlineServices::GetLeaderboardFilterData& GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_leaderboardFilterData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_leaderboardFilterData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leaderboardFilterData"))->offset;
  return *reinterpret_cast<::OnlineServices::GetLeaderboardFilterData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <leaderboardId>5__2
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_$leaderboardId$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_$leaderboardId$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leaderboardId>5__2"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.String[]> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::ArrayW<::StringW>>& GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::ArrayW<::StringW>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.String> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::StringW>& GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<OnlineServices.API.ApiResponse`1<BeatSaberAPI.DataTransferObjects.LeaderboardEntries>> <>u__3
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::OnlineServices::API::ApiResponse_1<::BeatSaberAPI::DataTransferObjects::LeaderboardEntries*>>& GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::dyn_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::OnlineServices::API::ApiResponse_1<::BeatSaberAPI::DataTransferObjects::LeaderboardEntries*>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HTTPLeaderboardsModel/<GetLeaderboardEntriesAsync>d__10.MoveNext
void GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HTTPLeaderboardsModel/<GetLeaderboardEntriesAsync>d__10.SetStateMachine
void GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$GetLeaderboardEntriesAsync$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HTTPLeaderboardsModel/<SendLevelScoreResultAsync>d__11
#include "GlobalNamespace/HTTPLeaderboardsModel_-SendLevelScoreResultAsync-d__11.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<OnlineServices.SendLeaderboardEntryResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::OnlineServices::SendLeaderboardEntryResult>& GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::OnlineServices::SendLeaderboardEntryResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HTTPLeaderboardsModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HTTPLeaderboardsModel*& GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HTTPLeaderboardsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OnlineServices.LevelScoreResultsData levelResultsData
[[deprecated("Use field access instead!")]] ::OnlineServices::LevelScoreResultsData& GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::dyn_levelResultsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::dyn_levelResultsData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelResultsData"))->offset;
  return *reinterpret_cast<::OnlineServices::LevelScoreResultsData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <leaderboardId>5__2
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::dyn_$leaderboardId$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::dyn_$leaderboardId$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leaderboardId>5__2"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<OnlineServices.API.Response> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::OnlineServices::API::Response>& GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::OnlineServices::API::Response>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HTTPLeaderboardsModel/<SendLevelScoreResultAsync>d__11.MoveNext
void GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HTTPLeaderboardsModel/<SendLevelScoreResultAsync>d__11.SetStateMachine
void GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardsModelLegacyWrapper
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper.hpp"
// Including type: LeaderboardsModelLegacyWrapper/HMAsyncRequestWithCancellationToken
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper_HMAsyncRequestWithCancellationToken.hpp"
// Including type: LeaderboardsModelLegacyWrapper/<GetLeaderboardEntriesAsync>d__4
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper_-GetLeaderboardEntriesAsync-d__4.hpp"
// Including type: LeaderboardsModelLegacyWrapper/<SendLevelScoreResutlAsync>d__5
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper_-SendLevelScoreResutlAsync-d__5.hpp"
// Including type: OnlineServices.ILeaderboardsModel
#include "OnlineServices/ILeaderboardsModel.hpp"
// Including type: OnlineServices.GetLeaderboardFilterData
#include "OnlineServices/GetLeaderboardFilterData.hpp"
// Including type: OnlineServices.LevelScoreResultsData
#include "OnlineServices/LevelScoreResultsData.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
// Including type: PlatformLeaderboardsModel/ScoresScope
#include "GlobalNamespace/PlatformLeaderboardsModel_ScoresScope.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OnlineServices.ILeaderboardsModel _leaderboardsModel
[[deprecated("Use field access instead!")]] ::OnlineServices::ILeaderboardsModel*& GlobalNamespace::LeaderboardsModelLegacyWrapper::dyn__leaderboardsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::dyn__leaderboardsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardsModel"))->offset;
  return *reinterpret_cast<::OnlineServices::ILeaderboardsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardsModelLegacyWrapper.GetLeaderboardEntriesAsync
void GlobalNamespace::LeaderboardsModelLegacyWrapper::GetLeaderboardEntriesAsync(::OnlineServices::GetLeaderboardFilterData leaderboardFilterData, ::GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken* asyncRequest, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::GetLeaderboardEntriesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardFilterData), ::il2cpp_utils::ExtractType(asyncRequest), ::il2cpp_utils::ExtractType(completionHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardFilterData, asyncRequest, completionHandler);
}
// Autogenerated method: LeaderboardsModelLegacyWrapper.SendLevelScoreResutlAsync
void GlobalNamespace::LeaderboardsModelLegacyWrapper::SendLevelScoreResutlAsync(::OnlineServices::LevelScoreResultsData levelScoreResultsData, ::GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken* asyncRequest, ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::SendLevelScoreResutlAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendLevelScoreResutlAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelScoreResultsData), ::il2cpp_utils::ExtractType(asyncRequest), ::il2cpp_utils::ExtractType(completionHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelScoreResultsData, asyncRequest, completionHandler);
}
// Autogenerated method: LeaderboardsModelLegacyWrapper.GetScores
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::LeaderboardsModelLegacyWrapper::GetScores(::GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, ::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope scope, ::StringW referencePlayerId, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::GetScores");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(scope), ::il2cpp_utils::ExtractType(referencePlayerId), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, scope, referencePlayerId, completionHandler);
}
// Autogenerated method: LeaderboardsModelLegacyWrapper.UploadScore
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::LeaderboardsModelLegacyWrapper::UploadScore(::GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::UploadScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, scoreData, completionHandler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardsModelLegacyWrapper/HMAsyncRequestWithCancellationToken
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper_HMAsyncRequestWithCancellationToken.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _cancellationTokenSource
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::dyn__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::dyn__cancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardsModelLegacyWrapper/HMAsyncRequestWithCancellationToken.get_cancellationTokenSource
::System::Threading::CancellationTokenSource* GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::get_cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::get_cancellationTokenSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cancellationTokenSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::CancellationTokenSource*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardsModelLegacyWrapper/HMAsyncRequestWithCancellationToken.Cancel
void GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::Cancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardsModelLegacyWrapper/<GetLeaderboardEntriesAsync>d__4
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper_-GetLeaderboardEntriesAsync-d__4.hpp"
// Including type: LeaderboardsModelLegacyWrapper/HMAsyncRequestWithCancellationToken
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper_HMAsyncRequestWithCancellationToken.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LeaderboardsModelLegacyWrapper <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardsModelLegacyWrapper*& GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardsModelLegacyWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OnlineServices.GetLeaderboardFilterData leaderboardFilterData
[[deprecated("Use field access instead!")]] ::OnlineServices::GetLeaderboardFilterData& GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::dyn_leaderboardFilterData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::dyn_leaderboardFilterData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leaderboardFilterData"))->offset;
  return *reinterpret_cast<::OnlineServices::GetLeaderboardFilterData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LeaderboardsModelLegacyWrapper/HMAsyncRequestWithCancellationToken asyncRequest
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken*& GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::dyn_asyncRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::dyn_asyncRequest");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncRequest"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlatformLeaderboardsModel/GetScoresCompletionHandler completionHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler*& GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::dyn_completionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::dyn_completionHandler");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completionHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<OnlineServices.GetLeaderboardEntriesResult> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::OnlineServices::GetLeaderboardEntriesResult>& GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::OnlineServices::GetLeaderboardEntriesResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardsModelLegacyWrapper/<GetLeaderboardEntriesAsync>d__4.MoveNext
void GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardsModelLegacyWrapper/<GetLeaderboardEntriesAsync>d__4.SetStateMachine
void GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardsModelLegacyWrapper/<SendLevelScoreResutlAsync>d__5
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper_-SendLevelScoreResutlAsync-d__5.hpp"
// Including type: LeaderboardsModelLegacyWrapper/HMAsyncRequestWithCancellationToken
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper_HMAsyncRequestWithCancellationToken.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LeaderboardsModelLegacyWrapper <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardsModelLegacyWrapper*& GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardsModelLegacyWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OnlineServices.LevelScoreResultsData levelScoreResultsData
[[deprecated("Use field access instead!")]] ::OnlineServices::LevelScoreResultsData& GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::dyn_levelScoreResultsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::dyn_levelScoreResultsData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelScoreResultsData"))->offset;
  return *reinterpret_cast<::OnlineServices::LevelScoreResultsData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LeaderboardsModelLegacyWrapper/HMAsyncRequestWithCancellationToken asyncRequest
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken*& GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::dyn_asyncRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::dyn_asyncRequest");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncRequest"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlatformLeaderboardsModel/UploadScoreCompletionHandler completionHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler*& GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::dyn_completionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::dyn_completionHandler");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completionHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<OnlineServices.SendLeaderboardEntryResult> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::OnlineServices::SendLeaderboardEntryResult>& GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::OnlineServices::SendLeaderboardEntryResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardsModelLegacyWrapper/<SendLevelScoreResutlAsync>d__5.MoveNext
void GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardsModelLegacyWrapper/<SendLevelScoreResutlAsync>d__5.SetStateMachine
void GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TwoLeaderboardsHandlerWrapper
#include "GlobalNamespace/TwoLeaderboardsHandlerWrapper.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresResult
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresResult.hpp"
// Including type: PlatformLeaderboardsModel/LeaderboardScore
#include "GlobalNamespace/PlatformLeaderboardsModel_LeaderboardScore.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreResult
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreResult.hpp"
// Including type: PlatformLeaderboardsModel/ScoresScope
#include "GlobalNamespace/PlatformLeaderboardsModel_ScoresScope.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PlatformLeaderboardsHandler _mainHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsHandler*& GlobalNamespace::TwoLeaderboardsHandlerWrapper::dyn__mainHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TwoLeaderboardsHandlerWrapper::dyn__mainHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlatformLeaderboardsHandler _shadowHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsHandler*& GlobalNamespace::TwoLeaderboardsHandlerWrapper::dyn__shadowHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TwoLeaderboardsHandlerWrapper::dyn__shadowHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shadowHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMAsyncRequest _getScoresShadowAsyncRequest
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HMAsyncRequest*& GlobalNamespace::TwoLeaderboardsHandlerWrapper::dyn__getScoresShadowAsyncRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TwoLeaderboardsHandlerWrapper::dyn__getScoresShadowAsyncRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_getScoresShadowAsyncRequest"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HMAsyncRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMAsyncRequest _uploadScoreShadowAsyncRequest
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HMAsyncRequest*& GlobalNamespace::TwoLeaderboardsHandlerWrapper::dyn__uploadScoreShadowAsyncRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TwoLeaderboardsHandlerWrapper::dyn__uploadScoreShadowAsyncRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uploadScoreShadowAsyncRequest"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HMAsyncRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TwoLeaderboardsHandlerWrapper.<GetScores>b__5_0
void GlobalNamespace::TwoLeaderboardsHandlerWrapper::$GetScores$b__5_0(::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult result, ::ArrayW<::GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore*> scores, int referencePlayerScoreIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TwoLeaderboardsHandlerWrapper::<GetScores>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetScores>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(scores), ::il2cpp_utils::ExtractType(referencePlayerScoreIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result, scores, referencePlayerScoreIndex);
}
// Autogenerated method: TwoLeaderboardsHandlerWrapper.<UploadScore>b__6_0
void GlobalNamespace::TwoLeaderboardsHandlerWrapper::$UploadScore$b__6_0(::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TwoLeaderboardsHandlerWrapper::<UploadScore>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UploadScore>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: TwoLeaderboardsHandlerWrapper.GetScores
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::TwoLeaderboardsHandlerWrapper::GetScores(::GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, ::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope scope, ::StringW referencePlayerId, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TwoLeaderboardsHandlerWrapper::GetScores");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(scope), ::il2cpp_utils::ExtractType(referencePlayerId), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, scope, referencePlayerId, completionHandler);
}
// Autogenerated method: TwoLeaderboardsHandlerWrapper.UploadScore
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::TwoLeaderboardsHandlerWrapper::UploadScore(::GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TwoLeaderboardsHandlerWrapper::UploadScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, scoreData, completionHandler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestLeaderboardsModel
#include "GlobalNamespace/TestLeaderboardsModel.hpp"
// Including type: TestLeaderboardsModel/<GetLeaderboardEntriesAsync>d__4
#include "GlobalNamespace/TestLeaderboardsModel_-GetLeaderboardEntriesAsync-d__4.hpp"
// Including type: TestLeaderboardsModel/<SendLevelScoreResultAsync>d__5
#include "GlobalNamespace/TestLeaderboardsModel_-SendLevelScoreResultAsync-d__5.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: OnlineServices.GetLeaderboardFilterData
#include "OnlineServices/GetLeaderboardFilterData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: OnlineServices.LevelScoreResultsData
#include "OnlineServices/LevelScoreResultsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> scoreForLeaderboardDidUploadEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::TestLeaderboardsModel::dyn_scoreForLeaderboardDidUploadEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestLeaderboardsModel::dyn_scoreForLeaderboardDidUploadEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scoreForLeaderboardDidUploadEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestLeaderboardsModel.add_scoreForLeaderboardDidUploadEvent
void GlobalNamespace::TestLeaderboardsModel::add_scoreForLeaderboardDidUploadEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestLeaderboardsModel::add_scoreForLeaderboardDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TestLeaderboardsModel.remove_scoreForLeaderboardDidUploadEvent
void GlobalNamespace::TestLeaderboardsModel::remove_scoreForLeaderboardDidUploadEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestLeaderboardsModel::remove_scoreForLeaderboardDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TestLeaderboardsModel.GetLeaderboardId
::StringW GlobalNamespace::TestLeaderboardsModel::GetLeaderboardId(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestLeaderboardsModel::GetLeaderboardId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: TestLeaderboardsModel.GetLeaderboardEntriesAsync
::System::Threading::Tasks::Task_1<::OnlineServices::GetLeaderboardEntriesResult>* GlobalNamespace::TestLeaderboardsModel::GetLeaderboardEntriesAsync(::OnlineServices::GetLeaderboardFilterData leaderboardFilterData, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestLeaderboardsModel::GetLeaderboardEntriesAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardFilterData), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::OnlineServices::GetLeaderboardEntriesResult>*, false>(this, ___internal__method, leaderboardFilterData, cancellationToken);
}
// Autogenerated method: TestLeaderboardsModel.SendLevelScoreResultAsync
::System::Threading::Tasks::Task_1<::OnlineServices::SendLeaderboardEntryResult>* GlobalNamespace::TestLeaderboardsModel::SendLevelScoreResultAsync(::OnlineServices::LevelScoreResultsData levelScoreResult, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestLeaderboardsModel::SendLevelScoreResultAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendLevelScoreResultAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelScoreResult), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::OnlineServices::SendLeaderboardEntryResult>*, false>(this, ___internal__method, levelScoreResult, cancellationToken);
}
